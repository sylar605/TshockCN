using System;
using System.Collections.Generic;
using Terraria.DataStructures;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.Events;
using Terraria.GameContent.Tile_Entities;
using Terraria.ID;
using Terraria.GameContent.UI;
using TerrariaApi.Server;

namespace Terraria
{
	public class NPC : Entity
	{
		public const int MaxMoonLordCountdown = 3600;
		public const int maxBuffs = 5;
		public const int breathMax = 200;
		public static readonly int[,,,] MoonLordAttacksArray = NPC.InitializeMoonLordAttacks();
		public static readonly int[,] MoonLordAttacksArray2 = NPC.InitializeMoonLordAttacks2();
		public static int MoonLordCountdown = 0;
		public int teleportStyle;
		public float teleportTime;
		public static int immuneTime = 20;
		public static int maxAI = 4;
		public int netSpam;
		public static int goldCritterChance = 150;
		public static int[] killCount = new int[540];
		public static float waveKills = 0f;
		public static int waveCount = 0;
		public bool dripping;
		public bool drippingSlime;
		public short catchItem;
		public short releaseOwner = 255;
		public int rarity;
		public static bool taxCollector = false;
		public bool[] playerInteraction = new bool[256];
		public int lastInteraction = 255;
		public float takenDamageMultiplier = 1f;
		private static int spawnSpaceX = 3;
		private static int spawnSpaceY = 3;
		public float gfxOffY;
		public float stepSpeed;
		private static float gravity = 0.3f;
		public bool teleporting;
		private static int maxAttack = 20;
		private static int[] attackNPC = new int[NPC.maxAttack];
		public bool stairFall;
		public static int fireFlyFriendly = 0;
		public static int fireFlyChance = 0;
		public static int fireFlyMultiple = 0;
		public static int butterflyChance = 0;
		private byte netStream;
		private byte[] streamPlayer = new byte[255];
		private byte npcNameLookup;
		public Vector2[] oldPos = new Vector2[10];
		public float[] oldRot = new float[10];
		public bool setFrameSize;
		public static int golemBoss = -1;
		public static int plantBoss = -1;
		public static int crimsonBoss = -1;
		public int netSkip;
		public bool netAlways;
		public int realLife = -1;
		public static int sWidth = 1920;
		public static int sHeight = 1080;
		private static int spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
		private static int spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
		public static int safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
		public static int safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
		private static int activeRangeX = (int)((double)NPC.sWidth * 2.1);
		private static int activeRangeY = (int)((double)NPC.sHeight * 2.1);
		private static int townRangeX = NPC.sWidth;
		private static int townRangeY = NPC.sHeight;
		public float npcSlots = 1f;
		private static bool noSpawnCycle = false;
		private static int activeTime = 750;
		public static int defaultSpawnRate = 600;
		public static int defaultMaxSpawns = 5;
		public bool dontCountMe;
		public int[] buffType = new int[5];
		public int[] buffTime = new int[5];
		public bool[] buffImmune = new bool[191];
		public bool midas;
		public bool ichor;
		public bool onFire;
		public bool onFire2;
		public bool onFrostBurn;
		public bool poisoned;
		public bool venom;
		public bool shadowFlame;
		public bool soulDrain;
		public int lifeRegen;
		public int lifeRegenCount;
		public bool confused;
		public bool loveStruck;
		public bool stinky;
		public bool dryadWard;
		public bool immortal;
		public bool chaseable = true;
		public bool canGhostHeal = true;
		public bool javelined;
		public bool celled;
		public bool dryadBane;
		public bool daybreak;
		public static bool savedTaxCollector = false;
		public static bool savedGoblin = false;
		public static bool savedWizard = false;
		public static bool savedMech = false;
		public static bool savedAngler = false;
		public static bool savedStylist = false;
		public static bool downedBoss1 = false;
		public static bool downedBoss2 = false;
		public static bool downedBoss3 = false;
		public static bool downedQueenBee = false;
		public static bool downedSlimeKing = false;
		public static bool downedGoblins = false;
		public static bool downedFrost = false;
		public static bool downedPirates = false;
		public static bool downedClown = false;
		public static bool downedPlantBoss = false;
		public static bool downedGolemBoss = false;
		public static bool downedMartians = false;
		public static bool downedFishron = false;
		public static bool downedHalloweenTree = false;
		public static bool downedHalloweenKing = false;
		public static bool downedChristmasIceQueen = false;
		public static bool downedChristmasTree = false;
		public static bool downedChristmasSantank = false;
		public static bool downedAncientCultist = false;
		public static bool downedMoonlord = false;
		public static bool downedTowerSolar = false;
		public static bool downedTowerVortex = false;
		public static bool downedTowerNebula = false;
		public static bool downedTowerStardust = false;
		public static int ShieldStrengthTowerSolar = 0;
		public static int ShieldStrengthTowerVortex = 0;
		public static int ShieldStrengthTowerNebula = 0;
		public static int ShieldStrengthTowerStardust = 0;
		public static int LunarShieldPowerNormal = 100;
		public static int LunarShieldPowerExpert = 150;
		public static bool TowerActiveSolar = false;
		public static bool TowerActiveVortex = false;
		public static bool TowerActiveNebula = false;
		public static bool TowerActiveStardust = false;
		public static bool LunarApocalypseIsUp = false;
		public static bool downedMechBossAny = false;
		public static bool downedMechBoss1 = false;
		public static bool downedMechBoss2 = false;
		public static bool downedMechBoss3 = false;
		private static int spawnRate = NPC.defaultSpawnRate;
		private static int maxSpawns = NPC.defaultMaxSpawns;
		public int soundDelay;
		public int[] immune = new int[256];
		public int directionY = 1;
		public int type;
		public float[] ai = new float[NPC.maxAI];
		public float[] localAI = new float[NPC.maxAI];
		public int aiAction;
		public int aiStyle;
		public bool justHit;
		public int timeLeft;
		public int target = -1;
		public int damage;
		public int defense;
		public int defDamage;
		public int defDefense;
		public bool coldDamage;
		public bool trapImmune;
		public int soundHit;
		public int soundKilled;
		public int life;
		public int lifeMax;
		public Rectangle targetRect;
		public double frameCounter;
		public Rectangle frame;
		public string displayName;
		public Color color;
		public int alpha;
		public bool hide;
		public float scale = 1f;
		public float knockBackResist = 1f;
		public new int oldDirection;
		public int oldDirectionY;
		public int oldTarget;
		public float rotation;
		public bool noGravity;
		public bool noTileCollide;
		public bool netUpdate;
		public bool netUpdate2;
		public bool collideX;
		public bool collideY;
		public bool boss;
		public int spriteDirection = -1;
		public bool behindTiles;
		public bool lavaImmune;
		public float value;
		public float extraValue;
		public bool dontTakeDamage;
		public int netID;
		public bool townNPC;
		public static bool travelNPC = false;
		public bool homeless;
		public int homeTileX = -1;
		public int homeTileY = -1;
		public bool oldHomeless;
		public int oldHomeTileX = -1;
		public int oldHomeTileY = -1;
		public bool friendly;
		public bool closeDoor;
		public int doorX;
		public int doorY;
		public int friendlyRegen;
		public int breath;
		public int breathCounter;
		public bool reflectingProjectiles;
		public int lastPortalColorIndex;
		public static int[,] cavernMonsterType = new int[2, 3];
		private static int ignorePlayerInteractions = 0;
		public static bool downedTowers
		{
			get
			{
				return NPC.downedTowerSolar && NPC.downedTowerVortex && NPC.downedTowerNebula && NPC.downedTowerStardust;
			}
		}
		public static int ShieldStrengthTowerMax
		{
			get
			{
				if (!Main.expertMode)
				{
					return NPC.LunarShieldPowerNormal;
				}
				return NPC.LunarShieldPowerExpert;
			}
		}
		public static bool TowersDefeated
		{
			get
			{
				return NPC.TowerActiveSolar && NPC.TowerActiveVortex && NPC.TowerActiveNebula && NPC.TowerActiveStardust;
			}
		}
		public float Opacity
		{
			get
			{
				return 1f - (float)this.alpha / 255f;
			}
			set
			{
				this.alpha = (int)MathHelper.Clamp((1f - value) * 255f, 0f, 255f);
			}
		}
		public bool CanTalk
		{
			get
			{
				return (this.townNPC || this.type == 453) && this.aiStyle == 7 && this.velocity.Y == 0f;
			}
		}
		public bool HasValidTarget
		{
			get
			{
				return this.target >= 0 && this.target < 255 && Main.player[this.target].active && !Main.player[this.target].dead;
			}
		}
		public static int[,,,] InitializeMoonLordAttacks()
		{
			int[,,,] array;
			if (NPC.MoonLordAttacksArray != null)
			{
				array = NPC.MoonLordAttacksArray;
				for (int i = 0; i < array.GetLength(0); i++)
				{
					for (int j = 0; j < array.GetLength(1); j++)
					{
						for (int k = 0; k < array.GetLength(2); k++)
						{
							for (int l = 0; l < array.GetLength(3); l++)
							{
								array[i, j, k, l] = 0;
							}
						}
					}
				}
			}
			else
			{
				array = new int[3, 3, 2, 5];
			}
			array[0, 0, 0, 0] = 0;
			array[0, 0, 1, 0] = 60;
			array[0, 0, 0, 1] = 1;
			array[0, 0, 1, 1] = 70;
			array[0, 0, 0, 2] = 2;
			array[0, 0, 1, 2] = 330;
			array[0, 0, 0, 3] = 0;
			array[0, 0, 1, 3] = 60;
			array[0, 0, 0, 4] = 3;
			array[0, 0, 1, 4] = 90;
			array[0, 1, 0, 0] = 1;
			array[0, 1, 1, 0] = 70;
			array[0, 1, 0, 1] = 0;
			array[0, 1, 1, 1] = 120;
			array[0, 1, 0, 2] = 3;
			array[0, 1, 1, 2] = 90;
			array[0, 1, 0, 3] = 0;
			array[0, 1, 1, 3] = 120;
			array[0, 1, 0, 4] = 2;
			array[0, 1, 1, 4] = 390;
			array[0, 2, 0, 0] = 3;
			array[0, 2, 1, 0] = 90;
			array[0, 2, 0, 1] = 0;
			array[0, 2, 1, 1] = 120;
			array[0, 2, 0, 2] = 2;
			array[0, 2, 1, 2] = 435;
			array[0, 2, 0, 3] = 0;
			array[0, 2, 1, 3] = 120;
			array[0, 2, 0, 4] = 1;
			array[0, 2, 1, 4] = 375;
			array[1, 0, 0, 0] = 0;
			array[1, 0, 1, 0] = 0;
			array[1, 0, 0, 1] = 0;
			array[1, 0, 1, 1] = 0;
			array[1, 0, 0, 2] = 0;
			array[1, 0, 1, 2] = 0;
			array[1, 0, 0, 3] = 0;
			array[1, 0, 1, 3] = 0;
			array[1, 0, 0, 4] = 0;
			array[1, 0, 1, 4] = 0;
			array[1, 1, 0, 0] = 0;
			array[1, 1, 1, 0] = 0;
			array[1, 1, 0, 1] = 0;
			array[1, 1, 1, 1] = 0;
			array[1, 1, 0, 2] = 0;
			array[1, 1, 1, 2] = 0;
			array[1, 1, 0, 3] = 0;
			array[1, 1, 1, 3] = 0;
			array[1, 1, 0, 4] = 0;
			array[1, 1, 1, 4] = 0;
			array[1, 2, 0, 0] = 0;
			array[1, 2, 1, 0] = 0;
			array[1, 2, 0, 1] = 0;
			array[1, 2, 1, 1] = 0;
			array[1, 2, 0, 2] = 0;
			array[1, 2, 1, 2] = 0;
			array[1, 2, 0, 3] = 0;
			array[1, 2, 1, 3] = 0;
			array[1, 2, 0, 4] = 0;
			array[1, 2, 1, 4] = 0;
			array[2, 0, 0, 0] = 0;
			array[2, 0, 1, 0] = 0;
			array[2, 0, 0, 1] = 0;
			array[2, 0, 1, 1] = 0;
			array[2, 0, 0, 2] = 0;
			array[2, 0, 1, 2] = 0;
			array[2, 0, 0, 3] = 0;
			array[2, 0, 1, 3] = 0;
			array[2, 0, 0, 4] = 0;
			array[2, 0, 1, 4] = 0;
			array[2, 1, 0, 0] = 0;
			array[2, 1, 1, 0] = 0;
			array[2, 1, 0, 1] = 0;
			array[2, 1, 1, 1] = 0;
			array[2, 1, 0, 2] = 0;
			array[2, 1, 1, 2] = 0;
			array[2, 1, 0, 3] = 0;
			array[2, 1, 1, 3] = 0;
			array[2, 1, 0, 4] = 0;
			array[2, 1, 1, 4] = 0;
			array[2, 2, 0, 0] = 0;
			array[2, 2, 1, 0] = 0;
			array[2, 2, 0, 1] = 0;
			array[2, 2, 1, 1] = 0;
			array[2, 2, 0, 2] = 0;
			array[2, 2, 1, 2] = 0;
			array[2, 2, 0, 3] = 0;
			array[2, 2, 1, 3] = 0;
			array[2, 2, 0, 4] = 0;
			array[2, 2, 1, 4] = 0;
			NPC.InitializeMoonLordAttacks2();
			return array;
		}
		public static int[,] InitializeMoonLordAttacks2()
		{
			int[,] array;
			if (NPC.MoonLordAttacksArray2 != null)
			{
				array = NPC.MoonLordAttacksArray2;
				for (int i = 0; i < array.GetLength(0); i++)
				{
					for (int j = 0; j < array.GetLength(1); j++)
					{
						array[i, j] = 0;
					}
				}
			}
			else
			{
				array = new int[2, 10];
			}
			array[0, 0] = 0;
			array[1, 0] = 90;
			array[0, 1] = 1;
			array[1, 1] = 90;
			array[0, 2] = 0;
			array[1, 2] = 90;
			array[0, 3] = 2;
			array[1, 3] = 135;
			array[0, 4] = 0;
			array[1, 4] = 90;
			array[0, 5] = 3;
			array[1, 5] = 200;
			array[0, 6] = 0;
			array[1, 6] = 90;
			array[0, 7] = 4;
			array[1, 7] = 375;
			array[0, 8] = 0;
			array[1, 8] = 90;
			array[0, 9] = 2;
			array[1, 9] = 135;
			return array;
		}
		public static string getNewNPCName(int npcType)
		{
			if (WorldGen.genRand == null)
			{
				WorldGen.genRand = new Random();
			}
			if (npcType <= 160)
			{
				if (npcType <= 54)
				{
					switch (npcType)
					{
					case 17:
						switch (WorldGen.genRand.Next(23))
						{
						case 0:
							return "Alfred";
						case 1:
							return "Barney";
						case 2:
							return "Calvin";
						case 3:
							return "Edmund";
						case 4:
							return "Edwin";
						case 5:
							return "Eugene";
						case 6:
							return "Frank";
						case 7:
							return "Frederick";
						case 8:
							return "Gilbert";
						case 9:
							return "Gus";
						case 10:
							return "Wilbur";
						case 11:
							return "Seymour";
						case 12:
							return "Louis";
						case 13:
							return "Humphrey";
						case 14:
							return "Harold";
						case 15:
							return "Milton";
						case 16:
							return "Mortimer";
						case 17:
							return "Howard";
						case 18:
							return "Walter";
						case 19:
							return "Finn";
						case 20:
							return "Isaac";
						case 21:
							return "Joseph";
						default:
							return "Ralph";
						}
					case 18:
						switch (WorldGen.genRand.Next(24))
						{
						case 0:
							return "Molly";
						case 1:
							return "Amy";
						case 2:
							return "Claire";
						case 3:
							return "Emily";
						case 4:
							return "Katie";
						case 5:
							return "Madeline";
						case 6:
							return "Katelyn";
						case 7:
							return "Emma";
						case 8:
							return "Abigail";
						case 9:
							return "Carly";
						case 10:
							return "Jenna";
						case 11:
							return "Heather";
						case 12:
							return "Katherine";
						case 13:
							return "Caitlin";
						case 14:
							return "Kaitlin";
						case 15:
							return "Holly";
						case 16:
							return "Kaitlyn";
						case 17:
							return "Hannah";
						case 18:
							return "Kathryn";
						case 19:
							return "Lorraine";
						case 20:
							return "Helen";
						case 21:
							return "Kayla";
						case 22:
							return "Lisa";
						default:
							return "Allison";
						}
					case 19:
						switch (WorldGen.genRand.Next(24))
						{
						case 0:
							return "DeShawn";
						case 1:
							return "DeAndre";
						case 2:
							return "Marquis";
						case 3:
							return "Darnell";
						case 4:
							return "Terrell";
						case 5:
							return "Malik";
						case 6:
							return "Trevon";
						case 7:
							return "Tyrone";
						case 8:
							return "Willie";
						case 9:
							return "Dominique";
						case 10:
							return "Demetrius";
						case 11:
							return "Reginald";
						case 12:
							return "Jamal";
						case 13:
							return "Maurice";
						case 14:
							return "Jalen";
						case 15:
							return "Darius";
						case 16:
							return "Xavier";
						case 17:
							return "Terrance";
						case 18:
							return "Andre";
						case 19:
							return "Dante";
						case 20:
							return "Brimst";
						case 21:
							return "Bronson";
						case 22:
							return "Tony";
						default:
							return "Darryl";
						}
					case 20:
						switch (WorldGen.genRand.Next(22))
						{
						case 0:
							return "Alalia";
						case 1:
							return "Alalia";
						case 2:
							return "Alura";
						case 3:
							return "Ariella";
						case 4:
							return "Caelia";
						case 5:
							return "Calista";
						case 6:
							return "Chryseis";
						case 7:
							return "Emerenta";
						case 8:
							return "Elysia";
						case 9:
							return "Evvie";
						case 10:
							return "Faye";
						case 11:
							return "Felicitae";
						case 12:
							return "Lunette";
						case 13:
							return "Nata";
						case 14:
							return "Nissa";
						case 15:
							return "Tatiana";
						case 16:
							return "Rosalva";
						case 17:
							return "Shea";
						case 18:
							return "Tania";
						case 19:
							return "Isis";
						case 20:
							return "Celestia";
						default:
							return "Xylia";
						}
					case 21:
						break;
					case 22:
						switch (WorldGen.genRand.Next(35))
						{
						case 0:
							return "Joe";
						case 1:
							return "Connor";
						case 2:
							return "Tanner";
						case 3:
							return "Wyatt";
						case 4:
							return "Cody";
						case 5:
							return "Levi";
						case 6:
							return "Luke";
						case 7:
							return "Jack";
						case 8:
							return "Scott";
						case 9:
							return "Logan";
						case 10:
							return "Cole";
						case 11:
							return "Asher";
						case 12:
							return "Bradley";
						case 13:
							return "Jacob";
						case 14:
							return "Garrett";
						case 15:
							return "Dylan";
						case 16:
							return "Maxwell";
						case 17:
							return "Steve";
						case 18:
							return "Brett";
						case 19:
							return "Andrew";
						case 20:
							return "Harley";
						case 21:
							return "Kyle";
						case 22:
							return "Jake";
						case 23:
							return "Ryan";
						case 24:
							return "Jeffrey";
						case 25:
							return "Seth";
						case 26:
							return "Marty";
						case 27:
							return "Brandon";
						case 28:
							return "Zach";
						case 29:
							return "Jeff";
						case 30:
							return "Daniel";
						case 31:
							return "Trent";
						case 32:
							return "Kevin";
						case 33:
							return "Brian";
						default:
							return "Colin";
						}
					default:
						if (npcType != 38)
						{
							if (npcType == 54)
							{
								switch (WorldGen.genRand.Next(25))
								{
								case 0:
									return "Sebastian";
								case 1:
									return "Rupert";
								case 2:
									return "Clive";
								case 3:
									return "Nigel";
								case 4:
									return "Mervyn";
								case 5:
									return "Cedric";
								case 6:
									return "Pip";
								case 7:
									return "Cyril";
								case 8:
									return "Fitz";
								case 9:
									return "Lloyd";
								case 10:
									return "Arthur";
								case 11:
									return "Rodney";
								case 12:
									return "Graham";
								case 13:
									return "Edward";
								case 14:
									return "Alfred";
								case 15:
									return "Edmund";
								case 16:
									return "Henry";
								case 17:
									return "Herald";
								case 18:
									return "Roland";
								case 19:
									return "Lincoln";
								case 20:
									return "Lloyd";
								case 21:
									return "Edgar";
								case 22:
									return "Eustace";
								case 23:
									return "Benjamin";
								default:
									return "Rodrick";
								}
							}
						}
						else
						{
							switch (WorldGen.genRand.Next(22))
							{
							case 0:
								return "Dolbere";
							case 1:
								return "Bazdin";
							case 2:
								return "Durim";
							case 3:
								return "Tordak";
							case 4:
								return "Garval";
							case 5:
								return "Morthal";
							case 6:
								return "Oten";
							case 7:
								return "Dolgen";
							case 8:
								return "Gimli";
							case 9:
								return "Gimut";
							case 10:
								return "Duerthen";
							case 11:
								return "Beldin";
							case 12:
								return "Jarut";
							case 13:
								return "Ovbere";
							case 14:
								return "Norkas";
							case 15:
								return "Dolgrim";
							case 16:
								return "Boften";
							case 17:
								return "Norsun";
							case 18:
								return "Dias";
							case 19:
								return "Fikod";
							case 20:
								return "Urist";
							default:
								return "Darur";
							}
						}
						break;
					}
				}
				else
				{
					switch (npcType)
					{
					case 107:
						switch (WorldGen.genRand.Next(25))
						{
						case 0:
							return "Grodax";
						case 1:
							return "Sarx";
						case 2:
							return "Xon";
						case 3:
							return "Mrunok";
						case 4:
							return "Nuxatk";
						case 5:
							return "Tgerd";
						case 6:
							return "Darz";
						case 7:
							return "Smador";
						case 8:
							return "Stazen";
						case 9:
							return "Mobart";
						case 10:
							return "Knogs";
						case 11:
							return "Tkanus";
						case 12:
							return "Negurk";
						case 13:
							return "Nort";
						case 14:
							return "Durnok";
						case 15:
							return "Trogem";
						case 16:
							return "Stezom";
						case 17:
							return "Gnudar";
						case 18:
							return "Ragz";
						case 19:
							return "Fahd";
						case 20:
							return "Xanos";
						case 21:
							return "Arback";
						case 22:
							return "Fjell";
						case 23:
							return "Dalek";
						default:
							return "Knub";
						}
					case 108:
						switch (WorldGen.genRand.Next(21))
						{
						case 0:
							return "Dalamar";
						case 1:
							return "Dulais";
						case 2:
							return "Elric";
						case 3:
							return "Arddun";
						case 4:
							return "Maelor";
						case 5:
							return "Leomund";
						case 6:
							return "Hirael";
						case 7:
							return "Gwentor";
						case 8:
							return "Greum";
						case 9:
							return "Gearroid";
						case 10:
							return "Fizban";
						case 11:
							return "Ningauble";
						case 12:
							return "Seonag";
						case 13:
							return "Sargon";
						case 14:
							return "Merlyn";
						case 15:
							return "Magius";
						case 16:
							return "Berwyn";
						case 17:
							return "Arwyn";
						case 18:
							return "Alasdair";
						case 19:
							return "Tagar";
						default:
							return "Xanadu";
						}
					default:
						if (npcType != 124)
						{
							if (npcType == 160)
							{
								switch (WorldGen.genRand.Next(12))
								{
								case 0:
									return "Reishi";
								case 1:
									return "Maitake";
								case 2:
									return "Chanterelle";
								case 3:
									return "Porcini";
								case 4:
									return "Shimeji";
								case 5:
									return "Amanita";
								case 6:
									return "Muscaria";
								case 7:
									return "Agaric";
								case 8:
									return "Cremini";
								case 9:
									return "Morel";
								case 10:
									return "Enoki";
								default:
									return "Shiitake";
								}
							}
						}
						else
						{
							switch (WorldGen.genRand.Next(24))
							{
							case 0:
								return "Shayna";
							case 1:
								return "Korrie";
							case 2:
								return "Ginger";
							case 3:
								return "Brooke";
							case 4:
								return "Jenny";
							case 5:
								return "Autumn";
							case 6:
								return "Nancy";
							case 7:
								return "Ella";
							case 8:
								return "Kayla";
							case 9:
								return "Selah";
							case 10:
								return "Sophia";
							case 11:
								return "Marshanna";
							case 12:
								return "Lauren";
							case 13:
								return "Trisha";
							case 14:
								return "Shirlena";
							case 15:
								return "Sheena";
							case 16:
								return "Ellen";
							case 17:
								return "Amy";
							case 18:
								return "Dawn";
							case 19:
								return "Susana";
							case 20:
								return "Meredith";
							case 21:
								return "Selene";
							case 22:
								return "Terra";
							default:
								return "Sally";
							}
						}
						break;
					}
				}
			}
			else if (npcType <= 229)
			{
				if (npcType != 178)
				{
					switch (npcType)
					{
					case 207:
						switch (WorldGen.genRand.Next(16))
						{
						case 0:
							return "Abdosir";
						case 1:
							return "Akbar";
						case 2:
							return "Bodashtart";
						case 3:
							return "Danel";
						case 4:
							return "Hanno";
						case 5:
							return "Hiram";
						case 6:
							return "Kanmi";
						case 7:
							return "Philosir";
						case 8:
							return "Tabnit";
						case 9:
							return "Yutpan";
						case 10:
							return "Ahirom";
						case 11:
							return "Batnoam";
						case 12:
							return "Sikarbaal";
						case 13:
							return "Hannibal";
						case 14:
							return "Yehomilk";
						default:
							return "Ahinadab";
						}
					case 208:
						switch (WorldGen.genRand.Next(17))
						{
						case 0:
							return "Candy";
						case 1:
							return "Isis";
						case 2:
							return "Trixy";
						case 3:
							return "Destiny";
						case 4:
							return "Lexus";
						case 5:
							return "Bambi";
						case 6:
							return "Bailey";
						case 7:
							return "Glitter";
						case 8:
							return "Sparkle";
						case 9:
							return "Paris";
						case 10:
							return "Dazzle";
						case 11:
							return "Fantasy";
						case 12:
							return "Bunny";
						case 13:
							return "Sugar";
						case 14:
							return "Fantasia";
						case 15:
							return "Star";
						default:
							return "Cherry";
						}
					case 209:
						switch (WorldGen.genRand.Next(23))
						{
						case 0:
							return "Alpha";
						case 1:
							return "Beta";
						case 2:
							return "Delta";
						case 3:
							return "Omega";
						case 4:
							return "Gamma";
						case 5:
							return "Theta";
						case 6:
							return "Kappa";
						case 7:
							return "Omicron";
						case 8:
							return "Sigma";
						case 9:
							return "Upsilon";
						case 10:
							return "Phi";
						case 11:
							return "Zeta";
						case 12:
							return "Lambda";
						case 13:
							return "Nu";
						case 14:
							return "Ci";
						case 15:
							return "Rho";
						case 16:
							return "Phi";
						case 17:
							return "Fender";
						case 18:
							return "T-3E0";
						case 19:
							return "Niner-7";
						case 20:
							return "A.N.D.Y";
						case 21:
							return "Syn-X";
						default:
							return "Mu";
						}
					default:
						switch (npcType)
						{
						case 227:
							switch (WorldGen.genRand.Next(17))
							{
							case 0:
								return "Marco";
							case 1:
								return "Guido";
							case 2:
								return "Enzo";
							case 3:
								return "Martino";
							case 4:
								return "Mauro";
							case 5:
								return "Lorenzo";
							case 6:
								return "Ludo";
							case 7:
								return "Luciano";
							case 8:
								return "Carlo";
							case 9:
								return "Bruno";
							case 10:
								return "Mario";
							case 11:
								return "Leonardo";
							case 12:
								return "Raphael";
							case 13:
								return "Luigi";
							case 14:
								return "Luca";
							case 15:
								return "Darren";
							default:
								return "Stefano";
							}
						case 228:
							switch (WorldGen.genRand.Next(10))
							{
							case 0:
								return "Abibe";
							case 1:
								return "Jamundi";
							case 2:
								return "U'wa";
							case 3:
								return "Tairona";
							case 4:
								return "Xirigua";
							case 5:
								return "Zop'a";
							case 6:
								return "Opuni";
							case 7:
								return "Kogi-ghi";
							case 8:
								return "Konah";
							default:
								return "Gboto";
							}
						case 229:
							switch (WorldGen.genRand.Next(11))
							{
							case 0:
								return "David";
							case 1:
								return "Red Beard";
							case 2:
								return "Jack";
							case 3:
								return "Black Beard";
							case 4:
								return "Captain Morgan";
							case 5:
								return "Wet Beard";
							case 6:
								return "James T. Beard";
							case 7:
								return "Gunpowder Garry";
							case 8:
								return "Captain Stoney Dirt";
							case 9:
								return "Jake";
							default:
								return "Captain Bullywort";
							}
						}
						break;
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(20))
					{
					case 0:
						return "Whitney";
					case 1:
						return "Verity";
					case 2:
						return "Ada";
					case 3:
						return "Cornelia";
					case 4:
						return "Lydia";
					case 5:
						return "Leila";
					case 6:
						return "Minerva";
					case 7:
						return "Emeline";
					case 8:
						return "Cynthia";
					case 9:
						return "Fidelia";
					case 10:
						return "Lilly";
					case 11:
						return "Phoebe";
					case 12:
						return "Zylphia";
					case 13:
						return "Zelda";
					case 14:
						return "Selina";
					case 15:
						return "Hope";
					case 16:
						return "Isabella";
					case 17:
						return "Judith";
					case 18:
						return "Savannah";
					default:
						return "Vivian";
					}
				}
			}
			else if (npcType <= 369)
			{
				if (npcType != 353)
				{
					switch (npcType)
					{
					case 368:
						switch (WorldGen.genRand.Next(13))
						{
						case 0:
							return "Abraham";
						case 1:
							return "Bohemas";
						case 2:
							return "Eladon";
						case 3:
							return "Aphraim";
						case 4:
							return "Gallius";
						case 5:
							return "Llewellyn";
						case 6:
							return "Riley";
						case 7:
							return "Rawleigh";
						case 8:
							return "Shipton";
						case 9:
							return "Romeo";
						case 10:
							return "Aedan";
						case 11:
							return "Mercer";
						default:
							return "Willy";
						}
					case 369:
						switch (WorldGen.genRand.Next(22))
						{
						case 0:
							return "Bobby";
						case 1:
							return "Sammy";
						case 2:
							return "Jimmy";
						case 3:
							return "Danny";
						case 4:
							return "Timmy";
						case 5:
							return "Simon";
						case 6:
							return "Johnny";
						case 7:
							return "Billy";
						case 8:
							return "Matty";
						case 9:
							return "Bart";
						case 10:
							return "Phillip";
						case 11:
							return "Spencer";
						case 12:
							return "Nathan";
						case 13:
							return "Grayson";
						case 14:
							return "Bryce";
						case 15:
							return "Miles";
						case 16:
							return "Charles";
						case 17:
							return "Adam";
						case 18:
							return "Tyler";
						case 19:
							return "Jey";
						case 20:
							return "Ivan";
						default:
							return "Izzy";
						}
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(20))
					{
					case 0:
						return "Bri";
					case 1:
						return "Brianne";
					case 2:
						return "Flora";
					case 3:
						return "Iris";
					case 4:
						return "Scarlett";
					case 5:
						return "Lola";
					case 6:
						return "Hazel";
					case 7:
						return "Stella";
					case 8:
						return "Pearl";
					case 9:
						return "Tallulah";
					case 10:
						return "Ruby";
					case 11:
						return "Esmeralda";
					case 12:
						return "Kylie";
					case 13:
						return "Kati";
					case 14:
						return "Biah";
					case 15:
						return "Meliyah";
					case 16:
						return "Petra";
					case 17:
						return "Rox";
					case 18:
						return "Roxanne";
					default:
						return "Annabel";
					}
				}
			}
			else if (npcType != 441)
			{
				if (npcType == 453)
				{
					switch (WorldGen.genRand.Next(8))
					{
					case 0:
						return "Skellington";
					case 1:
						return "Bones McGee";
					case 2:
						return "Gloomy Mays";
					case 3:
						return "Jack Sellington";
					case 4:
						return "Billy Marrows";
					case 5:
						return "Tom";
					case 6:
						return "Rattles Magoo";
					case 7:
						return "Mandible Calavera";
					default:
						return "No-Eyed Wiley";
					}
				}
			}
			else
			{
				switch (WorldGen.genRand.Next(20))
				{
				case 0:
					return "McKinly";
				case 1:
					return "Millard";
				case 2:
					return "Fillmore";
				case 3:
					return "Rutherford";
				case 4:
					return "Chester";
				case 5:
					return "Grover";
				case 6:
					return "Cleveland";
				case 7:
					return "Theodore";
				case 8:
					return "Herbert";
				case 9:
					return "Warren";
				case 10:
					return "Lyndon";
				case 11:
					return "Ronald";
				case 12:
					return "Harrison";
				case 13:
					return "Woodrow";
				case 14:
					return "Tweed";
				case 15:
					return "Blanton";
				case 16:
					return "Dwyer";
				case 17:
					return "Carroll";
				default:
					return "Agnew";
				}
			}
			return "";
		}
		public static void setNPCName(string newName, int npcType, bool resetExtras = false)
		{
			bool flag = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					if (flag)
					{
						Main.npc[i].displayName = NPC.getNewNPCName(npcType);
					}
					else
					{
						Main.npc[i].displayName = newName;
						if (!resetExtras)
						{
							return;
						}
						flag = true;
					}
				}
			}
		}
		public static string firstNPCName(int npcType)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					return Main.npc[i].displayName;
				}
			}
			return NPC.getNewNPCName(npcType);
		}
		public static bool MechSpawn(float x, float y, int type)
		{
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == type)
				{
					num++;
					Vector2 vector = new Vector2(x, y);
					float num4 = Main.npc[i].position.X - vector.X;
					float num5 = Main.npc[i].position.Y - vector.Y;
					float num6 = (float)Math.Sqrt((double)(num4 * num4 + num5 * num5));
					if (num6 < 200f)
					{
						num2++;
					}
					if (num6 < 600f)
					{
						num3++;
					}
				}
			}
			return ServerApi.Hooks.InvokeGameStatueSpawn(num2, num3, num, (int)(x / 16), (int)(y / 16), type, true);
		}
		public static int TypeToNum(int type)
		{
			if (type == 17)
			{
				return 2;
			}
			if (type == 18)
			{
				return 3;
			}
			if (type == 19)
			{
				return 6;
			}
			if (type == 20)
			{
				return 5;
			}
			if (type == 22)
			{
				return 1;
			}
			if (type == 38)
			{
				return 4;
			}
			if (type == 54)
			{
				return 7;
			}
			if (type == 107)
			{
				return 9;
			}
			if (type == 108)
			{
				return 10;
			}
			if (type == 124)
			{
				return 8;
			}
			if (type == 142)
			{
				return 11;
			}
			if (type == 160)
			{
				return 12;
			}
			if (type == 178)
			{
				return 13;
			}
			if (type == 207)
			{
				return 14;
			}
			if (type == 208)
			{
				return 15;
			}
			if (type == 209)
			{
				return 16;
			}
			if (type == 227)
			{
				return 17;
			}
			if (type == 228)
			{
				return 18;
			}
			if (type == 229)
			{
				return 19;
			}
			if (type == 353)
			{
				return 20;
			}
			if (type == 368)
			{
				return 21;
			}
			if (type == 369)
			{
				return 22;
			}
			if (type == 441)
			{
				return 23;
			}
			return -1;
		}
		public static int NumToType(int type)
		{
			if (type == 2)
			{
				return 17;
			}
			if (type == 3)
			{
				return 18;
			}
			if (type == 6)
			{
				return 19;
			}
			if (type == 5)
			{
				return 20;
			}
			if (type == 1)
			{
				return 22;
			}
			if (type == 4)
			{
				return 38;
			}
			if (type == 7)
			{
				return 54;
			}
			if (type == 9)
			{
				return 107;
			}
			if (type == 10)
			{
				return 108;
			}
			if (type == 8)
			{
				return 124;
			}
			if (type == 11)
			{
				return 142;
			}
			if (type == 12)
			{
				return 160;
			}
			if (type == 13)
			{
				return 178;
			}
			if (type == 14)
			{
				return 207;
			}
			if (type == 15)
			{
				return 208;
			}
			if (type == 16)
			{
				return 209;
			}
			if (type == 17)
			{
				return 227;
			}
			if (type == 18)
			{
				return 228;
			}
			if (type == 19)
			{
				return 229;
			}
			if (type == 20)
			{
				return 353;
			}
			if (type == 21)
			{
				return 368;
			}
			if (type == 22)
			{
				return 369;
			}
			if (type == 23)
			{
				return 441;
			}
			return -1;
		}
		public int GetBossHeadTextureIndex()
		{
			int result = NPCID.Sets.BossHeadTextures[this.type];
			int num = this.type;
			if (num <= 126)
			{
				if (num != 4)
				{
					switch (num)
					{
					case 125:
						if (this.ai[0] >= 3f)
						{
							result = 20;
						}
						break;
					case 126:
						if (this.ai[0] >= 3f)
						{
							result = 21;
						}
						break;
					}
				}
				else if (this.ai[0] >= 2f)
				{
					result = 1;
				}
			}
			else if (num != 262)
			{
				switch (num)
				{
				case 439:
					if (this.ai[0] == 5f && this.alpha == 255)
					{
						result = -1;
					}
					break;
				case 440:
					if (this.ai[0] != 5f || this.alpha == 255)
					{
						result = -1;
					}
					break;
				}
			}
			else if (this.life <= this.lifeMax / 2)
			{
				result = 12;
			}
			return result;
		}
		public float GetBossHeadRotation()
		{
			float result = 0f;
			int num = this.type;
			if (num <= 68)
			{
				if (num == 35)
				{
					goto IL_3E;
				}
				if (num != 68)
				{
					return result;
				}
			}
			else
			{
				if (num == 127)
				{
					goto IL_3E;
				}
				if (num != 262)
				{
					if (num != 345)
					{
						return result;
					}
					if (this.ai[0] == 2f)
					{
						result = this.rotation;
						return result;
					}
					return result;
				}
			}
			result = this.rotation;
			return result;
			IL_3E:
			if (this.ai[1] == 1f || this.ai[1] == 2f)
			{
				result = this.rotation;
			}
			return result;
		}
		/// <summary>
		/// Vanilla: Returns a Horizontal flip sprite effect if npc type is 491 and spriteDirection is 1
		/// Otherwise returns a 'none' sprite effect
		/// API: Returns -1 if npc type is 491 and spriteDirection is 1
		/// Otherwise returns 0
		/// </summary>
		/// <returns></returns>
		public int GetBossHeadSpriteEffects()
		{
			//SpriteEffect result = SpriteEffects.None;
			if (this.type == 491 && this.spriteDirection == 1)
			{
				//result = SpriteEffects.FlipHorizontally;
				return -1;
			}
			return 0;
		}
		public int BannerID()
		{
			if (this.netID >= -10)
			{
				return this.netID;
			}
			return this.type;
		}
		public void netDefaults(int type)
		{

			if (type < 0)
			{
				if (type == -1)
				{
					this.SetDefaults("Slimeling");
					return;
				}
				if (type == -2)
				{
					this.SetDefaults("Slimer2");
					return;
				}
				if (type == -3)
				{
					this.SetDefaults("Green Slime");
					return;
				}
				if (type == -4)
				{
					this.SetDefaults("Pinky");
					return;
				}
				if (type == -5)
				{
					this.SetDefaults("Baby Slime");
					return;
				}
				if (type == -6)
				{
					this.SetDefaults("Black Slime");
					return;
				}
				if (type == -7)
				{
					this.SetDefaults("Purple Slime");
					return;
				}
				if (type == -8)
				{
					this.SetDefaults("Red Slime");
					return;
				}
				if (type == -9)
				{
					this.SetDefaults("Yellow Slime");
					return;
				}
				if (type == -10)
				{
					this.SetDefaults("Jungle Slime");
					return;
				}
				if (type == -11)
				{
					this.SetDefaults("Little Eater");
					return;
				}
				if (type == -12)
				{
					this.SetDefaults("Big Eater");
					return;
				}
				if (type == -13)
				{
					this.SetDefaults("Short Bones");
					return;
				}
				if (type == -14)
				{
					this.SetDefaults("Big Boned");
					return;
				}
				if (type == -15)
				{
					this.SetDefaults("Heavy Skeleton");
					return;
				}
				if (type == -16)
				{
					this.SetDefaults("Little Stinger");
					return;
				}
				if (type == -17)
				{
					this.SetDefaults("Big Stinger");
					return;
				}
				if (type == -18)
				{
					this.SetDefaults("Tiny Moss Hornet");
					return;
				}
				if (type == -19)
				{
					this.SetDefaults("Little Moss Hornet");
					return;
				}
				if (type == -20)
				{
					this.SetDefaults("Big Moss Hornet");
					return;
				}
				if (type == -21)
				{
					this.SetDefaults("Giant Moss Hornet");
					return;
				}
				if (type == -22)
				{
					this.SetDefaults("Little Crimera");
					return;
				}
				if (type == -23)
				{
					this.SetDefaults("Big Crimera");
					return;
				}
				if (type == -24)
				{
					this.SetDefaults("Little Crimslime");
					return;
				}
				if (type == -25)
				{
					this.SetDefaults("Big Crimslime");
					return;
				}
				if (type == -26)
				{
					this.SetDefaults("Small Zombie");
					return;
				}
				if (type == -27)
				{
					this.SetDefaults("Big Zombie");
					return;
				}
				if (type == -28)
				{
					this.SetDefaults("Small Bald Zombie");
					return;
				}
				if (type == -29)
				{
					this.SetDefaults("Big Bald Zombie");
					return;
				}
				if (type == -30)
				{
					this.SetDefaults("Small Pincushion Zombie");
					return;
				}
				if (type == -31)
				{
					this.SetDefaults("Big Pincushion Zombie");
					return;
				}
				if (type == -32)
				{
					this.SetDefaults("Small Slimed Zombie");
					return;
				}
				if (type == -33)
				{
					this.SetDefaults("Big Slimed Zombie");
					return;
				}
				if (type == -34)
				{
					this.SetDefaults("Small Swamp Zombie");
					return;
				}
				if (type == -35)
				{
					this.SetDefaults("Big Swamp Zombie");
					return;
				}
				if (type == -36)
				{
					this.SetDefaults("Small Twiggy Zombie");
					return;
				}
				if (type == -37)
				{
					this.SetDefaults("Big Twiggy Zombie");
					return;
				}
				if (type == -38)
				{
					this.SetDefaults("Cataract Eye 2");
					return;
				}
				if (type == -39)
				{
					this.SetDefaults("Sleepy Eye 2");
					return;
				}
				if (type == -40)
				{
					this.SetDefaults("Dialated Eye 2");
					return;
				}
				if (type == -41)
				{
					this.SetDefaults("Green Eye 2");
					return;
				}
				if (type == -42)
				{
					this.SetDefaults("Purple Eye 2");
					return;
				}
				if (type == -43)
				{
					this.SetDefaults("Demon Eye 2");
					return;
				}
				if (type == -44)
				{
					this.SetDefaults("Small Female Zombie");
					return;
				}
				if (type == -45)
				{
					this.SetDefaults("Big Female Zombie");
					return;
				}
				if (type == -46)
				{
					this.SetDefaults("Small Skeleton");
					return;
				}
				if (type == -47)
				{
					this.SetDefaults("Big Skeleton");
					return;
				}
				if (type == -48)
				{
					this.SetDefaults("Small Headache Skeleton");
					return;
				}
				if (type == -49)
				{
					this.SetDefaults("Big Headache Skeleton");
					return;
				}
				if (type == -50)
				{
					this.SetDefaults("Small Misassembled Skeleton");
					return;
				}
				if (type == -51)
				{
					this.SetDefaults("Big Misassembled Skeleton");
					return;
				}
				if (type == -52)
				{
					this.SetDefaults("Small Pantless Skeleton");
					return;
				}
				if (type == -53)
				{
					this.SetDefaults("Big Pantless Skeleton");
					return;
				}
				if (type == -54)
				{
					this.SetDefaults("Small Rain Zombie");
					return;
				}
				if (type == -55)
				{
					this.SetDefaults("Big Rain Zombie");
					return;
				}
				if (type == -56)
				{
					this.SetDefaults("Little Hornet Fatty");
					return;
				}
				if (type == -57)
				{
					this.SetDefaults("Big Hornet Fatty");
					return;
				}
				if (type == -58)
				{
					this.SetDefaults("Little Hornet Honey");
					return;
				}
				if (type == -59)
				{
					this.SetDefaults("Big Hornet Honey");
					return;
				}
				if (type == -60)
				{
					this.SetDefaults("Little Hornet Leafy");
					return;
				}
				if (type == -61)
				{
					this.SetDefaults("Big Hornet Leafy");
					return;
				}
				if (type == -62)
				{
					this.SetDefaults("Little Hornet Spikey");
					return;
				}
				if (type == -63)
				{
					this.SetDefaults("Big Hornet Spikey");
					return;
				}
				if (type == -64)
				{
					this.SetDefaults("Little Hornet Stingy");
					return;
				}
				if (type == -65)
				{
					this.SetDefaults("Big Hornet Stingy");
					return;
				}
			}
			else
			{
				this.SetDefaults(type, -1f);
			}
			if (type > -66)
			{
				ServerApi.Hooks.InvokeNpcNetDefaults(ref type, this);
			}
		}
		public void SetDefaults(string Name)
		{
			bool flag = false;
			this.SetDefaults(0, -1f);
			if (Name == "Slimeling")
			{
				this.SetDefaults(81, 0.6f);
				this.name = Name;
				this.damage = 45;
				this.defense = 10;
				this.life = 90;
				this.knockBackResist *= 1.2f;
				this.value = 100f;
				this.netID = -1;
				flag = true;
			}
			else if (Name == "Slimer2")
			{
				this.SetDefaults(81, 0.9f);
				this.displayName = "Slimer";
				this.name = Name;
				this.damage = 45;
				this.defense = 20;
				this.life = 90;
				this.knockBackResist *= 1.2f;
				this.value = 100f;
				this.netID = -2;
				flag = true;
			}
			else if (Name == "Green Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 6;
				this.defense = 0;
				this.life = 14;
				this.knockBackResist *= 1.2f;
				this.color = new Color(0, 220, 40, 100);
				this.value = 3f;
				this.netID = -3;
				flag = true;
			}
			else if (Name == "Pinky")
			{
				this.SetDefaults(1, 0.6f);
				this.name = Name;
				this.damage = 5;
				this.defense = 5;
				this.life = 150;
				this.knockBackResist *= 1.4f;
				this.color = new Color(250, 30, 90, 90);
				this.value = 10000f;
				this.netID = -4;
				flag = true;
				this.rarity = 1;
			}
			else if (Name == "Baby Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 13;
				this.defense = 4;
				this.life = 30;
				this.knockBackResist *= 0.95f;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 10f;
				this.netID = -5;
				flag = true;
			}
			else if (Name == "Black Slime")
			{
				this.SetDefaults(1, 1.05f);
				this.name = Name;
				this.damage = 15;
				this.defense = 4;
				this.life = 45;
				this.color = new Color(0, 0, 0, 50);
				this.value = 20f;
				this.netID = -6;
				flag = true;
			}
			else if (Name == "Purple Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 12;
				this.defense = 6;
				this.life = 40;
				this.knockBackResist *= 0.9f;
				this.color = new Color(200, 0, 255, 150);
				this.value = 10f;
				this.netID = -7;
				flag = true;
			}
			else if (Name == "Red Slime")
			{
				this.SetDefaults(1, 1.025f);
				this.name = Name;
				this.damage = 12;
				this.defense = 4;
				this.life = 35;
				this.color = new Color(255, 30, 0, 100);
				this.value = 8f;
				this.netID = -8;
				flag = true;
			}
			else if (Name == "Yellow Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 15;
				this.defense = 7;
				this.life = 45;
				this.color = new Color(255, 255, 0, 100);
				this.value = 10f;
				this.netID = -9;
				flag = true;
			}
			else if (Name == "Jungle Slime")
			{
				this.SetDefaults(1, 1.1f);
				this.name = Name;
				this.damage = 18;
				this.defense = 6;
				this.life = 60;
				this.color = new Color(143, 215, 93, 100);
				this.value = 500f;
				this.netID = -10;
				flag = true;
			}
			else if (Name == "Little Eater")
			{
				this.SetDefaults(6, 0.85f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -11;
			}
			else if (Name == "Big Eater")
			{
				this.SetDefaults(6, 1.15f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -12;
			}
			else if (Name == "Short Bones")
			{
				this.SetDefaults(31, 0.9f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.netID = -13;
			}
			else if (Name == "Big Boned")
			{
				this.SetDefaults(31, 1.15f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = (int)((double)((float)this.life * this.scale) * 1.1);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -14;
			}
			else if (Name == "Heavy Skeleton")
			{
				this.SetDefaults(77, 1.15f);
				this.name = Name;
				this.displayName = "Armored Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = 400;
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.height = 44;
				this.netID = -15;
			}
			else if (Name == "Little Stinger")
			{
				this.SetDefaults(42, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -16;
			}
			else if (Name == "Big Stinger")
			{
				this.SetDefaults(42, 1.2f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -17;
			}
			else if (Name == "Tiny Moss Hornet")
			{
				this.SetDefaults(176, 0.8f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -18;
			}
			else if (Name == "Little Moss Hornet")
			{
				this.SetDefaults(176, 0.9f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -19;
			}
			else if (Name == "Big Moss Hornet")
			{
				this.SetDefaults(176, 1.1f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -20;
			}
			else if (Name == "Giant Moss Hornet")
			{
				this.SetDefaults(176, 1.2f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -21;
			}
			else if (Name == "Little Crimera")
			{
				this.SetDefaults(173, 0.85f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -22;
			}
			else if (Name == "Big Crimera")
			{
				this.SetDefaults(173, 1.15f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -23;
			}
			else if (Name == "Little Crimslime")
			{
				this.SetDefaults(183, 0.85f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -24;
			}
			else if (Name == "Big Crimslime")
			{
				this.SetDefaults(183, 1.15f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -25;
			}
			else if (Name == "Small Zombie")
			{
				this.SetDefaults(3, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -26;
			}
			else if (Name == "Big Zombie")
			{
				this.SetDefaults(3, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -27;
			}
			else if (Name == "Small Bald Zombie")
			{
				this.SetDefaults(132, 0.85f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -28;
			}
			else if (Name == "Big Bald Zombie")
			{
				this.SetDefaults(132, 1.15f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -29;
			}
			else if (Name == "Small Pincushion Zombie")
			{
				this.SetDefaults(186, 0.93f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -30;
			}
			else if (Name == "Big Pincushion Zombie")
			{
				this.SetDefaults(186, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -31;
			}
			else if (Name == "Small Slimed Zombie")
			{
				this.SetDefaults(187, 0.89f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -32;
			}
			else if (Name == "Big Slimed Zombie")
			{
				this.SetDefaults(187, 1.11f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -33;
			}
			else if (Name == "Small Swamp Zombie")
			{
				this.SetDefaults(188, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -34;
			}
			else if (Name == "Big Swamp Zombie")
			{
				this.SetDefaults(188, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -35;
			}
			else if (Name == "Small Twiggy Zombie")
			{
				this.SetDefaults(189, 0.92f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -36;
			}
			else if (Name == "Big Twiggy Zombie")
			{
				this.SetDefaults(189, 1.08f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -37;
			}
			else if (Name == "Cataract Eye 2")
			{
				this.SetDefaults(190, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -38;
			}
			else if (Name == "Sleepy Eye 2")
			{
				this.SetDefaults(191, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -39;
			}
			else if (Name == "Dialated Eye 2")
			{
				this.SetDefaults(192, 0.9f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -40;
			}
			else if (Name == "Green Eye 2")
			{
				this.SetDefaults(193, 0.85f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -41;
			}
			else if (Name == "Purple Eye 2")
			{
				this.SetDefaults(194, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -42;
			}
			else if (Name == "Demon Eye 2")
			{
				this.SetDefaults(2, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -43;
			}
			else if (Name == "Small Female Zombie")
			{
				this.SetDefaults(200, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -44;
			}
			else if (Name == "Big Female Zombie")
			{
				this.SetDefaults(200, 1.05f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -45;
			}
			else if (Name == "Small Skeleton")
			{
				this.SetDefaults(21, 0.9f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -46;
			}
			else if (Name == "Big Skeleton")
			{
				this.SetDefaults(21, 1.1f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -47;
			}
			else if (Name == "Small Headache Skeleton")
			{
				this.SetDefaults(201, 0.93f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -48;
			}
			else if (Name == "Big Headache Skeleton")
			{
				this.SetDefaults(201, 1.07f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -49;
			}
			else if (Name == "Small Misassembled Skeleton")
			{
				this.SetDefaults(202, 0.87f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -50;
			}
			else if (Name == "Big Misassembled Skeleton")
			{
				this.SetDefaults(202, 1.13f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -51;
			}
			else if (Name == "Small Pantless Skeleton")
			{
				this.SetDefaults(203, 0.85f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -52;
			}
			else if (Name == "Big Pantless Skeleton")
			{
				this.SetDefaults(203, 1.15f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -53;
			}
			else if (Name == "Small Rain Zombie")
			{
				this.SetDefaults(223, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -54;
			}
			else if (Name == "Big Rain Zombie")
			{
				this.SetDefaults(223, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -55;
			}
			else if (Name == "Little Hornet Fatty")
			{
				this.SetDefaults(231, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -56;
			}
			else if (Name == "Big Hornet Fatty")
			{
				this.SetDefaults(231, 1.25f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -57;
			}
			else if (Name == "Little Hornet Honey")
			{
				this.SetDefaults(232, 0.8f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -58;
			}
			else if (Name == "Big Hornet Honey")
			{
				this.SetDefaults(232, 1.15f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -59;
			}
			else if (Name == "Little Hornet Leafy")
			{
				this.SetDefaults(233, 0.92f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -60;
			}
			else if (Name == "Big Hornet Leafy")
			{
				this.SetDefaults(233, 1.1f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -61;
			}
			else if (Name == "Little Hornet Spikey")
			{
				this.SetDefaults(234, 0.78f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -62;
			}
			else if (Name == "Big Hornet Spikey")
			{
				this.SetDefaults(234, 1.16f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -63;
			}
			else if (Name == "Little Hornet Stingy")
			{
				this.SetDefaults(235, 0.87f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -64;
			}
			else if (Name == "Big Hornet Stingy")
			{
				this.SetDefaults(235, 1.21f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -65;
			}
			else if (Name != "")
			{
				for (int i = 1; i < 540; i++)
				{
					if (Main.npcName[i] == Name)
					{
						this.SetDefaults(i, -1f);
						return;
					}
				}
				this.SetDefaults(0, -1f);
				this.active = false;
			}
			else
			{
				this.active = false;
			}
			this.displayName = Lang.npcName(this.netID, false);
			this.lifeMax = this.life;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			if (Main.expertMode && flag)
			{
				this.scaleStats();
			}
			ServerApi.Hooks.InvokeNpcSetDefaultsString(ref Name, this);
		}
		public void SetDefaultsKeepPlayerInteraction(int Type)
		{
			bool[] array = new bool[this.playerInteraction.Length];
			for (int i = 0; i < this.playerInteraction.Length; i++)
			{
				array[i] = this.playerInteraction[i];
			}
			this.SetDefaults(Type, -1f);
			for (int j = 0; j < this.playerInteraction.Length; j++)
			{
				this.playerInteraction[j] = array[j];
			}
		}
		public void SetDefaults(int Type, float scaleOverride = -1f)
		{
			this.takenDamageMultiplier = 1f;
			this.extraValue = 0f;
			for (int i = 0; i < this.playerInteraction.Length; i++)
			{
				this.playerInteraction[i] = false;
			}
			this.rarity = 0;
			this.dontCountMe = false;
			this.releaseOwner = 255;
			this.catchItem = 0;
			this.npcNameLookup = 0;
			this.netStream = 32;
			bool flag = false;
			this.netID = 0;
			this.netAlways = false;
			this.netSpam = 0;
			int num = 10;
			if (Type >= 0)
			{
				num = NPCID.Sets.TrailCacheLength[Type];
			}
			if (num != this.oldPos.Length)
			{
				Array.Resize<Vector2>(ref this.oldPos, num);
				Array.Resize<float>(ref this.oldRot, num);
			}
			for (int j = 0; j < this.oldPos.Length; j++)
			{
				this.oldRot[j] = 0f;
				this.oldPos[j].X = 0f;
				this.oldPos[j].Y = 0f;
			}
			for (int k = 0; k < 5; k++)
			{
				this.buffTime[k] = 0;
				this.buffType[k] = 0;
			}
			for (int l = 0; l < 191; l++)
			{
				this.buffImmune[l] = false;
			}
			this.setFrameSize = false;
			this.buffImmune[31] = true;
			this.netSkip = -2;
			this.realLife = -1;
			this.lifeRegen = 0;
			this.lifeRegenCount = 0;
			this.poisoned = false;
			this.soulDrain = false;
			this.venom = false;
			this.shadowFlame = false;
			this.onFire = false;
			this.midas = false;
			this.ichor = false;
			this.onFrostBurn = false;
			this.confused = false;
			this.loveStruck = false;
			this.stinky = false;
			this.dryadWard = false;
			this.onFire2 = false;
			this.justHit = false;
			this.dontTakeDamage = false;
			this.npcSlots = 1f;
			this.lavaImmune = false;
			this.lavaWet = false;
			this.wetCount = 0;
			this.wet = false;
			this.townNPC = false;
			this.homeless = false;
			this.homeTileX = -1;
			this.homeTileY = -1;
			this.friendly = false;
			this.behindTiles = false;
			this.boss = false;
			this.noTileCollide = false;
			this.rotation = 0f;
			this.active = true;
			this.alpha = 0;
			this.color = default(Color);
			this.collideX = false;
			this.collideY = false;
			this.direction = 0;
			this.oldDirection = this.direction;
			this.frameCounter = 0.0;
			this.netUpdate = true;
			this.netUpdate2 = false;
			this.knockBackResist = 1f;
			this.name = "";
			this.displayName = "";
			this.noGravity = false;
			this.scale = 1f;
			this.soundHit = 0;
			this.soundKilled = 0;
			this.spriteDirection = -1;
			this.target = 255;
			this.oldTarget = this.target;
			this.targetRect = default(Rectangle);
			this.timeLeft = NPC.activeTime;
			this.type = Type;
			this.value = 0f;
			this.coldDamage = false;
			this.trapImmune = false;
			this.hide = false;
			this.immortal = false;
			this.chaseable = true;
			this.breath = 200;
			this.breathCounter = 0;
			this.reflectingProjectiles = false;
			this.canGhostHeal = true;
			this.javelined = false;
			this.daybreak = false;
			this.celled = false;
			this.dryadBane = false;
			for (int m = 0; m < NPC.maxAI; m++)
			{
				this.ai[m] = 0f;
			}
			for (int n = 0; n < NPC.maxAI; n++)
			{
				this.localAI[n] = 0f;
			}
			if (this.type == 1)
			{
				this.name = "Blue Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.color = new Color(0, 80, 255, 100);
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 2)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 3)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 430)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 431)
			{
				this.name = "Zombie Eskimo";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 432)
			{
				this.name = "Pincushion Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 433)
			{
				this.name = "Slimed Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 434)
			{
				this.name = "Swamp Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 435)
			{
				this.name = "Twiggy Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 436)
			{
				this.name = "Female Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 4)
			{
				this.name = "Eye of Cthulhu";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 4;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 2800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 30000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 5)
			{
				this.name = "Servant of Cthulhu";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 5;
				this.damage = 12;
				this.defense = 0;
				this.lifeMax = 8;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
			}
			else if (this.type == 6)
			{
				this.npcSlots = 1f;
				this.name = "Eater of Souls";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 7)
			{
				this.displayName = "Devourer";
				this.npcSlots = 3.5f;
				this.name = "Devourer Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 31;
				this.defense = 2;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.netAlways = true;
			}
			else if (this.type == 8)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
			}
			else if (this.type == 9)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
			}
			else if (this.type == 10)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 8;
				this.defense = 0;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
			}
			else if (this.type == 11)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				this.dontCountMe = true;
			}
			else if (this.type == 12)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				this.dontCountMe = true;
			}
			else if (this.type == 13)
			{
				this.displayName = "Eater of Worlds";
				this.npcSlots = 5f;
				this.name = "Eater of Worlds Head";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 2;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 14)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 4;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 15)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 11;
				this.defense = 8;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 16)
			{
				this.npcSlots = 2f;
				this.name = "Mother Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 20;
				this.defense = 7;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 75f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 17)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 18)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Nurse";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 19)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Arms Dealer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 20)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dryad";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 21)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 22)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Guide";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 23)
			{
				this.name = "Meteor Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 5;
				this.damage = 40;
				this.defense = 6;
				this.lifeMax = 26;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 80f;
				this.knockBackResist = 0.4f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 24)
			{
				this.npcSlots = 3f;
				this.name = "Fire Imp";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 30;
				this.defense = 16;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.lavaImmune = true;
				this.value = 350f;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 25)
			{
				this.name = "Burning Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 100;
			}
			else if (this.type == 31)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 8;
				this.lifeMax = 80;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.8f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 32)
			{
				this.name = "Dark Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 140f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 33)
			{
				this.name = "Water Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 255;
				this.knockBackResist = 0f;
			}
			else if (this.type == 34)
			{
				this.name = "Cursed Skull";
				this.width = 26;
				this.height = 28;
				this.aiStyle = 10;
				this.damage = 35;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 35)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Head";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 32;
				this.defense = 10;
				this.lifeMax = 4400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
			}
			else if (this.type == 36)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Hand";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 12;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 37)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Old Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 38)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Demolitionist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 39)
			{
				this.npcSlots = 6f;
				this.name = "Bone Serpent Head";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 40)
			{
				this.name = "Bone Serpent Body";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 41)
			{
				this.name = "Bone Serpent Tail";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 10;
				this.defense = 18;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 42)
			{
				this.name = "Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 48;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 43)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Man Eater";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 34;
				this.defense = 10;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 350f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 44)
			{
				this.name = "Undead Miner";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 9;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 250f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 45)
			{
				this.name = "Tim";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 5000f;
				this.buffImmune[20] = true;
				this.rarity = 4;
			}
			else if (this.type == 46 || this.type == 303 || this.type == 337)
			{
				this.name = "Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2019;
			}
			else if (this.type == 47)
			{
				this.name = "Corrupt Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 48)
			{
				this.name = "Harpy";
				this.width = 24;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 300f;
			}
			else if (this.type == 49)
			{
				this.npcSlots = 0.5f;
				this.name = "Cave Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 13;
				this.defense = 2;
				this.lifeMax = 16;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 50)
			{
				this.boss = true;
				this.name = "King Slime";
				this.width = 98;
				this.height = 92;
				this.aiStyle = 15;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 2000;
				this.knockBackResist = 0f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 30;
				this.value = 10000f;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.timeLeft = NPC.activeTime * 30;
			}
			else if (this.type == 51)
			{
				this.npcSlots = 0.5f;
				this.name = "Jungle Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 52)
			{
				this.name = "Doctor Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 53)
			{
				this.name = "The Groom";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 54)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Clothier";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 55)
			{
				this.noGravity = true;
				this.name = "Goldfish";
				this.width = 20;
				this.height = 18;
				this.aiStyle = 16;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.catchItem = 261;
			}
			else if (this.type == 56)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Snatcher";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 90f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 57)
			{
				this.noGravity = true;
				this.name = "Corrupt Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 58)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Piranha";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 25;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 50f;
			}
			else if (this.type == 59)
			{
				this.name = "Lava Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 15;
				this.defense = 10;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 1.1f;
				this.alpha = 50;
				this.lavaImmune = true;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 60)
			{
				this.npcSlots = 0.5f;
				this.name = "Hellbat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 35;
				this.defense = 8;
				this.lifeMax = 46;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 120f;
				this.scale = 1.1f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 61)
			{
				this.name = "Vulture";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 17;
				this.damage = 15;
				this.defense = 4;
				this.lifeMax = 40;
				this.knockBackResist = 0.8f;
				this.soundHit = 28;
				this.soundKilled = 31;
				this.value = 60f;
			}
			else if (this.type == 62)
			{
				this.npcSlots = 2f;
				this.name = "Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 120;
				this.soundHit = 21;
				this.knockBackResist = 0.8f;
				this.soundKilled = 24;
				this.value = 300f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 63)
			{
				this.noGravity = true;
				this.name = "Blue Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 25;
				this.defense = 4;
				this.lifeMax = 34;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 64)
			{
				this.noGravity = true;
				this.name = "Pink Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 65)
			{
				this.noGravity = true;
				this.name = "Shark";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 16;
				this.damage = 40;
				this.defense = 2;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 400f;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 66)
			{
				this.npcSlots = 2f;
				this.name = "Voodoo Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 1000f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 67)
			{
				this.name = "Crab";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 68)
			{
				this.name = "Dungeon Guardian";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 1000;
				this.defense = 9999;
				this.lifeMax = 9999;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
			}
			else if (this.type == 69)
			{
				this.name = "Antlion";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 19;
				this.damage = 10;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 31;
				this.soundKilled = 34;
				this.knockBackResist = 0f;
				this.value = 60f;
				this.behindTiles = true;
			}
			else if (this.type == 70)
			{
				this.npcSlots = 0.3f;
				this.name = "Spike Ball";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 20;
				this.damage = 32;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.scale = 1.5f;
			}
			else if (this.type == 71)
			{
				this.npcSlots = 2f;
				this.name = "Dungeon Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 30;
				this.defense = 7;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 60;
				this.value = 150f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 72)
			{
				this.npcSlots = 0.3f;
				this.name = "Blazing Wheel";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 21;
				this.damage = 24;
				this.defense = 100;
				this.lifeMax = 100;
				this.alpha = 100;
				this.behindTiles = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 73)
			{
				this.name = "Goblin Scout";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298)
			{
				this.name = "Bird";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				if (this.type == 74)
				{
					this.catchItem = 2015;
				}
				if (this.type == 297)
				{
					this.catchItem = 2016;
				}
				if (this.type == 298)
				{
					this.catchItem = 2017;
				}
				this.npcSlots = 0.4f;
			}
			else if (this.type == 75)
			{
				this.noGravity = true;
				this.name = "Pixie";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 77)
			{
				this.name = "Armored Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 78)
			{
				this.name = "Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 130;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.6f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 79)
			{
				this.name = "Dark Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 80)
			{
				this.name = "Light Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.55f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 81)
			{
				this.name = "Corrupt Slime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 170;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 82)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Wraith";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 54;
				this.soundKilled = 52;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 83)
			{
				this.name = "Cursed Hammer";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 84)
			{
				this.name = "Enchanted Sword";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 85)
			{
				this.name = "Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 500;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 100000f;
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.rarity = 4;
			}
			else if (this.type == 86)
			{
				this.name = "Unicorn";
				this.width = 46;
				this.height = 42;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 87)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.name = "Wyvern Head";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 88)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Legs";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 89)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 2000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 90)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 2";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 91)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 3";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 92)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Tail";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 93)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 16;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 94)
			{
				this.npcSlots = 1f;
				this.name = "Corruptor";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 5;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.55f;
				this.value = 500f;
			}
			else if (this.type == 95)
			{
				this.displayName = "Digger";
				this.name = "Digger Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 45;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
			}
			else if (this.type == 96)
			{
				this.displayName = "Digger";
				this.name = "Digger Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 28;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				this.dontCountMe = true;
			}
			else if (this.type == 97)
			{
				this.displayName = "Digger";
				this.name = "Digger Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				this.dontCountMe = true;
			}
			else if (this.type == 98)
			{
				this.displayName = "World Feeder";
				this.npcSlots = 3.5f;
				this.name = "Seeker Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 70;
				this.defense = 36;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
			}
			else if (this.type == 99)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 55;
				this.defense = 40;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
			}
			else if (this.type == 100)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 44;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
			}
			else if (this.type == 101)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.name = "Clinger";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 320;
				this.soundHit = 1;
				this.knockBackResist = 0.2f;
				this.soundKilled = 1;
				this.value = 600f;
			}
			else if (this.type == 102)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Angler Fish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 103)
			{
				this.noGravity = true;
				this.name = "Green Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 120;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 104)
			{
				this.name = "Werewolf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 38;
				this.lifeMax = 350;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 105)
			{
				this.friendly = true;
				this.name = "Bound Goblin";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 106)
			{
				this.friendly = true;
				this.name = "Bound Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 107)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Goblin Tinkerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 108)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 109)
			{
				this.name = "Clown";
				this.width = 34;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 8000f;
			}
			else if (this.type == 110)
			{
				this.name = "Skeleton Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 112)
			{
				this.name = "Vile Spit";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 65;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 9;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.scale = 0.9f;
				this.alpha = 80;
			}
			else if (this.type == 113)
			{
				this.npcSlots = 10f;
				this.name = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 27;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 114)
			{
				this.name = "Wall of Flesh Eye";
				this.displayName = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 28;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 115)
			{
				this.name = "The Hungry";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 29;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 240;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.behindTiles = true;
				this.noTileCollide = true;
				this.knockBackResist = 1.1f;
			}
			else if (this.type == 116)
			{
				this.name = "The Hungry II";
				this.displayName = "The Hungry";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 9;
				this.knockBackResist = 0.8f;
				this.soundKilled = 12;
			}
			else if (this.type == 117)
			{
				this.displayName = "Leech";
				this.name = "Leech Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 118)
			{
				this.displayName = "Leech";
				this.name = "Leech Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 6;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 119)
			{
				this.displayName = "Leech";
				this.name = "Leech Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 120)
			{
				this.name = "Chaos Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 370;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 600f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 121)
			{
				this.name = "Slimer";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 20;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.alpha = 55;
				this.knockBackResist = 0.8f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 122)
			{
				this.noGravity = true;
				this.name = "Gastropod";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 600f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 123)
			{
				this.friendly = true;
				this.name = "Bound Mechanic";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 124)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Mechanic";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 125)
			{
				this.name = "Retinazer";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 30;
				this.defense = 10;
				this.damage = 45;
				this.lifeMax = 20000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 126)
			{
				this.name = "Spazmatism";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 31;
				this.defense = 10;
				this.damage = 50;
				this.lifeMax = 23000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 127)
			{
				this.name = "Skeletron Prime";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 32;
				this.damage = 47;
				this.defense = 24;
				this.lifeMax = 28000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 120000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[189] = (this.buffImmune[169] = (this.buffImmune[183] = true));
				this.boss = true;
			}
			else if (this.type == 128)
			{
				this.name = "Prime Cannon";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 35;
				this.damage = 30;
				this.defense = 23;
				this.lifeMax = 7000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 129)
			{
				this.name = "Prime Saw";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 33;
				this.damage = 56;
				this.defense = 38;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 130)
			{
				this.name = "Prime Vice";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 34;
				this.damage = 52;
				this.defense = 34;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 131)
			{
				this.name = "Prime Laser";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 36;
				this.damage = 29;
				this.defense = 20;
				this.lifeMax = 6000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 132)
			{
				this.displayName = "Zombie";
				this.name = "Bald Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 5;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 133)
			{
				this.name = "Wandering Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 134)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.defense = 0;
				this.damage = 70;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 120000f;
				this.scale = 1.25f;
				this.boss = true;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.alpha = 255;
			}
			else if (this.type == 135)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 55;
				this.defense = 30;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.netAlways = true;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.dontCountMe = true;
				this.alpha = 255;
			}
			else if (this.type == 136)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 40;
				this.defense = 35;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 1.25f;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.dontCountMe = true;
				this.alpha = 255;
			}
			else if (this.type == 139)
			{
				this.npcSlots = 1f;
				this.name = "Probe";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.knockBackResist = 0.8f;
				this.noTileCollide = true;
				flag = true;
			}
			else if (this.type == 137)
			{
				this.name = "Illuminant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 138)
			{
				this.name = "Illuminant Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.85f;
				this.scale = 1.05f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 140)
			{
				this.name = "Possessed Armor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
			}
			else if (this.type == 141)
			{
				this.name = "Toxic Sludge";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 142)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Santa Claus";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 143)
			{
				this.name = "Snowman Gangsta";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 144)
			{
				this.name = "Mister Stabby";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 240;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 145)
			{
				this.name = "Snow Balla";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 55;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 147)
			{
				this.name = "Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 50f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 148)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2205;
			}
			else if (this.type == 149)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2205;
			}
			else if (this.type == 150)
			{
				this.npcSlots = 0.5f;
				this.name = "Ice Bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 18;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 250f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 151)
			{
				this.npcSlots = 0.5f;
				this.name = "Lava bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 4;
				this.value = 400f;
				this.scale = 1.15f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 152)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Flying Fox";
				this.width = 38;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 153)
			{
				this.npcSlots = 2f;
				this.name = "Giant Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 470;
				this.soundHit = 24;
				this.knockBackResist = 0.3f;
				this.soundKilled = 27;
				this.value = 500f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 154)
			{
				this.npcSlots = 1.5f;
				this.name = "Ice Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 24;
				this.knockBackResist = 0.3f;
				this.soundKilled = 27;
				this.value = 450f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 155)
			{
				this.name = "Wolf";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 156)
			{
				this.npcSlots = 2f;
				this.name = "Red Devil";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 40;
				this.lifeMax = 600;
				this.soundHit = 21;
				this.knockBackResist = 0.5f;
				this.soundKilled = 24;
				this.value = 1200f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 157)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Arapaima";
				this.width = 74;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 160)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Truffle";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 161)
			{
				this.name = "Zombie Eskimo";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 163)
			{
				this.name = "Black Recluse";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 40;
				this.lifeMax = 350;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				this.timeLeft = NPC.activeTime * 2;
			}
			else if (this.type == 238)
			{
				this.noGravity = true;
				this.name = "Black Recluse";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 350;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 164)
			{
				this.name = "Wall Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 165)
			{
				this.noGravity = true;
				this.name = "Wall Creeper";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 167)
			{
				this.name = "Undead Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 200f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 168)
			{
				this.name = "Corrupt Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 169)
			{
				this.noGravity = true;
				this.name = "Ice Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
				this.buffImmune[44] = true;
				this.coldDamage = true;
			}
			else if (this.type == 170)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 171)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 172)
			{
				this.name = "Rune Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 200;
				this.defense = 30;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 5000f;
				this.buffImmune[20] = true;
				this.rarity = 2;
			}
			else if (this.type == 173)
			{
				this.npcSlots = 1f;
				this.name = "Crimera";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 174)
			{
				this.npcSlots = 1f;
				this.name = "Herpling";
				this.width = 52;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 450f;
			}
			else if (this.type == 175)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Angry Trapper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 100;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.25f;
				this.soundKilled = 1;
				this.value = 650f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 176)
			{
				this.name = "Moss Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 177)
			{
				this.npcSlots = 1f;
				this.name = "Derpling";
				this.width = 58;
				this.height = 44;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 300;
				this.soundHit = 22;
				this.soundKilled = 25;
				this.knockBackResist = 0.5f;
				this.value = 500f;
			}
			else if (this.type == 178)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Steampunker";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 179)
			{
				this.name = "Crimson Axe";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 180)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.value = 4000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 181)
			{
				this.name = "Face Monster";
				this.width = 18;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 182)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Floaty Gross";
				this.width = 24;
				this.height = 62;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 240;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 183)
			{
				this.name = "Crimslime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 60;
				this.defense = 26;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 184)
			{
				this.name = "Spiked Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 12;
				this.defense = 8;
				this.lifeMax = 60;
				this.scale = 1.1f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 185)
			{
				this.name = "Snow Flinx";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 1.1f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 186)
			{
				this.name = "Pincushion Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 187)
			{
				this.name = "Slimed Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 188)
			{
				this.name = "Swamp Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 189)
			{
				this.name = "Twiggy Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 190)
			{
				this.name = "Cataract Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 4;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 191)
			{
				this.name = "Sleepy Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 192)
			{
				this.name = "Dialated Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 193)
			{
				this.name = "Green Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 194)
			{
				this.name = "Purple Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 14;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 195)
			{
				this.name = "Lost Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 42;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 196)
			{
				this.name = "Nymph";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 16;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 10000f;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 197)
			{
				this.name = "Armored Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 28;
				this.lifeMax = 280;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 198)
			{
				this.name = "Lihzahrd";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 26;
				this.soundKilled = 29;
				this.knockBackResist = 0.4f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 199)
			{
				this.name = "Lihzahrd";
				this.width = 42;
				this.height = 30;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 26;
				this.soundKilled = 29;
				this.knockBackResist = 0f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 200)
			{
				this.name = "Female Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 201)
			{
				this.name = "Headache Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 202)
			{
				this.name = "Misassembled Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 203)
			{
				this.name = "Pantless Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 204)
			{
				this.name = "Spiked Jungle Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 28;
				this.defense = 8;
				this.lifeMax = 65;
				this.scale = 1.15f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 300f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 205)
			{
				this.name = "Moth";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 28;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.knockBackResist = 0.4f;
				this.soundKilled = 1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.rarity = 2;
			}
			else if (this.type == 206)
			{
				this.name = "Icy Merman";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 280;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 500f;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 207)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dye Trader";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 208)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Party Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 209)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Cyborg";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 210)
			{
				this.name = "Bee";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 5;
				this.damage = 20;
				this.defense = 5;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 211)
			{
				this.name = "Bee";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 5;
				this.damage = 15;
				this.defense = 2;
				this.lifeMax = 10;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 212)
			{
				this.name = "Pirate Deckhand";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 17;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 700f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 213)
			{
				this.name = "Pirate Corsair";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 22;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 214)
			{
				this.name = "Pirate Deadeye";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 225;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 215)
			{
				this.name = "Pirate Crossbower";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 20;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.35f;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 216)
			{
				this.name = "Pirate Captain";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 3000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 217)
			{
				this.name = "Cochineal Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 218)
			{
				this.name = "Cyan Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 219)
			{
				this.name = "Lac Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 220)
			{
				this.name = "Sea Snail";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 221)
			{
				this.noGravity = true;
				this.name = "Squid";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 222)
			{
				this.name = "Queen Bee";
				this.width = 66;
				this.height = 66;
				this.aiStyle = 43;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 3400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 100000f;
				this.npcSlots = 7f;
			}
			else if (this.type == 223)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 224)
			{
				this.name = "Flying Fish";
				this.width = 32;
				this.height = 18;
				this.aiStyle = 44;
				this.damage = 9;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			if (this.type == 225)
			{
				this.name = "Umbrella Slime";
				this.width = 38;
				this.height = 26;
				this.aiStyle = 1;
				this.damage = 10;
				this.defense = 5;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.75f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 226)
			{
				this.npcSlots = 0.5f;
				this.name = "Flying Snake";
				this.width = 34;
				this.height = 50;
				this.aiStyle = 14;
				this.damage = 85;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 23;
				this.knockBackResist = 0.65f;
				this.soundKilled = 26;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 227)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Painter";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 228)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Witch Doctor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 229)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Pirate";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 230)
			{
				this.name = "Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 261;
			}
			else if (this.type == 231)
			{
				this.name = "Hornet Fatty";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 16;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.3f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 232)
			{
				this.name = "Hornet Honey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 233)
			{
				this.name = "Hornet Leafy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.45f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 234)
			{
				this.name = "Hornet Spikey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 32;
				this.defense = 6;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.55f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 235)
			{
				this.name = "Hornet Stingy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 34;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 236)
			{
				this.name = "Jungle Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 237)
			{
				this.noGravity = true;
				this.name = "Jungle Creeper";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 239)
			{
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 20;
				this.soundKilled = 23;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 240)
			{
				this.noGravity = true;
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 20;
				this.soundKilled = 23;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 241)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Blood Feeder";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.value = 350f;
			}
			else if (this.type == 242)
			{
				this.noGravity = true;
				this.name = "Blood Jelly";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 243)
			{
				this.name = "Ice Golem";
				this.width = 30;
				this.height = 114;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 4000;
				this.soundHit = 5;
				this.soundKilled = 7;
				this.knockBackResist = 0.05f;
				this.value = (float)Item.buyPrice(0, 1, 50, 0);
				this.buffImmune[20] = true;
				this.buffImmune[44] = true;
				this.coldDamage = true;
				this.rarity = 2;
			}
			else if (this.type == 244)
			{
				this.name = "Rainbow Slime";
				this.width = 60;
				this.height = 42;
				this.aiStyle = 1;
				this.damage = 85;
				this.defense = 26;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 245)
			{
				this.name = "Golem";
				this.width = 140;
				this.height = 140;
				this.aiStyle = 45;
				this.damage = 72;
				this.defense = 26;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.value = (float)Item.buyPrice(0, 15, 0, 0);
				this.alpha = 255;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 246)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 46;
				this.damage = 64;
				this.defense = 20;
				this.lifeMax = 16000;
				this.soundHit = 4;
				this.soundKilled = 0;
				this.knockBackResist = 0f;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 247 || this.type == 248)
			{
				this.noGravity = true;
				this.name = "Golem Fist";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 47;
				this.damage = 59;
				this.defense = 28;
				this.lifeMax = 7000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 249)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 48;
				this.damage = 80;
				this.defense = 32;
				this.lifeMax = 11000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 250)
			{
				this.name = "Angry Nimbus";
				this.width = 34;
				this.height = 26;
				this.aiStyle = 49;
				this.damage = 50;
				this.defense = 24;
				this.lifeMax = 300;
				this.soundHit = 30;
				this.soundKilled = 33;
				this.knockBackResist = 0.3f;
				this.value = 300f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 251)
			{
				this.name = "Eyezor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 30;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = (float)Item.buyPrice(0, 0, 50, 0);
				this.buffImmune[31] = false;
			}
			else if (this.type == 252)
			{
				this.noGravity = true;
				this.npcSlots = 0.5f;
				this.name = "Parrot";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 80;
				this.defense = 12;
				this.lifeMax = 100;
				this.soundHit = 46;
				this.knockBackResist = 0.7f;
				this.soundKilled = 48;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 254)
			{
				this.name = "Spore Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 255)
			{
				this.name = "Spore Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 256)
			{
				this.noGravity = true;
				this.name = "Fungo Fish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 90;
				this.defense = 20;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 1200f;
				this.alpha = 20;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 257)
			{
				this.name = "Anomura Fungus";
				this.width = 44;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 24;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1300f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 258)
			{
				this.name = "Mushi Ladybug";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 45;
				this.soundKilled = 47;
				this.knockBackResist = 0.3f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 259)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Fungi Bulb";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 13;
				this.damage = 24;
				this.defense = 4;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 260)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Giant Fungi Bulb";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 1250f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 261)
			{
				this.name = "Fungi Spore";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.damage = 80;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 262)
			{
				this.noTileCollide = true;
				this.name = "Plantera";
				this.width = 86;
				this.height = 86;
				this.aiStyle = 51;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 30000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = (float)Item.buyPrice(0, 15, 0, 0);
				this.noGravity = true;
				this.boss = true;
				this.npcSlots = 16f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 263)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Plantera's Hook";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 52;
				this.damage = 60;
				this.defense = 24;
				this.lifeMax = 4000;
				this.dontTakeDamage = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.buffImmune[20] = true;
			}
			else if (this.type == 264)
			{
				this.name = "Plantera's Tentacle";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 53;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 265)
			{
				this.name = "Spore";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 50;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 266)
			{
				this.name = "Brain of Cthulhu";
				this.dontTakeDamage = true;
				this.width = 160;
				this.height = 110;
				this.aiStyle = 54;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 1000;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 50000f;
				this.npcSlots = 6f;
			}
			else if (this.type == 267)
			{
				this.name = "Creeper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 55;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 268)
			{
				this.noGravity = true;
				this.name = "Ichor Sticker";
				this.width = 28;
				this.height = 56;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 340;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.6f;
				this.value = 450f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 269)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 270)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 50;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 271)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 272)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.35f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 273)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 274)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 350;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 275)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 276)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 85;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 277)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 32;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 278)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 48;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 279)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 280)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 34;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 281)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 282)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 28;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 283)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 300;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 284)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 24;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 285)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 286)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 60;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 287)
			{
				this.name = "Bone Lee";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 42;
				this.lifeMax = 1000;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 288)
			{
				this.name = "Dungeon Spirit";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 56;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 200;
				this.knockBackResist = 0.2f;
				this.soundHit = 36;
				this.soundKilled = 39;
				this.value = 500f;
				this.noTileCollide = true;
				this.noGravity = true;
				flag = true;
			}
			else if (this.type == 289)
			{
				this.name = "Giant Cursed Skull";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 10;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 290)
			{
				this.name = "Paladin";
				this.width = 34;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 5000;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
				this.rarity = 1;
			}
			else if (this.type == 291)
			{
				this.name = "Skeleton Sniper";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 292)
			{
				this.name = "Tactical Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 293)
			{
				this.name = "Skeleton Commando";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 294)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 34;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.9f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 295)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 296)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 299)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2018;
			}
			else if (this.type == 300)
			{
				this.name = "Mouse";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 4;
				this.npcSlots = 0.25f;
				this.catchItem = 2003;
			}
			else if (this.type == 301)
			{
				this.name = "Raven";
				this.width = 36;
				this.height = 26;
				this.aiStyle = 17;
				this.damage = 12;
				this.defense = 2;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.value = 50f;
			}
			if (this.type == 302)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 304)
			{
				this.name = "Hoppin' Jack";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 80;
				this.defense = 20;
				this.lifeMax = 175;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.5f;
				this.npcSlots = 0.3f;
			}
			else if (this.type >= 305 && this.type <= 314)
			{
				this.name = "Scarecrow";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 305 || this.type == 310)
				{
					this.damage = 60;
					this.defense = 18;
					this.lifeMax = 500;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 306 || this.type == 311)
				{
					this.damage = 52;
					this.defense = 14;
					this.lifeMax = 400;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 307 || this.type == 312)
				{
					this.damage = 78;
					this.defense = 16;
					this.lifeMax = 600;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
				else if (this.type == 308 || this.type == 313)
				{
					this.damage = 66;
					this.defense = 14;
					this.lifeMax = 650;
					this.knockBackResist = 0.35f;
					this.scale = 0.95f;
				}
				else if (this.type == 309 || this.type == 314)
				{
					this.damage = 52;
					this.defense = 26;
					this.lifeMax = 450;
					this.knockBackResist = 0.5f;
					this.scale = 1.1f;
				}
			}
			else if (this.type == 315)
			{
				this.name = "Headless Horseman";
				this.width = 74;
				this.height = 70;
				this.aiStyle = 26;
				this.damage = 130;
				this.defense = 40;
				this.lifeMax = 10000;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 316)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Ghost";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 40;
				this.defense = 14;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 700f;
				flag = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 317)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 318)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 319)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 85f;
				this.buffImmune[31] = false;
				this.scale = 0.9f;
			}
			else if (this.type == 320)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 105f;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 321)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 120f;
				this.buffImmune[31] = false;
				this.scale = 1.1f;
			}
			else if (this.type == 322)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 23;
				this.defense = 0;
				this.lifeMax = 115;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 323)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 324)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 325)
			{
				this.name = "Mourning Wood";
				this.width = 164;
				this.height = 154;
				this.aiStyle = 57;
				this.damage = 120;
				this.defense = 28;
				this.lifeMax = 12000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 326)
			{
				this.name = "Splinterling";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 327)
			{
				this.name = "Pumpking";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 58;
				this.damage = 50;
				this.defense = 36;
				this.lifeMax = 22000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 328)
			{
				this.name = "Pumpking";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 59;
				this.damage = 65;
				this.defense = 14;
				this.lifeMax = 5000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 329)
			{
				this.name = "Hellhound";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 38;
				this.lifeMax = 1200;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.3f;
				this.value = 3000f;
				flag = true;
			}
			else if (this.type == 330)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Poltergeist";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 90;
				this.defense = 44;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 4500f;
				flag = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 331)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 332)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			if (this.type == 333)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 334)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 6;
				this.defense = 2;
				this.lifeMax = 23;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 0.9f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 335)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 3;
				this.lifeMax = 29;
				this.scale = 1.05f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 336)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 5;
				this.defense = 1;
				this.lifeMax = 22;
				this.scale = 0.85f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type >= 338 && this.type <= 340)
			{
				this.name = "Zombie Elf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 338)
				{
					this.damage = 65;
					this.defense = 18;
					this.lifeMax = 600;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 339)
				{
					this.damage = 52;
					this.defense = 24;
					this.lifeMax = 700;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 340)
				{
					this.damage = 78;
					this.defense = 14;
					this.lifeMax = 500;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
			}
			else if (this.type == 341)
			{
				this.name = "Present Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 342)
			{
				this.name = "Gingerbread Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 26;
				this.lifeMax = 750;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.value = 1800f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 343)
			{
				this.name = "Yeti";
				this.width = 38;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 140;
				this.defense = 50;
				this.lifeMax = 3500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 3000f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 344)
			{
				this.name = "Everscream";
				this.width = 172;
				this.height = 130;
				this.aiStyle = 57;
				this.damage = 110;
				this.defense = 38;
				this.lifeMax = 13000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 345)
			{
				this.name = "Ice Queen";
				this.width = 130;
				this.height = 140;
				this.aiStyle = 60;
				this.damage = 120;
				this.defense = 38;
				this.lifeMax = 34000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 5f;
				this.coldDamage = true;
			}
			else if (this.type == 346)
			{
				this.name = "Santa-NK1";
				this.width = 112;
				this.height = 140;
				this.aiStyle = 61;
				this.damage = 120;
				this.defense = 56;
				this.lifeMax = 18000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 4f;
			}
			else if (this.type == 347)
			{
				this.name = "Elf Copter";
				this.width = 50;
				this.height = 50;
				this.aiStyle = 62;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 1200;
				this.soundHit = 4;
				this.knockBackResist = 0.4f;
				this.soundKilled = 14;
				this.value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 348)
			{
				this.name = "Nutcracker";
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 1800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 349)
			{
				this.name = "Nutcracker";
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 42;
				this.lifeMax = 1800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 350)
			{
				this.name = "Elf Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 900;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.45f;
				this.value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 351)
			{
				this.name = "Krampus";
				this.width = 18;
				this.height = 90;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 2500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.value = 3000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 1.75f;
			}
			else if (this.type == 352)
			{
				this.name = "Flocko";
				this.width = 54;
				this.height = 54;
				this.aiStyle = 63;
				this.damage = 75;
				this.defense = 8;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.npcSlots = 2f;
				this.coldDamage = true;
			}
			else if (this.type == 353)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Stylist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 354)
			{
				this.friendly = true;
				this.name = "Webbed Stylist";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 355)
			{
				this.name = "Firefly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 1992;
			}
			else if (this.type == 356)
			{
				this.name = "Butterfly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 1994;
			}
			else if (this.type == 357)
			{
				this.name = "Worm";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = 2002;
				this.friendly = true;
			}
			else if (this.type == 358)
			{
				this.name = "Lightning Bug";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 2004;
			}
			else if (this.type == 359)
			{
				this.name = "Snail";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2006;
			}
			else if (this.type == 360)
			{
				this.name = "Glowing Snail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2007;
			}
			else if (this.type == 361)
			{
				this.name = "Frog";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2121;
			}
			else if (this.type == 362)
			{
				this.name = "Duck";
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2122;
			}
			else if (this.type == 363)
			{
				this.name = "Duck";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2122;
			}
			else if (this.type == 364)
			{
				this.name = "Duck";
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2123;
			}
			else if (this.type == 365)
			{
				this.name = "Duck";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2123;
			}
			else if (this.type == 366 || this.type == 367)
			{
				this.name = "Scorpion";
				this.width = 26;
				this.height = 18;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = (short)(2156 + this.type - 366);
			}
			else if (this.type == 368)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Travelling Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 369)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Angler";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 370)
			{
				this.name = "Duke Fishron";
				this.width = 150;
				this.height = 100;
				this.aiStyle = 69;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 50000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.soundHit = 14;
				this.soundKilled = 20;
				this.value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = true;
				this.buffImmune[44] = true;
			}
			else if (this.type == 371)
			{
				this.name = "Detonating Bubble";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 70;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 372)
			{
				this.noGravity = true;
				this.name = "Sharkron";
				this.width = 120;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 100;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 373)
			{
				this.noGravity = true;
				this.name = "Sharkron2";
				this.displayName = "Sharkron";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 120;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 374)
			{
				this.name = "Truffle Worm";
				this.width = 20;
				this.height = 10;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
				this.rarity = 4;
			}
			else if (this.type == 375)
			{
				this.displayName = "Truffle Worm";
				this.name = "Truffle Worm Digger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 6;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
			}
			else if (this.type == 376)
			{
				this.friendly = true;
				this.name = "Sleeping Angler";
				this.width = 34;
				this.height = 8;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 377)
			{
				this.name = "Grasshopper";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.friendly = true;
				this.catchItem = 2740;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 378)
			{
				this.npcSlots = 1f;
				this.name = "Chattering Teeth Bomb";
				this.width = 20;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 450f;
			}
			else if (this.type >= 379 && this.type <= 380)
			{
				this.name = "Lunatic Cultist Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.55f;
				this.value = 1000f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.netAlways = true;
				this.chaseable = false;
			}
			else if (this.type >= 381 && this.type <= 382)
			{
				this.name = "Martian Ranger";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 25;
				this.lifeMax = 350;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.35f;
				this.value = 1000f;
			}
			else if (this.type == 383)
			{
				this.name = "Martian Officer";
				this.lifeMax = 300;
				this.defense = 50;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.value = 1200f;
				this.knockBackResist = 0.25f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 384)
			{
				this.name = "Bubble Shield";
				this.lifeMax = 1000;
				this.width = 18;
				this.defense = 20;
				this.height = 40;
				this.aiStyle = 72;
				this.soundHit = 1;
				this.soundKilled = 1;
				flag = true;
				this.npcSlots = 0f;
				this.noTileCollide = true;
				this.canGhostHeal = false;
			}
			else if (this.type == 385)
			{
				this.name = "Martian Grunty";
				this.lifeMax = 750;
				this.defense = 30;
				this.damage = 80;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.value = 600f;
				this.knockBackResist = 0f;
				this.npcSlots = 0.75f;
			}
			else if (this.type == 386)
			{
				this.name = "Martian Engineer";
				this.lifeMax = 400;
				this.defense = 34;
				this.damage = 40;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.value = 1200f;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 387)
			{
				this.name = "Tesla Turret";
				this.width = 20;
				this.height = 50;
				this.aiStyle = 73;
				this.damage = 10;
				this.defense = 40;
				this.lifeMax = 200;
				this.soundHit = 53;
				this.soundKilled = 56;
				this.knockBackResist = 0f;
				this.buffImmune[31] = true;
				this.canGhostHeal = false;
			}
			else if (this.type == 388)
			{
				this.name = "Martian Drone";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 74;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 300;
				this.soundHit = 42;
				this.knockBackResist = 0.4f;
				this.soundKilled = 44;
				this.value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
				this.canGhostHeal = false;
			}
			else if (this.type == 389)
			{
				this.name = "Gigazapper";
				this.lifeMax = 600;
				this.defense = 38;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 39;
				this.soundKilled = 57;
				this.value = 1200f;
				this.npcSlots = 0.5f;
				this.knockBackResist = 0.3f;
			}
			else if (this.type == 390)
			{
				this.name = "Scutlix Gunner";
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 350;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 1200f;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 391)
			{
				this.name = "Scutlix";
				this.lifeMax = 600;
				this.defense = 30;
				this.damage = 85;
				this.width = 60;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 51;
				this.soundKilled = 54;
				this.value = 1200f;
				this.npcSlots = 0.5f;
				this.knockBackResist = 0.1f;
			}
			else if (this.type == 392)
			{
				this.name = "Martian Saucer";
				this.lifeMax = 100;
				this.defense = 100;
				this.damage = 50;
				this.width = 150;
				this.height = 80;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 393)
			{
				this.name = "Saucer Turret";
				this.lifeMax = 5000;
				this.defense = 20;
				this.damage = 60;
				this.width = 40;
				this.height = 16;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 394)
			{
				this.name = "Saucer Cannon";
				this.lifeMax = 3500;
				this.defense = 20;
				this.damage = 60;
				this.width = 46;
				this.height = 36;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 395)
			{
				this.name = "Saucer Core";
				this.lifeMax = 10000;
				this.defense = 0;
				this.damage = 80;
				this.width = 46;
				this.height = 36;
				this.aiStyle = 76;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.boss = true;
				flag = true;
				this.netAlways = true;
			}
			else if (this.type == 399)
			{
				this.name = "Martian Probe";
				this.defense = 5;
				this.damage = 5;
				this.lifeMax = 500;
				this.aiStyle = 80;
				this.width = 42;
				this.height = 72;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.timeLeft = NPC.activeTime * 30;
				this.chaseable = false;
				this.netAlways = true;
				this.rarity = 1;
			}
			else if (this.type == 396)
			{
				this.name = "Moon Lord Head";
				this.lifeMax = 45000;
				this.defense = 50;
				this.damage = 0;
				this.width = 38;
				this.height = 56;
				this.aiStyle = 79;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.boss = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 397)
			{
				this.name = "Moon Lord Hand";
				this.lifeMax = 25000;
				this.defense = 40;
				this.damage = 0;
				this.width = 46;
				this.height = 66;
				this.aiStyle = 78;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.boss = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 398)
			{
				this.name = "Moon Lord Core";
				this.lifeMax = 50000;
				this.defense = 70;
				this.damage = 0;
				this.width = 46;
				this.height = 66;
				this.aiStyle = 77;
				this.soundHit = 57;
				this.soundKilled = 0;
				this.value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.boss = true;
				this.behindTiles = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type == 400)
			{
				this.name = "True Eye of Cthulhu";
				this.defense = 0;
				this.damage = 60;
				this.lifeMax = 100;
				this.aiStyle = 81;
				this.width = 60;
				this.height = 60;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.noTileCollide = true;
				this.netAlways = true;
			}
			else if (this.type == 401)
			{
				this.name = "Moon Leech Clot";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 82;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.hide = true;
			}
			else if (this.type == 437)
			{
				this.name = "Lunar Tablet";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 54;
				this.height = 54;
				this.aiStyle = 83;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.netAlways = true;
			}
			else if (this.type == 438)
			{
				this.name = "Lunar Devote";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 22;
				this.height = 40;
				this.aiStyle = 83;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.lavaImmune = true;
				this.netAlways = true;
				this.chaseable = false;
			}
			else if (this.type == 439)
			{
				this.name = "Ancient Cultist";
				this.width = 24;
				this.height = 50;
				this.aiStyle = 84;
				this.damage = 50;
				this.defense = 42;
				this.lifeMax = 32000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.soundHit = 55;
				this.soundKilled = 59;
				this.value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				flag = true;
			}
			else if (this.type == 440)
			{
				this.name = "Ancient Cultist";
				this.width = 24;
				this.height = 50;
				this.aiStyle = 84;
				this.damage = 0;
				this.defense = 35;
				this.lifeMax = 10000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 0f;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				flag = true;
				this.chaseable = false;
			}
			else if (this.type == 442)
			{
				this.name = "Gold Bird";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.catchItem = 2889;
				this.npcSlots = 0.4f;
				this.rarity = 3;
			}
			else if (this.type == 443)
			{
				this.name = "Gold Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2890;
				this.rarity = 3;
			}
			else if (this.type == 444)
			{
				this.name = "Gold Butterfly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 2891;
				this.rarity = 3;
			}
			else if (this.type == 445)
			{
				this.name = "Gold Frog";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2892;
				this.rarity = 3;
			}
			else if (this.type == 446)
			{
				this.name = "Gold Grasshopper";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.friendly = true;
				this.catchItem = 2893;
				this.npcSlots = 0.1f;
				this.rarity = 3;
			}
			else if (this.type == 447)
			{
				this.name = "Gold Mouse";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 4;
				this.npcSlots = 0.25f;
				this.catchItem = 2894;
				this.rarity = 3;
			}
			else if (this.type == 448)
			{
				this.name = "Gold Worm";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = 2895;
				this.friendly = true;
				this.rarity = 3;
			}
			else if (this.type == 449)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 450)
			{
				this.name = "Headache Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 451)
			{
				this.name = "Misassembled Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 452)
			{
				this.name = "Pantless Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 453)
			{
				this.friendly = true;
				this.name = "Skeleton Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.npcSlots = 7f;
			}
			else if (this.type == 454)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.name = "Phantasm Dragon Head";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
			}
			else if (this.type == 459)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.name = "Phantasm Dragon Tail";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
				this.dontCountMe = true;
			}
			else if (this.type == 455 || this.type == 456 || this.type == 457 || this.type == 458)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.name = "Phantasm Dragon Body";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
				this.dontCountMe = true;
			}
			else if (this.type == 464)
			{
				this.name = "Crimson Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 21;
				this.defense = 5;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 465)
			{
				this.noGravity = true;
				this.name = "Crimson Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 31;
				this.defense = 7;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 470)
			{
				this.name = "Crimtane Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 21;
				this.defense = 5;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				this.name = "Big Mimic";
				this.width = 28;
				this.height = 44;
				this.aiStyle = 87;
				this.damage = 90;
				this.defense = 34;
				this.lifeMax = 3500;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 30000f;
				this.knockBackResist = 0.1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.rarity = 2;
			}
			else if (this.type == 480)
			{
				this.name = "Medusa";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
			}
			else if (this.type == 481)
			{
				this.name = "Hoplite";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 12;
				this.lifeMax = 80;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 300f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 482)
			{
				this.name = "Grolem";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 18;
				this.lifeMax = 110;
				this.soundHit = 41;
				this.soundKilled = 44;
				this.knockBackResist = 0.35f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 483)
			{
				this.npcSlots = 0.5f;
				this.name = "Grelimental";
				this.width = 20;
				this.height = 30;
				this.aiStyle = 91;
				this.damage = 28;
				this.defense = 16;
				this.lifeMax = 50;
				this.soundHit = 7;
				this.knockBackResist = 0.6f;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type >= 484 && this.type <= 487)
			{
				this.name = "Grub";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = (short)(3191 + this.type - 484);
				this.friendly = true;
			}
			else if (this.type == 488)
			{
				this.name = "Target Dummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 92;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 1000;
				this.soundHit = 15;
				this.soundKilled = 2;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.immortal = true;
				this.netAlways = true;
			}
			else if (this.type == 489)
			{
				this.name = "Blood Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 75;
				this.soundHit = 18;
				this.soundKilled = 21;
				this.knockBackResist = 0.4f;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 490)
			{
				this.noGravity = true;
				this.name = "Drippler";
				this.width = 28;
				this.height = 30;
				this.aiStyle = 22;
				this.damage = 28;
				this.defense = 14;
				this.lifeMax = 50;
				this.soundHit = 19;
				this.knockBackResist = 0.6f;
				this.soundKilled = 22;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 491)
			{
				this.noGravity = true;
				this.name = "Flying Dutchman";
				this.width = 350;
				this.height = 120;
				this.aiStyle = 93;
				this.damage = 0;
				this.defense = 100;
				this.lifeMax = 50;
				this.soundHit = 19;
				this.knockBackResist = 0f;
				this.soundKilled = 22;
				this.value = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.netAlways = true;
			}
			else if (this.type == 492)
			{
				this.name = "Dutchman Cannon";
				this.lifeMax = 2000;
				this.defense = 20;
				this.damage = 30;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.hide = true;
				this.netAlways = true;
			}
			else if (this.type >= 494 && this.type <= 495)
			{
				this.name = "Crawdad";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 6;
				this.lifeMax = 50;
				this.soundHit = 33;
				this.soundKilled = 36;
				this.value = 120f;
			}
			else if (this.type >= 496 && this.type <= 497)
			{
				this.name = "Giant Shelly";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 39;
				this.damage = 16;
				this.defense = 12;
				this.lifeMax = 50;
				this.soundHit = 38;
				this.soundKilled = 41;
				this.knockBackResist = 0.75f;
				this.value = 120f;
			}
			else if (this.type >= 498 && this.type <= 506)
			{
				this.name = "Salamander";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.soundHit = 50;
				this.soundKilled = 53;
				this.knockBackResist = 0.45f;
				this.value = 120f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 441)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Tax Collector";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 513)
			{
				this.displayName = "Tomb Crawler";
				this.npcSlots = 4f;
				this.name = "Tomb Crawler Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 34;
				this.defense = 0;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
			}
			else if (this.type == 514)
			{
				this.displayName = "Tomb Crawler";
				this.name = "Tomb Crawler Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 12;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 515)
			{
				this.displayName = "Tomb Crawler";
				this.name = "Tomb Crawler Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 20;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 510)
			{
				this.displayName = "Dune Splicer";
				this.npcSlots = 5f;
				this.name = "Dune Splicer Head";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.damage = 58;
				this.defense = 0;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
			}
			else if (this.type == 511)
			{
				this.displayName = "Dune Splicer";
				this.name = "Dune Splicer Body";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 54;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 512)
			{
				this.displayName = "Dune Splicer";
				this.name = "Dune Splicer Tail";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 50;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 508)
			{
				this.name = "Antlion Charger";
				this.width = 33;
				this.height = 31;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 16;
				this.lifeMax = 70;
				this.soundHit = 31;
				this.soundKilled = 34;
				this.knockBackResist = 0.2f;
				this.value = 80f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.8f;
			}
			else if (this.type == 509)
			{
				this.name = "Antlion Swarmer";
				this.width = 40;
				this.height = 31;
				this.aiStyle = 44;
				this.damage = 30;
				this.defense = 12;
				this.lifeMax = 50;
				this.knockBackResist = 0.6f;
				this.soundHit = 32;
				this.soundKilled = 35;
				this.value = 90f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.8f;
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				this.name = "Ghoul";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 26;
				this.lifeMax = 180;
				this.soundHit = 37;
				this.soundKilled = 40;
				this.knockBackResist = 0.6f;
				this.value = 500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				switch (this.type - 524)
				{
				case 1:
					this.lifeMax += 70;
					this.defense += 4;
					this.damage += 10;
					this.knockBackResist -= 0.1f;
					this.value += 150f;
					break;
				case 2:
					this.lifeMax += 40;
					this.defense += 6;
					this.damage += 14;
					this.knockBackResist -= 0.1f;
					this.value += 150f;
					break;
				case 3:
					this.lifeMax += 120;
					this.defense += 6;
					this.damage += 4;
					this.knockBackResist -= 0.2f;
					this.value += 250f;
					break;
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				this.name = "Lamia";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 52;
				this.defense = 28;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.35f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 530)
			{
				this.name = "Ravager Scorpion";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 66;
				this.defense = 24;
				this.lifeMax = 320;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.value = 600f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
				this.buffImmune[70] = true;
			}
			else if (this.type == 531)
			{
				this.noGravity = true;
				this.name = "Ravager Scorpion";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 40;
				this.damage = 66;
				this.defense = 24;
				this.lifeMax = 320;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.value = 600f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
				this.buffImmune[70] = true;
			}
			else if (this.type == 532)
			{
				this.name = "Basilisk";
				this.width = 32;
				this.height = 31;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 270;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 800f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.75f;
			}
			else if (this.type == 533)
			{
				this.name = "Desert Spirit";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				this.value = 1200f;
				this.npcSlots = 2f;
				flag = true;
			}
			else if (this.type == 493)
			{
				this.name = "Stardust Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 402)
			{
				this.displayName = "Milkyway Weaver";
				this.noTileCollide = true;
				this.npcSlots = 1f;
				this.name = "Milkyway Weaver";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 1200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 0f;
				this.scale = 1f;
				flag = true;
			}
			else if (this.type == 405)
			{
				this.name = "Star Cell";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 85;
				this.damage = 120;
				this.defense = 50;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noGravity = true;
				this.buffImmune[31] = true;
				this.npcSlots = 2f;
			}
			else if (this.type == 406)
			{
				this.name = "Star Cell";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 95;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 411)
			{
				this.name = "Stardust Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 409)
			{
				this.name = "Twinkle Popper";
				this.width = 34;
				this.height = 42;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 800;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
				this.npcSlots = 3f;
			}
			else if (this.type == 410)
			{
				this.name = "Twinkle";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.3f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 407)
			{
				this.name = "Flow Invader";
				this.width = 40;
				this.height = 60;
				this.aiStyle = 96;
				this.damage = 70;
				this.defense = 38;
				this.lifeMax = 1500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.03f;
				this.buffImmune[31] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 507)
			{
				this.name = "Nebula Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 423)
			{
				this.name = "Nebula Beast";
				this.width = 50;
				this.height = 44;
				this.aiStyle = 26;
				this.damage = 90;
				this.defense = 46;
				this.lifeMax = 850;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
				flag = true;
				this.npcSlots = 1f;
			}
			else if (this.type == 421)
			{
				this.name = "Nebula Headcrab";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 85;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 330;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noGravity = true;
				this.buffImmune[31] = true;
				this.npcSlots = 1f;
			}
			else if (this.type == 424)
			{
				this.name = "Nebula Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.6f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 420)
			{
				this.name = "Nebula Floater";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 97;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 1300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 422)
			{
				this.name = "Vortex Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 425)
			{
				this.name = "Vortex Rifleman";
				this.width = 30;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 800;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 429)
			{
				this.name = "Vortex Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.6f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 428)
			{
				this.name = "Alien Larva";
				this.width = 24;
				this.height = 26;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 6;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
			}
			else if (this.type == 427)
			{
				this.name = "Alien Hornet";
				this.width = 40;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 426)
			{
				this.name = "Alien Queen";
				this.width = 50;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 44;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 517)
			{
				this.name = "Solar Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 412)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 150;
				this.defense = 1000;
				this.lifeMax = 10000;
				this.soundHit = 11;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.npcSlots = 2f;
			}
			else if (this.type == 413)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 100;
				this.defense = 1000;
				this.lifeMax = 10000;
				this.soundHit = 11;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontCountMe = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 414)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 10000;
				this.soundHit = 8;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontCountMe = true;
				this.takenDamageMultiplier = 10f;
				this.npcSlots = 0f;
			}
			else if (this.type == 415)
			{
				this.name = "Drakomire";
				this.lifeMax = 800;
				this.defense = 32;
				this.damage = 55;
				this.width = 60;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
			}
			else if (this.type == 416)
			{
				this.name = "Drakomire Rider";
				this.damage = 80;
				this.defense = 28;
				this.lifeMax = 800;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
			}
			else if (this.type == 518)
			{
				this.name = "Solar Spearman";
				this.lifeMax = 1000;
				this.defense = 28;
				this.damage = 80;
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 417)
			{
				this.npcSlots = 2f;
				this.name = "Sroller";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 7;
				this.knockBackResist = 0f;
				this.soundKilled = 5;
			}
			else if (this.type == 418)
			{
				this.name = "Corite";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 74;
				this.damage = 70;
				this.defense = 26;
				this.lifeMax = 600;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 419)
			{
				this.name = "Solar Solenian";
				this.lifeMax = 800;
				this.defense = 30;
				this.damage = 90;
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 516)
			{
				this.name = "Solar Flare";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 9;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = false;
				this.alpha = 0;
				this.knockBackResist = 0f;
			}
			else if (this.type == 519)
			{
				this.name = "Solar Goop";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 99;
				this.damage = 120;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = false;
				this.alpha = 0;
				this.knockBackResist = 0f;
			}
			else if (this.type == 162)
			{
				this.name = "Frankenstein";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 166)
			{
				this.name = "Swamp Thing";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 26;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 253)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Reaper";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 700;
				this.soundHit = 49;
				this.soundKilled = 51;
				this.alpha = 100;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.6f;
			}
			else if (this.type == 158)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 750;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 159)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 750;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 460)
			{
				this.name = "Butcher";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 700;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 461)
			{
				this.name = "Creature from the Deep";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
			}
			else if (this.type == 462)
			{
				this.name = "Fritz";
				this.width = 20;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 14;
				this.lifeMax = 270;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 600f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 463)
			{
				this.name = "Nailhead";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 34;
				this.lifeMax = 4000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.value = 3000f;
			}
			else if (this.type == 466)
			{
				this.name = "Psycho";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 550;
				this.soundHit = 48;
				this.soundKilled = 50;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
			}
			else if (this.type == 467)
			{
				this.name = "Deadly Sphere";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 85;
				this.damage = 100;
				this.defense = 80;
				this.lifeMax = 350;
				this.soundHit = 34;
				this.soundKilled = 37;
				this.value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
				this.noGravity = true;
			}
			else if (this.type == 469)
			{
				this.name = "The Possessed";
				this.width = 38;
				this.height = 26;
				this.aiStyle = 3;
				this.damage = 68;
				this.defense = 28;
				this.lifeMax = 600;
				this.soundHit = 47;
				this.soundKilled = 49;
				this.knockBackResist = 0.35f;
				this.value = 1300f;
			}
			else if (this.type == 468)
			{
				this.name = "Dr. Man Fly";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 24;
				this.lifeMax = 500;
				this.soundHit = 35;
				this.soundKilled = 38;
				this.knockBackResist = 0.6f;
				this.value = 1300f;
			}
			else if (this.type == 477)
			{
				this.noGravity = true;
				this.name = "Mothron";
				this.width = 80;
				this.height = 50;
				this.aiStyle = 88;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 6000;
				this.soundHit = 44;
				this.soundKilled = 46;
				this.value = 50000f;
				this.knockBackResist = 0.2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 478)
			{
				this.name = "Mothron Egg";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 89;
				this.damage = 0;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 0f;
				this.knockBackResist = 0.7f;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 479)
			{
				this.name = "Mothron Spawn";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 90;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 0f;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 26)
			{
				this.name = "Goblin Peon";
				this.scale = 0.9f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.8f;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 27)
			{
				this.name = "Goblin Thief";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 28)
			{
				this.name = "Goblin Warrior";
				this.scale = 1.1f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 29)
			{
				this.name = "Goblin Sorcerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.6f;
				this.value = 200f;
			}
			else if (this.type == 30)
			{
				this.name = "Chaos Ball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 100;
				this.knockBackResist = 0f;
			}
			else if (this.type == 111)
			{
				this.name = "Goblin Archer";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 471)
			{
				this.name = "Goblin Summoner";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 2000;
				this.soundHit = 40;
				this.soundKilled = 42;
				this.knockBackResist = 0.15f;
				this.value = 5000f;
				flag = true;
			}
			else if (this.type == 472)
			{
				this.name = "Shadowflame Apparition";
				this.width = 40;
				this.height = 24;
				this.aiStyle = 86;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 52;
				this.soundKilled = 55;
				this.knockBackResist = 0f;
				this.value = 0f;
				flag = true;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 520)
			{
				this.name = "Martian Walker";
				this.width = 34;
				this.height = 110;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 40;
				this.lifeMax = 2000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 521)
			{
				this.name = "Ancient Vision";
				this.width = 60;
				this.height = 60;
				this.aiStyle = 86;
				this.damage = 90;
				this.defense = 30;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 522)
			{
				this.name = "Ancient Light";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 100;
				this.damage = 120;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 0;
				this.knockBackResist = 0f;
				this.chaseable = false;
			}
			else if (this.type == 523)
			{
				this.name = "Ending's Prophecy";
				this.width = 42;
				this.height = 42;
				this.aiStyle = 101;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 0;
				this.knockBackResist = 0f;
				this.chaseable = false;
				this.alpha = 255;
				this.canGhostHeal = false;
			}
			else if (this.type == 534)
			{
				this.name = "Tortured Soul";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 0f;
				this.buffImmune[31] = false;
				this.lavaImmune = true;
				this.netAlways = true;
				this.rarity = 1;
			}
			else if (this.type == 535)
			{
				this.name = "Spiked Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 14;
				this.defense = 5;
				this.lifeMax = 50;
				this.scale = 1.1f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 0;
				this.value = 40f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 536)
			{
				this.name = "The Bride";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 537)
			{
				this.npcSlots = 2f;
				this.name = "Sand Slime";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 18;
				this.defense = 5;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.color = new Color(255, 250, 0, 0) * 0.2f;
				this.value = 75f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 538)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 3563;
			}
			else if (this.type == 539)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 3564;
				this.rarity = 3;
			}
			if (flag)
			{
				for (int num2 = 0; num2 < 191; num2++)
				{
					this.buffImmune[num2] = true;
				}
			}
			//We're the server, no need to check.
			/*if (Main.dedServ)
			{*/
				this.frame = default(Rectangle);
			/*}
			else if (Main.NPCLoaded[this.type])
			{
				this.frame = new Rectangle(0, 0, Main.npcTexture[this.type].Width, Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type]);
			}
			else
			{
				this.setFrameSize = true;
			}*/
			if (scaleOverride > 0f)
			{
				int num3 = (int)((float)this.width * this.scale);
				int num4 = (int)((float)this.height * this.scale);
				this.position.X = this.position.X + (float)(num3 / 2);
				this.position.Y = this.position.Y + (float)num4;
				this.scale = scaleOverride;
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
				if (this.height == 16 || this.height == 32)
				{
					this.height++;
				}
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)this.height;
			}
			else
			{
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
			}
			if (this.buffImmune[20])
			{
				this.buffImmune[70] = true;
			}
			if (this.buffImmune[39])
			{
				this.buffImmune[153] = true;
			}
			this.life = this.lifeMax;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			this.netID = this.type;
			this.displayName = Lang.npcName(this.netID, false);
			if (Main.expertMode)
			{
				this.scaleStats();
			}
			ServerApi.Hooks.InvokeNpcSetDefaultsInt(ref Type, this);

		}
		public static void setWorldMonsters()
		{
			Random random = new Random(Main.worldID);
			int num = random.Next(3);
			int num2 = random.Next(3);
			while (num == num2)
			{
				num = random.Next(3);
			}
			for (int i = 0; i < 2; i++)
			{
				int num3 = num;
				if (i == 1)
				{
					num3 = num2;
				}
				for (int j = 0; j < 3; j++)
				{
					if (num3 == 0)
					{
						NPC.cavernMonsterType[i, j] = random.Next(494, 496);
					}
					else if (num3 == 1)
					{
						NPC.cavernMonsterType[i, j] = random.Next(496, 498);
					}
					else
					{
						NPC.cavernMonsterType[i, j] = random.Next(498, 507);
					}
				}
			}
		}
		public void scaleStats()
		{
			if (!Main.expertMode)
			{
				return;
			}
			if (this.friendly)
			{
				int arg_1C_0 = this.life;
			}
			if ((this.type < 0 || !NPCID.Sets.NeedsExpertScaling[this.type]) && (this.life <= 5 || this.damage == 0 || this.friendly || this.townNPC))
			{
				return;
			}
			bool flag = this.type >= 0 && NPCID.Sets.ProjectileNPC[this.type];
			if (this.type != 5 && (this.type < 13 || this.type > 15) && this.type != 267 && (this.type < 113 || this.type > 119) && Main.hardMode && !this.boss && this.lifeMax < 1000)
			{
				int num = this.damage + this.defense + this.lifeMax / 4;
				int num2 = 80;
				if (NPC.downedPlantBoss)
				{
					num2 += 20;
				}
				if (num < num2)
				{
					float num3 = (float)(num2 / num);
					this.damage = (int)((double)((float)this.damage * num3) * 0.9);
					if (!flag)
					{
						this.defense = (int)((float)this.defense * num3);
						this.lifeMax = (int)((double)((float)this.lifeMax * num3) * 1.1);
						this.value = (float)((int)((double)(this.value * num3) * 0.8));
					}
				}
			}
			if (!flag)
			{
				this.value = (float)((int)((double)this.value * 2.5));
				this.lifeMax = (int)((float)this.lifeMax * Main.expertLife);
			}
			this.damage = (int)((float)this.damage * Main.expertDamage);
			this.knockBackResist *= Main.expertKnockBack;
			int num4 = 0;
			float num5 = 1f;
			float num6 = 0.35f;
			if (Main.netMode != 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active)
					{
						num4++;
					}
				}
				for (int j = 1; j < num4; j++)
				{
					num5 += num6;
					num6 += (1f - num6) / 3f;
				}
			}
			if (num5 > 8f)
			{
				num5 = (num5 * 2f + 8f) / 3f;
			}
			if (num5 > 1000f)
			{
				num5 = 1000f;
			}
			if (this.type == 5)
			{
				this.lifeMax = (int)((float)this.lifeMax * 0.75f);
			}
			if (this.type == 4)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.65 * (double)num5);
			}
			if (this.type >= 13 && this.type <= 15)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (this.type == 13)
				{
					this.damage = (int)((double)this.damage * 1.1);
				}
				if (this.type == 14)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				if (this.type == 15)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				this.scale *= 1.2f;
				this.defense += 2;
			}
			if (this.type == 266)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)num5);
				this.damage = (int)((double)this.damage * 0.9);
				this.scale *= 1.05f;
			}
			if (this.type == 50)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 471)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)(num5 * 2f + 1f) / 3.0);
			}
			if (this.type == 472)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)(num5 + 1f) / 2.0);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 222)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 0.9);
			}
			if (this.type == 210 || this.type == 211)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75);
			}
			if (this.type == 35)
			{
				this.lifeMax = (int)((float)this.lifeMax * num5);
				this.damage = (int)((double)this.damage * 1.1);
			}
			else if (this.type == 36)
			{
				this.lifeMax = (int)((double)this.lifeMax * 1.3 * (double)num5);
				this.damage = (int)((double)this.damage * 1.1);
			}
			if (this.type == 113 || this.type == 114)
			{
				this.defense += 6;
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 1.5);
			}
			else if (this.type == 115)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (num4 > 1)
				{
					this.knockBackResist *= 1f - num6;
				}
				this.defense += 6;
			}
			else if (this.type == 116)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				if (num4 > 1)
				{
					this.knockBackResist *= 1f - num6;
				}
			}
			else if (this.type == 117 || this.type == 118 || this.type == 119)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.8);
			}
			if (this.type >= 134 && this.type <= 136)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				if (this.type == 134)
				{
					this.damage *= 2;
				}
				if (this.type == 135)
				{
					this.damage = (int)((double)this.damage * 0.85);
				}
				if (this.type == 136)
				{
					this.damage = (int)((double)this.damage * 0.85);
				}
				this.scale *= 1.05f;
			}
			else if (this.type == 139)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)(num5 * 2f + 1f) / 3.0);
				this.damage = (int)((double)this.damage * 0.8);
				this.scale *= 1.05f;
			}
			if (this.type >= 127 && this.type <= 131)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.85);
			}
			if (this.type >= 125 && this.type <= 126)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.85);
			}
			if (this.type >= 262 && this.type <= 262)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num5);
				this.damage = (int)((double)this.damage * 1.15);
			}
			if (this.type >= 245 && this.type <= 249)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 370)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.6 * (double)num5);
				this.damage = (int)((double)this.damage * 0.7);
			}
			else if (this.type == 371 || this.type == 372 || this.type == 373)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75);
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 439 || this.type == 440 || (this.type >= 454 && this.type <= 459) || this.type == 522 || this.type == 523)
			{
				this.lifeMax = (int)((float)this.lifeMax * 0.625f * num5);
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 397 || this.type == 396 || this.type == 398)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num5);
				this.damage = (int)((double)this.damage * 0.75);
			}
			switch (this.type)
			{
			case 305:
			case 306:
			case 307:
			case 308:
			case 309:
			case 310:
			case 311:
			case 312:
			case 313:
			case 314:
			case 315:
			case 326:
			case 329:
			case 330:
				this.lifeMax = (int)((double)this.lifeMax * 0.75);
				this.damage = (int)((double)this.damage * 0.75);
				break;
			case 325:
			case 327:
				this.lifeMax = (int)((double)this.lifeMax * 0.65);
				this.damage = (int)((double)this.damage * 0.75);
				break;
			}
			switch (this.type)
			{
			case 338:
			case 339:
			case 340:
			case 341:
			case 342:
			case 343:
			case 347:
			case 348:
			case 349:
			case 350:
				this.lifeMax = (int)((double)this.lifeMax * 0.75);
				this.damage = (int)((double)this.damage * 0.75);
				break;
			case 344:
			case 345:
			case 346:
				this.lifeMax = (int)((double)this.lifeMax * 0.65);
				this.damage = (int)((double)this.damage * 0.75);
				break;
			}
			this.defDefense = this.defense;
			this.defDamage = this.damage;
			this.life = this.lifeMax;
		}
		public void AI()
		{
			if (this.aiStyle == 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].talkNPC == this.whoAmI)
					{
						if (this.type == 105)
						{
							this.Transform(107);
							return;
						}
						if (this.type == 106)
						{
							this.Transform(108);
							return;
						}
						if (this.type == 123)
						{
							this.Transform(124);
							return;
						}
						if (this.type == 354)
						{
							this.Transform(353);
							return;
						}
						if (this.type == 376)
						{
							this.Transform(369);
							return;
						}
					}
				}
				if (this.type != 376)
				{
					this.TargetClosest(true);
					this.spriteDirection = this.direction;
				}
				if (this.type == 376)
				{
					if (this.wet || Main.tile[(int)(base.Center.X / 16f), (int)(this.position.Y - 4f) / 16].liquid > 0)
					{
						this.velocity.Y = -0.4f;
						int num = 1;
						if (base.Center.X / 16f > (float)(Main.maxTilesX / 2))
						{
							num = -1;
						}
						int num2 = 12;
						int num3 = (int)base.Center.X / 16;
						int j = (int)base.Center.Y / 16;
						bool flag = false;
						if (num > 0)
						{
							for (int k = num3; k < num3 + num2; k++)
							{
								if (WorldGen.SolidTile(k, j))
								{
									flag = true;
								}
							}
						}
						else
						{
							for (int l = num3; l > num3 - num2; l--)
							{
								if (WorldGen.SolidTile(l, j))
								{
									flag = true;
								}
							}
						}
						if (flag)
						{
							this.velocity.X = this.velocity.X * 0.99f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
								return;
							}
						}
						else
						{
							this.velocity.X = this.velocity.X + (float)num * 0.01f;
							if (this.velocity.X > 0.2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < -0.2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
								return;
							}
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.93f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
							return;
						}
					}
				}
				else
				{
					this.velocity.X = this.velocity.X * 0.93f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
						return;
					}
				}
			}
			else if (this.aiStyle == 1)
			{
				if (this.type == 1 && (this.ai[1] == 1f || this.ai[1] == 2f || this.ai[1] == 3f))
				{
					this.ai[1] = -1f;
				}
				if (this.type == 1 && this.ai[1] == 0f && Main.netMode != 1 && this.value > 0f)
				{
					this.ai[1] = -1f;
					if (Main.rand.Next(20) == 0)
					{
						int num4 = Main.rand.Next(4);
						if (num4 == 0)
						{
							num4 = Main.rand.Next(7);
							if (num4 == 0)
							{
								num4 = 290;
							}
							else if (num4 == 1)
							{
								num4 = 292;
							}
							else if (num4 == 2)
							{
								num4 = 296;
							}
							else if (num4 == 3)
							{
								num4 = 2322;
							}
							else if (Main.netMode != 0 && Main.rand.Next(2) == 0)
							{
								num4 = 2997;
							}
							else
							{
								num4 = 2350;
							}
						}
						else if (num4 == 1)
						{
							num4 = Main.rand.Next(4);
							if (num4 == 0)
							{
								num4 = 8;
							}
							else if (num4 == 1)
							{
								num4 = 166;
							}
							else if (num4 == 2)
							{
								num4 = 965;
							}
							else
							{
								num4 = 58;
							}
						}
						else if (num4 == 2)
						{
							if (Main.rand.Next(2) == 0)
							{
								num4 = Main.rand.Next(11, 15);
							}
							else
							{
								num4 = Main.rand.Next(699, 703);
							}
						}
						else
						{
							num4 = Main.rand.Next(3);
							if (num4 == 0)
							{
								num4 = 71;
							}
							else if (num4 == 1)
							{
								num4 = 72;
							}
							else
							{
								num4 = 73;
							}
						}
						this.ai[1] = (float)num4;
						this.netUpdate = true;
					}
				}
				if (this.type == 244)
				{
					float num5 = (float)Main.DiscoR / 255f;
					float num6 = (float)Main.DiscoG / 255f;
					float num7 = (float)Main.DiscoB / 255f;
					num5 *= 1f;
					num6 *= 1f;
					num7 *= 1f;
					this.color.R = (byte)Main.DiscoR;
					this.color.G = (byte)Main.DiscoG;
					this.color.B = (byte)Main.DiscoB;
					this.color.A = 100;
					this.alpha = 175;
				}
				bool flag2 = false;
				if (!Main.dayTime || this.life != this.lifeMax || (double)this.position.Y > Main.worldSurface * 16.0 || Main.slimeRain)
				{
					flag2 = true;
				}
				if (this.type == 81)
				{
					flag2 = true;
				}
				if ((this.type == 377 || this.type == 446) && this.target != 255 && !Main.player[this.target].dead && Vector2.Distance(base.Center, Main.player[this.target].Center) <= 200f)
				{
					flag2 = true;
				}
				if (this.type == 183)
				{
					flag2 = true;
				}
				if (this.type == 304)
				{
					flag2 = true;
				}
				if (this.type == 147 && Main.rand.Next(10) == 0)
				{
				}
				if (this.type == 244)
				{
					flag2 = true;
					this.ai[0] += 2f;
				}
				if (this.type == 184)
				{
					flag2 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num11 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector.X;
						float num12 = Main.player[this.target].position.Y - vector.Y;
						float num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
						if (Main.expertMode && num13 < 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int m = 0; m < 5; m++)
								{
									Vector2 vector2 = new Vector2((float)(m - 2), -4f);
									vector2.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
									vector2.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
									vector2.Normalize();
									vector2 *= 4f + (float)Main.rand.Next(-50, 51) * 0.01f;
									Projectile.NewProjectile(vector.X, vector.Y, vector2.X, vector2.Y, 174, 9, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 30f;
								}
							}
						}
						else if (num13 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num12 = Main.player[this.target].position.Y - vector.Y - (float)Main.rand.Next(0, 200);
								num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
								num13 = 4.5f / num13;
								num11 *= num13;
								num12 *= num13;
								this.localAI[0] = 50f;
								Projectile.NewProjectile(vector.X, vector.Y, num11, num12, 174, 9, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 535)
				{
					flag2 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num14 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector3.X;
						float num15 = Main.player[this.target].position.Y - vector3.Y;
						float num16 = (float)Math.Sqrt((double)(num14 * num14 + num15 * num15));
						if (Main.expertMode && num16 < 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int n = 0; n < 5; n++)
								{
									Vector2 vector4 = new Vector2((float)(n - 2), -4f);
									vector4.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
									vector4.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.005f;
									vector4.Normalize();
									vector4 *= 4f + (float)Main.rand.Next(-50, 51) * 0.01f;
									Projectile.NewProjectile(vector3.X, vector3.Y, vector4.X, vector4.Y, 605, 9, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 30f;
								}
							}
						}
						else if (num16 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num15 = Main.player[this.target].position.Y - vector3.Y - (float)Main.rand.Next(0, 200);
								num16 = (float)Math.Sqrt((double)(num14 * num14 + num15 * num15));
								num16 = 4.5f / num16;
								num14 *= num16;
								num15 *= num16;
								this.localAI[0] = 50f;
								Projectile.NewProjectile(vector3.X, vector3.Y, num14, num15, 605, 9, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 204)
				{
					flag2 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector5 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num17 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector5.X;
						float num18 = Main.player[this.target].position.Y - vector5.Y;
						float num19 = (float)Math.Sqrt((double)(num17 * num17 + num18 * num18));
						if (Main.expertMode && num19 < 200f && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int num20 = 0; num20 < 5; num20++)
								{
									Vector2 vector6 = new Vector2((float)(num20 - 2), -2f);
									vector6.X *= 1f + (float)Main.rand.Next(-50, 51) * 0.02f;
									vector6.Y *= 1f + (float)Main.rand.Next(-50, 51) * 0.02f;
									vector6.Normalize();
									vector6 *= 3f + (float)Main.rand.Next(-50, 51) * 0.01f;
									Projectile.NewProjectile(vector5.X, vector5.Y, vector6.X, vector6.Y, 176, 13, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 80f;
								}
							}
						}
						if (num19 < 400f && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -80f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num18 = Main.player[this.target].position.Y - vector5.Y - (float)Main.rand.Next(-30, 20);
								num18 -= num19 * 0.05f;
								num17 = Main.player[this.target].position.X - vector5.X - (float)Main.rand.Next(-20, 20);
								num19 = (float)Math.Sqrt((double)(num17 * num17 + num18 * num18));
								num19 = 7f / num19;
								num17 *= num19;
								num18 *= num19;
								this.localAI[0] = 65f;
								Projectile.NewProjectile(vector5.X, vector5.Y, num17, num18, 176, 13, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 377 || this.type == 446)
				{
					if (this.localAI[2] < 90f)
					{
						this.localAI[2] += 1f;
					}
					else
					{
						this.friendly = false;
					}
				}
				if (this.type == 59)
				{
				}
				if (this.ai[2] > 1f)
				{
					this.ai[2] -= 1f;
				}
				if (this.wet)
				{
					if (this.collideY)
					{
						this.velocity.Y = -2f;
					}
					if (this.velocity.Y < 0f && this.ai[3] == this.position.X)
					{
						this.direction *= -1;
						this.ai[2] = 200f;
					}
					if (this.velocity.Y > 0f)
					{
						this.ai[3] = this.position.X;
					}
					if (this.type == 59)
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						else if (this.directionY < 0)
						{
							this.velocity.Y = this.velocity.Y - 0.8f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -10f)
						{
							this.velocity.Y = -10f;
						}
					}
					else
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					if (this.ai[2] == 1f && flag2)
					{
						this.TargetClosest(true);
					}
				}
				this.aiAction = 0;
				if (this.ai[2] == 0f)
				{
					this.ai[0] = -100f;
					this.ai[2] = 1f;
					this.TargetClosest(true);
				}
				if (this.velocity.Y == 0f)
				{
					if (this.ai[3] == this.position.X)
					{
						this.direction *= -1;
						this.ai[2] = 200f;
					}
					this.ai[3] = 0f;
					this.velocity.X = this.velocity.X * 0.8f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if (flag2)
					{
						this.ai[0] += 1f;
					}
					this.ai[0] += 1f;
					if (this.type == 59)
					{
						this.ai[0] += 2f;
					}
					if (this.type == 71)
					{
						this.ai[0] += 3f;
					}
					if (this.type == 138)
					{
						this.ai[0] += 2f;
					}
					if (this.type == 183)
					{
						this.ai[0] += 1f;
					}
					if (this.type == 304)
					{
						float num22 = (float)((1 - this.life / this.lifeMax) * 10);
						this.ai[0] += num22;
					}
					if (this.type == 377 || this.type == 446)
					{
						this.ai[0] += 3f;
					}
					if (this.type == 81)
					{
						if (this.scale >= 0f)
						{
							this.ai[0] += 4f;
						}
						else
						{
							this.ai[0] += 1f;
						}
					}
					int num23 = 0;
					if (this.ai[0] >= 0f)
					{
						num23 = 1;
					}
					if (this.ai[0] >= -1000f && this.ai[0] <= -500f)
					{
						num23 = 2;
					}
					if (this.ai[0] >= -2000f && this.ai[0] <= -1500f)
					{
						num23 = 3;
					}
					if (num23 > 0)
					{
						this.netUpdate = true;
						if (flag2 && this.ai[2] == 1f)
						{
							this.TargetClosest(true);
						}
						if (num23 == 3)
						{
							this.velocity.Y = -8f;
							if (this.type == 59)
							{
								this.velocity.Y = this.velocity.Y - 2f;
							}
							this.velocity.X = this.velocity.X + (float)(3 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + 0.5f * (float)this.direction;
							}
							this.ai[0] = -200f;
							this.ai[3] = this.position.X;
						}
						else
						{
							this.velocity.Y = -6f;
							this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							}
							this.ai[0] = -120f;
							if (num23 == 1)
							{
								this.ai[0] -= 1000f;
							}
							else
							{
								this.ai[0] -= 2000f;
							}
						}
						if (this.type == 141)
						{
							this.velocity.Y = this.velocity.Y * 1.3f;
							this.velocity.X = this.velocity.X * 1.2f;
						}
						if (this.type == 377 || this.type == 446)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
							this.velocity.X = this.velocity.X * 0.6f;
							if (flag2)
							{
								this.direction = -this.direction;
								this.velocity.X = this.velocity.X * -1f;
								return;
							}
						}
					}
					else if (this.ai[0] >= -30f)
					{
						this.aiAction = 1;
						return;
					}
				}
				else if (this.target < 255 && ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f)))
				{
					if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
					{
						this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
						return;
					}
					this.velocity.X = this.velocity.X * 0.93f;
					return;
				}
			}
			else if (this.aiStyle == 2)
			{
				if ((this.type == 170 || this.type == 171 || this.type == 180) && Main.rand.Next(1000) == 0)
				{
				}
				this.noGravity = true;
				if (!this.noTileCollide)
				{
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
				}
				if (Main.dayTime && (double)this.position.Y <= Main.worldSurface * 16.0 && (this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318))
				{
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					this.directionY = -1;
					if (this.velocity.Y > 0f)
					{
						this.direction = 1;
					}
					this.direction = -1;
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
				}
				else
				{
					this.TargetClosest(true);
				}
				if (this.type == 170 || this.type == 171 || this.type == 180)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						if (this.ai[1] > 0f && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[1] = 0f;
							this.ai[0] = 0f;
							this.netUpdate = true;
						}
					}
					else if (this.ai[1] == 0f)
					{
						this.ai[0] += 1f;
					}
					if (this.ai[0] >= 300f)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					if (this.ai[1] == 0f)
					{
						this.alpha = 0;
						this.noTileCollide = false;
					}
					else
					{
						this.wet = false;
						this.alpha = 200;
						this.noTileCollide = true;
					}
					this.rotation = this.velocity.Y * 0.1f * (float)this.direction;
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -4f && this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
					{
						this.velocity.X = this.velocity.X - 0.08f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.04f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f && this.position.X + (float)this.width < Main.player[this.target].position.X)
					{
						this.velocity.X = this.velocity.X + 0.08f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.04f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5 && this.position.Y > Main.player[this.target].position.Y + (float)Main.player[this.target].height)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 2.5 && this.position.Y + (float)this.height < Main.player[this.target].position.Y)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				else if (this.type == 116)
				{
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -6f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 6f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				else if (this.type == 133)
				{
					if ((double)this.life < (double)this.lifeMax * 0.5)
					{
						if (this.direction == -1 && this.velocity.X > -6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 6f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -6f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
						}
						if (this.directionY == -1 && this.velocity.Y > -4f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						else if (this.directionY == 1 && this.velocity.Y < 4f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = 4f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
				}
				else
				{
					float num25 = 4f;
					float num26 = 1.5f;
					num25 *= 1f + (1f - this.scale);
					num26 *= 1f + (1f - this.scale);
					if (this.direction == -1 && this.velocity.X > -num25)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > num25)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -num25)
						{
							this.velocity.X = -num25;
						}
					}
					else if (this.direction == 1 && this.velocity.X < num25)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -num25)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > num25)
						{
							this.velocity.X = num25;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -num26)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if (this.velocity.Y > num26)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if (this.velocity.Y < -num26)
						{
							this.velocity.Y = -num26;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < num26)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if (this.velocity.Y < -num26)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if (this.velocity.Y > num26)
						{
							this.velocity.Y = num26;
						}
					}
				}
				if ((this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194) && Main.rand.Next(40) == 0)
				{
				}
				if (this.wet && this.type != 170 && this.type != 171 && this.type != 172)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
					return;
				}
			}
			else if (this.aiStyle == 3)
			{
				if (this.type == 466)
				{
					int num28 = 200;
					if (this.ai[2] == 0f)
					{
						this.alpha = num28;
						this.TargetClosest(true);
						if (!Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() < 170f)
						{
							this.ai[2] = -16f;
						}
						if (this.velocity.X != 0f || this.velocity.Y < 0f || this.velocity.Y > 2f || this.justHit)
						{
							this.ai[2] = -16f;
						}
						return;
					}
					if (this.ai[2] < 0f)
					{
						if (this.alpha > 0)
						{
							this.alpha -= num28 / 16;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] == 0f)
						{
							this.ai[2] = 1f;
							this.velocity.X = (float)(this.direction * 2);
						}
						return;
					}
					this.alpha = 0;
				}
				if (this.type == 166)
				{
					if (Main.netMode != 1 && Main.rand.Next(240) == 0)
					{
						this.ai[2] = (float)Main.rand.Next(-480, -60);
						this.netUpdate = true;
					}
					if (this.ai[2] < 0f)
					{
						this.TargetClosest(true);
						if (this.justHit)
						{
							this.ai[2] = 0f;
						}
						if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = 0f;
						}
					}
					if (this.ai[2] < 0f)
					{
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						this.ai[2] += 1f;
						if (this.ai[2] == 0f)
						{
							this.velocity.X = (float)this.direction * 0.1f;
						}
						return;
					}
				}
				if (this.type == 461)
				{
					if (this.wet)
					{
						this.knockBackResist = 0f;
						this.ai[3] = -0.10101f;
						this.noGravity = true;
						Vector2 center = base.Center;
						this.width = 34;
						this.height = 24;
						this.position.X = center.X - (float)(this.width / 2);
						this.position.Y = center.Y - (float)(this.height / 2);
						this.TargetClosest(true);
						if (this.collideX)
						{
							this.velocity.X = -this.oldVelocity.X;
						}
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].Center, 1, 1))
						{
							Vector2 value = Main.player[this.target].Center - base.Center;
							value.Normalize();
							value *= 5f;
							this.velocity = (this.velocity * 19f + value) / 20f;
							return;
						}
						float num29 = 5f;
						if (this.velocity.Y > 0f)
						{
							num29 = 3f;
						}
						if (this.velocity.Y < 0f)
						{
							num29 = 8f;
						}
						Vector2 value2 = new Vector2((float)this.direction, -1f);
						value2.Normalize();
						value2 *= num29;
						if (num29 < 5f)
						{
							this.velocity = (this.velocity * 24f + value2) / 25f;
							return;
						}
						this.velocity = (this.velocity * 9f + value2) / 10f;
						return;
					}
					else
					{
						this.knockBackResist = 0.4f * Main.knockBackMultiplier;
						this.noGravity = false;
						Vector2 center2 = base.Center;
						this.width = 18;
						this.height = 40;
						this.position.X = center2.X - (float)(this.width / 2);
						this.position.Y = center2.Y - (float)(this.height / 2);
						if (this.ai[3] == -0.10101f)
						{
							this.ai[3] = 0f;
							float num30 = this.velocity.Length();
							num30 *= 2f;
							if (num30 > 10f)
							{
								num30 = 10f;
							}
							this.velocity.Normalize();
							this.velocity *= num30;
							if (this.velocity.X < 0f)
							{
								this.direction = -1;
							}
							if (this.velocity.X > 0f)
							{
								this.direction = 1;
							}
							this.spriteDirection = this.direction;
						}
					}
				}
				if (this.type == 379 || this.type == 380)
				{
					if (this.ai[3] < 0f)
					{
						this.damage = 0;
						this.velocity.X = this.velocity.X * 0.93f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						int num31 = (int)(-this.ai[3] - 1f);
						int num32 = Math.Sign(Main.npc[num31].Center.X - base.Center.X);
						if (num32 != this.direction)
						{
							this.velocity.X = 0f;
							this.direction = num32;
							this.netUpdate = true;
						}
						if (this.justHit && Main.netMode != 1 && Main.npc[num31].localAI[0] == 0f)
						{
							Main.npc[num31].localAI[0] = 1f;
						}
						if (this.ai[0] < 1000f)
						{
							this.ai[0] = 1000f;
						}
						if ((this.ai[0] += 1f) >= 1300f)
						{
							this.ai[0] = 1000f;
							this.netUpdate = true;
						}
						return;
					}
					if (this.ai[0] >= 1000f)
					{
						this.ai[0] = 0f;
					}
					this.damage = this.defDamage;
				}
				if (this.type == 383 && this.ai[2] == 0f && this.localAI[0] == 0f && Main.netMode != 1)
				{
					int num33 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 384, this.whoAmI, 0f, 0f, 0f, 0f, 255);
					this.ai[2] = (float)(num33 + 1);
					this.localAI[0] = -1f;
					this.netUpdate = true;
					Main.npc[num33].ai[0] = (float)this.whoAmI;
					Main.npc[num33].netUpdate = true;
				}
				if (this.type == 383)
				{
					int num34 = (int)this.ai[2] - 1;
					if (num34 != -1 && Main.npc[num34].active && Main.npc[num34].type == 384)
					{
						this.dontTakeDamage = true;
					}
					else
					{
						this.dontTakeDamage = false;
						this.ai[2] = 0f;
						if (this.localAI[0] == -1f)
						{
							this.localAI[0] = 180f;
						}
						if (this.localAI[0] > 0f)
						{
							this.localAI[0] -= 1f;
						}
					}
				}
				if (this.type == 482)
				{
					int num35 = 300;
					int num36 = 120;
					this.dontTakeDamage = false;
					if (this.ai[2] < 0f)
					{
						this.dontTakeDamage = true;
						this.ai[2] += 1f;
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)Math.Abs(this.velocity.X) < 0.001)
						{
							this.velocity.X = 0.001f * (float)this.direction;
						}
						if (Math.Abs(this.velocity.Y) > 1f)
						{
							this.ai[2] += 10f;
						}
						if (this.ai[2] >= 0f)
						{
							this.netUpdate = true;
							this.velocity.X = this.velocity.X + (float)this.direction * 0.3f;
						}
						return;
					}
					if (this.ai[2] < (float)num35)
					{
						if (this.justHit)
						{
							this.ai[2] += 15f;
						}
						this.ai[2] += 1f;
					}
					else if (this.velocity.Y == 0f)
					{
						this.ai[2] = (float)(-(float)num36);
						this.netUpdate = true;
					}
				}
				if (this.type == 480)
				{
					int num37 = 180;
					int num38 = 300;
					int num39 = 180;
					int num40 = 60;
					int num41 = 20;
					if (this.life < this.lifeMax / 3)
					{
						num37 = 120;
						num38 = 240;
						num39 = 240;
						num40 = 90;
					}
					if (this.ai[2] > 0f)
					{
						this.ai[2] -= 1f;
					}
					else if (this.ai[2] == 0f)
					{
						if (((Main.player[this.target].Center.X < base.Center.X && this.direction < 0) || (Main.player[this.target].Center.X > base.Center.X && this.direction > 0)) && this.velocity.Y == 0f && base.Distance(Main.player[this.target].Center) < 900f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = (float)(-(float)num39 - num41);
							this.netUpdate = true;
						}
					}
					else
					{
						if (this.ai[2] < 0f && this.ai[2] < (float)(-(float)num39))
						{
							this.velocity.X = this.velocity.X * 0.9f;
							if (this.velocity.Y < -2f || this.velocity.Y > 4f || this.justHit)
							{
								this.ai[2] = (float)num37;
							}
							else
							{
								this.ai[2] += 1f;
								if (this.ai[2] == 0f)
								{
									this.ai[2] = (float)num38;
								}
							}
							float num42 = this.ai[2] + (float)num39 + (float)num41;
							if (num42 == 1f)
							{
							}
							if (num42 < (float)num41)
							{
							}
							return;
						}
						if (this.ai[2] < 0f && this.ai[2] >= (float)(-(float)num39))
						{
							this.velocity.X = this.velocity.X * 0.9f;
							if (this.velocity.Y < -2f || this.velocity.Y > 4f || this.justHit)
							{
								this.ai[2] = (float)num37;
							}
							else
							{
								this.ai[2] += 1f;
								if (this.ai[2] == 0f)
								{
									this.ai[2] = (float)num38;
								}
							}
							float num44 = this.ai[2] + (float)num39;
							if (num44 < 180f && (Main.rand.Next(3) == 0 || this.ai[2] % 3f == 0f))
							{
							}
							if (Main.netMode != 2)
							{
								Player player = Main.player[Main.myPlayer];
								int arg_44C1_0 = Main.myPlayer;
								if (!player.dead && player.active && player.HasBuff(156) == -1 && (player.Center - base.Center).Length() < 700f && ((player.Center.X < base.Center.X && this.direction < 0 && player.direction > 0) || (player.Center.X > base.Center.X && this.direction > 0 && player.direction < 0)))
								{
									bool flag3 = Collision.CanHitLine(base.Center, 1, 1, player.Center, 1, 1) || Collision.CanHitLine(base.Center - Vector2.UnitY * 16f, 1, 1, player.Center, 1, 1) || Collision.CanHitLine(base.Center + Vector2.UnitY * 8f, 1, 1, player.Center, 1, 1);
									if (flag3)
									{
										player.AddBuff(156, num40 + (int)this.ai[2] * -1, true);
									}
								}
							}
							return;
						}
					}
				}
				if (this.type == 471)
				{
					if (this.ai[3] < 0f)
					{
						this.knockBackResist = 0f;
						this.defense = (int)((double)this.defDefense * 1.1);
						this.noGravity = true;
						this.noTileCollide = true;
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						else if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						this.rotation = this.velocity.X * 0.1f;
						if (Main.netMode != 1)
						{
							this.localAI[3] += 1f;
							if (this.localAI[3] > (float)Main.rand.Next(20, 180))
							{
								this.localAI[3] = 0f;
								Vector2 value3 = base.Center;
								value3 += this.velocity;
								NPC.NewNPC((int)value3.X, (int)value3.Y, 30, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
					}
					else
					{
						this.localAI[3] = 0f;
						this.knockBackResist = 0.35f * Main.knockBackMultiplier;
						this.rotation *= 0.9f;
						this.defense = this.defDefense;
						this.noGravity = false;
						this.noTileCollide = false;
					}
					if (this.ai[3] == 1f)
					{
						this.knockBackResist = 0f;
						this.defense += 10;
					}
					if (this.ai[3] == -1f)
					{
						this.TargetClosest(true);
						float num46 = 8f;
						float num47 = 40f;
						Vector2 value4 = Main.player[this.target].Center - base.Center;
						float num48 = value4.Length();
						num46 += num48 / 200f;
						value4.Normalize();
						value4 *= num46;
						this.velocity = (this.velocity * (num47 - 1f) + value4) / num47;
						if (num48 < 500f && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[3] = 0f;
							this.ai[2] = 0f;
						}
						return;
					}
					if (this.ai[3] == -2f)
					{
						this.velocity.Y = this.velocity.Y - 0.2f;
						if (this.velocity.Y < -10f)
						{
							this.velocity.Y = -10f;
						}
						if (Main.player[this.target].Center.Y - base.Center.Y > 200f)
						{
							this.TargetClosest(true);
							this.ai[3] = -3f;
							if (Main.player[this.target].Center.X > base.Center.X)
							{
								this.ai[2] = 1f;
							}
							else
							{
								this.ai[2] = -1f;
							}
						}
						this.velocity.X = this.velocity.X * 0.99f;
						return;
					}
					if (this.ai[3] == -3f)
					{
						if (this.direction == 0)
						{
							this.TargetClosest(true);
						}
						if (this.ai[2] == 0f)
						{
							this.ai[2] = (float)this.direction;
						}
						this.velocity.Y = this.velocity.Y * 0.9f;
						this.velocity.X = this.velocity.X + this.ai[2] * 0.3f;
						if (this.velocity.X > 10f)
						{
							this.velocity.X = 10f;
						}
						if (this.velocity.X < -10f)
						{
							this.velocity.X = -10f;
						}
						float num49 = Main.player[this.target].Center.X - base.Center.X;
						if ((this.ai[2] < 0f && num49 > 300f) || (this.ai[2] > 0f && num49 < -300f))
						{
							this.ai[3] = -4f;
							this.ai[2] = 0f;
							return;
						}
						if (Math.Abs(num49) > 800f)
						{
							this.ai[3] = -1f;
							this.ai[2] = 0f;
						}
						return;
					}
					else
					{
						if (this.ai[3] == -4f)
						{
							this.ai[2] += 1f;
							this.velocity.Y = this.velocity.Y + 0.1f;
							if (this.velocity.Length() > 4f)
							{
								this.velocity *= 0.9f;
							}
							int num50 = (int)base.Center.X / 16;
							int num51 = (int)(this.position.Y + (float)this.height + 12f) / 16;
							bool flag4 = false;
							for (int num52 = num50 - 1; num52 <= num50 + 1; num52++)
							{
								if (Main.tile[num52, num51] == null)
								{
									Main.tile[num50, num51] = new Tile();
								}
								if (Main.tile[num52, num51].active() && Main.tileSolid[(int)Main.tile[num52, num51].type])
								{
									flag4 = true;
								}
							}
							if (flag4 && !Collision.SolidCollision(this.position, this.width, this.height))
							{
								this.ai[3] = 0f;
								this.ai[2] = 0f;
							}
							else if (this.ai[2] > 300f || base.Center.Y > Main.player[this.target].Center.Y + 200f)
							{
								this.ai[3] = -1f;
								this.ai[2] = 0f;
							}
						}
						else
						{
							if (this.ai[3] == 1f)
							{
								Vector2 center3 = base.Center;
								center3.Y -= 70f;
								this.velocity.X = this.velocity.X * 0.8f;
								this.ai[2] += 1f;
								if (this.ai[2] == 60f)
								{
									if (Main.netMode != 1)
									{
										NPC.NewNPC((int)center3.X, (int)center3.Y + 18, 472, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (this.ai[2] >= 90f)
								{
									this.ai[3] = -2f;
									this.ai[2] = 0f;
								}
								return;
							}
							this.ai[2] += 1f;
							int num55 = 10;
							if (this.velocity.Y == 0f && NPC.CountNPCS(472) < num55)
							{
								if (this.ai[2] >= 180f)
								{
									this.ai[2] = 0f;
									this.ai[3] = 1f;
								}
							}
							else
							{
								if (NPC.CountNPCS(472) >= num55)
								{
									this.ai[2] += 1f;
								}
								if (this.ai[2] >= 360f)
								{
									this.ai[2] = 0f;
									this.ai[3] = -2f;
									this.velocity.Y = this.velocity.Y - 3f;
								}
							}
							if (this.target >= 0 && !Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() > 800f)
							{
								this.ai[3] = -1f;
								this.ai[2] = 0f;
							}
						}
						if (Main.player[this.target].dead)
						{
							this.TargetClosest(true);
							if (Main.player[this.target].dead && this.timeLeft > 1)
							{
								this.timeLeft = 1;
							}
						}
					}
				}
				if (this.type == 419)
				{
					this.reflectingProjectiles = false;
					this.takenDamageMultiplier = 1f;
					int num56 = 6;
					int num57 = 10;
					float scaleFactor3 = 16f;
					if (this.ai[2] > 0f)
					{
						this.ai[2] -= 1f;
					}
					if (this.ai[2] == 0f)
					{
						if (((Main.player[this.target].Center.X < base.Center.X && this.direction < 0) || (Main.player[this.target].Center.X > base.Center.X && this.direction > 0)) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = -1f;
							this.netUpdate = true;
							this.TargetClosest(true);
						}
					}
					else
					{
						if (this.ai[2] < 0f && this.ai[2] > (float)(-(float)num56))
						{
							this.ai[2] -= 1f;
							this.velocity.X = this.velocity.X * 0.9f;
							return;
						}
						if (this.ai[2] == (float)(-(float)num56))
						{
							this.ai[2] -= 1f;
							this.TargetClosest(true);
							Vector2 vec = base.DirectionTo(Main.player[this.target].Top + new Vector2(0f, -30f));
							if (vec.HasNaNs())
							{
								vec = Vector2.Normalize(new Vector2((float)this.spriteDirection, -1f));
							}
							this.velocity = vec * scaleFactor3;
							this.netUpdate = true;
							return;
						}
						if (this.ai[2] < (float)(-(float)num56))
						{
							this.ai[2] -= 1f;
							if (this.velocity.Y == 0f)
							{
								this.ai[2] = 60f;
							}
							else if (this.ai[2] < (float)(-(float)num56 - num57))
							{
								this.velocity.Y = this.velocity.Y + 0.15f;
								if (this.velocity.Y > 24f)
								{
									this.velocity.Y = 24f;
								}
							}
							this.reflectingProjectiles = true;
							this.takenDamageMultiplier = 3f;
							if (this.justHit)
							{
								this.ai[2] = 60f;
								this.netUpdate = true;
							}
							return;
						}
					}
				}
				if (this.type == 415)
				{
					int num58 = 42;
					int num59 = 18;
					if (this.justHit)
					{
						this.ai[2] = 120f;
						this.netUpdate = true;
					}
					if (this.ai[2] > 0f)
					{
						this.ai[2] -= 1f;
					}
					if (this.ai[2] == 0f)
					{
						int num60 = 0;
						for (int num61 = 0; num61 < 200; num61++)
						{
							if (Main.npc[num61].active && Main.npc[num61].type == 516)
							{
								num60++;
							}
						}
						if (num60 > 6)
						{
							this.ai[2] = 90f;
						}
						else if (((Main.player[this.target].Center.X < base.Center.X && this.direction < 0) || (Main.player[this.target].Center.X > base.Center.X && this.direction > 0)) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = -1f;
							this.netUpdate = true;
							this.TargetClosest(true);
						}
					}
					else if (this.ai[2] < 0f && this.ai[2] > (float)(-(float)num58))
					{
						this.ai[2] -= 1f;
						if (this.ai[2] == (float)(-(float)num58))
						{
							this.ai[2] = (float)(180 + 30 * Main.rand.Next(10));
						}
						this.velocity.X = this.velocity.X * 0.8f;
						if (this.ai[2] == (float)(-(float)num59) || this.ai[2] == (float)(-(float)num59 - 8) || this.ai[2] == (float)(-(float)num59 - 16))
						{
							if (this.velocity.X > -0.5f && this.velocity.X < 0.5f)
							{
								this.velocity.X = 0f;
							}
							if (Main.netMode != 1)
							{
								NPC.NewNPC((int)base.Center.X + this.spriteDirection * 45, (int)base.Center.Y + 8, 516, 0, 0f, 0f, 0f, 0f, this.target);
							}
						}
						return;
					}
				}
				if (this.type == 428)
				{
					this.localAI[0] += 1f;
					if (this.localAI[0] >= 300f)
					{
						int num63 = (int)base.Center.X / 16 - 1;
						int num64 = (int)base.Center.Y / 16 - 1;
						if (!Collision.SolidTiles(num63, num63 + 2, num64, num64 + 1) && Main.netMode != 1)
						{
							this.Transform(427);
							this.life = this.lifeMax;
							this.localAI[0] = 0f;
							return;
						}
					}
				}
				if (this.type == 427)
				{
					this.localAI[0] += 1f;
					this.localAI[0] += Math.Abs(this.velocity.X) / 2f;
					if (this.localAI[0] >= 1200f && Main.netMode != 1)
					{
						int num65 = (int)base.Center.X / 16 - 2;
						int num66 = (int)base.Center.Y / 16 - 3;
						if (!Collision.SolidTiles(num65, num65 + 4, num66, num66 + 4))
						{
							this.Transform(426);
							this.life = this.lifeMax;
							this.localAI[0] = 0f;
							return;
						}
					}
				}
				bool flag5 = false;
				if (this.velocity.X == 0f)
				{
					flag5 = true;
				}
				if (this.justHit)
				{
					flag5 = false;
				}
				if (Main.netMode != 1 && this.type == 198 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(199);
				}
				if (Main.netMode != 1 && this.type == 348 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(349);
				}
				int num67 = 60;
				if (this.type == 120)
				{
					num67 = 180;
					if (this.ai[3] == -120f)
					{
						this.velocity *= 0f;
						this.ai[3] = 0f;
						Vector2 vector14 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num68 = this.oldPos[2].X + (float)this.width * 0.5f - vector14.X;
						float num69 = this.oldPos[2].Y + (float)this.height * 0.5f - vector14.Y;
						float num70 = (float)Math.Sqrt((double)(num68 * num68 + num69 * num69));
						num70 = 2f / num70;
						num68 *= num70;
						num69 *= num70;
					}
				}
				bool flag6 = false;
				bool flag7 = true;
				if (this.type == 343 || this.type == 47 || this.type == 67 || this.type == 109 || this.type == 110 || this.type == 111 || this.type == 120 || this.type == 163 || this.type == 164 || this.type == 239 || this.type == 168 || this.type == 199 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 226 || this.type == 243 || this.type == 251 || this.type == 257 || this.type == 258 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 305 || this.type == 306 || this.type == 307 || this.type == 308 || this.type == 309 || this.type == 348 || this.type == 349 || this.type == 350 || this.type == 351 || this.type == 379 || (this.type >= 430 && this.type <= 436) || (this.type == 380 || this.type == 381 || this.type == 382 || this.type == 383 || this.type == 386 || this.type == 391 || (this.type >= 449 && this.type <= 452)) || (this.type == 466 || this.type == 464 || this.type == 166 || this.type == 469 || this.type == 468 || this.type == 471 || this.type == 470 || this.type == 480 || this.type == 481 || this.type == 482 || this.type == 411 || this.type == 424 || this.type == 409 || (this.type >= 494 && this.type <= 506)) || (this.type == 425 || this.type == 427 || this.type == 426 || this.type == 428 || this.type == 508 || this.type == 415 || this.type == 419 || this.type == 520 || (this.type >= 524 && this.type <= 527)) || this.type == 528 || this.type == 529 || this.type == 530 || this.type == 532)
				{
					flag7 = false;
				}
				bool flag8 = false;
				int num75 = this.type;
				if (num75 == 425 || num75 == 471)
				{
					flag8 = true;
				}
				bool flag9 = true;
				num75 = this.type;
				if (num75 <= 350)
				{
					if (num75 <= 206)
					{
						switch (num75)
						{
							case 110:
							case 111:
								break;
							default:
								if (num75 != 206)
								{
									goto IL_62C5;
								}
								break;
						}
					}
					else
					{
						switch (num75)
						{
							case 214:
							case 215:
							case 216:
								break;
							default:
								switch (num75)
								{
									case 291:
									case 292:
									case 293:
										break;
									default:
										if (num75 != 350)
										{
											goto IL_62C5;
										}
										break;
								}
								break;
						}
					}
				}
				else if (num75 <= 426)
				{
					switch (num75)
					{
						case 379:
						case 380:
						case 381:
						case 382:
							break;
						default:
							switch (num75)
							{
								case 409:
								case 411:
									break;
								case 410:
									goto IL_62C5;
								default:
									switch (num75)
									{
										case 424:
										case 426:
											break;
										case 425:
											goto IL_62C5;
										default:
											goto IL_62C5;
									}
									break;
							}
							break;
					}
				}
				else if (num75 != 466)
				{
					switch (num75)
					{
						case 498:
						case 499:
						case 500:
						case 501:
						case 502:
						case 503:
						case 504:
						case 505:
						case 506:
							break;
						default:
							if (num75 != 520)
							{
								goto IL_62C5;
							}
							break;
					}
				}
				if (this.ai[2] > 0f)
				{
					flag9 = false;
				}
			IL_62C5:
				if (!flag8 && flag9)
				{
					if (this.velocity.Y == 0f && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
					{
						flag6 = true;
					}
					if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num67 || flag6)
					{
						this.ai[3] += 1f;
					}
					else if ((double)Math.Abs(this.velocity.X) > 0.9 && this.ai[3] > 0f)
					{
						this.ai[3] -= 1f;
					}
					if (this.ai[3] > (float)(num67 * 10))
					{
						this.ai[3] = 0f;
					}
					if (this.justHit)
					{
						this.ai[3] = 0f;
					}
					if (this.ai[3] == (float)num67)
					{
						this.netUpdate = true;
					}
				}
				if (this.type == 463 && Main.netMode != 1)
				{
					if (this.localAI[3] > 0f)
					{
						this.localAI[3] -= 1f;
					}
					if (this.justHit && this.localAI[3] <= 0f && Main.rand.Next(3) == 0)
					{
						this.localAI[3] = 30f;
						int num76 = Main.rand.Next(3, 6);
						int[] array = new int[num76];
						int num77 = 0;
						for (int num78 = 0; num78 < 255; num78++)
						{
							if (Main.player[num78].active && !Main.player[num78].dead && Collision.CanHitLine(this.position, this.width, this.height, Main.player[num78].position, Main.player[num78].width, Main.player[num78].height))
							{
								array[num77] = num78;
								num77++;
								if (num77 == num76)
								{
									break;
								}
							}
						}
						if (num77 > 1)
						{
							for (int num79 = 0; num79 < 100; num79++)
							{
								int num80 = Main.rand.Next(num77);
								int num81;
								for (num81 = num80; num81 == num80; num81 = Main.rand.Next(num77))
								{
								}
								int num82 = array[num80];
								array[num80] = array[num81];
								array[num81] = num82;
							}
						}
						Vector2 vector15 = new Vector2(-1f, -1f);
						for (int num83 = 0; num83 < num77; num83++)
						{
							Vector2 value6 = Main.npc[array[num83]].Center - base.Center;
							value6.Normalize();
							vector15 += value6;
						}
						vector15.Normalize();
						for (int num84 = 0; num84 < num76; num84++)
						{
							float scaleFactor4 = (float)Main.rand.Next(8, 13);
							Vector2 value7 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
							value7.Normalize();
							if (num77 > 0)
							{
								value7 += vector15;
								value7.Normalize();
							}
							value7 *= scaleFactor4;
							if (num77 > 0)
							{
								num77--;
								value7 = Main.player[array[num77]].Center - base.Center;
								value7.Normalize();
								value7 *= scaleFactor4;
							}
							Projectile.NewProjectile(base.Center.X, this.position.Y + (float)(this.width / 4), value7.X, value7.Y, 498, (int)((double)this.damage * 0.15), 1f, 255, 0f, 0f);
						}
					}
				}
				if (this.type == 460)
				{
					if (this.velocity.Y < -NPC.gravity || this.velocity.Y > NPC.gravity)
					{
						this.knockBackResist = 0f;
					}
					else
					{
						this.knockBackResist = 0.25f * Main.knockBackMultiplier;
					}
				}
				if (this.type == 469)
				{
					this.knockBackResist = 0.45f * Main.knockBackMultiplier;
					if (this.ai[2] == 1f)
					{
						this.knockBackResist = 0f;
					}
					bool flag10 = false;
					int num85 = (int)base.Center.X / 16;
					int num86 = (int)base.Center.Y / 16;
					for (int num87 = num85 - 1; num87 <= num85 + 1; num87++)
					{
						for (int num88 = num86 - 1; num88 <= num86 + 1; num88++)
						{
							if (Main.tile[num87, num88] != null && Main.tile[num87, num88].wall > 0)
							{
								flag10 = true;
								break;
							}
						}
						if (flag10)
						{
							break;
						}
					}
					if (this.ai[2] == 0f && flag10)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.Y = -4.6f;
							this.velocity.X = this.velocity.X * 1.3f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.ai[2] = 1f;
						}
					}
					if (flag10 && this.ai[2] == 1f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
					{
						Vector2 value8 = Main.player[this.target].Center - base.Center;
						float num89 = value8.Length();
						value8.Normalize();
						value8 *= 4.5f + num89 / 300f;
						this.velocity = (this.velocity * 29f + value8) / 30f;
						this.noGravity = true;
						this.ai[2] = 1f;
						return;
					}
					this.noGravity = false;
					this.ai[2] = 0f;
				}
				if (this.type == 462 && this.velocity.Y == 0f && (Main.player[this.target].Center - base.Center).Length() < 150f && Math.Abs(this.velocity.X) > 3f && ((this.velocity.X < 0f && base.Center.X > Main.player[this.target].Center.X) || (this.velocity.X > 0f && base.Center.X < Main.player[this.target].Center.X)))
				{
					this.velocity.X = this.velocity.X * 1.75f;
					this.velocity.Y = this.velocity.Y - 4.5f;
					if (base.Center.Y - Main.player[this.target].Center.Y > 20f)
					{
						this.velocity.Y = this.velocity.Y - 0.5f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 40f)
					{
						this.velocity.Y = this.velocity.Y - 1f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 80f)
					{
						this.velocity.Y = this.velocity.Y - 1.5f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 100f)
					{
						this.velocity.Y = this.velocity.Y - 1.5f;
					}
					if (Math.Abs(this.velocity.X) > 7f)
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = -7f;
						}
						else
						{
							this.velocity.X = 7f;
						}
					}
				}
				if (this.ai[3] < (float)num67 && (Main.eclipse || !Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0 || (Main.invasionType == 1 && (this.type == 343 || this.type == 350)) || (Main.invasionType == 1 && (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 111 || this.type == 471)) || (this.type == 73 || (Main.invasionType == 3 && this.type >= 212 && this.type <= 216)) || (Main.invasionType == 4 && (this.type == 381 || this.type == 382 || this.type == 383 || this.type == 385 || this.type == 386 || this.type == 389 || this.type == 391 || this.type == 520)) || (this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 67 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 110 || this.type == 120 || this.type == 168 || this.type == 181 || this.type == 185 || this.type == 198 || this.type == 199 || this.type == 206 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 239 || this.type == 243 || this.type == 254 || this.type == 255 || this.type == 257 || this.type == 258 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 379 || this.type == 380 || this.type == 464 || this.type == 470 || this.type == 424 || (this.type == 411 && (this.ai[1] >= 180f || this.ai[1] < 90f))) || (this.type == 409 || this.type == 425 || this.type == 429 || this.type == 427 || this.type == 428 || this.type == 508 || this.type == 415 || this.type == 419 || (this.type >= 524 && this.type <= 527)) || this.type == 528 || this.type == 529 || this.type == 530 || this.type == 532))
				{
					if ((this.type == 3 || this.type == 331 || this.type == 332 || this.type == 21 || (this.type >= 449 && this.type <= 452) || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 77 || this.type == 110 || this.type == 132 || this.type == 167 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 197 || this.type == 200 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 223 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 320 || this.type == 321 || this.type == 319 || this.type == 481) && Main.rand.Next(1000) == 0)
					{
					}
					if (this.type == 489 && Main.rand.Next(800) == 0)
					{
					}
					if ((this.type == 78 || this.type == 79 || this.type == 80) && Main.rand.Next(500) == 0)
					{
					}
					if (this.type == 159 && Main.rand.Next(500) == 0)
					{
					}
					if (this.type == 162 && Main.rand.Next(500) == 0)
					{
					}
					if (this.type == 181 && Main.rand.Next(500) == 0)
					{
					}
					if (this.type >= 269 && this.type <= 280 && Main.rand.Next(1000) == 0)
					{
					}
					this.TargetClosest(true);
				}
				else if (this.ai[2] <= 0f || (this.type != 110 && this.type != 111 && this.type != 206 && this.type != 216 && this.type != 214 && this.type != 215 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350 && this.type != 381 && this.type != 382 && this.type != 383 && this.type != 385 && this.type != 386 && this.type != 389 && this.type != 391 && this.type != 469 && this.type != 166 && this.type != 466 && this.type != 471 && this.type != 411 && this.type != 409 && this.type != 424 && this.type != 425 && this.type != 426 && this.type != 415 && this.type != 419 && this.type != 520))
				{
					if (Main.dayTime && (double)(this.position.Y / 16f) < Main.worldSurface && this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					if (this.velocity.X == 0f)
					{
						if (this.velocity.Y == 0f)
						{
							this.ai[0] += 1f;
							if (this.ai[0] >= 2f)
							{
								this.direction *= -1;
								this.spriteDirection = this.direction;
								this.ai[0] = 0f;
							}
						}
					}
					else
					{
						this.ai[0] = 0f;
					}
					if (this.direction == 0)
					{
						this.direction = 1;
					}
				}
				if (this.type == 159 || this.type == 349)
				{
					if (this.type == 159 && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
					{
						this.velocity.X = this.velocity.X * 0.95f;
					}
					if (this.velocity.X < -6f || this.velocity.X > 6f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 6f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					else if (this.velocity.X > -6f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
				}
				else if (this.type == 199)
				{
					if (this.velocity.X < -4f || this.velocity.X > 4f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 4f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					else if (this.velocity.X > -4f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
				}
				else if (this.type == 120 || this.type == 166 || this.type == 213 || this.type == 258 || this.type == 528 || this.type == 529)
				{
					if (this.velocity.X < -3f || this.velocity.X > 3f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 3f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
					}
					else if (this.velocity.X > -3f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
					}
				}
				else if (this.type == 461 || this.type == 27 || this.type == 77 || this.type == 104 || this.type == 163 || this.type == 162 || this.type == 196 || this.type == 197 || this.type == 212 || this.type == 257 || this.type == 326 || this.type == 343 || this.type == 348 || this.type == 351 || (this.type >= 524 && this.type <= 527) || this.type == 530)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 109)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.04f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.04f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 21 || this.type == 26 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 73 || this.type == 140 || this.type == 164 || this.type == 239 || this.type == 167 || this.type == 168 || this.type == 185 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 226 || this.type == 181 || this.type == 254 || this.type == 338 || this.type == 339 || this.type == 340 || this.type == 342 || this.type == 385 || this.type == 389 || this.type == 462 || this.type == 463 || this.type == 466 || this.type == 464 || this.type == 469 || this.type == 470 || this.type == 480 || this.type == 482 || this.type == 425 || this.type == 429)
				{
					float num90 = 1.5f;
					if (this.type == 294)
					{
						num90 = 2f;
					}
					else if (this.type == 295)
					{
						num90 = 1.75f;
					}
					else if (this.type == 296)
					{
						num90 = 1.25f;
					}
					else if (this.type == 201)
					{
						num90 = 1.1f;
					}
					else if (this.type == 202)
					{
						num90 = 0.9f;
					}
					else if (this.type == 203)
					{
						num90 = 1.2f;
					}
					else if (this.type == 338)
					{
						num90 = 1.75f;
					}
					else if (this.type == 339)
					{
						num90 = 1.25f;
					}
					else if (this.type == 340)
					{
						num90 = 2f;
					}
					else if (this.type == 385)
					{
						num90 = 1.8f;
					}
					else if (this.type == 389)
					{
						num90 = 2.25f;
					}
					else if (this.type == 462)
					{
						num90 = 4f;
					}
					else if (this.type == 463)
					{
						num90 = 0.75f;
					}
					else if (this.type == 466)
					{
						num90 = 3.75f;
					}
					else if (this.type == 469)
					{
						num90 = 3.25f;
					}
					else if (this.type == 480)
					{
						num90 = 1.5f + (1f - (float)this.life / (float)this.lifeMax) * 2f;
					}
					else if (this.type == 425)
					{
						num90 = 6f;
					}
					else if (this.type == 429)
					{
						num90 = 4f;
					}
					if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 342)
					{
						num90 *= 1f + (1f - this.scale);
					}
					if (this.velocity.X < -num90 || this.velocity.X > num90)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num90 && this.direction == 1)
					{
						if (this.type == 466 && this.velocity.X < -2f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num90)
						{
							this.velocity.X = num90;
						}
					}
					else if (this.velocity.X > -num90 && this.direction == -1)
					{
						if (this.type == 466 && this.velocity.X > 2f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num90)
						{
							this.velocity.X = -num90;
						}
					}
					if (this.velocity.Y == 0f && this.type == 462 && ((this.direction > 0 && this.velocity.X < 0f) || (this.direction < 0 && this.velocity.X > 0f)))
					{
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				else if (this.type >= 269 && this.type <= 280)
				{
					float num91 = 1.5f;
					if (this.type == 269)
					{
						num91 = 2f;
					}
					if (this.type == 270)
					{
						num91 = 1f;
					}
					if (this.type == 271)
					{
						num91 = 1.5f;
					}
					if (this.type == 272)
					{
						num91 = 3f;
					}
					if (this.type == 273)
					{
						num91 = 1.25f;
					}
					if (this.type == 274)
					{
						num91 = 3f;
					}
					if (this.type == 275)
					{
						num91 = 3.25f;
					}
					if (this.type == 276)
					{
						num91 = 2f;
					}
					if (this.type == 277)
					{
						num91 = 2.75f;
					}
					if (this.type == 278)
					{
						num91 = 1.8f;
					}
					if (this.type == 279)
					{
						num91 = 1.3f;
					}
					if (this.type == 280)
					{
						num91 = 2.5f;
					}
					num91 *= 1f + (1f - this.scale);
					if (this.velocity.X < -num91 || this.velocity.X > num91)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num91 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num91)
						{
							this.velocity.X = num91;
						}
					}
					else if (this.velocity.X > -num91 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num91)
						{
							this.velocity.X = -num91;
						}
					}
				}
				else if (this.type >= 305 && this.type <= 314)
				{
					float num92 = 1.5f;
					if (this.type == 305 || this.type == 310)
					{
						num92 = 2f;
					}
					if (this.type == 306 || this.type == 311)
					{
						num92 = 1.25f;
					}
					if (this.type == 307 || this.type == 312)
					{
						num92 = 2.25f;
					}
					if (this.type == 308 || this.type == 313)
					{
						num92 = 1.5f;
					}
					if (this.type == 309 || this.type == 314)
					{
						num92 = 1f;
					}
					if (this.type < 310)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.85f;
							if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
							{
								this.velocity.Y = -7f;
								this.velocity.X = num92 * (float)this.direction;
							}
						}
						else if (this.spriteDirection == this.direction)
						{
							this.velocity.X = (this.velocity.X * 10f + num92 * (float)this.direction) / 11f;
						}
					}
					else if (this.velocity.X < -num92 || this.velocity.X > num92)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num92 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num92)
						{
							this.velocity.X = num92;
						}
					}
					else if (this.velocity.X > -num92 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num92)
						{
							this.velocity.X = -num92;
						}
					}
				}
				else if (this.type == 67 || this.type == 220 || this.type == 428)
				{
					if (this.velocity.X < -0.5f || this.velocity.X > 0.5f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < 0.5f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.03f;
						if (this.velocity.X > 0.5f)
						{
							this.velocity.X = 0.5f;
						}
					}
					else if (this.velocity.X > -0.5f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.03f;
						if (this.velocity.X < -0.5f)
						{
							this.velocity.X = -0.5f;
						}
					}
				}
				else if (this.type == 78 || this.type == 79 || this.type == 80)
				{
					float num93 = 1f;
					float num94 = 0.05f;
					if (this.life < this.lifeMax / 2)
					{
						num93 = 2f;
						num94 = 0.1f;
					}
					if (this.type == 79)
					{
						num93 *= 1.5f;
					}
					if (this.velocity.X < -num93 || this.velocity.X > num93)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num93 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num94;
						if (this.velocity.X > num93)
						{
							this.velocity.X = num93;
						}
					}
					else if (this.velocity.X > -num93 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num94;
						if (this.velocity.X < -num93)
						{
							this.velocity.X = -num93;
						}
					}
				}
				else if (this.type == 287)
				{
					float num95 = 5f;
					float num96 = 0.2f;
					if (this.velocity.X < -num95 || this.velocity.X > num95)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num95 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num96;
						if (this.velocity.X > num95)
						{
							this.velocity.X = num95;
						}
					}
					else if (this.velocity.X > -num95 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num96;
						if (this.velocity.X < -num95)
						{
							this.velocity.X = -num95;
						}
					}
				}
				else if (this.type == 243)
				{
					float num97 = 1f;
					float num98 = 0.07f;
					num97 += (1f - (float)this.life / (float)this.lifeMax) * 1.5f;
					num98 += (1f - (float)this.life / (float)this.lifeMax) * 0.15f;
					if (this.velocity.X < -num97 || this.velocity.X > num97)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num97 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num98;
						if (this.velocity.X > num97)
						{
							this.velocity.X = num97;
						}
					}
					else if (this.velocity.X > -num97 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num98;
						if (this.velocity.X < -num97)
						{
							this.velocity.X = -num97;
						}
					}
				}
				else if (this.type == 251)
				{
					float num99 = 1f;
					float num100 = 0.08f;
					num99 += (1f - (float)this.life / (float)this.lifeMax) * 2f;
					num100 += (1f - (float)this.life / (float)this.lifeMax) * 0.2f;
					if (this.velocity.X < -num99 || this.velocity.X > num99)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num99 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num100;
						if (this.velocity.X > num99)
						{
							this.velocity.X = num99;
						}
					}
					else if (this.velocity.X > -num99 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num100;
						if (this.velocity.X < -num99)
						{
							this.velocity.X = -num99;
						}
					}
				}
				else if (this.type == 386)
				{
					if (this.ai[2] > 0f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
					}
					else
					{
						float num101 = 0.15f;
						float num102 = 1.5f;
						if (this.velocity.X < -num102 || this.velocity.X > num102)
						{
							if (this.velocity.Y == 0f)
							{
								this.velocity *= 0.7f;
							}
						}
						else if (this.velocity.X < num102 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + num101;
							if (this.velocity.X > num102)
							{
								this.velocity.X = num102;
							}
						}
						else if (this.velocity.X > -num102 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - num101;
							if (this.velocity.X < -num102)
							{
								this.velocity.X = -num102;
							}
						}
					}
				}
				else if (this.type == 460)
				{
					float num103 = 3f;
					float num104 = 0.1f;
					if (Math.Abs(this.velocity.X) > 2f)
					{
						num104 *= 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 2.5)
					{
						num104 *= 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 3f)
					{
						num104 *= 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 3.5)
					{
						num104 *= 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 4f)
					{
						num104 *= 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 4.5)
					{
						num104 *= 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 5f)
					{
						num104 *= 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 5.5)
					{
						num104 *= 0.8f;
					}
					num103 += (1f - (float)this.life / (float)this.lifeMax) * 3f;
					if (this.velocity.X < -num103 || this.velocity.X > num103)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num103 && this.direction == 1)
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.93f;
						}
						this.velocity.X = this.velocity.X + num104;
						if (this.velocity.X > num103)
						{
							this.velocity.X = num103;
						}
					}
					else if (this.velocity.X > -num103 && this.direction == -1)
					{
						if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.93f;
						}
						this.velocity.X = this.velocity.X - num104;
						if (this.velocity.X < -num103)
						{
							this.velocity.X = -num103;
						}
					}
				}
				else if (this.type == 508)
				{
					float num105 = 2.5f;
					float num106 = 40f;
					float num107 = Math.Abs(this.velocity.X);
					if (num107 > 2.75f)
					{
						num105 = 3.5f;
						num106 += 80f;
					}
					else if ((double)num107 > 2.25)
					{
						num105 = 3f;
						num106 += 60f;
					}
					if ((double)Math.Abs(this.velocity.Y) < 0.5)
					{
						if (this.velocity.X > 0f && this.direction < 0)
						{
							this.velocity *= 0.9f;
						}
						if (this.velocity.X < 0f && this.direction > 0)
						{
							this.velocity *= 0.9f;
						}
					}
					if (Math.Abs(this.velocity.Y) > NPC.gravity)
					{
						num106 *= 3f;
					}
					if (this.velocity.X <= 0f && this.direction < 0)
					{
						this.velocity.X = (this.velocity.X * num106 - num105) / (num106 + 1f);
					}
					else if (this.velocity.X >= 0f && this.direction > 0)
					{
						this.velocity.X = (this.velocity.X * num106 + num105) / (num106 + 1f);
					}
					else if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 20f && Math.Abs(this.velocity.Y) <= NPC.gravity)
					{
						this.velocity.X = this.velocity.X * 0.99f;
						this.velocity.X = this.velocity.X + (float)this.direction * 0.025f;
					}
				}
				else if (this.type == 391 || this.type == 427 || this.type == 415 || this.type == 419 || this.type == 518 || this.type == 532)
				{
					float num108 = 5f;
					float num109 = 0.25f;
					float scaleFactor5 = 0.7f;
					if (this.type == 427)
					{
						num108 = 6f;
						num109 = 0.2f;
						scaleFactor5 = 0.8f;
					}
					else if (this.type == 415)
					{
						num108 = 4f;
						num109 = 0.1f;
						scaleFactor5 = 0.95f;
					}
					else if (this.type == 419)
					{
						num108 = 6f;
						num109 = 0.15f;
						scaleFactor5 = 0.85f;
					}
					else if (this.type == 518)
					{
						num108 = 5f;
						num109 = 0.1f;
						scaleFactor5 = 0.95f;
					}
					else if (this.type == 532)
					{
						num108 = 5f;
						num109 = 0.15f;
						scaleFactor5 = 0.98f;
					}
					if (this.velocity.X < -num108 || this.velocity.X > num108)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= scaleFactor5;
						}
					}
					else if (this.velocity.X < num108 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num109;
						if (this.velocity.X > num108)
						{
							this.velocity.X = num108;
						}
					}
					else if (this.velocity.X > -num108 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num109;
						if (this.velocity.X < -num108)
						{
							this.velocity.X = -num108;
						}
					}
				}
				else if ((this.type >= 430 && this.type <= 436) || this.type == 494 || this.type == 495)
				{
					if (this.ai[2] == 0f)
					{
						this.damage = this.defDamage;
						float num110 = 1f;
						num110 *= 1f + (1f - this.scale);
						if (this.velocity.X < -num110 || this.velocity.X > num110)
						{
							if (this.velocity.Y == 0f)
							{
								this.velocity *= 0.8f;
							}
						}
						else if (this.velocity.X < num110 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + 0.07f;
							if (this.velocity.X > num110)
							{
								this.velocity.X = num110;
							}
						}
						else if (this.velocity.X > -num110 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - 0.07f;
							if (this.velocity.X < -num110)
							{
								this.velocity.X = -num110;
							}
						}
						if (this.velocity.Y == 0f && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0) && !Main.player[this.target].dead)
						{
							Vector2 vector16 = base.Center - Main.player[this.target].Center;
							int num111 = 50;
							if (this.type >= 494 && this.type <= 495)
							{
								num111 = 42;
							}
							if (vector16.Length() < (float)num111 && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.velocity.X = this.velocity.X * 0.7f;
								this.ai[2] = 1f;
							}
						}
					}
					else
					{
						this.damage = (int)((double)this.defDamage * 1.5);
						this.ai[3] = 1f;
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)Math.Abs(this.velocity.X) < 0.1)
						{
							this.velocity.X = 0f;
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 20f || this.velocity.Y != 0f || (Main.dayTime && (double)this.position.Y < Main.worldSurface * 16.0))
						{
							this.ai[2] = 0f;
						}
					}
				}
				else if (this.type != 110 && this.type != 111 && this.type != 206 && this.type != 214 && this.type != 215 && this.type != 216 && this.type != 290 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350 && this.type != 379 && this.type != 380 && this.type != 381 && this.type != 382 && (this.type < 449 || this.type > 452) && this.type != 468 && this.type != 481 && this.type != 411 && this.type != 409 && (this.type < 498 || this.type > 506) && this.type != 424 && this.type != 426 && this.type != 520)
				{
					float num112 = 1f;
					if (this.type == 186)
					{
						num112 = 1.1f;
					}
					if (this.type == 187)
					{
						num112 = 0.9f;
					}
					if (this.type == 188)
					{
						num112 = 1.2f;
					}
					if (this.type == 189)
					{
						num112 = 0.8f;
					}
					if (this.type == 132)
					{
						num112 = 0.95f;
					}
					if (this.type == 200)
					{
						num112 = 0.87f;
					}
					if (this.type == 223)
					{
						num112 = 1.05f;
					}
					if (this.type == 489)
					{
						float num113 = (Main.player[this.target].Center - base.Center).Length();
						num113 *= 0.0025f;
						if ((double)num113 > 1.5)
						{
							num113 = 1.5f;
						}
						if (Main.expertMode)
						{
							num112 = 3f - num113;
						}
						else
						{
							num112 = 2.5f - num113;
						}
						num112 *= 0.8f;
					}
					if (this.type == 489 || this.type == 3 || this.type == 132 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 331 || this.type == 332)
					{
						num112 *= 1f + (1f - this.scale);
					}
					if (this.velocity.X < -num112 || this.velocity.X > num112)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num112 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num112)
						{
							this.velocity.X = num112;
						}
					}
					else if (this.velocity.X > -num112 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num112)
						{
							this.velocity.X = -num112;
						}
					}
				}
				if (this.type >= 277 && this.type <= 280)
				{
				}
				else if (this.type == 520)
				{
				}
				else if (this.type == 525)
				{
				}
				else if (this.type == 526)
				{
				}
				else if (this.type == 527)
				{
				}
				else if (this.type == 415)
				{
					this.hide = false;
					for (int num114 = 0; num114 < 200; num114++)
					{
						if (Main.npc[num114].active && Main.npc[num114].type == 416 && Main.npc[num114].ai[0] == (float)this.whoAmI)
						{
							this.hide = true;
							break;
						}
					}
				}
				else if (this.type == 258)
				{
					if (this.velocity.Y != 0f)
					{
						this.TargetClosest(true);
						this.spriteDirection = this.direction;
						if (Main.player[this.target].Center.X < this.position.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						else if (Main.player[this.target].Center.X > this.position.X + (float)this.width && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						if (Main.player[this.target].Center.X < this.position.X && this.velocity.X > -5f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (Main.player[this.target].Center.X > this.position.X + (float)this.width && this.velocity.X < 5f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
					}
					else if (Main.player[this.target].Center.Y + 50f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -7f;
					}
				}
				else if (this.type == 425)
				{
					if (this.velocity.Y == 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.velocity.Y != 0f && this.ai[2] == 1f)
					{
						this.TargetClosest(true);
						this.spriteDirection = -this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float num115 = Main.player[this.target].Center.X - (float)(this.direction * 400) - base.Center.X;
							float num116 = Main.player[this.target].Bottom.Y - base.Bottom.Y;
							if (num115 < 0f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							else if (num115 > 0f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (num115 < 0f && this.velocity.X > -5f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (num115 > 0f && this.velocity.X < 5f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
							if (num116 < -20f && this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.8f;
							}
							else if (num116 > 20f && this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.8f;
							}
							if (num116 < -20f && this.velocity.Y > -5f)
							{
								this.velocity.Y = this.velocity.Y - 0.3f;
							}
							else if (num116 > 20f && this.velocity.Y < 5f)
							{
								this.velocity.Y = this.velocity.Y + 0.3f;
							}
						}
						for (int num117 = 0; num117 < 200; num117++)
						{
							if (num117 != this.whoAmI && Main.npc[num117].active && Main.npc[num117].type == this.type && Math.Abs(this.position.X - Main.npc[num117].position.X) + Math.Abs(this.position.Y - Main.npc[num117].position.Y) < (float)this.width)
							{
								if (this.position.X < Main.npc[num117].position.X)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								else
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.position.Y < Main.npc[num117].position.Y)
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -5f;
						this.ai[2] = 1f;
					}
					if (Main.netMode != 1)
					{
						this.localAI[2] += 1f;
						if (this.localAI[2] >= (float)(360 + Main.rand.Next(360)) && base.Distance(Main.player[this.target].Center) < 400f && Math.Abs(base.DirectionTo(Main.player[this.target].Center).Y) < 0.5f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							this.localAI[2] = 0f;
							Vector2 vector17 = base.Center + new Vector2((float)(this.direction * 30), 2f);
							Vector2 vector18 = base.DirectionTo(Main.player[this.target].Center) * 7f;
							if (vector18.HasNaNs())
							{
								vector18 = new Vector2((float)(this.direction * 8), 0f);
							}
							int num118 = Main.expertMode ? 50 : 75;
							for (int num119 = 0; num119 < 4; num119++)
							{
								Vector2 vector19 = vector18 + Utils.RandomVector2(Main.rand, -0.8f, 0.8f);
								Projectile.NewProjectile(vector17.X, vector17.Y, vector19.X, vector19.Y, 577, num118, 1f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				else if (this.type == 427)
				{
					if (this.velocity.Y == 0f)
					{
						this.ai[2] = 0f;
						this.rotation = 0f;
					}
					else
					{
						this.rotation = this.velocity.X * 0.1f;
					}
					if (this.velocity.Y != 0f && this.ai[2] == 1f)
					{
						this.TargetClosest(true);
						this.spriteDirection = -this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float num120 = Main.player[this.target].Center.X - base.Center.X;
							float num121 = Main.player[this.target].Center.Y - base.Center.Y;
							if (num120 < 0f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							else if (num120 > 0f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							if (num120 < -20f && this.velocity.X > -6f)
							{
								this.velocity.X = this.velocity.X - 0.015f;
							}
							else if (num120 > 20f && this.velocity.X < 6f)
							{
								this.velocity.X = this.velocity.X + 0.015f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
							if (num121 < -20f && this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							else if (num121 > 20f && this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							if (num121 < -20f && this.velocity.Y > -6f)
							{
								this.velocity.Y = this.velocity.Y - 0.15f;
							}
							else if (num121 > 20f && this.velocity.Y < 6f)
							{
								this.velocity.Y = this.velocity.Y + 0.15f;
							}
						}
						for (int num122 = 0; num122 < 200; num122++)
						{
							if (num122 != this.whoAmI && Main.npc[num122].active && Main.npc[num122].type == this.type && Math.Abs(this.position.X - Main.npc[num122].position.X) + Math.Abs(this.position.Y - Main.npc[num122].position.Y) < (float)this.width)
							{
								if (this.position.X < Main.npc[num122].position.X)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								else
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.position.Y < Main.npc[num122].position.Y)
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -5f;
						this.ai[2] = 1f;
					}
				}
				else if (this.type == 426)
				{
					if (this.ai[1] > 0f && this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.85f;
						if (this.velocity.Y == 0f)
						{
							this.velocity.Y = -0.4f;
						}
					}
					if (this.velocity.Y != 0f)
					{
						this.TargetClosest(true);
						this.spriteDirection = this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float num123 = Main.player[this.target].Center.X - (float)(this.direction * 300) - base.Center.X;
							if (num123 < 40f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							else if (num123 > 40f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							if (num123 < 40f && this.velocity.X > -5f)
							{
								this.velocity.X = this.velocity.X - 0.2f;
							}
							else if (num123 > 40f && this.velocity.X < 5f)
							{
								this.velocity.X = this.velocity.X + 0.2f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -6f;
					}
					for (int num124 = 0; num124 < 200; num124++)
					{
						if (num124 != this.whoAmI && Main.npc[num124].active && Main.npc[num124].type == this.type && Math.Abs(this.position.X - Main.npc[num124].position.X) + Math.Abs(this.position.Y - Main.npc[num124].position.Y) < (float)this.width)
						{
							if (this.position.X < Main.npc[num124].position.X)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.position.Y < Main.npc[num124].position.Y)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
						}
					}
				}
				else if (this.type == 185)
				{
					if (this.velocity.Y == 0f)
					{
						this.rotation = 0f;
						this.localAI[0] = 0f;
					}
					else if (this.localAI[0] == 1f)
					{
						this.rotation += this.velocity.X * 0.05f;
					}
				}
				else if (this.type == 428)
				{
					if (this.velocity.Y == 0f)
					{
						this.rotation = 0f;
					}
					else
					{
						this.rotation += this.velocity.X * 0.08f;
					}
				}
				if (this.type == 159 && Main.netMode != 1)
				{
					Vector2 vector20 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num126 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector20.X;
					float num127 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector20.Y;
					float num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
					if (num128 > 300f)
					{
						this.Transform(158);
					}
				}
				if (this.type == 164 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num129 = (int)base.Center.X / 16;
					int num130 = (int)base.Center.Y / 16;
					bool flag11 = false;
					for (int num131 = num129 - 1; num131 <= num129 + 1; num131++)
					{
						for (int num132 = num130 - 1; num132 <= num130 + 1; num132++)
						{
							if (Main.tile[num131, num132].wall > 0)
							{
								flag11 = true;
							}
						}
					}
					if (flag11)
					{
						this.Transform(165);
					}
				}
				if (this.type == 239 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num133 = (int)base.Center.X / 16;
					int num134 = (int)base.Center.Y / 16;
					bool flag12 = false;
					for (int num135 = num133 - 1; num135 <= num133 + 1; num135++)
					{
						for (int num136 = num134 - 1; num136 <= num134 + 1; num136++)
						{
							if (Main.tile[num135, num136].wall > 0)
							{
								flag12 = true;
							}
						}
					}
					if (flag12)
					{
						this.Transform(240);
					}
				}
				if (this.type == 530 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num137 = (int)base.Center.X / 16;
					int num138 = (int)base.Center.Y / 16;
					bool flag13 = false;
					for (int num139 = num137 - 1; num139 <= num137 + 1; num139++)
					{
						for (int num140 = num138 - 1; num140 <= num138 + 1; num140++)
						{
							if (Main.tile[num139, num140].wall > 0)
							{
								flag13 = true;
							}
						}
					}
					if (flag13)
					{
						this.Transform(531);
					}
				}
				if (Main.netMode != 1 && Main.expertMode && this.target >= 0 && (this.type == 163 || this.type == 238) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
				{
					this.localAI[0] += 1f;
					if (this.justHit)
					{
						this.localAI[0] -= (float)Main.rand.Next(20, 60);
						if (this.localAI[0] < 0f)
						{
							this.localAI[0] = 0f;
						}
					}
					if (this.localAI[0] > (float)Main.rand.Next(180, 900))
					{
						this.localAI[0] = 0f;
						Vector2 vector21 = Main.player[this.target].Center - base.Center;
						vector21.Normalize();
						vector21 *= 8f;
						Projectile.NewProjectile(base.Center.X, base.Center.Y, vector21.X, vector21.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
					}
				}
				if (this.type == 163 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num141 = (int)base.Center.X / 16;
					int num142 = (int)base.Center.Y / 16;
					bool flag14 = false;
					for (int num143 = num141 - 1; num143 <= num141 + 1; num143++)
					{
						for (int num144 = num142 - 1; num144 <= num142 + 1; num144++)
						{
							if (Main.tile[num143, num144].wall > 0)
							{
								flag14 = true;
							}
						}
					}
					if (flag14)
					{
						this.Transform(238);
					}
				}
				if (this.type == 236 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num145 = (int)base.Center.X / 16;
					int num146 = (int)base.Center.Y / 16;
					bool flag15 = false;
					for (int num147 = num145 - 1; num147 <= num145 + 1; num147++)
					{
						for (int num148 = num146 - 1; num148 <= num146 + 1; num148++)
						{
							if (Main.tile[num147, num148].wall > 0)
							{
								flag15 = true;
							}
						}
					}
					if (flag15)
					{
						this.Transform(237);
					}
				}
				if (this.type == 243)
				{
					if (this.justHit && Main.rand.Next(3) == 0)
					{
						this.ai[2] -= (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					float num149 = (float)Main.rand.Next(30, 900);
					num149 *= (float)this.life / (float)this.lifeMax;
					num149 += 30f;
					if (Main.netMode != 1 && this.ai[2] >= num149 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && ((this.direction > 0 && base.Center.X < Main.player[this.target].Center.X) || (this.direction < 0 && base.Center.X > Main.player[this.target].Center.X)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float num150 = 15f;
						Vector2 vector22 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 20f);
						vector22.X += (float)(10 * this.direction);
						float num151 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector22.X;
						float num152 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector22.Y;
						num151 += (float)Main.rand.Next(-40, 41);
						num152 += (float)Main.rand.Next(-40, 41);
						float num153 = (float)Math.Sqrt((double)(num151 * num151 + num152 * num152));
						this.netUpdate = true;
						num153 = num150 / num153;
						num151 *= num153;
						num152 *= num153;
						int num154 = 32;
						int num155 = 257;
						vector22.X += num151 * 3f;
						vector22.Y += num152 * 3f;
						Projectile.NewProjectile(vector22.X, vector22.Y, num151, num152, num155, num154, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 251)
				{
					if (this.justHit)
					{
						this.ai[2] -= (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					float num156 = (float)Main.rand.Next(60, 1800);
					num156 *= (float)this.life / (float)this.lifeMax;
					num156 += 15f;
					if (Main.netMode != 1 && this.ai[2] >= num156 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && ((this.direction > 0 && base.Center.X < Main.player[this.target].Center.X) || (this.direction < 0 && base.Center.X > Main.player[this.target].Center.X)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float num157 = 15f;
						Vector2 vector23 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 12f);
						vector23.X += (float)(6 * this.direction);
						float num158 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector23.X;
						float num159 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector23.Y;
						num158 += (float)Main.rand.Next(-40, 41);
						num159 += (float)Main.rand.Next(-30, 0);
						float num160 = (float)Math.Sqrt((double)(num158 * num158 + num159 * num159));
						this.netUpdate = true;
						num160 = num157 / num160;
						num158 *= num160;
						num159 *= num160;
						int num161 = 30;
						int num162 = 83;
						vector23.X += num158 * 3f;
						vector23.Y += num159 * 3f;
						Projectile.NewProjectile(vector23.X, vector23.Y, num158, num159, num162, num161, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 386)
				{
					if (this.confused)
					{
						this.ai[2] = -60f;
					}
					else
					{
						if (this.ai[2] < 60f)
						{
							this.ai[2] += 1f;
						}
						if (this.ai[2] > 0f && NPC.CountNPCS(387) >= 4 * NPC.CountNPCS(386))
						{
							this.ai[2] = 0f;
						}
						if (this.justHit)
						{
							this.ai[2] = -30f;
						}
						if (this.ai[2] == 30f)
						{
							int num163 = (int)this.position.X / 16;
							int num164 = (int)this.position.Y / 16;
							int num165 = (int)this.position.X / 16;
							int num166 = (int)this.position.Y / 16;
							int num167 = 5;
							int num168 = 0;
							bool flag16 = false;
							int num169 = 2;
							int num170 = 0;
							while (!flag16 && num168 < 100)
							{
								num168++;
								int num171 = Main.rand.Next(num163 - num167, num163 + num167);
								int num172 = Main.rand.Next(num164 - num167, num164 + num167);
								for (int num173 = num172; num173 < num164 + num167; num173++)
								{
									if ((num173 < num164 - num169 || num173 > num164 + num169 || num171 < num163 - num169 || num171 > num163 + num169) && (num173 < num166 - num170 || num173 > num166 + num170 || num171 < num165 - num170 || num171 > num165 + num170) && Main.tile[num171, num173].nactive())
									{
										bool flag17 = true;
										if (Main.tile[num171, num173 - 1].lava())
										{
											flag17 = false;
										}
										if (flag17 && Main.tileSolid[(int)Main.tile[num171, num173].type] && !Collision.SolidTiles(num171 - 1, num171 + 1, num173 - 4, num173 - 1))
										{
											int num174 = NPC.NewNPC(num171 * 16 - this.width / 2, num173 * 16, 387, 0, 0f, 0f, 0f, 0f, 255);
											Main.npc[num174].position.Y = (float)(num173 * 16 - Main.npc[num174].height);
											flag16 = true;
											this.netUpdate = true;
											break;
										}
									}
								}
							}
						}
						if (this.ai[2] == 60f)
						{
							this.ai[2] = -120f;
						}
					}
				}
				if (this.type == 389)
				{
					if (this.confused)
					{
						this.ai[2] = -60f;
					}
					else
					{
						if (this.ai[2] < 20f)
						{
							this.ai[2] += 1f;
						}
						if (this.justHit)
						{
							this.ai[2] = -30f;
						}
						if (this.ai[2] == 20f && Main.netMode != 1)
						{
							this.ai[2] = (float)(-10 + Main.rand.Next(3) * -10);
							Projectile.NewProjectile(base.Center.X, base.Center.Y + 8f, (float)(this.direction * 6), 0f, 437, 25, 1f, Main.myPlayer, 0f, 0f);
						}
					}
				}
				if (this.type == 110 || this.type == 111 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 350 || this.type == 379 || this.type == 380 || this.type == 381 || this.type == 382 || (this.type >= 449 && this.type <= 452) || (this.type == 468 || this.type == 481 || this.type == 411 || this.type == 409 || (this.type >= 498 && this.type <= 506)) || this.type == 424 || this.type == 426 || this.type == 520)
				{
					bool flag18 = this.type == 381 || this.type == 382 || this.type == 520;
					bool flag19 = this.type == 426;
					bool flag20 = true;
					int num175 = -1;
					int num176 = -1;
					if (this.type == 411)
					{
						flag18 = true;
						num175 = 90;
						num176 = 90;
						if (this.ai[1] <= 150f)
						{
							flag20 = false;
						}
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					else
					{
						if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						if (this.justHit)
						{
							this.ai[1] = 30f;
							this.ai[2] = 0f;
						}
						int num177 = 70;
						if (this.type == 379 || this.type == 380)
						{
							num177 = 80;
						}
						if (this.type == 381 || this.type == 382)
						{
							num177 = 80;
						}
						if (this.type == 520)
						{
							num177 = 15;
						}
						if (this.type == 350)
						{
							num177 = 110;
						}
						if (this.type == 291)
						{
							num177 = 200;
						}
						if (this.type == 292)
						{
							num177 = 120;
						}
						if (this.type == 293)
						{
							num177 = 90;
						}
						if (this.type == 111)
						{
							num177 = 180;
						}
						if (this.type == 206)
						{
							num177 = 50;
						}
						if (this.type == 214)
						{
							num177 = 40;
						}
						if (this.type == 215)
						{
							num177 = 80;
						}
						if (this.type == 290)
						{
							num177 = 30;
						}
						if (this.type == 411)
						{
							num177 = 300;
						}
						if (this.type == 409)
						{
							num177 = 60;
						}
						if (this.type == 424)
						{
							num177 = 180;
						}
						if (this.type == 426)
						{
							num177 = 60;
						}
						bool flag21 = false;
						if (this.type == 216)
						{
							if (this.localAI[2] >= 20f)
							{
								flag21 = true;
							}
							if (flag21)
							{
								num177 = 60;
							}
							else
							{
								num177 = 8;
							}
						}
						int num178 = num177 / 2;
						if (this.type == 424)
						{
							num178 = num177 - 1;
						}
						if (this.type == 426)
						{
							num178 = num177 - 1;
						}
						if (this.ai[2] > 0f)
						{
							if (flag20)
							{
								this.TargetClosest(true);
							}
							if (this.ai[1] == (float)num178)
							{
								if (this.type == 216)
								{
									this.localAI[2] += 1f;
								}
								float num179 = 11f;
								if (this.type == 111)
								{
									num179 = 9f;
								}
								if (this.type == 206)
								{
									num179 = 7f;
								}
								if (this.type == 290)
								{
									num179 = 9f;
								}
								if (this.type == 293)
								{
									num179 = 4f;
								}
								if (this.type == 214)
								{
									num179 = 14f;
								}
								if (this.type == 215)
								{
									num179 = 16f;
								}
								if (this.type == 382)
								{
									num179 = 7f;
								}
								if (this.type == 520)
								{
									num179 = 8f;
								}
								if (this.type == 409)
								{
									num179 = 4f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num179 = 7f;
								}
								if (this.type == 481)
								{
									num179 = 9f;
								}
								if (this.type == 468)
								{
									num179 = 7.5f;
								}
								if (this.type == 411)
								{
									num179 = 1f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num179 = 7f;
								}
								Vector2 value9 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								if (this.type == 481)
								{
									value9.Y -= 14f;
								}
								if (this.type == 206)
								{
									value9.Y -= 10f;
								}
								if (this.type == 290)
								{
									value9.Y -= 10f;
								}
								if (this.type == 381 || this.type == 382)
								{
									value9.Y += 6f;
								}
								if (this.type == 520)
								{
									value9.Y = this.position.Y + 20f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									value9.Y -= 8f;
								}
								if (this.type == 426)
								{
									value9 += new Vector2((float)(this.spriteDirection * 2), -12f);
								}
								float num180 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - value9.X;
								float num181 = Math.Abs(num180) * 0.1f;
								if (this.type == 291 || this.type == 292)
								{
									num181 = 0f;
								}
								if (this.type == 215)
								{
									num181 = Math.Abs(num180) * 0.08f;
								}
								if (this.type == 214 || (this.type == 216 && !flag21))
								{
									num181 = 0f;
								}
								if (this.type == 381 || this.type == 382 || this.type == 520)
								{
									num181 = 0f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num181 = Math.Abs(num180) * (float)Main.rand.Next(10, 50) * 0.01f;
								}
								if (this.type == 468)
								{
									num181 = Math.Abs(num180) * (float)Main.rand.Next(10, 50) * 0.01f;
								}
								if (this.type == 481)
								{
									num181 = Math.Abs(num180) * (float)Main.rand.Next(-10, 11) * 0.0025f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num181 = Math.Abs(num180) * (float)Main.rand.Next(1, 11) * 0.0025f;
								}
								float num182 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - value9.Y - num181;
								if (this.type == 291)
								{
									num180 += (float)Main.rand.Next(-40, 41) * 0.2f;
									num182 += (float)Main.rand.Next(-40, 41) * 0.2f;
								}
								else if (this.type == 381 || this.type == 382 || this.type == 520)
								{
									num180 += (float)Main.rand.Next(-100, 101) * 0.4f;
									num182 += (float)Main.rand.Next(-100, 101) * 0.4f;
									num180 *= (float)Main.rand.Next(85, 116) * 0.01f;
									num182 *= (float)Main.rand.Next(85, 116) * 0.01f;
									if (this.type == 520)
									{
										num180 += (float)Main.rand.Next(-100, 101) * 0.6f;
										num182 += (float)Main.rand.Next(-100, 101) * 0.6f;
										num180 *= (float)Main.rand.Next(85, 116) * 0.015f;
										num182 *= (float)Main.rand.Next(85, 116) * 0.015f;
									}
								}
								else if (this.type == 481)
								{
									num180 += (float)Main.rand.Next(-40, 41) * 0.4f;
									num182 += (float)Main.rand.Next(-40, 41) * 0.4f;
								}
								else if (this.type >= 498 && this.type <= 506)
								{
									num180 += (float)Main.rand.Next(-40, 41) * 0.3f;
									num182 += (float)Main.rand.Next(-40, 41) * 0.3f;
								}
								else if (this.type != 292)
								{
									num180 += (float)Main.rand.Next(-40, 41);
									num182 += (float)Main.rand.Next(-40, 41);
								}
								float num183 = (float)Math.Sqrt((double)(num180 * num180 + num182 * num182));
								this.netUpdate = true;
								num183 = num179 / num183;
								num180 *= num183;
								num182 *= num183;
								int num184 = 35;
								int num185 = 82;
								if (this.type == 111)
								{
									num184 = 11;
								}
								if (this.type == 206)
								{
									num184 = 37;
								}
								if (this.type == 379 || this.type == 380)
								{
									num184 = 40;
								}
								if (this.type == 350)
								{
									num184 = 45;
								}
								if (this.type == 468)
								{
									num184 = 50;
								}
								if (this.type == 111)
								{
									num185 = 81;
								}
								if (this.type == 379 || this.type == 380)
								{
									num185 = 81;
								}
								if (this.type == 381)
								{
									num185 = 436;
									num184 = 24;
								}
								if (this.type == 382)
								{
									num185 = 438;
									num184 = 30;
								}
								if (this.type == 520)
								{
									num185 = 592;
									num184 = 35;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num185 = 471;
									num184 = 20;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num185 = 572;
									num184 = 14;
								}
								if (this.type == 481)
								{
									num185 = 508;
									num184 = 24;
								}
								if (this.type == 206)
								{
									num185 = 177;
								}
								if (this.type == 468)
								{
									num185 = 501;
								}
								if (this.type == 411)
								{
									num185 = 537;
									num184 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 424)
								{
									num185 = 573;
									num184 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 426)
								{
									num185 = 581;
									num184 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 291)
								{
									num185 = 302;
									num184 = 100;
								}
								if (this.type == 290)
								{
									num185 = 300;
									num184 = 60;
								}
								if (this.type == 293)
								{
									num185 = 303;
									num184 = 60;
								}
								if (this.type == 214)
								{
									num185 = 180;
									num184 = 25;
								}
								if (this.type == 215)
								{
									num185 = 82;
									num184 = 40;
								}
								if (this.type == 292)
								{
									num184 = 50;
									num185 = 180;
								}
								if (this.type == 216)
								{
									num185 = 180;
									num184 = 30;
									if (flag21)
									{
										num184 = 100;
										num185 = 240;
										this.localAI[2] = 0f;
									}
								}
								value9.X += num180;
								value9.Y += num182;
								if (Main.expertMode && this.type == 290)
								{
									num184 = (int)((double)num184 * 0.75);
								}
								if (Main.expertMode && this.type >= 381 && this.type <= 392)
								{
									num184 = (int)((double)num184 * 0.8);
								}
								if (Main.netMode != 1)
								{
									if (this.type == 292)
									{
										for (int num186 = 0; num186 < 4; num186++)
										{
											num180 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - value9.X;
											num182 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - value9.Y;
											num183 = (float)Math.Sqrt((double)(num180 * num180 + num182 * num182));
											num183 = 12f / num183;
											num180 += (float)Main.rand.Next(-40, 41);
											num182 += (float)Main.rand.Next(-40, 41);
											num180 *= num183;
											num182 *= num183;
											Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, 0f);
										}
									}
									else if (this.type == 411)
									{
										Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
									}
									else if (this.type == 424)
									{
										for (int num187 = 0; num187 < 4; num187++)
										{
											Projectile.NewProjectile(base.Center.X - (float)(this.spriteDirection * 4), base.Center.Y + 6f, (float)(-3 + 2 * num187) * 0.15f, (float)(-(float)Main.rand.Next(0, 3)) * 0.2f - 0.1f, num185, num184, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
										}
									}
									else if (this.type == 409)
									{
										int num188 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 410, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num188].velocity = new Vector2(num180, -6f + num182);
									}
									else
									{
										Projectile.NewProjectile(value9.X, value9.Y, num180, num182, num185, num184, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								if (Math.Abs(num182) > Math.Abs(num180) * 2f)
								{
									if (num182 > 0f)
									{
										this.ai[2] = 1f;
									}
									else
									{
										this.ai[2] = 5f;
									}
								}
								else if (Math.Abs(num180) > Math.Abs(num182) * 2f)
								{
									this.ai[2] = 3f;
								}
								else if (num182 > 0f)
								{
									this.ai[2] = 2f;
								}
								else
								{
									this.ai[2] = 4f;
								}
							}
							if ((this.velocity.Y != 0f && !flag19) || this.ai[1] <= 0f)
							{
								this.ai[2] = 0f;
								this.ai[1] = 0f;
							}
							else if (!flag18 || (num175 != -1 && this.ai[1] >= (float)num175 && this.ai[1] < (float)(num175 + num176) && (!flag19 || this.velocity.Y == 0f)))
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.spriteDirection = this.direction;
							}
						}
						if (this.type == 468 && !Main.eclipse)
						{
							flag18 = true;
						}
						else if ((this.ai[2] <= 0f || flag18) && (this.velocity.Y == 0f || flag19) && this.ai[1] <= 0f && !Main.player[this.target].dead)
						{
							bool flag22 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							if (this.type == 520)
							{
								flag22 = Collision.CanHitLine(base.Top + new Vector2(0f, 20f), 0, 0, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							}
							if (Main.player[this.target].stealth == 0f && Main.player[this.target].itemAnimation == 0)
							{
								flag22 = false;
							}
							if (flag22)
							{
								float num189 = 10f;
								Vector2 vector24 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num190 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector24.X;
								float num191 = Math.Abs(num190) * 0.1f;
								float num192 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector24.Y - num191;
								num190 += (float)Main.rand.Next(-40, 41);
								num192 += (float)Main.rand.Next(-40, 41);
								float num193 = (float)Math.Sqrt((double)(num190 * num190 + num192 * num192));
								float num194 = 700f;
								if (this.type == 214)
								{
									num194 = 550f;
								}
								if (this.type == 215)
								{
									num194 = 800f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num194 = 190f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num194 = 200f;
								}
								if (this.type == 481)
								{
									num194 = 400f;
								}
								if (this.type == 468)
								{
									num194 = 400f;
								}
								if (num193 < num194)
								{
									this.netUpdate = true;
									this.velocity.X = this.velocity.X * 0.5f;
									num193 = num189 / num193;
									num190 *= num193;
									num192 *= num193;
									this.ai[2] = 3f;
									this.ai[1] = (float)num177;
									if (Math.Abs(num192) > Math.Abs(num190) * 2f)
									{
										if (num192 > 0f)
										{
											this.ai[2] = 1f;
										}
										else
										{
											this.ai[2] = 5f;
										}
									}
									else if (Math.Abs(num190) > Math.Abs(num192) * 2f)
									{
										this.ai[2] = 3f;
									}
									else if (num192 > 0f)
									{
										this.ai[2] = 2f;
									}
									else
									{
										this.ai[2] = 4f;
									}
								}
							}
						}
						if (this.ai[2] <= 0f || (flag18 && (num175 == -1 || this.ai[1] < (float)num175 || this.ai[1] >= (float)(num175 + num176))))
						{
							float num195 = 1f;
							float num196 = 0.07f;
							float scaleFactor6 = 0.8f;
							if (this.type == 214)
							{
								num195 = 2f;
								num196 = 0.09f;
							}
							else if (this.type == 215)
							{
								num195 = 1.5f;
								num196 = 0.08f;
							}
							else if (this.type == 381 || this.type == 382)
							{
								num195 = 2f;
								num196 = 0.5f;
							}
							else if (this.type == 520)
							{
								num195 = 4f;
								num196 = 1f;
								scaleFactor6 = 0.7f;
							}
							else if (this.type == 411)
							{
								num195 = 2f;
								num196 = 0.5f;
							}
							else if (this.type == 409)
							{
								num195 = 2f;
								num196 = 0.5f;
							}
							bool flag23 = false;
							if ((this.type == 381 || this.type == 382) && Vector2.Distance(base.Center, Main.player[this.target].Center) < 300f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
							{
								flag23 = true;
								this.ai[3] = 0f;
							}
							if (this.type == 520 && Vector2.Distance(base.Center, Main.player[this.target].Center) < 400f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
							{
								flag23 = true;
								this.ai[3] = 0f;
							}
							if (this.velocity.X < -num195 || this.velocity.X > num195 || flag23)
							{
								if (this.velocity.Y == 0f)
								{
									this.velocity *= scaleFactor6;
								}
							}
							else if (this.velocity.X < num195 && this.direction == 1)
							{
								this.velocity.X = this.velocity.X + num196;
								if (this.velocity.X > num195)
								{
									this.velocity.X = num195;
								}
							}
							else if (this.velocity.X > -num195 && this.direction == -1)
							{
								this.velocity.X = this.velocity.X - num196;
								if (this.velocity.X < -num195)
								{
									this.velocity.X = -num195;
								}
							}
						}
						if (this.type == 520)
						{
							this.localAI[2] += 1f;
							if (this.localAI[2] >= 6f)
							{
								this.localAI[2] = 0f;
								this.localAI[3] = Main.player[this.target].DirectionFrom(base.Top + new Vector2(0f, 20f)).ToRotation();
							}
						}
					}
				}
				if (this.type == 109 && Main.netMode != 1 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					if (this.ai[2] > 450f)
					{
						Vector2 vector25 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 24), this.position.Y + 4f);
						int num197 = 3 * this.direction;
						int num198 = -5;
						int num199 = Projectile.NewProjectile(vector25.X, vector25.Y, (float)num197, (float)num198, 75, 0, 0f, Main.myPlayer, 0f, 0f);
						Main.projectile[num199].timeLeft = 300;
						this.ai[2] = 0f;
					}
				}
				bool flag24 = false;
				if (this.velocity.Y == 0f)
				{
					int num200 = (int)(this.position.Y + (float)this.height + 7f) / 16;
					int num201 = (int)this.position.X / 16;
					int num202 = (int)(this.position.X + (float)this.width) / 16;
					for (int num203 = num201; num203 <= num202; num203++)
					{
						if (Main.tile[num203, num200] == null)
						{
							return;
						}
						if (Main.tile[num203, num200].nactive() && Main.tileSolid[(int)Main.tile[num203, num200].type])
						{
							flag24 = true;
							break;
						}
					}
				}
				if (this.type == 428)
				{
					flag24 = false;
				}
				if (this.velocity.Y >= 0f)
				{
					int num204 = 0;
					if (this.velocity.X < 0f)
					{
						num204 = -1;
					}
					if (this.velocity.X > 0f)
					{
						num204 = 1;
					}
					Vector2 position2 = this.position;
					position2.X += this.velocity.X;
					int num205 = (int)((position2.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num204)) / 16f);
					int num206 = (int)((position2.Y + (float)this.height - 1f) / 16f);
					if (Main.tile[num205, num206] == null)
					{
						Main.tile[num205, num206] = new Tile();
					}
					if (Main.tile[num205, num206 - 1] == null)
					{
						Main.tile[num205, num206 - 1] = new Tile();
					}
					if (Main.tile[num205, num206 - 2] == null)
					{
						Main.tile[num205, num206 - 2] = new Tile();
					}
					if (Main.tile[num205, num206 - 3] == null)
					{
						Main.tile[num205, num206 - 3] = new Tile();
					}
					if (Main.tile[num205, num206 + 1] == null)
					{
						Main.tile[num205, num206 + 1] = new Tile();
					}
					if (Main.tile[num205 - num204, num206 - 3] == null)
					{
						Main.tile[num205 - num204, num206 - 3] = new Tile();
					}
					if ((float)(num205 * 16) < position2.X + (float)this.width && (float)(num205 * 16 + 16) > position2.X && ((Main.tile[num205, num206].nactive() && !Main.tile[num205, num206].topSlope() && !Main.tile[num205, num206 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num205, num206].type] && !Main.tileSolidTop[(int)Main.tile[num205, num206].type]) || (Main.tile[num205, num206 - 1].halfBrick() && Main.tile[num205, num206 - 1].nactive())) && (!Main.tile[num205, num206 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 1].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 1].type] || (Main.tile[num205, num206 - 1].halfBrick() && (!Main.tile[num205, num206 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 4].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 4].type]))) && (!Main.tile[num205, num206 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 2].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 2].type]) && (!Main.tile[num205, num206 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num205, num206 - 3].type] || Main.tileSolidTop[(int)Main.tile[num205, num206 - 3].type]) && (!Main.tile[num205 - num204, num206 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num205 - num204, num206 - 3].type]))
					{
						float num207 = (float)(num206 * 16);
						if (Main.tile[num205, num206].halfBrick())
						{
							num207 += 8f;
						}
						if (Main.tile[num205, num206 - 1].halfBrick())
						{
							num207 -= 8f;
						}
						if (num207 < position2.Y + (float)this.height)
						{
							float num208 = position2.Y + (float)this.height - num207;
							float num209 = 16.1f;
							if (this.type == 163 || this.type == 164 || this.type == 236 || this.type == 239 || this.type == 530)
							{
								num209 += 8f;
							}
							if (num208 <= num209)
							{
								this.gfxOffY += this.position.Y + (float)this.height - num207;
								this.position.Y = num207 - (float)this.height;
								if (num208 < 9f)
								{
									this.stepSpeed = 1f;
								}
								else
								{
									this.stepSpeed = 2f;
								}
							}
						}
					}
				}
				if (flag24)
				{
					int num210 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
					int num211 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
					if (this.type == 109 || this.type == 163 || this.type == 164 || this.type == 199 || this.type == 236 || this.type == 239 || this.type == 257 || this.type == 258 || this.type == 290 || this.type == 391 || this.type == 425 || this.type == 427 || this.type == 426 || this.type == 508 || this.type == 415 || this.type == 530 || this.type == 532)
					{
						num210 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 16) * this.direction)) / 16f);
					}
					if (Main.tile[num210, num211] == null)
					{
						Main.tile[num210, num211] = new Tile();
					}
					if (Main.tile[num210, num211 - 1] == null)
					{
						Main.tile[num210, num211 - 1] = new Tile();
					}
					if (Main.tile[num210, num211 - 2] == null)
					{
						Main.tile[num210, num211 - 2] = new Tile();
					}
					if (Main.tile[num210, num211 - 3] == null)
					{
						Main.tile[num210, num211 - 3] = new Tile();
					}
					if (Main.tile[num210, num211 + 1] == null)
					{
						Main.tile[num210, num211 + 1] = new Tile();
					}
					if (Main.tile[num210 + this.direction, num211 - 1] == null)
					{
						Main.tile[num210 + this.direction, num211 - 1] = new Tile();
					}
					if (Main.tile[num210 + this.direction, num211 + 1] == null)
					{
						Main.tile[num210 + this.direction, num211 + 1] = new Tile();
					}
					if (Main.tile[num210 - this.direction, num211 + 1] == null)
					{
						Main.tile[num210 - this.direction, num211 + 1] = new Tile();
					}
					Main.tile[num210, num211 + 1].halfBrick();
					if (Main.tile[num210, num211 - 1].nactive() && (Main.tile[num210, num211 - 1].type == 10 || Main.tile[num210, num211 - 1].type == 388) && flag7)
					{
						this.ai[2] += 1f;
						this.ai[3] = 0f;
						if (this.ai[2] >= 60f)
						{
							if (!Main.bloodMoon && (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 320 || this.type == 321 || this.type == 319))
							{
								this.ai[1] = 0f;
							}
							this.velocity.X = 0.5f * (float)(-(float)this.direction);
							int num212 = 5;
							if (Main.tile[num210, num211 - 1].type == 388)
							{
								num212 = 2;
							}
							this.ai[1] += (float)num212;
							if (this.type == 27)
							{
								this.ai[1] += 1f;
							}
							if (this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296)
							{
								this.ai[1] += 6f;
							}
							this.ai[2] = 0f;
							bool flag25 = false;
							if (this.ai[1] >= 10f)
							{
								flag25 = true;
								this.ai[1] = 10f;
							}
							if (this.type == 460)
							{
								flag25 = true;
							}
							WorldGen.KillTile(num210, num211 - 1, true, false, false);
							if ((Main.netMode != 1 || !flag25) && flag25 && Main.netMode != 1)
							{
								if (this.type == 26)
								{
									WorldGen.KillTile(num210, num211 - 1, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(17, -1, -1, "", 0, (float)num210, (float)(num211 - 1), 0f, 0, 0, 0);
									}
								}
								else
								{
									if (Main.tile[num210, num211 - 1].type == 10)
									{
										bool flag26 = WorldGen.OpenDoor(num210, num211 - 1, this.direction);
										if (!flag26)
										{
											this.ai[3] = (float)num67;
											this.netUpdate = true;
										}
										if (Main.netMode == 2 && flag26)
										{
											NetMessage.SendData(19, -1, -1, "", 0, (float)num210, (float)(num211 - 1), (float)this.direction, 0, 0, 0);
										}
									}
									if (Main.tile[num210, num211 - 1].type == 388)
									{
										bool flag27 = WorldGen.ShiftTallGate(num210, num211 - 1, false);
										if (!flag27)
										{
											this.ai[3] = (float)num67;
											this.netUpdate = true;
										}
										if (Main.netMode == 2 && flag27)
										{
											NetMessage.SendData(19, -1, -1, "", 4, (float)num210, (float)(num211 - 1), 0f, 0, 0, 0);
										}
									}
								}
							}
						}
					}
					else
					{
						int num213 = this.spriteDirection;
						if (this.type == 425)
						{
							num213 *= -1;
						}
						if ((this.velocity.X < 0f && num213 == -1) || (this.velocity.X > 0f && num213 == 1))
						{
							if (this.height >= 32 && Main.tile[num210, num211 - 2].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 2].type])
							{
								if (Main.tile[num210, num211 - 3].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 3].type])
								{
									this.velocity.Y = -8f;
									this.netUpdate = true;
								}
								else
								{
									this.velocity.Y = -7f;
									this.netUpdate = true;
								}
							}
							else if (Main.tile[num210, num211 - 1].nactive() && Main.tileSolid[(int)Main.tile[num210, num211 - 1].type])
							{
								this.velocity.Y = -6f;
								this.netUpdate = true;
							}
							else if (this.position.Y + (float)this.height - (float)(num211 * 16) > 20f && Main.tile[num210, num211].nactive() && !Main.tile[num210, num211].topSlope() && Main.tileSolid[(int)Main.tile[num210, num211].type])
							{
								this.velocity.Y = -5f;
								this.netUpdate = true;
							}
							else if (this.directionY < 0 && this.type != 67 && (!Main.tile[num210, num211 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num210, num211 + 1].type]) && (!Main.tile[num210 + this.direction, num211 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num210 + this.direction, num211 + 1].type]))
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X * 1.5f;
								this.netUpdate = true;
							}
							else if (flag7)
							{
								this.ai[1] = 0f;
								this.ai[2] = 0f;
							}
							if (this.velocity.Y == 0f && flag5 && this.ai[3] == 1f)
							{
								this.velocity.Y = -5f;
							}
						}
						if ((this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 77 || this.type == 104 || this.type == 168 || this.type == 196 || this.type == 385 || this.type == 389 || this.type == 464 || this.type == 470 || (this.type >= 524 && this.type <= 527)) && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 100f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && ((this.direction > 0 && this.velocity.X >= 1f) || (this.direction < 0 && this.velocity.X <= -1f)))
						{
							this.velocity.X = this.velocity.X * 2f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 120 && this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
						if (this.type == 287 && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 150f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && ((this.direction > 0 && this.velocity.X >= 1f) || (this.direction < 0 && this.velocity.X <= -1f)))
						{
							this.velocity.X = (float)(8 * this.direction);
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 287 && this.velocity.Y < 0f)
						{
							this.velocity.X = this.velocity.X * 1.2f;
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
						if (this.type == 460 && this.velocity.Y < 0f)
						{
							this.velocity.X = this.velocity.X * 1.3f;
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
					}
				}
				else if (flag7)
				{
					this.ai[1] = 0f;
					this.ai[2] = 0f;
				}
				if (Main.netMode != 1 && this.type == 120 && this.ai[3] >= (float)num67)
				{
					int num214 = (int)Main.player[this.target].position.X / 16;
					int num215 = (int)Main.player[this.target].position.Y / 16;
					int num216 = (int)this.position.X / 16;
					int num217 = (int)this.position.Y / 16;
					int num218 = 20;
					int num219 = 0;
					bool flag28 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num219 = 100;
						flag28 = true;
					}
					while (!flag28)
					{
						if (num219 >= 100)
						{
							return;
						}
						num219++;
						int num220 = Main.rand.Next(num214 - num218, num214 + num218);
						int num221 = Main.rand.Next(num215 - num218, num215 + num218);
						for (int num222 = num221; num222 < num215 + num218; num222++)
						{
							if ((num222 < num215 - 4 || num222 > num215 + 4 || num220 < num214 - 4 || num220 > num214 + 4) && (num222 < num217 - 1 || num222 > num217 + 1 || num220 < num216 - 1 || num220 > num216 + 1) && Main.tile[num220, num222].nactive())
							{
								bool flag29 = true;
								if (this.type == 32 && Main.tile[num220, num222 - 1].wall == 0)
								{
									flag29 = false;
								}
								else if (Main.tile[num220, num222 - 1].lava())
								{
									flag29 = false;
								}
								if (flag29 && Main.tileSolid[(int)Main.tile[num220, num222].type] && !Collision.SolidTiles(num220 - 1, num220 + 1, num222 - 4, num222 - 1))
								{
									this.position.X = (float)(num220 * 16 - this.width / 2);
									this.position.Y = (float)(num222 * 16 - this.height);
									this.netUpdate = true;
									this.ai[3] = -120f;
								}
							}
						}
					}
				}
			}
			else if (this.aiStyle == 4)
			{
				bool flag30 = false;
				if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.12)
				{
					flag30 = true;
				}
				bool flag31 = false;
				if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.04)
				{
					flag31 = true;
				}
				float num223 = 20f;
				if (flag31)
				{
					num223 = 10f;
				}
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
				{
					this.TargetClosest(true);
				}
				bool dead = Main.player[this.target].dead;
				float num224 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
				float num225 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
				float num226 = (float)Math.Atan2((double)num225, (double)num224) + 1.57f;
				if (num226 < 0f)
				{
					num226 += 6.283f;
				}
				else if ((double)num226 > 6.283)
				{
					num226 -= 6.283f;
				}
				float num227 = 0f;
				if (this.ai[0] == 0f && this.ai[1] == 0f)
				{
					num227 = 0.02f;
				}
				if (this.ai[0] == 0f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					num227 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 0f)
				{
					num227 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					num227 = 0.08f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 4f && this.ai[2] > num223)
				{
					num227 = 0.15f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 5f)
				{
					num227 = 0.05f;
				}
				if (Main.expertMode)
				{
					num227 *= 1.5f;
				}
				if (flag31 && Main.expertMode)
				{
					num227 = 0f;
				}
				if (this.rotation < num226)
				{
					if ((double)(num226 - this.rotation) > 3.1415)
					{
						this.rotation -= num227;
					}
					else
					{
						this.rotation += num227;
					}
				}
				else if (this.rotation > num226)
				{
					if ((double)(this.rotation - num226) > 3.1415)
					{
						this.rotation += num227;
					}
					else
					{
						this.rotation -= num227;
					}
				}
				if (this.rotation > num226 - num227 && this.rotation < num226 + num227)
				{
					this.rotation = num226;
				}
				if (this.rotation < 0f)
				{
					this.rotation += 6.283f;
				}
				else if ((double)this.rotation > 6.283)
				{
					this.rotation -= 6.283f;
				}
				if (this.rotation > num226 - num227 && this.rotation < num226 + num227)
				{
					this.rotation = num226;
				}
				if (Main.dayTime || dead)
				{
					this.velocity.Y = this.velocity.Y - 0.04f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
						return;
					}
				}
				else if (this.ai[0] == 0f)
				{
					if (this.ai[1] == 0f)
					{
						float num229 = 5f;
						float num230 = 0.04f;
						if (Main.expertMode)
						{
							num230 = 0.15f;
							num229 = 7f;
						}
						Vector2 vector26 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num231 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector26.X;
						float num232 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector26.Y;
						float num233 = (float)Math.Sqrt((double)(num231 * num231 + num232 * num232));
						float num234 = num233;
						num233 = num229 / num233;
						num231 *= num233;
						num232 *= num233;
						if (this.velocity.X < num231)
						{
							this.velocity.X = this.velocity.X + num230;
							if (this.velocity.X < 0f && num231 > 0f)
							{
								this.velocity.X = this.velocity.X + num230;
							}
						}
						else if (this.velocity.X > num231)
						{
							this.velocity.X = this.velocity.X - num230;
							if (this.velocity.X > 0f && num231 < 0f)
							{
								this.velocity.X = this.velocity.X - num230;
							}
						}
						if (this.velocity.Y < num232)
						{
							this.velocity.Y = this.velocity.Y + num230;
							if (this.velocity.Y < 0f && num232 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num230;
							}
						}
						else if (this.velocity.Y > num232)
						{
							this.velocity.Y = this.velocity.Y - num230;
							if (this.velocity.Y > 0f && num232 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num230;
							}
						}
						this.ai[2] += 1f;
						float num235 = 600f;
						if (Main.expertMode)
						{
							num235 *= 0.35f;
						}
						if (this.ai[2] >= num235)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.target = 255;
							this.netUpdate = true;
						}
						else if ((this.position.Y + (float)this.height < Main.player[this.target].position.Y && num234 < 500f) || (Main.expertMode && num234 < 500f))
						{
							if (!Main.player[this.target].dead)
							{
								this.ai[3] += 1f;
							}
							float num236 = 110f;
							if (Main.expertMode)
							{
								num236 *= 0.4f;
							}
							if (this.ai[3] >= num236)
							{
								this.ai[3] = 0f;
								this.rotation = num226;
								float num237 = 5f;
								if (Main.expertMode)
								{
									num237 = 6f;
								}
								float num238 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector26.X;
								float num239 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector26.Y;
								float num240 = (float)Math.Sqrt((double)(num238 * num238 + num239 * num239));
								num240 = num237 / num240;
								Vector2 position3 = vector26;
								Vector2 vector27;
								vector27.X = num238 * num240;
								vector27.Y = num239 * num240;
								position3.X += vector27.X * 10f;
								position3.Y += vector27.Y * 10f;
								if (Main.netMode != 1)
								{
									int num241 = NPC.NewNPC((int)position3.X, (int)position3.Y, 5, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num241].velocity.X = vector27.X;
									Main.npc[num241].velocity.Y = vector27.Y;
									if (Main.netMode == 2 && num241 < 200)
									{
										NetMessage.SendData(23, -1, -1, "", num241, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
					else if (this.ai[1] == 1f)
					{
						this.rotation = num226;
						float num243 = 6f;
						if (Main.expertMode)
						{
							num243 = 7f;
						}
						Vector2 vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num244 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector28.X;
						float num245 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector28.Y;
						float num246 = (float)Math.Sqrt((double)(num244 * num244 + num245 * num245));
						num246 = num243 / num246;
						this.velocity.X = num244 * num246;
						this.velocity.Y = num245 * num246;
						this.ai[1] = 2f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
						}
					}
					else if (this.ai[1] == 2f)
					{
						this.ai[2] += 1f;
						if (this.ai[2] >= 40f)
						{
							this.velocity *= 0.98f;
							if (Main.expertMode)
							{
								this.velocity *= 0.985f;
							}
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						int num247 = 150;
						if (Main.expertMode)
						{
							num247 = 100;
						}
						if (this.ai[2] >= (float)num247)
						{
							this.ai[3] += 1f;
							this.ai[2] = 0f;
							this.target = 255;
							this.rotation = num226;
							if (this.ai[3] >= 3f)
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
							}
							else
							{
								this.ai[1] = 1f;
							}
						}
					}
					float num248 = 0.5f;
					if (Main.expertMode)
					{
						num248 = 0.65f;
					}
					if ((float)this.life < (float)this.lifeMax * num248)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.ai[2] = 0f;
						this.ai[3] = 0f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
							return;
						}
					}
				}
				else if (this.ai[0] == 1f || this.ai[0] == 2f)
				{
					if (this.ai[0] == 1f)
					{
						this.ai[2] += 0.005f;
						if ((double)this.ai[2] > 0.5)
						{
							this.ai[2] = 0.5f;
						}
					}
					else
					{
						this.ai[2] -= 0.005f;
						if (this.ai[2] < 0f)
						{
							this.ai[2] = 0f;
						}
					}
					this.rotation += this.ai[2];
					this.ai[1] += 1f;
					if (Main.expertMode && this.ai[1] % 20f == 0f)
					{
						float num249 = 5f;
						Vector2 vector29 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num250 = (float)Main.rand.Next(-200, 200);
						float num251 = (float)Main.rand.Next(-200, 200);
						float num252 = (float)Math.Sqrt((double)(num250 * num250 + num251 * num251));
						num252 = num249 / num252;
						Vector2 position4 = vector29;
						Vector2 vector30;
						vector30.X = num250 * num252;
						vector30.Y = num251 * num252;
						position4.X += vector30.X * 10f;
						position4.Y += vector30.Y * 10f;
						if (Main.netMode != 1)
						{
							int num253 = NPC.NewNPC((int)position4.X, (int)position4.Y, 5, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num253].velocity.X = vector30.X;
							Main.npc[num253].velocity.Y = vector30.Y;
							if (Main.netMode == 2 && num253 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num253, 0f, 0f, 0f, 0, 0, 0);
							}
						}
					}
					if (this.ai[1] == 100f)
					{
						this.ai[0] += 1f;
						this.ai[1] = 0f;
						if (this.ai[0] == 3f)
						{
							this.ai[2] = 0f;
						}
					}
					this.velocity.X *= 0.98f;
					this.velocity.Y *= 0.98f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
					{
						this.velocity.Y = 0f;
						return;
					}
				}
				else
				{
					this.defense = 0;
					this.damage = 23;
					if (Main.expertMode)
					{
						if (flag30)
						{
							this.defense = -15;
						}
						if (flag31)
						{
							this.damage = (int)(20f * Main.expertDamage);
							this.defense = -30;
						}
						else
						{
							this.damage = (int)(18f * Main.expertDamage);
						}
					}
					if (this.ai[1] == 0f && flag30)
					{
						this.ai[1] = 5f;
					}
					if (this.ai[1] == 0f)
					{
						float num257 = 6f;
						float num258 = 0.07f;
						Vector2 vector31 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num259 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector31.X;
						float num260 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 120f - vector31.Y;
						float num261 = (float)Math.Sqrt((double)(num259 * num259 + num260 * num260));
						if (num261 > 400f && Main.expertMode)
						{
							num257 += 1f;
							num258 += 0.05f;
							if (num261 > 600f)
							{
								num257 += 1f;
								num258 += 0.05f;
								if (num261 > 800f)
								{
									num257 += 1f;
									num258 += 0.05f;
								}
							}
						}
						num261 = num257 / num261;
						num259 *= num261;
						num260 *= num261;
						if (this.velocity.X < num259)
						{
							this.velocity.X = this.velocity.X + num258;
							if (this.velocity.X < 0f && num259 > 0f)
							{
								this.velocity.X = this.velocity.X + num258;
							}
						}
						else if (this.velocity.X > num259)
						{
							this.velocity.X = this.velocity.X - num258;
							if (this.velocity.X > 0f && num259 < 0f)
							{
								this.velocity.X = this.velocity.X - num258;
							}
						}
						if (this.velocity.Y < num260)
						{
							this.velocity.Y = this.velocity.Y + num258;
							if (this.velocity.Y < 0f && num260 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num258;
							}
						}
						else if (this.velocity.Y > num260)
						{
							this.velocity.Y = this.velocity.Y - num258;
							if (this.velocity.Y > 0f && num260 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num258;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 200f)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.35)
							{
								this.ai[1] = 3f;
							}
							this.target = 255;
							this.netUpdate = true;
						}
						if (Main.expertMode && flag31)
						{
							this.TargetClosest(true);
							this.netUpdate = true;
							this.ai[1] = 3f;
							this.ai[2] = 0f;
							this.ai[3] -= 1000f;
						}
					}
					else if (this.ai[1] == 1f)
					{
						this.rotation = num226;
						float num262 = 6.8f;
						if (Main.expertMode && this.ai[3] == 1f)
						{
							num262 *= 1.15f;
						}
						if (Main.expertMode && this.ai[3] == 2f)
						{
							num262 *= 1.3f;
						}
						Vector2 vector32 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num263 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector32.X;
						float num264 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector32.Y;
						float num265 = (float)Math.Sqrt((double)(num263 * num263 + num264 * num264));
						num265 = num262 / num265;
						this.velocity.X = num263 * num265;
						this.velocity.Y = num264 * num265;
						this.ai[1] = 2f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
						}
					}
					else if (this.ai[1] == 2f)
					{
						float num266 = 40f;
						this.ai[2] += 1f;
						if (Main.expertMode)
						{
							num266 = 50f;
						}
						if (this.ai[2] >= num266)
						{
							this.velocity *= 0.97f;
							if (Main.expertMode)
							{
								this.velocity *= 0.98f;
							}
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						int num267 = 130;
						if (Main.expertMode)
						{
							num267 = 90;
						}
						if (this.ai[2] >= (float)num267)
						{
							this.ai[3] += 1f;
							this.ai[2] = 0f;
							this.target = 255;
							this.rotation = num226;
							if (this.ai[3] >= 3f)
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
								if (Main.expertMode && Main.netMode != 1 && (double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[1] = 3f;
									this.ai[3] += (float)Main.rand.Next(1, 4);
								}
								this.netUpdate = true;
								if (this.netSpam > 10)
								{
									this.netSpam = 10;
								}
							}
							else
							{
								this.ai[1] = 1f;
							}
						}
					}
					else if (this.ai[1] == 3f)
					{
						if (this.ai[3] == 4f && flag30 && base.Center.Y > Main.player[this.target].Center.Y)
						{
							this.TargetClosest(true);
							this.ai[1] = 0f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
						}
						else if (Main.netMode != 1)
						{
							this.TargetClosest(true);
							float num268 = 20f;
							Vector2 vector33 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num269 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector33.X;
							float num270 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector33.Y;
							float num271 = Math.Abs(Main.player[this.target].velocity.X) + Math.Abs(Main.player[this.target].velocity.Y) / 4f;
							num271 += 10f - num271;
							if (num271 < 5f)
							{
								num271 = 5f;
							}
							if (num271 > 15f)
							{
								num271 = 15f;
							}
							if (this.ai[2] == -1f && !flag31)
							{
								num271 *= 4f;
								num268 *= 1.3f;
							}
							if (flag31)
							{
								num271 *= 2f;
							}
							num269 -= Main.player[this.target].velocity.X * num271;
							num270 -= Main.player[this.target].velocity.Y * num271 / 4f;
							num269 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
							num270 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
							if (flag31)
							{
								num269 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
								num270 *= 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
							}
							float num272 = (float)Math.Sqrt((double)(num269 * num269 + num270 * num270));
							float num273 = num272;
							num272 = num268 / num272;
							this.velocity.X = num269 * num272;
							this.velocity.Y = num270 * num272;
							this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 21) * 0.1f;
							this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-20, 21) * 0.1f;
							if (flag31)
							{
								this.velocity.X = this.velocity.X + (float)Main.rand.Next(-50, 51) * 0.1f;
								this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.1f;
								float num274 = Math.Abs(this.velocity.X);
								float num275 = Math.Abs(this.velocity.Y);
								if (base.Center.X > Main.player[this.target].Center.X)
								{
									num275 *= -1f;
								}
								if (base.Center.Y > Main.player[this.target].Center.Y)
								{
									num274 *= -1f;
								}
								this.velocity.X = num275 + this.velocity.X;
								this.velocity.Y = num274 + this.velocity.Y;
								this.velocity.Normalize();
								this.velocity *= num268;
								this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 21) * 0.1f;
								this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-20, 21) * 0.1f;
							}
							else if (num273 < 100f)
							{
								if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
								{
									float num276 = Math.Abs(this.velocity.X);
									float num277 = Math.Abs(this.velocity.Y);
									if (base.Center.X > Main.player[this.target].Center.X)
									{
										num277 *= -1f;
									}
									if (base.Center.Y > Main.player[this.target].Center.Y)
									{
										num276 *= -1f;
									}
									this.velocity.X = num277;
									this.velocity.Y = num276;
								}
							}
							else if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
							{
								float num278 = (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) / 2f;
								float num279 = num278;
								if (base.Center.X > Main.player[this.target].Center.X)
								{
									num279 *= -1f;
								}
								if (base.Center.Y > Main.player[this.target].Center.Y)
								{
									num278 *= -1f;
								}
								this.velocity.X = num279;
								this.velocity.Y = num278;
							}
							this.ai[1] = 4f;
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
						}
					}
					else if (this.ai[1] == 4f)
					{
						float num280 = num223;
						this.ai[2] += 1f;
						if (this.ai[2] == num280 && Vector2.Distance(this.position, Main.player[this.target].position) < 200f)
						{
							this.ai[2] -= 1f;
						}
						if (this.ai[2] >= num280)
						{
							this.velocity *= 0.95f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						float num281 = num280 + 13f;
						if (this.ai[2] >= num281)
						{
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
							this.ai[3] += 1f;
							this.ai[2] = 0f;
							if (this.ai[3] >= 5f)
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
							}
							else
							{
								this.ai[1] = 3f;
							}
						}
					}
					else if (this.ai[1] == 5f)
					{
						float num282 = 600f;
						float num283 = 9f;
						float num284 = 0.3f;
						Vector2 vector34 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num285 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector34.X;
						float num286 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) + num282 - vector34.Y;
						float num287 = (float)Math.Sqrt((double)(num285 * num285 + num286 * num286));
						num287 = num283 / num287;
						num285 *= num287;
						num286 *= num287;
						if (this.velocity.X < num285)
						{
							this.velocity.X = this.velocity.X + num284;
							if (this.velocity.X < 0f && num285 > 0f)
							{
								this.velocity.X = this.velocity.X + num284;
							}
						}
						else if (this.velocity.X > num285)
						{
							this.velocity.X = this.velocity.X - num284;
							if (this.velocity.X > 0f && num285 < 0f)
							{
								this.velocity.X = this.velocity.X - num284;
							}
						}
						if (this.velocity.Y < num286)
						{
							this.velocity.Y = this.velocity.Y + num284;
							if (this.velocity.Y < 0f && num286 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num284;
							}
						}
						else if (this.velocity.Y > num286)
						{
							this.velocity.Y = this.velocity.Y - num284;
							if (this.velocity.Y > 0f && num286 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num284;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 70f)
						{
							this.TargetClosest(true);
							this.ai[1] = 3f;
							this.ai[2] = -1f;
							this.ai[3] = (float)Main.rand.Next(-3, 1);
							this.netUpdate = true;
						}
					}
					if (flag31 && this.ai[1] == 5f)
					{
						this.ai[1] = 3f;
						return;
					}
				}
			}
			else if (this.aiStyle == 5)
			{
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				float num288 = 6f;
				float num289 = 0.05f;
				if (this.type == 6 || this.type == 173)
				{
					num288 = 4f;
					num289 = 0.02f;
					if (this.type == 6 && Main.expertMode)
					{
						num289 = 0.035f;
					}
				}
				else if (this.type == 94)
				{
					num288 = 4.2f;
					num289 = 0.022f;
				}
				else if (this.type == 252)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						num288 = 6f;
						num289 = 0.1f;
					}
					else
					{
						num289 = 0.01f;
						num288 = 2f;
					}
				}
				else if (this.type == 42 || (this.type >= 231 && this.type <= 235))
				{
					num288 = 3.5f;
					num289 = 0.021f;
					if (this.type == 231)
					{
						num288 = 3f;
						num289 = 0.017f;
					}
					num288 *= 1f - this.scale;
					num289 *= 1f - this.scale;
				}
				else if (this.type == 205)
				{
					num288 = 3.25f;
					num289 = 0.018f;
				}
				else if (this.type == 176)
				{
					num288 = 4f;
					num289 = 0.017f;
				}
				else if (this.type == 23)
				{
					num288 = 1f;
					num289 = 0.03f;
				}
				else if (this.type == 5)
				{
					num288 = 5f;
					num289 = 0.03f;
				}
				else if (this.type == 210 || this.type == 211)
				{
					this.localAI[0] += 1f;
					float num290 = (this.localAI[0] - 60f) / 60f;
					if (num290 > 1f)
					{
						num290 = 1f;
					}
					else
					{
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
						if (this.velocity.Y > 6f)
						{
							this.velocity.Y = 6f;
						}
						if (this.velocity.Y < -6f)
						{
							this.velocity.Y = -6f;
						}
					}
					num288 = 5f;
					num289 = 0.1f;
					num289 *= num290;
				}
				Vector2 vector35 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num291 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float num292 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				num291 = (float)((int)(num291 / 8f) * 8);
				num292 = (float)((int)(num292 / 8f) * 8);
				vector35.X = (float)((int)(vector35.X / 8f) * 8);
				vector35.Y = (float)((int)(vector35.Y / 8f) * 8);
				num291 -= vector35.X;
				num292 -= vector35.Y;
				float num293 = (float)Math.Sqrt((double)(num291 * num291 + num292 * num292));
				float num294 = num293;
				bool flag32 = false;
				if (num293 > 600f)
				{
					flag32 = true;
				}
				if (num293 == 0f)
				{
					num291 = this.velocity.X;
					num292 = this.velocity.Y;
				}
				else
				{
					num293 = num288 / num293;
					num291 *= num293;
					num292 *= num293;
				}
				if (this.type == 6 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
				{
					if (num294 > 100f || this.type == 42 || this.type == 94 || this.type == 176 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
					{
						this.ai[0] += 1f;
						if (this.ai[0] > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.023f;
						}
						else
						{
							this.velocity.Y = this.velocity.Y - 0.023f;
						}
						if (this.ai[0] < -100f || this.ai[0] > 100f)
						{
							this.velocity.X = this.velocity.X + 0.023f;
						}
						else
						{
							this.velocity.X = this.velocity.X - 0.023f;
						}
						if (this.ai[0] > 200f)
						{
							this.ai[0] = -200f;
						}
					}
					if (num294 < 150f && (this.type == 6 || this.type == 94 || this.type == 173))
					{
						this.velocity.X = this.velocity.X + num291 * 0.007f;
						this.velocity.Y = this.velocity.Y + num292 * 0.007f;
					}
				}
				if (Main.player[this.target].dead)
				{
					num291 = (float)this.direction * num288 / 2f;
					num292 = -num288 / 2f;
				}
				if (this.velocity.X < num291)
				{
					this.velocity.X = this.velocity.X + num289;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X < 0f && num291 > 0f)
					{
						this.velocity.X = this.velocity.X + num289;
					}
				}
				else if (this.velocity.X > num291)
				{
					this.velocity.X = this.velocity.X - num289;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X > 0f && num291 < 0f)
					{
						this.velocity.X = this.velocity.X - num289;
					}
				}
				if (this.velocity.Y < num292)
				{
					this.velocity.Y = this.velocity.Y + num289;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y < 0f && num292 > 0f)
					{
						this.velocity.Y = this.velocity.Y + num289;
					}
				}
				else if (this.velocity.Y > num292)
				{
					this.velocity.Y = this.velocity.Y - num289;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y > 0f && num292 < 0f)
					{
						this.velocity.Y = this.velocity.Y - num289;
					}
				}
				if (this.type == 23)
				{
					if (num291 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num292, (double)num291);
					}
					else if (num291 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num292, (double)num291) + 3.14f;
					}
				}
				else if (this.type == 139)
				{
					this.localAI[0] += 1f;
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					if (Main.netMode != 1 && this.localAI[0] >= 120f)
					{
						this.localAI[0] = 0f;
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							int num295 = 25;
							if (Main.expertMode)
							{
								num295 = 22;
							}
							int num296 = 84;
							Projectile.NewProjectile(vector35.X, vector35.Y, num291, num292, num296, num295, 0f, Main.myPlayer, 0f, 0f);
						}
					}
					int num297 = (int)this.position.X + this.width / 2;
					int num298 = (int)this.position.Y + this.height / 2;
					num297 /= 16;
					num298 /= 16;
					if (num291 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num292, (double)num291);
					}
					if (num291 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num292, (double)num291) + 3.14f;
					}
				}
				else if (this.type == 6 || this.type == 94 || this.type == 173)
				{
					this.rotation = (float)Math.Atan2((double)num292, (double)num291) - 1.57f;
				}
				else if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
				}
				if (this.type == 6 || this.type == 23 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
				{
					float num299 = 0.7f;
					if (this.type == 6 || this.type == 173)
					{
						num299 = 0.4f;
					}
					if (this.collideX)
					{
						this.netUpdate = true;
						this.velocity.X = this.oldVelocity.X * -num299;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.netUpdate = true;
						this.velocity.Y = this.oldVelocity.Y * -num299;
						if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = -2f;
						}
					}
				}
				if ((this.type == 6 || this.type == 94 || this.type == 173) && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.3f;
					if (this.velocity.Y < -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (this.type == 205 && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
				}
				if (this.type == 42 || this.type == 176 || (this.type >= 231 && this.type <= 235))
				{
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
					}
					if (this.ai[1] == 101f)
					{
						this.ai[1] = 0f;
					}
					if (Main.netMode != 1)
					{
						this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						if (this.type == 176)
						{
							this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						}
						if (Main.player[this.target].stealth == 0f && Main.player[this.target].itemAnimation == 0)
						{
							this.ai[1] = 0f;
						}
						if (this.ai[1] >= 130f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num304 = 8f;
								Vector2 vector36 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
								float num305 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector36.X + (float)Main.rand.Next(-20, 21);
								float num306 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector36.Y + (float)Main.rand.Next(-20, 21);
								if ((num305 < 0f && this.velocity.X < 0f) || (num305 > 0f && this.velocity.X > 0f))
								{
									float num307 = (float)Math.Sqrt((double)(num305 * num305 + num306 * num306));
									num307 = num304 / num307;
									num305 *= num307;
									num306 *= num307;
									int num308 = (int)(10f * this.scale);
									if (this.type == 176)
									{
										num308 = (int)(30f * this.scale);
									}
									int num309 = 55;
									int num310 = Projectile.NewProjectile(vector36.X, vector36.Y, num305, num306, num309, num308, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num310].timeLeft = 300;
									this.ai[1] = 101f;
									this.netUpdate = true;
								}
								else
								{
									this.ai[1] = 0f;
								}
							}
							else
							{
								this.ai[1] = 0f;
							}
						}
					}
				}
				if (this.type == 139 && flag32)
				{
					if ((this.velocity.X > 0f && num291 > 0f) || (this.velocity.X < 0f && num291 < 0f))
					{
						if (Math.Abs(this.velocity.X) < 12f)
						{
							this.velocity.X = this.velocity.X * 1.05f;
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				if (Main.netMode != 1 && this.type == 94 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					this.localAI[0] += 1f;
					if (this.localAI[0] == 180f)
					{
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 0f, 0f, 0f, 255);
						}
						this.localAI[0] = 0f;
					}
				}
				if ((Main.dayTime && this.type != 173 && this.type != 6 && this.type != 23 && this.type != 42 && this.type != 94 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235)) || Main.player[this.target].dead)
				{
					this.velocity.Y = this.velocity.Y - num289 * 2f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
				}
				if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
				{
					this.netUpdate = true;
					return;
				}
			}
			else if (this.aiStyle == 6)
			{
				if (this.type == 117 && this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
				}
				if (this.type == 454 && this.localAI[3] == 0f)
				{
					this.localAI[3] = 1f;
				}
				if (this.type >= 454 && this.type <= 459)
				{
					this.dontTakeDamage = (this.alpha > 0);
					if (this.type == 454 || (this.type != 454 && Main.npc[(int)this.ai[1]].alpha < 85))
					{
						this.alpha -= 42;
						if (this.alpha < 0)
						{
							this.alpha = 0;
						}
					}
				}
				else if (this.type == 402 && this.ai[1] == 0f)
				{
					this.ai[1] = (float)Main.rand.Next(-2, 0);
					this.netUpdate = true;
				}
				if (Main.netMode != 1 && Main.expertMode)
				{
					if (this.type == 14 && (double)(this.position.Y / 16f) < Main.worldSurface)
					{
						if (Main.rand.Next(900) == 0)
						{
							this.TargetClosest(true);
							if (Collision.CanHitLine(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 1f, 0f, 0f, 255);
							}
						}
					}
					else if (this.type == 13)
					{
						int num315 = 90;
						num315 += (int)((float)this.life / (float)this.lifeMax * 60f * 5f);
						if (Main.rand.Next(num315) == 0)
						{
							this.TargetClosest(true);
							if (Collision.CanHitLine(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 1f, 0f, 0f, 255);
							}
						}
					}
				}
				if (this.type >= 13 && this.type <= 15)
				{
					this.realLife = -1;
				}
				else if (this.ai[3] > 0f)
				{
					this.realLife = (int)this.ai[3];
				}
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				if (Main.player[this.target].dead && this.timeLeft > 300)
				{
					this.timeLeft = 300;
				}
				if (Main.netMode != 1)
				{
					if (this.type == 87 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num316 = this.whoAmI;
						for (int num317 = 0; num317 < 14; num317++)
						{
							int num318 = 89;
							if (num317 == 1 || num317 == 8)
							{
								num318 = 88;
							}
							else if (num317 == 11)
							{
								num318 = 90;
							}
							else if (num317 == 12)
							{
								num318 = 91;
							}
							else if (num317 == 13)
							{
								num318 = 92;
							}
							int num319 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num318, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num319].ai[3] = (float)this.whoAmI;
							Main.npc[num319].realLife = this.whoAmI;
							Main.npc[num319].ai[1] = (float)num316;
							Main.npc[num316].ai[0] = (float)num319;
							NetMessage.SendData(23, -1, -1, "", num319, 0f, 0f, 0f, 0, 0, 0);
							num316 = num319;
						}
					}
					if (this.type == 454 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num320 = this.whoAmI;
						for (int num321 = 0; num321 < 30; num321++)
						{
							int num322 = 456;
							if ((num321 - 2) % 4 == 0 && num321 < 26)
							{
								num322 = 455;
							}
							else if (num321 == 27)
							{
								num322 = 457;
							}
							else if (num321 == 28)
							{
								num322 = 458;
							}
							else if (num321 == 29)
							{
								num322 = 459;
							}
							int num323 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num322, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num323].ai[3] = (float)this.whoAmI;
							Main.npc[num323].realLife = this.whoAmI;
							Main.npc[num323].ai[1] = (float)num320;
							Main.npc[num320].ai[0] = (float)num323;
							NetMessage.SendData(23, -1, -1, "", num323, 0f, 0f, 0f, 0, 0, 0);
							num320 = num323;
						}
					}
					if (this.type == 513 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num324 = this.whoAmI;
						int num325 = Main.rand.Next(6, 10);
						for (int num326 = 0; num326 < num325; num326++)
						{
							int num327 = 514;
							if (num326 == num325 - 1)
							{
								num327 = 515;
							}
							int num328 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num327, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num328].ai[3] = (float)this.whoAmI;
							Main.npc[num328].realLife = this.whoAmI;
							Main.npc[num328].ai[1] = (float)num324;
							Main.npc[num324].ai[0] = (float)num328;
							NetMessage.SendData(23, -1, -1, "", num328, 0f, 0f, 0f, 0, 0, 0);
							num324 = num328;
						}
					}
					if (this.type == 510 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num329 = this.whoAmI;
						int num330 = Main.rand.Next(12, 21);
						for (int num331 = 0; num331 < num330; num331++)
						{
							int num332 = 511;
							if (num331 == num330 - 1)
							{
								num332 = 512;
							}
							int num333 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num332, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num333].ai[3] = (float)this.whoAmI;
							Main.npc[num333].realLife = this.whoAmI;
							Main.npc[num333].ai[1] = (float)num329;
							Main.npc[num329].ai[0] = (float)num333;
							NetMessage.SendData(23, -1, -1, "", num333, 0f, 0f, 0f, 0, 0, 0);
							num329 = num333;
						}
					}
					else if ((this.type == 7 || this.type == 8 || this.type == 10 || this.type == 11 || this.type == 13 || this.type == 14 || this.type == 39 || this.type == 40 || this.type == 95 || this.type == 96 || this.type == 98 || this.type == 99 || this.type == 117 || this.type == 118) && this.ai[0] == 0f)
					{
						if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117)
						{
							if (this.type < 13 || this.type > 15)
							{
								this.ai[3] = (float)this.whoAmI;
								this.realLife = this.whoAmI;
							}
							this.ai[2] = (float)Main.rand.Next(8, 13);
							if (this.type == 10)
							{
								this.ai[2] = (float)Main.rand.Next(4, 7);
							}
							if (this.type == 13)
							{
								this.ai[2] = (float)Main.rand.Next(45, 56);
								if (Main.expertMode)
								{
									this.ai[2] = (float)((int)(this.ai[2] * 1.1f));
								}
							}
							if (this.type == 39)
							{
								this.ai[2] = (float)Main.rand.Next(12, 19);
							}
							if (this.type == 95)
							{
								this.ai[2] = (float)Main.rand.Next(6, 12);
							}
							if (this.type == 98)
							{
								this.ai[2] = (float)Main.rand.Next(20, 26);
							}
							if (this.type == 117)
							{
								this.ai[2] = (float)Main.rand.Next(3, 6);
							}
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						else if ((this.type == 8 || this.type == 11 || this.type == 14 || this.type == 40 || this.type == 96 || this.type == 99 || this.type == 118) && this.ai[2] > 0f)
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						else
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						if (this.type < 13 || this.type > 15)
						{
							Main.npc[(int)this.ai[0]].ai[3] = this.ai[3];
							Main.npc[(int)this.ai[0]].realLife = this.realLife;
						}
						Main.npc[(int)this.ai[0]].ai[1] = (float)this.whoAmI;
						Main.npc[(int)this.ai[0]].ai[2] = this.ai[2] - 1f;
						this.netUpdate = true;
					}
					if (this.type == 412 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num334 = this.whoAmI;
						int num335 = 30;
						for (int num336 = 0; num336 < num335; num336++)
						{
							int num337 = 413;
							if (num336 == num335 - 1)
							{
								num337 = 414;
							}
							int num338 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num337, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num338].ai[3] = (float)this.whoAmI;
							Main.npc[num338].realLife = this.whoAmI;
							Main.npc[num338].ai[1] = (float)num334;
							Main.npc[num334].ai[0] = (float)num338;
							NetMessage.SendData(23, -1, -1, "", num338, 0f, 0f, 0f, 0, 0, 0);
							num334 = num338;
						}
					}
					int num75 = this.type;
					if (num75 <= 100)
					{
						switch (num75)
						{
							case 8:
							case 9:
							case 11:
							case 12:
								break;
							case 10:
								goto IL_15374;
							default:
								switch (num75)
								{
									case 40:
									case 41:
										break;
									default:
										switch (num75)
										{
											case 88:
											case 89:
											case 90:
											case 91:
											case 92:
											case 96:
											case 97:
											case 99:
											case 100:
												break;
											case 93:
											case 94:
											case 95:
											case 98:
												goto IL_15374;
											default:
												goto IL_15374;
										}
										break;
								}
								break;
						}
					}
					else if (num75 <= 414)
					{
						switch (num75)
						{
							case 118:
							case 119:
								break;
							default:
								switch (num75)
								{
									case 413:
									case 414:
										break;
									default:
										goto IL_15374;
								}
								break;
						}
					}
					else
					{
						switch (num75)
						{
							case 455:
							case 456:
							case 457:
							case 458:
							case 459:
								break;
							default:
								switch (num75)
								{
									case 511:
									case 512:
									case 514:
									case 515:
										break;
									case 513:
										goto IL_15374;
									default:
										goto IL_15374;
								}
								break;
						}
					}
					if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle)
					{
						this.life = 0;
						this.HitEffect(0, 10.0);
						this.active = false;
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
				IL_15374:
					num75 = this.type;
					if (num75 <= 99)
					{
						switch (num75)
						{
							case 7:
							case 8:
							case 10:
							case 11:
								break;
							case 9:
								goto IL_154F7;
							default:
								switch (num75)
								{
									case 39:
									case 40:
										break;
									default:
										switch (num75)
										{
											case 87:
											case 88:
											case 89:
											case 90:
											case 91:
											case 95:
											case 96:
											case 98:
											case 99:
												break;
											case 92:
											case 93:
											case 94:
											case 97:
												goto IL_154F7;
											default:
												goto IL_154F7;
										}
										break;
								}
								break;
						}
					}
					else if (num75 <= 413)
					{
						switch (num75)
						{
							case 117:
							case 118:
								break;
							default:
								switch (num75)
								{
									case 412:
									case 413:
										break;
									default:
										goto IL_154F7;
								}
								break;
						}
					}
					else
					{
						switch (num75)
						{
							case 454:
							case 455:
							case 456:
							case 457:
							case 458:
								break;
							default:
								switch (num75)
								{
									case 510:
									case 511:
									case 513:
									case 514:
										break;
									case 512:
										goto IL_154F7;
									default:
										goto IL_154F7;
								}
								break;
						}
					}
					if (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle)
					{
						this.life = 0;
						this.HitEffect(0, 10.0);
						this.active = false;
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
				IL_154F7:
					if (this.type == 13 || this.type == 14 || this.type == 15)
					{
						if (!Main.npc[(int)this.ai[1]].active && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 13 && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 15 && !Main.npc[(int)this.ai[1]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle))
						{
							this.type = 13;
							int whoAmI = this.whoAmI;
							float num339 = (float)this.life / (float)this.lifeMax;
							float num340 = this.ai[0];
							this.SetDefaultsKeepPlayerInteraction(this.type);
							this.life = (int)((float)this.lifeMax * num339);
							this.ai[0] = num340;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = whoAmI;
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle))
						{
							int whoAmI2 = this.whoAmI;
							float num341 = (float)this.life / (float)this.lifeMax;
							float num342 = this.ai[1];
							this.SetDefaultsKeepPlayerInteraction(this.type);
							this.life = (int)((float)this.lifeMax * num341);
							this.ai[1] = num342;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = whoAmI2;
						}
					}
					if (!this.active && Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
				}
				int num343 = (int)(this.position.X / 16f) - 1;
				int num344 = (int)((this.position.X + (float)this.width) / 16f) + 2;
				int num345 = (int)(this.position.Y / 16f) - 1;
				int num346 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
				if (num343 < 0)
				{
					num343 = 0;
				}
				if (num344 > Main.maxTilesX)
				{
					num344 = Main.maxTilesX;
				}
				if (num345 < 0)
				{
					num345 = 0;
				}
				if (num346 > Main.maxTilesY)
				{
					num346 = Main.maxTilesY;
				}
				bool flag33 = false;
				if (this.type >= 87 && this.type <= 92)
				{
					flag33 = true;
				}
				if (this.type >= 454 && this.type <= 459)
				{
					flag33 = true;
				}
				if (this.type == 402 && this.ai[1] == -1f)
				{
					flag33 = true;
				}
				if (this.type >= 412 && this.type <= 414)
				{
					flag33 = true;
				}
				if (!flag33)
				{
					for (int num347 = num343; num347 < num344; num347++)
					{
						for (int num348 = num345; num348 < num346; num348++)
						{
							if (Main.tile[num347, num348] != null && ((Main.tile[num347, num348].nactive() && (Main.tileSolid[(int)Main.tile[num347, num348].type] || (Main.tileSolidTop[(int)Main.tile[num347, num348].type] && Main.tile[num347, num348].frameY == 0))) || Main.tile[num347, num348].liquid > 64))
							{
								Vector2 vector37;
								vector37.X = (float)(num347 * 16);
								vector37.Y = (float)(num348 * 16);
								if (this.position.X + (float)this.width > vector37.X && this.position.X < vector37.X + 16f && this.position.Y + (float)this.height > vector37.Y && this.position.Y < vector37.Y + 16f)
								{
									flag33 = true;
									if (Main.rand.Next(100) == 0 && this.type != 117 && Main.tile[num347, num348].nactive())
									{
										WorldGen.KillTile(num347, num348, true, true, false);
									}
								}
							}
						}
					}
				}
				if (!flag33 && (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117 || this.type == 375 || this.type == 454 || this.type == 510 || this.type == 513))
				{
					Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
					int num349 = 1000;
					bool flag34 = true;
					for (int num350 = 0; num350 < 255; num350++)
					{
						if (Main.player[num350].active)
						{
							Rectangle rectangle2 = new Rectangle((int)Main.player[num350].position.X - num349, (int)Main.player[num350].position.Y - num349, num349 * 2, num349 * 2);
							if (rectangle.Intersects(rectangle2))
							{
								flag34 = false;
								break;
							}
						}
					}
					if (flag34)
					{
						flag33 = true;
					}
				}
				if ((this.type >= 87 && this.type <= 92) || (this.type >= 454 && this.type <= 459))
				{
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					else if (this.velocity.X > 0f)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.type == 414)
				{
					if (this.justHit)
					{
						this.localAI[3] = 3f;
					}
					if (this.localAI[2] > 0f)
					{
						this.localAI[2] -= 16f;
						if (this.localAI[2] == 0f)
						{
							this.localAI[2] = -128f;
						}
					}
					else if (this.localAI[2] < 0f)
					{
						this.localAI[2] += 16f;
					}
					else if (this.localAI[3] > 0f)
					{
						this.localAI[2] = 128f;
						this.localAI[3] -= 1f;
					}
				}
				float num351 = 8f;
				float num352 = 0.07f;
				if (this.type == 95)
				{
					num351 = 5.5f;
					num352 = 0.045f;
				}
				if (this.type == 10)
				{
					num351 = 6f;
					num352 = 0.05f;
				}
				if (this.type == 513)
				{
					num351 = 7f;
					num352 = 0.03f;
				}
				if (this.type == 13)
				{
					num351 = 10f;
					num352 = 0.07f;
					if (Main.expertMode)
					{
						num351 = 12f;
						num352 = 0.15f;
					}
				}
				if (this.type == 510)
				{
					num351 = 10f;
					num352 = 0.25f;
				}
				if (this.type == 87)
				{
					num351 = 11f;
					num352 = 0.25f;
				}
				if (this.type == 375)
				{
					num351 = 6f;
					num352 = 0.15f;
				}
				if (this.type == 454)
				{
					num351 = 20f;
					num352 = 0.55f;
				}
				if (this.type == 402)
				{
					num351 = 6f;
					num352 = 0.2f;
				}
				if (this.type == 117 && Main.wof >= 0)
				{
					float num353 = (float)Main.npc[Main.wof].life / (float)Main.npc[Main.wof].lifeMax;
					if ((double)num353 < 0.5)
					{
						num351 += 1f;
						num352 += 0.1f;
					}
					if ((double)num353 < 0.25)
					{
						num351 += 1f;
						num352 += 0.1f;
					}
					if ((double)num353 < 0.1)
					{
						num351 += 2f;
						num352 += 0.1f;
					}
				}
				Vector2 vector38 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num354 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float num355 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				if (this.type == 412)
				{
					num351 = 10f;
					num352 = 0.3f;
					int num356 = -1;
					int num357 = (int)(Main.player[this.target].Center.X / 16f);
					int num358 = (int)(Main.player[this.target].Center.Y / 16f);
					for (int num359 = num357 - 2; num359 <= num357 + 2; num359++)
					{
						for (int num360 = num358; num360 <= num358 + 15; num360++)
						{
							if (WorldGen.SolidTile2(num359, num360))
							{
								num356 = num360;
								break;
							}
						}
						if (num356 > 0)
						{
							break;
						}
					}
					if (num356 > 0)
					{
						num356 *= 16;
						float num361 = (float)(num356 - 800);
						if (Main.player[this.target].position.Y > num361)
						{
							num355 = num361;
							if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 500f)
							{
								if (this.velocity.X > 0f)
								{
									num354 = Main.player[this.target].Center.X + 600f;
								}
								else
								{
									num354 = Main.player[this.target].Center.X - 600f;
								}
							}
						}
					}
					else
					{
						num351 = 14f;
						num352 = 0.5f;
					}
					float num362 = num351 * 1.3f;
					float num363 = num351 * 0.7f;
					float num364 = this.velocity.Length();
					if (num364 > 0f)
					{
						if (num364 > num362)
						{
							this.velocity.Normalize();
							this.velocity *= num362;
						}
						else if (num364 < num363)
						{
							this.velocity.Normalize();
							this.velocity *= num363;
						}
					}
					if (num356 > 0)
					{
						for (int num365 = 0; num365 < 200; num365++)
						{
							if (Main.npc[num365].active && Main.npc[num365].type == this.type && num365 != this.whoAmI)
							{
								Vector2 vector39 = Main.npc[num365].Center - base.Center;
								if (vector39.Length() < 400f)
								{
									vector39.Normalize();
									vector39 *= 1000f;
									num354 -= vector39.X;
									num355 -= vector39.Y;
								}
							}
						}
					}
					else
					{
						for (int num366 = 0; num366 < 200; num366++)
						{
							if (Main.npc[num366].active && Main.npc[num366].type == this.type && num366 != this.whoAmI)
							{
								Vector2 vector40 = Main.npc[num366].Center - base.Center;
								if (vector40.Length() < 60f)
								{
									vector40.Normalize();
									vector40 *= 200f;
									num354 -= vector40.X;
									num355 -= vector40.Y;
								}
							}
						}
					}
				}
				num354 = (float)((int)(num354 / 16f) * 16);
				num355 = (float)((int)(num355 / 16f) * 16);
				vector38.X = (float)((int)(vector38.X / 16f) * 16);
				vector38.Y = (float)((int)(vector38.Y / 16f) * 16);
				num354 -= vector38.X;
				num355 -= vector38.Y;
				if (this.type == 375)
				{
					num354 *= -1f;
					num355 *= -1f;
				}
				float num367 = (float)Math.Sqrt((double)(num354 * num354 + num355 * num355));
				if (this.ai[1] > 0f && this.ai[1] < (float)Main.npc.Length)
				{
					try
					{
						vector38 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num354 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector38.X;
						num355 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector38.Y;
					}
					catch
					{
					}
					this.rotation = (float)Math.Atan2((double)num355, (double)num354) + 1.57f;
					num367 = (float)Math.Sqrt((double)(num354 * num354 + num355 * num355));
					int num368 = this.width;
					if (this.type >= 87 && this.type <= 92)
					{
						num368 = 42;
					}
					if (this.type >= 454 && this.type <= 459)
					{
						num368 = 36;
					}
					if (this.type >= 13 && this.type <= 15)
					{
						num368 = (int)((float)num368 * this.scale);
					}
					if (this.type >= 412 && this.type <= 414)
					{
						num368 += 6;
					}
					num367 = (num367 - (float)num368) / num367;
					num354 *= num367;
					num355 *= num367;
					this.velocity = Vector2.Zero;
					this.position.X = this.position.X + num354;
					this.position.Y = this.position.Y + num355;
					if (this.type >= 87 && this.type <= 92)
					{
						if (num354 < 0f)
						{
							this.spriteDirection = 1;
						}
						else if (num354 > 0f)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.type >= 454 && this.type <= 459)
					{
						if (num354 < 0f)
						{
							this.spriteDirection = 1;
							return;
						}
						if (num354 > 0f)
						{
							this.spriteDirection = -1;
							return;
						}
					}
				}
				else
				{
					if (!flag33)
					{
						this.TargetClosest(true);
						this.velocity.Y = this.velocity.Y + 0.11f;
						if (this.velocity.Y > num351)
						{
							this.velocity.Y = num351;
						}
						if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num351 * 0.4)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - num352 * 1.1f;
							}
							else
							{
								this.velocity.X = this.velocity.X + num352 * 1.1f;
							}
						}
						else if (this.velocity.Y == num351)
						{
							if (this.velocity.X < num354)
							{
								this.velocity.X = this.velocity.X + num352;
							}
							else if (this.velocity.X > num354)
							{
								this.velocity.X = this.velocity.X - num352;
							}
						}
						else if (this.velocity.Y > 4f)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num352 * 0.9f;
							}
							else
							{
								this.velocity.X = this.velocity.X - num352 * 0.9f;
							}
						}
					}
					else
					{
						if (this.type != 87 && this.type != 117 && this.type != 454 && this.type != 412 && this.soundDelay == 0)
						{
							float num369 = num367 / 40f;
							if (num369 < 10f)
							{
								num369 = 10f;
							}
							if (num369 > 20f)
							{
								num369 = 20f;
							}
							this.soundDelay = (int)num369;
						}
						num367 = (float)Math.Sqrt((double)(num354 * num354 + num355 * num355));
						float num370 = Math.Abs(num354);
						float num371 = Math.Abs(num355);
						float num372 = num351 / num367;
						num354 *= num372;
						num355 *= num372;
						bool flag35 = false;
						if ((this.type == 7 || this.type == 13) && !Main.player[this.target].ZoneCorrupt && !Main.player[this.target].ZoneCrimson)
						{
							flag35 = true;
						}
						if (this.type == 513 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0)
						{
							flag35 = true;
						}
						if (this.type == 510 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0)
						{
							flag35 = true;
						}
						if (flag35)
						{
							bool flag36 = true;
							for (int num373 = 0; num373 < 255; num373++)
							{
								if (Main.player[num373].active && !Main.player[num373].dead && Main.player[num373].ZoneCorrupt)
								{
									flag36 = false;
								}
							}
							if (flag36)
							{
								if (Main.netMode != 1 && (double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0)
								{
									this.active = false;
									int num374 = (int)this.ai[0];
									while (num374 > 0 && num374 < 200 && Main.npc[num374].active && Main.npc[num374].aiStyle == this.aiStyle)
									{
										int num375 = (int)Main.npc[num374].ai[0];
										Main.npc[num374].active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", num374, 0f, 0f, 0f, 0, 0, 0);
										}
										num374 = num375;
									}
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
									}
								}
								num354 = 0f;
								num355 = num351;
							}
						}
						bool flag37 = false;
						if (this.type == 87)
						{
							if (((this.velocity.X > 0f && num354 < 0f) || (this.velocity.X < 0f && num354 > 0f) || (this.velocity.Y > 0f && num355 < 0f) || (this.velocity.Y < 0f && num355 > 0f)) && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > num352 / 2f && num367 < 300f)
							{
								flag37 = true;
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num351)
								{
									this.velocity *= 1.1f;
								}
							}
							if (this.position.Y > Main.player[this.target].position.Y || (double)(Main.player[this.target].position.Y / 16f) > Main.worldSurface || Main.player[this.target].dead)
							{
								flag37 = true;
								if (Math.Abs(this.velocity.X) < num351 / 2f)
								{
									if (this.velocity.X == 0f)
									{
										this.velocity.X = this.velocity.X - (float)this.direction;
									}
									this.velocity.X = this.velocity.X * 1.1f;
								}
								else if (this.velocity.Y > -num351)
								{
									this.velocity.Y = this.velocity.Y - num352;
								}
							}
						}
						if (this.type == 454)
						{
							if (((this.velocity.X > 0f && num354 < 0f) || (this.velocity.X < 0f && num354 > 0f) || (this.velocity.Y > 0f && num355 < 0f) || (this.velocity.Y < 0f && num355 > 0f)) && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > num352 / 2f && num367 < 300f)
							{
								flag37 = true;
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num351)
								{
									this.velocity *= 1.1f;
								}
							}
							if (this.position.Y > Main.player[this.target].position.Y || Main.player[this.target].dead)
							{
								flag37 = true;
								if (Math.Abs(this.velocity.X) < num351 / 2f)
								{
									if (this.velocity.X == 0f)
									{
										this.velocity.X = this.velocity.X - (float)this.direction;
									}
									this.velocity.X = this.velocity.X * 1.1f;
								}
								else if (this.velocity.Y > -num351)
								{
									this.velocity.Y = this.velocity.Y - num352;
								}
							}
						}
						if (!flag37)
						{
							if ((this.velocity.X > 0f && num354 > 0f) || (this.velocity.X < 0f && num354 < 0f) || (this.velocity.Y > 0f && num355 > 0f) || (this.velocity.Y < 0f && num355 < 0f))
							{
								if (this.velocity.X < num354)
								{
									this.velocity.X = this.velocity.X + num352;
								}
								else if (this.velocity.X > num354)
								{
									this.velocity.X = this.velocity.X - num352;
								}
								if (this.velocity.Y < num355)
								{
									this.velocity.Y = this.velocity.Y + num352;
								}
								else if (this.velocity.Y > num355)
								{
									this.velocity.Y = this.velocity.Y - num352;
								}
								if ((double)Math.Abs(num355) < (double)num351 * 0.2 && ((this.velocity.X > 0f && num354 < 0f) || (this.velocity.X < 0f && num354 > 0f)))
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num352 * 2f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num352 * 2f;
									}
								}
								if ((double)Math.Abs(num354) < (double)num351 * 0.2 && ((this.velocity.Y > 0f && num355 < 0f) || (this.velocity.Y < 0f && num355 > 0f)))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num352 * 2f;
									}
									else
									{
										this.velocity.X = this.velocity.X - num352 * 2f;
									}
								}
							}
							else if (num370 > num371)
							{
								if (this.velocity.X < num354)
								{
									this.velocity.X = this.velocity.X + num352 * 1.1f;
								}
								else if (this.velocity.X > num354)
								{
									this.velocity.X = this.velocity.X - num352 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num351 * 0.5)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num352;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num352;
									}
								}
							}
							else
							{
								if (this.velocity.Y < num355)
								{
									this.velocity.Y = this.velocity.Y + num352 * 1.1f;
								}
								else if (this.velocity.Y > num355)
								{
									this.velocity.Y = this.velocity.Y - num352 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num351 * 0.5)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num352;
									}
									else
									{
										this.velocity.X = this.velocity.X - num352;
									}
								}
							}
						}
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117 || this.type == 510 || this.type == 513)
					{
						if (flag33)
						{
							if (this.localAI[0] != 1f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 1f;
						}
						else
						{
							if (this.localAI[0] != 0f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 0f;
						}
						if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
						{
							this.netUpdate = true;
						}
					}
					if (this.type == 454)
					{
						float num376 = Vector2.Distance(Main.player[this.target].Center, base.Center);
						int num377 = 0;
						if (Vector2.Normalize(Main.player[this.target].Center - base.Center).ToRotation().AngleTowards(this.velocity.ToRotation(), 1.57079637f) == this.velocity.ToRotation() && num376 < 350f)
						{
							num377 = 4;
						}
						if ((double)num377 > this.frameCounter)
						{
							this.frameCounter += 1.0;
						}
						if ((double)num377 < this.frameCounter)
						{
							this.frameCounter -= 1.0;
						}
						if (this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
						}
						if (this.frameCounter > 4.0)
						{
							this.frameCounter = 4.0;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 7)
			{
				bool flag38 = Main.raining;
				if (!Main.dayTime)
				{
					flag38 = true;
				}
				if (Main.eclipse)
				{
					flag38 = true;
				}
				if (Main.slimeRain)
				{
					flag38 = true;
				}
				float num378 = 1f;
				if (Main.expertMode)
				{
					this.defense = (this.dryadWard ? (this.defDefense + 10) : this.defDefense);
				}
				else
				{
					this.defense = (this.dryadWard ? (this.defDefense + 6) : this.defDefense);
				}
				if (this.townNPC || this.type == 453)
				{
					if (NPC.downedBoss1)
					{
						num378 += 0.1f;
						this.defense += 3;
					}
					if (NPC.downedBoss2)
					{
						num378 += 0.1f;
						this.defense += 3;
					}
					if (NPC.downedBoss3)
					{
						num378 += 0.1f;
						this.defense += 3;
					}
					if (NPC.downedQueenBee)
					{
						num378 += 0.1f;
						this.defense += 3;
					}
					if (Main.hardMode)
					{
						num378 += 0.4f;
						this.defense += 12;
					}
					if (NPC.downedMechBoss1)
					{
						num378 += 0.15f;
						this.defense += 6;
					}
					if (NPC.downedMechBoss2)
					{
						num378 += 0.15f;
						this.defense += 6;
					}
					if (NPC.downedMechBoss3)
					{
						num378 += 0.15f;
						this.defense += 6;
					}
					if (NPC.downedPlantBoss)
					{
						num378 += 0.15f;
						this.defense += 8;
					}
					if (NPC.downedGolemBoss)
					{
						num378 += 0.15f;
						this.defense += 8;
					}
					if (NPC.downedAncientCultist)
					{
						num378 += 0.15f;
						this.defense += 8;
					}
				}
				if (this.type == 142 && Main.netMode != 1 && !Main.xMas)
				{
					this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
					if (Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, 9999f, 0f, 0f, 0, 0, 0);
					}
				}
				if ((this.type == 148 || this.type == 149) && this.localAI[0] == 0f)
				{
					this.localAI[0] = (float)Main.rand.Next(1, 5);
				}
				if (this.type == 124)
				{
					bool flag39 = false;
					for (int num379 = 0; num379 < 1000; num379++)
					{
						if (Main.projectile[num379].active && Main.projectile[num379].type == 582 && Main.projectile[num379].ai[1] == (float)this.whoAmI)
						{
							flag39 = true;
							break;
						}
					}
					this.localAI[0] = (float)flag39.ToInt();
				}
				if ((this.type == 362 || this.type == 364) && Main.netMode != 1 && (this.velocity.Y > 4f || this.velocity.Y < -4f || this.wet))
				{
					int direction = this.direction;
					this.Transform(this.type + 1);
					this.TargetClosest(true);
					this.direction = direction;
					this.netUpdate = true;
					return;
				}
				int num75 = this.type;
				if (num75 <= 124)
				{
					switch (num75)
					{
						case 107:
							NPC.savedGoblin = true;
							break;
						case 108:
							NPC.savedWizard = true;
							break;
						default:
							if (num75 == 124)
							{
								NPC.savedMech = true;
							}
							break;
					}
				}
				else if (num75 != 353)
				{
					if (num75 != 369)
					{
						if (num75 == 441)
						{
							NPC.savedTaxCollector = true;
						}
					}
					else
					{
						NPC.savedAngler = true;
					}
				}
				else
				{
					NPC.savedStylist = true;
				}
				if (this.type >= 0 && this.type < 540 && NPCID.Sets.TownCritter[this.type] && this.target == 255)
				{
					this.TargetClosest(true);
					if (this.position.X < Main.player[this.target].position.X)
					{
						this.direction = 1;
						this.spriteDirection = this.direction;
					}
					if (this.position.X > Main.player[this.target].position.X)
					{
						this.direction = -1;
						this.spriteDirection = this.direction;
					}
					if (this.homeTileX == -1)
					{
						this.homeTileX = (int)((this.position.X + (float)(this.width / 2)) / 16f);
					}
				}
				else if (this.homeTileX == -1 && this.homeTileY == -1 && this.velocity.Y == 0f)
				{
					this.homeTileX = (int)base.Center.X / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height + 4f) / 16;
				}
				bool flag40 = false;
				int num380 = this.homeTileY;
				if (this.type == 441)
				{
					NPC.taxCollector = true;
				}
				this.directionY = -1;
				if (this.direction == 0)
				{
					this.direction = 1;
				}
				for (int num381 = 0; num381 < 255; num381++)
				{
					if (Main.player[num381].active && Main.player[num381].talkNPC == this.whoAmI)
					{
						flag40 = true;
						if (this.ai[0] != 0f)
						{
							this.netUpdate = true;
						}
						this.ai[0] = 0f;
						this.ai[1] = 300f;
						this.localAI[3] = 100f;
						if (Main.player[num381].position.X + (float)(Main.player[num381].width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.direction = -1;
						}
						else
						{
							this.direction = 1;
						}
					}
				}
				if (this.ai[3] == 1f)
				{
					this.life = -1;
					this.HitEffect(0, 10.0);
					this.active = false;
					this.netUpdate = true;
					return;
				}
				if (this.type == 37 && Main.netMode != 1)
				{
					this.homeless = false;
					this.homeTileX = Main.dungeonX;
					this.homeTileY = Main.dungeonY;
					if (NPC.downedBoss3)
					{
						this.ai[3] = 1f;
						this.netUpdate = true;
					}
				}
				if (Main.netMode != 1 && this.homeTileY > 0)
				{
					while (!WorldGen.SolidTile(this.homeTileX, num380) && num380 < Main.maxTilesY - 20)
					{
						num380++;
					}
				}
				if (this.type == 368)
				{
					this.homeless = true;
					if (!Main.dayTime)
					{
						this.homeTileX = (int)(base.Center.X / 16f);
						this.homeTileY = (int)(this.position.Y + (float)this.height + 2f) / 16;
						if (!flag40)
						{
							this.ai[0] = 1f;
							this.ai[1] = 200f;
						}
						flag38 = false;
					}
				}
				if (this.type == 369 && this.homeless && this.wet)
				{
					if (base.Center.X / 16f < 380f || base.Center.X / 16f > (float)(Main.maxTilesX - 380))
					{
						this.homeTileX = Main.spawnTileX;
						this.homeTileY = Main.spawnTileY;
						this.ai[0] = 1f;
						this.ai[1] = 200f;
					}
					if (this.position.X / 16f < 200f)
					{
						this.direction = 1;
					}
					else if (this.position.X / 16f > (float)(Main.maxTilesX - 200))
					{
						this.direction = -1;
					}
				}
				int num382 = (int)(this.position.X + (float)(this.width / 2)) / 16;
				int num383 = (int)(this.position.Y + (float)this.height + 1f) / 16;
				if (!WorldGen.InWorld(num382, num383, 0) || Main.tile[num382, num383] == null)
				{
					return;
				}
				if (!this.homeless && Main.netMode != 1 && this.townNPC && (flag38 || Main.tileDungeon[(int)Main.tile[num382, num383].type]) && (num382 != this.homeTileX || num383 != num380))
				{
					bool flag41 = true;
					for (int num384 = 0; num384 < 2; num384++)
					{
						Rectangle rectangle3 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						if (num384 == 1)
						{
							rectangle3 = new Rectangle(this.homeTileX * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num380 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						}
						for (int num385 = 0; num385 < 255; num385++)
						{
							if (Main.player[num385].active)
							{
								Rectangle rectangle4 = new Rectangle((int)Main.player[num385].position.X, (int)Main.player[num385].position.Y, Main.player[num385].width, Main.player[num385].height);
								if (rectangle4.Intersects(rectangle3))
								{
									flag41 = false;
									break;
								}
							}
							if (!flag41)
							{
								break;
							}
						}
					}
					if (flag41)
					{
						if (this.type == 37 || !Collision.SolidTiles(this.homeTileX - 1, this.homeTileX + 1, num380 - 3, num380 - 1))
						{
							this.velocity.X = 0f;
							this.velocity.Y = 0f;
							this.position.X = (float)(this.homeTileX * 16 + 8 - this.width / 2);
							this.position.Y = (float)(num380 * 16 - this.height) - 0.1f;
							this.netUpdate = true;
						}
						else
						{
							this.homeless = true;
							WorldGen.QuickFindHome(this.whoAmI);
						}
					}
				}
				bool flag42 = this.type == 300 || this.type == 447;
				float num386 = 200f;
				if (NPCID.Sets.DangerDetectRange[this.type] != -1)
				{
					num386 = (float)NPCID.Sets.DangerDetectRange[this.type];
				}
				bool flag43 = false;
				bool flag44 = false;
				float num387 = -1f;
				float num388 = -1f;
				int num389 = 0;
				int num390 = -1;
				int num391 = -1;
				if (Main.netMode != 1 && !flag40)
				{
					for (int num392 = 0; num392 < 200; num392++)
					{
						if (Main.npc[num392].active && !Main.npc[num392].friendly && Main.npc[num392].damage > 0 && Main.npc[num392].Distance(base.Center) < num386 && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num392].netID)))
						{
							flag43 = true;
							float num393 = Main.npc[num392].Center.X - base.Center.X;
							if (num393 < 0f && (num387 == -1f || num393 > num387))
							{
								num387 = num393;
								num390 = num392;
							}
							if (num393 > 0f && (num388 == -1f || num393 < num388))
							{
								num388 = num393;
								num391 = num392;
							}
						}
					}
					if (flag43)
					{
						if (num387 == -1f)
						{
							num389 = 1;
						}
						else if (num388 == -1f)
						{
							num389 = -1;
						}
						else
						{
							num389 = (num388 < -num387).ToDirectionInt();
						}
						float num394 = 0f;
						if (num387 != -1f)
						{
							num394 = -num387;
						}
						if (num394 == 0f || (num388 < num394 && num388 > 0f))
						{
							num394 = num388;
						}
						if (this.ai[0] == 8f)
						{
							if (this.direction == -num389)
							{
								this.ai[0] = 1f;
								this.ai[1] = (float)(300 + Main.rand.Next(300));
								this.ai[2] = 0f;
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
						else if (this.ai[0] != 10f && this.ai[0] != 12f && this.ai[0] != 13f && this.ai[0] != 14f && this.ai[0] != 15f)
						{
							if (NPCID.Sets.PrettySafe[this.type] != -1 && (float)NPCID.Sets.PrettySafe[this.type] < num394)
							{
								flag43 = false;
								flag44 = true;
							}
							else if (this.ai[0] != 1f)
							{
								bool flag45 = this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 16f || this.ai[0] == 17f;
								if (flag45)
								{
									NPC nPC = Main.npc[(int)this.ai[2]];
									if (nPC.active)
									{
										nPC.ai[0] = 1f;
										nPC.ai[1] = (float)(120 + Main.rand.Next(120));
										nPC.ai[2] = 0f;
										nPC.localAI[3] = 0f;
										nPC.direction = -num389;
										nPC.netUpdate = true;
									}
								}
								this.ai[0] = 1f;
								this.ai[1] = (float)(120 + Main.rand.Next(120));
								this.ai[2] = 0f;
								this.localAI[3] = 0f;
								this.direction = -num389;
								this.netUpdate = true;
							}
							else if (this.ai[0] == 1f && this.direction != -num389)
							{
								this.direction = -num389;
								this.netUpdate = true;
							}
						}
					}
				}
				if (this.ai[0] == 0f)
				{
					if (this.localAI[3] > 0f)
					{
						this.localAI[3] -= 1f;
					}
					if (flag38 && !flag40 && !NPCID.Sets.TownCritter[this.type])
					{
						if (Main.netMode != 1)
						{
							if (num382 == this.homeTileX && num383 == num380)
							{
								if (this.velocity.X != 0f)
								{
									this.netUpdate = true;
								}
								if (this.velocity.X > 0.1f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if (this.velocity.X < -0.1f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else
								{
									this.velocity.X = 0f;
								}
							}
							else
							{
								if (num382 > this.homeTileX)
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(200));
								this.ai[2] = 0f;
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
					}
					else
					{
						if (flag42)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if (this.velocity.X > 0.1f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X < -0.1f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else
						{
							this.velocity.X = 0f;
						}
						if (Main.netMode != 1)
						{
							if (this.ai[1] > 0f)
							{
								this.ai[1] -= 1f;
							}
							if (this.ai[1] <= 0f)
							{
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(300));
								this.ai[2] = 0f;
								if (NPCID.Sets.TownCritter[this.type])
								{
									this.ai[1] += (float)Main.rand.Next(200, 400);
								}
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
					}
					if (Main.netMode != 1 && (!flag38 || (num382 == this.homeTileX && num383 == num380)))
					{
						if (num382 < this.homeTileX - 25 || num382 > this.homeTileX + 25)
						{
							if (this.localAI[3] == 0f)
							{
								if (num382 < this.homeTileX - 50 && this.direction == -1)
								{
									this.direction = 1;
									this.netUpdate = true;
								}
								else if (num382 > this.homeTileX + 50 && this.direction == 1)
								{
									this.direction = -1;
									this.netUpdate = true;
								}
							}
						}
						else if (Main.rand.Next(80) == 0 && this.localAI[3] == 0f)
						{
							this.localAI[3] = 200f;
							this.direction *= -1;
							this.netUpdate = true;
						}
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (Main.netMode != 1 && flag38 && num382 == this.homeTileX && num383 == this.homeTileY && !NPCID.Sets.TownCritter[this.type])
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(200 + Main.rand.Next(200));
						this.localAI[3] = 60f;
						this.netUpdate = true;
					}
					else
					{
						bool flag46 = Collision.DrownCollision(this.position, this.width, this.height, 1f);
						if (!flag46)
						{
							if (Main.netMode != 1 && !this.homeless && !Main.tileDungeon[(int)Main.tile[num382, num383].type] && (num382 < this.homeTileX - 35 || num382 > this.homeTileX + 35))
							{
								if (this.position.X < (float)(this.homeTileX * 16) && this.direction == -1)
								{
									this.ai[1] -= 5f;
								}
								else if (this.position.X > (float)(this.homeTileX * 16) && this.direction == 1)
								{
									this.ai[1] -= 5f;
								}
							}
							this.ai[1] -= 1f;
						}
						if (this.ai[1] <= 0f)
						{
							this.ai[0] = 0f;
							this.ai[1] = (float)(300 + Main.rand.Next(300));
							this.ai[2] = 0f;
							if (NPCID.Sets.TownCritter[this.type])
							{
								this.ai[1] -= (float)Main.rand.Next(100);
							}
							else
							{
								this.ai[1] += (float)Main.rand.Next(900);
							}
							this.localAI[3] = 60f;
							this.netUpdate = true;
						}
						if (this.closeDoor && ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 2) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 2)))
						{
							Tile tileSafely = Framing.GetTileSafely(this.doorX, this.doorY);
							if (tileSafely.type == 11)
							{
								bool flag47 = WorldGen.CloseDoor(this.doorX, this.doorY, false);
								if (flag47)
								{
									this.closeDoor = false;
									NetMessage.SendData(19, -1, -1, "", 1, (float)this.doorX, (float)this.doorY, (float)this.direction, 0, 0, 0);
								}
								if ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 4) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 4) || (this.position.Y + (float)(this.height / 2)) / 16f > (float)(this.doorY + 4) || (this.position.Y + (float)(this.height / 2)) / 16f < (float)(this.doorY - 4))
								{
									this.closeDoor = false;
								}
							}
							else if (tileSafely.type == 389)
							{
								bool flag48 = WorldGen.ShiftTallGate(this.doorX, this.doorY, true);
								if (flag48)
								{
									this.closeDoor = false;
									NetMessage.SendData(19, -1, -1, "", 5, (float)this.doorX, (float)this.doorY, 0f, 0, 0, 0);
								}
								if ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 4) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 4) || (this.position.Y + (float)(this.height / 2)) / 16f > (float)(this.doorY + 4) || (this.position.Y + (float)(this.height / 2)) / 16f < (float)(this.doorY - 4))
								{
									this.closeDoor = false;
								}
							}
							else
							{
								this.closeDoor = false;
							}
						}
						float num395 = 1f;
						float num396 = 0.07f;
						if (this.type == 299 || this.type == 539 || this.type == 538)
						{
							num395 = 1.5f;
						}
						if (flag42)
						{
							num395 = 2f;
							num396 = 1f;
						}
						if (this.friendly && (flag43 || flag46))
						{
							num395 = 1.5f;
							float num397 = 1f - (float)this.life / (float)this.lifeMax;
							num395 += num397 * 0.9f;
							num396 = 0.1f;
						}
						if (this.velocity.X < -num395 || this.velocity.X > num395)
						{
							if (this.velocity.Y == 0f)
							{
								this.velocity *= 0.8f;
							}
						}
						else if (this.velocity.X < num395 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + num396;
							if (this.velocity.X > num395)
							{
								this.velocity.X = num395;
							}
						}
						else if (this.velocity.X > -num395 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - num396;
							if (this.velocity.X > num395)
							{
								this.velocity.X = num395;
							}
						}
						bool holdsMatching = true;
						if ((float)(this.homeTileY * 16 - 32) > this.position.Y)
						{
							holdsMatching = false;
						}
						if ((this.direction == 1 && this.position.Y + (float)(this.width / 2) > (float)(this.homeTileX * 16)) || (this.direction == -1 && this.position.Y + (float)(this.width / 2) < (float)(this.homeTileX * 16)))
						{
							holdsMatching = true;
						}
						if (this.velocity.Y == 0f)
						{
							Collision.StepDown(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false);
						}
						if (this.velocity.Y >= 0f)
						{
							Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, holdsMatching, 1);
						}
						if (this.velocity.Y == 0f)
						{
							int num398 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
							int num399 = (int)((this.position.Y + (float)this.height - 16f) / 16f);
							bool flag49 = false;
							bool flag50 = true;
							if (this.townNPC && this.ai[1] < 30f)
							{
								flag49 = !Utils.PlotTileLine(base.Top, base.Bottom, (float)this.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs));
								if (!flag49)
								{
									Rectangle hitbox = base.Hitbox;
									hitbox.X -= 20;
									hitbox.Width += 40;
									for (int num400 = 0; num400 < 200; num400++)
									{
										if (Main.npc[num400].active && Main.npc[num400].friendly && num400 != this.whoAmI && Main.npc[num400].velocity.X == 0f && hitbox.Intersects(Main.npc[num400].Hitbox))
										{
											flag49 = true;
											break;
										}
									}
								}
							}
							if (!flag49 && flag46)
							{
								flag49 = true;
							}
							if (flag50 && (NPCID.Sets.TownCritter[this.type] || num382 < this.homeTileX - 35 || num382 > this.homeTileX + 35))
							{
								flag50 = false;
							}
							if (flag50)
							{
								int num401 = 0;
								for (int num402 = -1; num402 <= 4; num402++)
								{
									Tile tileSafely2 = Framing.GetTileSafely(num398 - this.direction * num401, num399 + num402);
									if (tileSafely2.lava() && tileSafely2.liquid > 0)
									{
										flag50 = true;
										break;
									}
									if (tileSafely2.nactive() && Main.tileSolid[(int)tileSafely2.type])
									{
										flag50 = false;
									}
								}
							}
							if (!flag50 && this.wet)
							{
								bool flag51 = flag46;
								bool flag52 = false;
								if (!flag51)
								{
									flag52 = Collision.DrownCollision(this.position + new Vector2((float)(this.width * this.direction), 0f), this.width, this.height, 1f);
								}
								flag52 = (flag52 || Collision.DrownCollision(this.position + new Vector2((float)(this.width * this.direction), (float)(this.height * 2 - 16 - (flag51 ? 16 : 0))), this.width, 16 + (flag51 ? 16 : 0), 1f));
								if (flag52 && this.localAI[3] <= 0f)
								{
									flag50 = true;
									this.localAI[3] = 600f;
								}
							}
							if (this.position.X == this.localAI[3])
							{
								this.direction *= -1;
								this.netUpdate = true;
								this.localAI[3] = 600f;
							}
							if (flag46)
							{
								if (this.localAI[3] > 0f)
								{
									this.localAI[3] -= 1f;
								}
							}
							else
							{
								this.localAI[3] = -1f;
							}
							Tile tileSafely3 = Framing.GetTileSafely(num398, num399);
							Tile tileSafely4 = Framing.GetTileSafely(num398, num399 - 1);
							Tile tileSafely5 = Framing.GetTileSafely(num398, num399 - 2);
							if (this.townNPC && tileSafely5.nactive() && (tileSafely5.type == 10 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag38))
							{
								if (Main.netMode != 1)
								{
									if (WorldGen.OpenDoor(num398, num399 - 2, this.direction))
									{
										this.closeDoor = true;
										this.doorX = num398;
										this.doorY = num399 - 2;
										NetMessage.SendData(19, -1, -1, "", 0, (float)num398, (float)(num399 - 2), (float)this.direction, 0, 0, 0);
										this.netUpdate = true;
										this.ai[1] += 80f;
									}
									else if (WorldGen.OpenDoor(num398, num399 - 2, -this.direction))
									{
										this.closeDoor = true;
										this.doorX = num398;
										this.doorY = num399 - 2;
										NetMessage.SendData(19, -1, -1, "", 0, (float)num398, (float)(num399 - 2), (float)(-(float)this.direction), 0, 0, 0);
										this.netUpdate = true;
										this.ai[1] += 80f;
									}
									else if (WorldGen.ShiftTallGate(num398, num399 - 2, false))
									{
										this.closeDoor = true;
										this.doorX = num398;
										this.doorY = num399 - 2;
										NetMessage.SendData(19, -1, -1, "", 4, (float)num398, (float)(num399 - 2), 0f, 0, 0, 0);
										this.netUpdate = true;
										this.ai[1] += 80f;
									}
									else
									{
										this.direction *= -1;
										this.netUpdate = true;
									}
								}
							}
							else
							{
								if ((this.velocity.X < 0f && this.spriteDirection == -1) || (this.velocity.X > 0f && this.spriteDirection == 1))
								{
									if (tileSafely5.nactive() && Main.tileSolid[(int)tileSafely5.type] && !Main.tileSolidTop[(int)tileSafely5.type])
									{
										if (!Collision.SolidTilesVersatile(num398 - this.direction * 2, num398 - this.direction, num399 - 5, num399 - 1) && !Collision.SolidTiles(num398, num398, num399 - 5, num399 - 3))
										{
											this.velocity.Y = -6f;
											this.netUpdate = true;
										}
										else if (flag42)
										{
											if (WorldGen.SolidTile((int)(base.Center.X / 16f) + this.direction, (int)(base.Center.Y / 16f)))
											{
												this.direction *= -1;
												this.velocity.X = this.velocity.X * 0f;
												this.netUpdate = true;
											}
										}
										else if (flag43)
										{
											flag49 = false;
											this.velocity.X = 0f;
											this.direction *= -1;
											this.netUpdate = true;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else if (tileSafely4.nactive() && Main.tileSolid[(int)tileSafely4.type] && !Main.tileSolidTop[(int)tileSafely4.type])
									{
										if (!Collision.SolidTilesVersatile(num398 - this.direction * 2, num398 - this.direction, num399 - 4, num399 - 1) && !Collision.SolidTiles(num398, num398, num399 - 4, num399 - 2))
										{
											this.velocity.Y = -5f;
											this.netUpdate = true;
										}
										else if (flag43)
										{
											flag49 = false;
											this.velocity.X = 0f;
											this.direction *= -1;
											this.netUpdate = true;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else if (this.position.Y + (float)this.height - (float)(num399 * 16) > 20f && tileSafely3.nactive() && Main.tileSolid[(int)tileSafely3.type] && !tileSafely3.topSlope())
									{
										if (!Collision.SolidTilesVersatile(num398 - this.direction * 2, num398, num399 - 3, num399 - 1))
										{
											this.velocity.Y = -4.4f;
											this.netUpdate = true;
										}
										else if (flag43)
										{
											flag49 = false;
											this.velocity.X = 0f;
											this.direction *= -1;
											this.netUpdate = true;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else if (flag50)
									{
										this.direction *= -1;
										this.velocity.X = this.velocity.X * -1f;
										this.netUpdate = true;
										if (flag43)
										{
											flag49 = false;
											this.velocity.X = 0f;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
									}
									if (flag49)
									{
										this.ai[1] = 90f;
										this.netUpdate = true;
									}
									if (this.velocity.Y < 0f)
									{
										this.localAI[3] = this.position.X;
									}
								}
								if (this.velocity.Y < 0f && this.wet)
								{
									this.velocity.Y = this.velocity.Y * 1.2f;
								}
								if (this.velocity.Y < 0f && NPCID.Sets.TownCritter[this.type] && !flag42)
								{
									this.velocity.Y = this.velocity.Y * 1.2f;
								}
							}
						}
					}
				}
				else if (this.ai[0] == 2f || this.ai[0] == 11f)
				{
					if (Main.netMode != 1)
					{
						this.localAI[3] -= 1f;
						if (Main.rand.Next(60) == 0 && this.localAI[3] == 0f)
						{
							this.localAI[3] = 60f;
							this.direction *= -1;
							this.netUpdate = true;
						}
					}
					this.ai[1] -= 1f;
					this.velocity.X = this.velocity.X * 0.8f;
					if (this.ai[1] <= 0f)
					{
						this.localAI[3] = 40f;
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 5f || this.ai[0] == 8f || this.ai[0] == 9f || this.ai[0] == 16f || this.ai[0] == 17f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					if (this.ai[0] == 8f && this.ai[1] < 60f && flag43)
					{
						this.ai[1] = 180f;
						this.netUpdate = true;
					}
					if (this.ai[0] == 5f)
					{
						Point point = base.Center.ToTileCoordinates();
						Tile tile = Main.tile[point.X, point.Y];
						if (tile.type != 15)
						{
							this.ai[1] = 0f;
						}
					}
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(30 + Main.rand.Next(60));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 6f || this.ai[0] == 7f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					int num403 = (int)this.ai[2];
					if (num403 < 0 || num403 > 255 || !Main.player[num403].active || Main.player[num403].dead || Main.player[num403].Distance(base.Center) > 200f || !Collision.CanHitLine(base.Top, 0, 0, Main.player[num403].Top, 0, 0))
					{
						this.ai[1] = 0f;
					}
					if (this.ai[1] > 0f)
					{
						int num404 = (base.Center.X < Main.player[num403].Center.X) ? 1 : -1;
						if (num404 != this.direction)
						{
							this.netUpdate = true;
						}
						this.direction = num404;
					}
					else
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(30 + Main.rand.Next(60));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 10f)
				{
					int num405 = 0;
					int num406 = 0;
					float knockBack = 0f;
					float scaleFactor7 = 0f;
					int num407 = 0;
					int num408 = 0;
					int maxValue3 = 0;
					float num409 = 0f;
					float num410 = (float)NPCID.Sets.DangerDetectRange[this.type];
					float num411 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
						this.localAI[3] = 0f;
					}
					if (this.type == 38)
					{
						num405 = 30;
						scaleFactor7 = 6f;
						num406 = 20;
						num407 = 10;
						num408 = 180;
						maxValue3 = 120;
						num409 = 16f;
						knockBack = 7f;
					}
					else if (this.type == 208)
					{
						num405 = 588;
						scaleFactor7 = 6f;
						num406 = 30;
						num407 = 10;
						num408 = 60;
						maxValue3 = 120;
						num409 = 16f;
						knockBack = 6f;
					}
					else if (this.type == 17)
					{
						num405 = 48;
						scaleFactor7 = 9f;
						num406 = 12;
						num407 = 10;
						num408 = 60;
						maxValue3 = 60;
						num409 = 16f;
						knockBack = 1.5f;
					}
					else if (this.type == 369)
					{
						num405 = 520;
						scaleFactor7 = 12f;
						num406 = 10;
						num407 = 10;
						num408 = 0;
						maxValue3 = 1;
						num409 = 16f;
						knockBack = 3f;
					}
					else if (this.type == 453)
					{
						num405 = 21;
						scaleFactor7 = 14f;
						num406 = 14;
						num407 = 10;
						num408 = 0;
						maxValue3 = 1;
						num409 = 16f;
						knockBack = 3f;
					}
					else if (this.type == 107)
					{
						num405 = 24;
						scaleFactor7 = 5f;
						num406 = 15;
						num407 = 10;
						num408 = 60;
						maxValue3 = 60;
						num409 = 16f;
						knockBack = 1f;
					}
					else if (this.type == 124)
					{
						num405 = 582;
						scaleFactor7 = 10f;
						num406 = 11;
						num407 = 1;
						num408 = 30;
						maxValue3 = 30;
						knockBack = 3.5f;
					}
					else if (this.type == 18)
					{
						num405 = 583;
						scaleFactor7 = 8f;
						num406 = 8;
						num407 = 1;
						num408 = 15;
						maxValue3 = 10;
						knockBack = 2f;
						num409 = 10f;
					}
					else if (this.type == 142)
					{
						num405 = 589;
						scaleFactor7 = 7f;
						num406 = 22;
						num407 = 1;
						num408 = 10;
						maxValue3 = 1;
						knockBack = 2f;
						num409 = 10f;
					}
					if (Main.expertMode)
					{
						num406 = (int)((float)num406 * Main.expertNPCDamage);
					}
					num406 = (int)((float)num406 * num378);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					this.localAI[3] += 1f;
					if (this.localAI[3] == (float)num407 && Main.netMode != 1)
					{
						Vector2 vector41 = -Vector2.UnitY;
						if (num389 == 1 && this.spriteDirection == 1 && num391 != -1)
						{
							vector41 = base.DirectionTo(Main.npc[num391].Center + new Vector2(0f, -num409 * MathHelper.Clamp(base.Distance(Main.npc[num391].Center) / num410, 0f, 1f)));
						}
						if (num389 == -1 && this.spriteDirection == -1 && num390 != -1)
						{
							vector41 = base.DirectionTo(Main.npc[num390].Center + new Vector2(0f, -num409 * MathHelper.Clamp(base.Distance(Main.npc[num390].Center) / num410, 0f, 1f)));
						}
						if (vector41.HasNaNs() || Math.Sign(vector41.X) != this.spriteDirection)
						{
							vector41 = new Vector2((float)this.spriteDirection, -1f);
						}
						vector41 *= scaleFactor7;
						vector41 += Utils.RandomVector2(Main.rand, -num411, num411);
						int num412;
						if (this.type == 124)
						{
							num412 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector41.X, vector41.Y, num405, num406, knockBack, Main.myPlayer, 0f, (float)this.whoAmI);
						}
						else if (this.type == 142)
						{
							num412 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector41.X, vector41.Y, num405, num406, knockBack, Main.myPlayer, 0f, (float)Main.rand.Next(5));
						}
						else
						{
							num412 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector41.X, vector41.Y, num405, num406, knockBack, Main.myPlayer, 0f, 0f);
						}
						Main.projectile[num412].npcProj = true;
						Main.projectile[num412].noDropItem = true;
					}
					if (this.ai[1] <= 0f && !false)
					{
						this.ai[0] = (float)((this.localAI[2] == 8f && flag43) ? 8 : 0);
						this.ai[1] = (float)(num408 + Main.rand.Next(maxValue3));
						this.ai[2] = 0f;
						this.localAI[1] = (this.localAI[3] = (float)(num408 / 2 + Main.rand.Next(maxValue3)));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 12f)
				{
					int num413 = 0;
					int num414 = 0;
					float scaleFactor8 = 0f;
					int num415 = 0;
					int num416 = 0;
					int maxValue4 = 0;
					float knockBack2 = 0f;
					int num417 = 0;
					bool flag53 = false;
					float num418 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
						this.localAI[3] = 0f;
					}
					int num419 = -1;
					if (num389 == 1 && this.spriteDirection == 1)
					{
						num419 = num391;
					}
					if (num389 == -1 && this.spriteDirection == -1)
					{
						num419 = num390;
					}
					if (this.type == 19)
					{
						num413 = 14;
						scaleFactor8 = 13f;
						num414 = 24;
						num416 = 14;
						maxValue4 = 4;
						knockBack2 = 3f;
						num415 = 1;
						num418 = 0.5f;
						if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
						{
							this.frameCounter = 0.0;
							this.localAI[3] = 0f;
						}
						if (Main.hardMode)
						{
							num414 = 15;
							if (this.localAI[3] > (float)num415)
							{
								num415 = 10;
								flag53 = true;
							}
							if (this.localAI[3] > (float)num415)
							{
								num415 = 20;
								flag53 = true;
							}
							if (this.localAI[3] > (float)num415)
							{
								num415 = 30;
								flag53 = true;
							}
						}
					}
					else if (this.type == 227)
					{
						num413 = 587;
						scaleFactor8 = 10f;
						num414 = 8;
						num416 = 10;
						maxValue4 = 1;
						knockBack2 = 1.75f;
						num415 = 1;
						num418 = 0.5f;
						if (this.localAI[3] > (float)num415)
						{
							num415 = 12;
							flag53 = true;
						}
						if (this.localAI[3] > (float)num415)
						{
							num415 = 24;
							flag53 = true;
						}
						if (Main.hardMode)
						{
							num414 += 2;
						}
					}
					else if (this.type == 368)
					{
						num413 = 14;
						scaleFactor8 = 13f;
						num414 = 24;
						num416 = 12;
						maxValue4 = 5;
						knockBack2 = 2f;
						num415 = 1;
						num418 = 0.2f;
						if (Main.hardMode)
						{
							num414 = 30;
							num413 = 357;
						}
					}
					else if (this.type == 22)
					{
						scaleFactor8 = 10f;
						num414 = 8;
						num415 = 1;
						if (Main.hardMode)
						{
							num413 = 2;
							num416 = 15;
							maxValue4 = 10;
							num414 += 6;
						}
						else
						{
							num413 = 1;
							num416 = 30;
							maxValue4 = 20;
						}
						knockBack2 = 2.75f;
						num417 = 4;
						num418 = 0.7f;
					}
					else if (this.type == 228)
					{
						num413 = 267;
						scaleFactor8 = 14f;
						num414 = 20;
						num415 = 1;
						num416 = 10;
						maxValue4 = 1;
						knockBack2 = 3f;
						num417 = 6;
						num418 = 0.4f;
					}
					else if (this.type == 178)
					{
						num413 = 242;
						scaleFactor8 = 13f;
						num414 = 15;
						num416 = 10;
						maxValue4 = 1;
						knockBack2 = 2f;
						num415 = 1;
						if (this.localAI[3] > (float)num415)
						{
							num415 = 8;
							flag53 = true;
						}
						if (this.localAI[3] > (float)num415)
						{
							num415 = 16;
							flag53 = true;
						}
						num418 = 0.3f;
					}
					else if (this.type == 229)
					{
						num413 = 14;
						scaleFactor8 = 14f;
						num414 = 24;
						num416 = 10;
						maxValue4 = 1;
						knockBack2 = 2f;
						num415 = 1;
						num418 = 0.7f;
						if (this.localAI[3] > (float)num415)
						{
							num415 = 16;
							flag53 = true;
						}
						if (this.localAI[3] > (float)num415)
						{
							num415 = 24;
							flag53 = true;
						}
						if (this.localAI[3] > (float)num415)
						{
							num415 = 32;
							flag53 = true;
						}
						if (this.localAI[3] > (float)num415)
						{
							num415 = 40;
							flag53 = true;
						}
						if (this.localAI[3] > (float)num415)
						{
							num415 = 48;
							flag53 = true;
						}
						if (this.localAI[3] == 0f && num419 != -1 && base.Distance(Main.npc[num419].Center) < (float)NPCID.Sets.PrettySafe[this.type])
						{
							num418 = 0.1f;
							num413 = 162;
							num414 = 50;
							knockBack2 = 10f;
							scaleFactor8 = 24f;
						}
					}
					else if (this.type == 209)
					{
						int num420 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							134,
							133,
							135
						});
						num413 = num420;
						num415 = 1;
						if (num413 == 135)
						{
							scaleFactor8 = 12f;
							num414 = 30;
							num416 = 30;
							maxValue4 = 10;
							knockBack2 = 7f;
							num418 = 0.2f;
						}
						else if (num413 == 133)
						{
							scaleFactor8 = 10f;
							num414 = 25;
							num416 = 10;
							maxValue4 = 1;
							knockBack2 = 6f;
							num418 = 0.2f;
						}
						else if (num413 == 134)
						{
							scaleFactor8 = 13f;
							num414 = 20;
							num416 = 20;
							maxValue4 = 10;
							knockBack2 = 4f;
							num418 = 0.1f;
						}
					}
					if (Main.expertMode)
					{
						num414 = (int)((float)num414 * Main.expertNPCDamage);
					}
					num414 = (int)((float)num414 * num378);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					this.localAI[3] += 1f;
					if (this.localAI[3] == (float)num415 && Main.netMode != 1)
					{
						Vector2 vector42 = Vector2.Zero;
						if (num419 != -1)
						{
							vector42 = base.DirectionTo(Main.npc[num419].Center + new Vector2(0f, (float)(-(float)num417)));
						}
						if (vector42.HasNaNs() || Math.Sign(vector42.X) != this.spriteDirection)
						{
							vector42 = new Vector2((float)this.spriteDirection, 0f);
						}
						vector42 *= scaleFactor8;
						vector42 += Utils.RandomVector2(Main.rand, -num418, num418);
						int num421;
						if (this.type == 227)
						{
							num421 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector42.X, vector42.Y, num413, num414, knockBack2, Main.myPlayer, 0f, (float)Main.rand.Next(12) / 6f);
						}
						else
						{
							num421 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector42.X, vector42.Y, num413, num414, knockBack2, Main.myPlayer, 0f, 0f);
						}
						Main.projectile[num421].npcProj = true;
						Main.projectile[num421].noDropItem = true;
					}
					if (this.localAI[3] == (float)num415 && flag53 && num419 != -1)
					{
						Vector2 vector43 = base.DirectionTo(Main.npc[num419].Center);
						if (vector43.Y <= 0.5f && vector43.Y >= -0.5f)
						{
							this.ai[2] = vector43.Y;
						}
					}
					if (this.ai[1] <= 0f && !false)
					{
						this.ai[0] = (float)((this.localAI[2] == 8f && flag43) ? 8 : 0);
						this.ai[1] = (float)(num416 + Main.rand.Next(maxValue4));
						this.ai[2] = 0f;
						this.localAI[1] = (this.localAI[3] = (float)(num416 / 2 + Main.rand.Next(maxValue4)));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 13f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
					}
					this.ai[1] -= 1f;
					this.localAI[3] += 1f;
					if (this.localAI[3] == 1f && Main.netMode != 1)
					{
						Vector2 vec2 = base.DirectionTo(Main.npc[(int)this.ai[2]].Center + new Vector2(0f, -20f));
						if (vec2.HasNaNs() || Math.Sign(vec2.X) == -this.spriteDirection)
						{
							vec2 = new Vector2((float)this.spriteDirection, -1f);
						}
						vec2 *= 8f;
						int num422 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vec2.X, vec2.Y, 584, 0, 0f, Main.myPlayer, this.ai[2], 0f);
						Main.projectile[num422].npcProj = true;
						Main.projectile[num422].noDropItem = true;
					}
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(10 + Main.rand.Next(10));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(5 + Main.rand.Next(10));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 14f)
				{
					int num423 = 0;
					int num424 = 0;
					float scaleFactor9 = 0f;
					int num425 = 0;
					int num426 = 0;
					int maxValue5 = 0;
					float knockBack3 = 0f;
					float num427 = 0f;
					float num428 = (float)NPCID.Sets.DangerDetectRange[this.type];
					float num429 = 1f;
					float num430 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
						this.localAI[3] = 0f;
					}
					int num431 = -1;
					if (num389 == 1 && this.spriteDirection == 1)
					{
						num431 = num391;
					}
					if (num389 == -1 && this.spriteDirection == -1)
					{
						num431 = num390;
					}
					if (this.type == 54)
					{
						num423 = 585;
						scaleFactor9 = 10f;
						num424 = 16;
						num425 = 30;
						num426 = 20;
						maxValue5 = 15;
						knockBack3 = 2f;
						num430 = 1f;
					}
					else if (this.type == 108)
					{
						num423 = 15;
						scaleFactor9 = 6f;
						num424 = 18;
						num425 = 15;
						num426 = 15;
						maxValue5 = 5;
						knockBack3 = 3f;
						num427 = 20f;
					}
					else if (this.type == 160)
					{
						num423 = 590;
						num424 = 40;
						num425 = 15;
						num426 = 10;
						maxValue5 = 1;
						knockBack3 = 3f;
						while (this.localAI[3] > (float)num425)
						{
							num425 += 15;
						}
					}
					else if (this.type == 20)
					{
						num423 = 586;
						num425 = 24;
						num426 = 10;
						maxValue5 = 1;
						knockBack3 = 3f;
					}
					if (Main.expertMode)
					{
						num424 = (int)((float)num424 * Main.expertNPCDamage);
					}
					num424 = (int)((float)num424 * num378);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					this.localAI[3] += 1f;
					if (this.localAI[3] == (float)num425 && Main.netMode != 1)
					{
						Vector2 vector44 = Vector2.Zero;
						if (num431 != -1)
						{
							vector44 = base.DirectionTo(Main.npc[num431].Center + new Vector2(0f, -num427 * MathHelper.Clamp(base.Distance(Main.npc[num431].Center) / num428, 0f, 1f)));
						}
						if (vector44.HasNaNs() || Math.Sign(vector44.X) != this.spriteDirection)
						{
							vector44 = new Vector2((float)this.spriteDirection, 0f);
						}
						vector44 *= scaleFactor9;
						vector44 += Utils.RandomVector2(Main.rand, -num430, num430);
						if (this.type == 108)
						{
							int num432 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								1,
								1,
								1,
								1,
								2,
								2,
								3
							});
							for (int num433 = 0; num433 < num432; num433++)
							{
								Vector2 vector45 = Utils.RandomVector2(Main.rand, -3.4f, 3.4f);
								int num434 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector44.X + vector45.X, vector44.Y + vector45.Y, num423, num424, knockBack3, Main.myPlayer, 0f, 0f);
								Main.projectile[num434].npcProj = true;
								Main.projectile[num434].noDropItem = true;
							}
						}
						else if (this.type == 160)
						{
							if (num431 != -1)
							{
								Vector2 vector46 = Main.npc[num431].position - Main.npc[num431].Size * 2f + Main.npc[num431].Size * Utils.RandomVector2(Main.rand, 0f, 1f) * 5f;
								int num435 = 10;
								while (num435 > 0 && WorldGen.SolidTile(Framing.GetTileSafely((int)vector46.X / 16, (int)vector46.Y / 16)))
								{
									num435--;
									vector46 = Main.npc[num431].position - Main.npc[num431].Size * 2f + Main.npc[num431].Size * Utils.RandomVector2(Main.rand, 0f, 1f) * 5f;
								}
								int num436 = Projectile.NewProjectile(vector46.X, vector46.Y, 0f, 0f, num423, num424, knockBack3, Main.myPlayer, 0f, 0f);
								Main.projectile[num436].npcProj = true;
								Main.projectile[num436].noDropItem = true;
							}
						}
						else if (this.type == 20)
						{
							int num437 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector44.X, vector44.Y, num423, num424, knockBack3, Main.myPlayer, 0f, (float)this.whoAmI);
							Main.projectile[num437].npcProj = true;
							Main.projectile[num437].noDropItem = true;
						}
						else
						{
							int num438 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector44.X, vector44.Y, num423, num424, knockBack3, Main.myPlayer, 0f, 0f);
							Main.projectile[num438].npcProj = true;
							Main.projectile[num438].noDropItem = true;
						}
					}
					if (num429 > 0f)
					{
						Vector3 vector47 = NPCID.Sets.MagicAuraColor[this.type].ToVector3() * num429;
					}
					if (this.ai[1] <= 0f && !false)
					{
						this.ai[0] = (float)((this.localAI[2] == 8f && flag43) ? 8 : 0);
						this.ai[1] = (float)(num426 + Main.rand.Next(maxValue5));
						this.ai[2] = 0f;
						this.localAI[1] = (this.localAI[3] = (float)(num426 / 2 + Main.rand.Next(maxValue5)));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 15f)
				{
					int num439 = 0;
					int maxValue6 = 0;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0.0;
						this.localAI[3] = 0f;
					}
					int num440 = 0;
					float num441 = 0f;
					int num442 = 0;
					int num443 = 0;
					if (num389 == 1)
					{
						int arg_1BD94_0 = this.spriteDirection;
					}
					if (num389 == -1)
					{
						int arg_1BDA4_0 = this.spriteDirection;
					}
					if (this.type == 207)
					{
						num440 = 11;
						num443 = (num442 = 32);
						num439 = 12;
						maxValue6 = 6;
						num441 = 4.25f;
					}
					else if (this.type == 441)
					{
						num440 = 9;
						num443 = (num442 = 28);
						num439 = 9;
						maxValue6 = 3;
						num441 = 3.5f;
					}
					else if (this.type == 353)
					{
						num440 = 10;
						num443 = (num442 = 32);
						num439 = 15;
						maxValue6 = 8;
						num441 = 5f;
					}
					if (Main.expertMode)
					{
						num440 = (int)((float)num440 * Main.expertNPCDamage);
					}
					num440 = (int)((float)num440 * num378);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] -= 1f;
					if (Main.netMode != 1)
					{
						Tuple<Vector2, float> swingStats = this.GetSwingStats(NPCID.Sets.AttackTime[this.type] * 2, (int)this.ai[1], this.spriteDirection, num442, num443);
						Rectangle rectangle5 = new Rectangle((int)swingStats.Item1.X, (int)swingStats.Item1.Y, num442, num443);
						if (this.spriteDirection == -1)
						{
							rectangle5.X -= num442;
						}
						rectangle5.Y -= num443;
						this.TweakSwingStats(NPCID.Sets.AttackTime[this.type] * 2, (int)this.ai[1], this.spriteDirection, ref rectangle5);
						int myPlayer = Main.myPlayer;
						for (int num444 = 0; num444 < 200; num444++)
						{
							NPC nPC2 = Main.npc[num444];
							if (nPC2.active && nPC2.immune[myPlayer] == 0 && !nPC2.dontTakeDamage && !nPC2.friendly && nPC2.damage > 0 && rectangle5.Intersects(nPC2.Hitbox) && (nPC2.noTileCollide || Collision.CanHit(this.position, this.width, this.height, nPC2.position, nPC2.width, nPC2.height)))
							{
								nPC2.StrikeNPCNoInteraction(num440, num441, this.spriteDirection, false, false, false);
								if (Main.netMode != 0)
								{
									NetMessage.SendData(28, -1, -1, "", num444, (float)num440, num441, (float)this.spriteDirection, 0, 0, 0);
								}
								nPC2.netUpdate = true;
								nPC2.immune[myPlayer] = (int)this.ai[1] + 2;
							}
						}
					}
					if (this.ai[1] <= 0f)
					{
						bool flag54 = false;
						if (flag43)
						{
							int num445 = -num389;
							if (!Collision.CanHit(base.Center, 0, 0, base.Center + Vector2.UnitX * (float)num445 * 32f, 0, 0) || this.localAI[2] == 8f)
							{
								flag54 = true;
							}
							if (flag54)
							{
								int num446 = NPCID.Sets.AttackTime[this.type];
								int num447 = (num389 == 1) ? num391 : num390;
								int num448 = (num389 == 1) ? num390 : num391;
								if (num447 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num447].Center, 0, 0))
								{
									if (num448 != -1 && Collision.CanHit(base.Center, 0, 0, Main.npc[num448].Center, 0, 0))
									{
										num447 = num448;
									}
									else
									{
										num447 = -1;
									}
								}
								if (num447 != -1)
								{
									this.ai[0] = 15f;
									this.ai[1] = (float)num446;
									this.ai[2] = 0f;
									this.localAI[3] = 0f;
									this.direction = ((this.position.X < Main.npc[num447].position.X) ? 1 : -1);
									this.netUpdate = true;
								}
								else
								{
									flag54 = false;
								}
							}
						}
						if (!flag54)
						{
							this.ai[0] = (float)((this.localAI[2] == 8f && flag43) ? 8 : 0);
							this.ai[1] = (float)(num439 + Main.rand.Next(maxValue6));
							this.ai[2] = 0f;
							this.localAI[1] = (this.localAI[3] = (float)(num439 / 2 + Main.rand.Next(maxValue6)));
							this.netUpdate = true;
						}
					}
				}
				if (Main.netMode != 1 && (this.townNPC || this.type == 453) && !flag40)
				{
					bool flag55 = this.ai[0] < 2f && !flag43;
					bool flag56 = (this.ai[0] < 2f || this.ai[0] == 8f) && (flag43 || flag44);
					if (this.localAI[1] > 0f)
					{
						this.localAI[1] -= 1f;
					}
					if (this.localAI[1] > 0f)
					{
						flag56 = false;
					}
					if (flag56 && this.type == 124 && this.localAI[0] == 1f)
					{
						flag56 = false;
					}
					if (flag56 && this.type == 20)
					{
						flag56 = false;
						for (int num449 = 0; num449 < 200; num449++)
						{
							NPC nPC3 = Main.npc[num449];
							if (nPC3.active && nPC3.townNPC && base.Distance(nPC3.Center) <= 1200f && nPC3.HasBuff(165) == -1)
							{
								flag56 = true;
								break;
							}
						}
					}
					if (flag55 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(300) == 0)
					{
						int num450 = 420;
						if (Main.rand.Next(2) == 0)
						{
							num450 *= Main.rand.Next(1, 4);
						}
						else
						{
							num450 *= Main.rand.Next(1, 3);
						}
						int num451 = 100;
						int num452 = 20;
						for (int num453 = 0; num453 < 200; num453++)
						{
							NPC nPC4 = Main.npc[num453];
							bool flag57 = (nPC4.ai[0] == 1f && nPC4.closeDoor) || (nPC4.ai[0] == 1f && nPC4.ai[1] > 200f) || nPC4.ai[0] > 1f;
							if (nPC4 != this && nPC4.active && nPC4.CanTalk && !flag57 && nPC4.Distance(base.Center) < (float)num451 && nPC4.Distance(base.Center) > (float)num452 && Collision.CanHit(base.Center, 0, 0, nPC4.Center, 0, 0))
							{
								int num454 = (this.position.X < nPC4.position.X).ToDirectionInt();
								this.ai[0] = 3f;
								this.ai[1] = (float)num450;
								this.ai[2] = (float)num453;
								this.direction = num454;
								this.netUpdate = true;
								nPC4.ai[0] = 4f;
								nPC4.ai[1] = (float)num450;
								nPC4.ai[2] = (float)this.whoAmI;
								nPC4.direction = -num454;
								nPC4.netUpdate = true;
								break;
							}
						}
					}
					else if (flag55 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1800) == 0)
					{
						int num455 = 420;
						if (Main.rand.Next(2) == 0)
						{
							num455 *= Main.rand.Next(1, 4);
						}
						else
						{
							num455 *= Main.rand.Next(1, 3);
						}
						int num456 = 100;
						int num457 = 20;
						for (int num458 = 0; num458 < 200; num458++)
						{
							NPC nPC5 = Main.npc[num458];
							bool flag58 = (nPC5.ai[0] == 1f && nPC5.closeDoor) || (nPC5.ai[0] == 1f && nPC5.ai[1] > 200f) || nPC5.ai[0] > 1f;
							if (nPC5 != this && nPC5.active && nPC5.CanTalk && !flag58 && nPC5.Distance(base.Center) < (float)num456 && nPC5.Distance(base.Center) > (float)num457 && Collision.CanHit(base.Center, 0, 0, nPC5.Center, 0, 0))
							{
								int num459 = (this.position.X < nPC5.position.X).ToDirectionInt();
								this.ai[0] = 16f;
								this.ai[1] = (float)num455;
								this.ai[2] = (float)num458;
								this.localAI[2] = (float)Main.rand.Next(4);
								this.localAI[3] = (float)Main.rand.Next(3 - (int)this.localAI[2]);
								this.direction = num459;
								this.netUpdate = true;
								nPC5.ai[0] = 17f;
								nPC5.ai[1] = (float)num455;
								nPC5.ai[2] = (float)this.whoAmI;
								nPC5.localAI[2] = 0f;
								nPC5.localAI[3] = 0f;
								nPC5.direction = -num459;
								nPC5.netUpdate = true;
								break;
							}
						}
					}
					else if (flag55 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1200) == 0 && this.type == 208)
					{
						int num460 = 300;
						int num461 = 150;
						for (int num462 = 0; num462 < 255; num462++)
						{
							Player player2 = Main.player[num462];
							if (player2.active && !player2.dead && player2.Distance(base.Center) < (float)num461 && Collision.CanHitLine(base.Top, 0, 0, player2.Top, 0, 0))
							{
								int direction2 = (this.position.X < player2.position.X).ToDirectionInt();
								this.ai[0] = 6f;
								this.ai[1] = (float)num460;
								this.ai[2] = (float)num462;
								this.direction = direction2;
								this.netUpdate = true;
								break;
							}
						}
					}
					else if (flag55 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1800) == 0)
					{
						this.ai[0] = 2f;
						this.ai[1] = (float)(45 * Main.rand.Next(1, 2));
						this.netUpdate = true;
					}
					else if (flag55 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(600) == 0 && this.type == 229 && !flag44)
					{
						this.ai[0] = 11f;
						this.ai[1] = (float)(30 * Main.rand.Next(1, 4));
						this.netUpdate = true;
					}
					else if (flag55 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1200) == 0)
					{
						int num463 = 220;
						int num464 = 150;
						for (int num465 = 0; num465 < 255; num465++)
						{
							Player player3 = Main.player[num465];
							if (player3.active && !player3.dead && player3.Distance(base.Center) < (float)num464 && Collision.CanHitLine(base.Top, 0, 0, player3.Top, 0, 0))
							{
								int direction3 = (this.position.X < player3.position.X).ToDirectionInt();
								this.ai[0] = 7f;
								this.ai[1] = (float)num463;
								this.ai[2] = (float)num465;
								this.direction = direction3;
								this.netUpdate = true;
								break;
							}
						}
					}
					else if (flag55 && this.ai[0] == 1f && this.velocity.Y == 0f && Main.rand.Next(300) == 0)
					{
						Point b = base.Center.ToTileCoordinates();
						bool flag59 = WorldGen.InWorld(b.X, b.Y, 1);
						if (flag59)
						{
							for (int num466 = 0; num466 < 200; num466++)
							{
								if (Main.npc[num466].active && Main.npc[num466].aiStyle == 7 && Main.npc[num466].townNPC && Main.npc[num466].ai[0] == 5f)
								{
									Point a = Main.npc[num466].Center.ToTileCoordinates();
									if (a == b)
									{
										flag59 = false;
										break;
									}
								}
							}
						}
						if (flag59)
						{
							Tile tile2 = Main.tile[b.X, b.Y];
							flag59 = (tile2.type == 15);
							if (flag59 && tile2.frameY == 1080)
							{
								flag59 = false;
							}
							if (flag59)
							{
								this.ai[0] = 5f;
								this.ai[1] = (float)(900 + Main.rand.Next(10800));
								this.direction = ((tile2.frameX == 0) ? -1 : 1);
								base.Bottom = new Vector2((float)(b.X * 16 + 8 + 2 * this.direction), (float)(b.Y * 16 + 32));
								this.velocity = Vector2.Zero;
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
					}
					else if (flag55 && this.ai[0] == 1f && this.velocity.Y == 0f && Main.rand.Next(600) == 0 && Utils.PlotTileLine(base.Top, base.Bottom, (float)this.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs)))
					{
						Point point2 = (base.Center + new Vector2((float)(this.direction * 10), 0f)).ToTileCoordinates();
						bool flag60 = WorldGen.InWorld(point2.X, point2.Y, 1);
						if (flag60)
						{
							Tile tileSafely6 = Framing.GetTileSafely(point2.X, point2.Y);
							if (!tileSafely6.nactive() || !TileID.Sets.InteractibleByNPCs[(int)tileSafely6.type])
							{
								flag60 = false;
							}
						}
						if (flag60)
						{
							this.ai[0] = 9f;
							this.ai[1] = (float)(40 + Main.rand.Next(90));
							this.velocity = Vector2.Zero;
							this.localAI[3] = 0f;
							this.netUpdate = true;
						}
					}
					if (this.ai[0] < 2f && this.velocity.Y == 0f && this.type == 18)
					{
						int num467 = -1;
						for (int num468 = 0; num468 < 200; num468++)
						{
							NPC nPC6 = Main.npc[num468];
							if (nPC6.active && nPC6.townNPC && nPC6.life != nPC6.lifeMax && (num467 == -1 || nPC6.lifeMax - nPC6.life > Main.npc[num467].lifeMax - Main.npc[num467].life) && Collision.CanHitLine(this.position, this.width, this.height, nPC6.position, nPC6.width, nPC6.height) && base.Distance(nPC6.Center) < 500f)
							{
								num467 = num468;
							}
						}
						if (num467 != -1)
						{
							this.ai[0] = 13f;
							this.ai[1] = 34f;
							this.ai[2] = (float)num467;
							this.localAI[3] = 0f;
							this.direction = ((this.position.X < Main.npc[num467].position.X) ? 1 : -1);
							this.netUpdate = true;
						}
					}
					if (flag56 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 0 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int num469 = NPCID.Sets.AttackTime[this.type];
						int num470 = (num389 == 1) ? num391 : num390;
						int num471 = (num389 == 1) ? num390 : num391;
						if (num470 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num470].Center, 0, 0))
						{
							if (num471 != -1 && Collision.CanHit(base.Center, 0, 0, Main.npc[num471].Center, 0, 0))
							{
								num470 = num471;
							}
							else
							{
								num470 = -1;
							}
						}
						if (num470 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 10f;
							this.ai[1] = (float)num469;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = ((this.position.X < Main.npc[num470].position.X) ? 1 : -1);
							this.netUpdate = true;
						}
					}
					else if (flag56 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 1 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int num472 = NPCID.Sets.AttackTime[this.type];
						int num473 = (num389 == 1) ? num391 : num390;
						int num474 = (num389 == 1) ? num390 : num391;
						if (num473 != -1 && !Collision.CanHitLine(base.Center, 0, 0, Main.npc[num473].Center, 0, 0))
						{
							if (num474 != -1 && Collision.CanHitLine(base.Center, 0, 0, Main.npc[num474].Center, 0, 0))
							{
								num473 = num474;
							}
							else
							{
								num473 = -1;
							}
						}
						if (num473 != -1)
						{
							Vector2 vector48 = base.DirectionTo(Main.npc[num473].Center);
							if (vector48.Y <= 0.5f && vector48.Y >= -0.5f)
							{
								this.localAI[2] = this.ai[0];
								this.ai[0] = 12f;
								this.ai[1] = (float)num472;
								this.ai[2] = vector48.Y;
								this.localAI[3] = 0f;
								this.direction = ((this.position.X < Main.npc[num473].position.X) ? 1 : -1);
								this.netUpdate = true;
							}
						}
					}
					if (flag56 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 2 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int num475 = NPCID.Sets.AttackTime[this.type];
						int num476 = (num389 == 1) ? num391 : num390;
						int num477 = (num389 == 1) ? num390 : num391;
						if (num476 != -1 && !Collision.CanHitLine(base.Center, 0, 0, Main.npc[num476].Center, 0, 0))
						{
							if (num477 != -1 && Collision.CanHitLine(base.Center, 0, 0, Main.npc[num477].Center, 0, 0))
							{
								num476 = num477;
							}
							else
							{
								num476 = -1;
							}
						}
						if (num476 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 14f;
							this.ai[1] = (float)num475;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = ((this.position.X < Main.npc[num476].position.X) ? 1 : -1);
							this.netUpdate = true;
						}
						else if (this.type == 20)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 14f;
							this.ai[1] = (float)num475;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.netUpdate = true;
						}
					}
					if (flag56 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 3 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int num478 = NPCID.Sets.AttackTime[this.type];
						int num479 = (num389 == 1) ? num391 : num390;
						int num480 = (num389 == 1) ? num390 : num391;
						if (num479 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num479].Center, 0, 0))
						{
							if (num480 != -1 && Collision.CanHit(base.Center, 0, 0, Main.npc[num480].Center, 0, 0))
							{
								num479 = num480;
							}
							else
							{
								num479 = -1;
							}
						}
						if (num479 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 15f;
							this.ai[1] = (float)num478;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = ((this.position.X < Main.npc[num479].position.X) ? 1 : -1);
							this.netUpdate = true;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 8)
			{
				this.TargetClosest(true);
				this.velocity.X = this.velocity.X * 0.93f;
				if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
				{
					this.velocity.X = 0f;
				}
				if (this.ai[0] == 0f)
				{
					this.ai[0] = 500f;
				}
				if (this.type == 172)
				{
					if (this.alpha < 255)
					{
						this.alpha++;
					}
					if (this.justHit)
					{
						this.alpha = 0;
					}
				}
				if (this.ai[2] != 0f && this.ai[3] != 0f)
				{
					if (this.type == 172)
					{
						this.alpha = 255;
					}

					this.position.X = this.ai[2] * 16f - (float)(this.width / 2) + 8f;
					this.position.Y = this.ai[3] * 16f - (float)this.height;
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
					this.ai[2] = 0f;
					this.ai[3] = 0f;
				}
				this.ai[0] += 1f;
				if (this.type == 283 || this.type == 284)
				{
					if (this.ai[0] == 50f || this.ai[0] == 100f || this.ai[0] == 150f || this.ai[0] == 200f || this.ai[0] == 250f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 400f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.type == 172)
				{
					if (this.ai[0] == 75f || this.ai[0] == 150f || this.ai[0] == 225f || this.ai[0] == 300f || this.ai[0] == 375f || this.ai[0] == 450f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
				}
				else if (this.type == 533)
				{
					if (this.ai[0] == 180f)
					{
						this.ai[1] = 181f;
						this.netUpdate = true;
					}
				}
				else if (this.type == 281 || this.type == 282)
				{
					if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 120f || this.ai[0] == 140f || this.ai[0] == 160f || this.ai[0] == 220f || this.ai[0] == 240f || this.ai[0] == 260f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 460f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.ai[0] == 100f || this.ai[0] == 200f || this.ai[0] == 300f)
				{
					this.ai[1] = 30f;
					this.netUpdate = true;
				}
				if ((this.type == 285 || this.type == 286) && this.ai[0] > 400f)
				{
					this.ai[0] = 650f;
				}
				if (this.type == 533 && this.ai[0] >= 360f)
				{
					this.ai[0] = 650f;
				}
				if (this.ai[0] >= 650f && Main.netMode != 1)
				{
					this.ai[0] = 1f;
					int num499 = (int)Main.player[this.target].position.X / 16;
					int num500 = (int)Main.player[this.target].position.Y / 16;
					int num501 = (int)this.position.X / 16;
					int num502 = (int)this.position.Y / 16;
					int num503 = 20;
					int num504 = 0;
					bool flag61 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num504 = 100;
						flag61 = true;
					}
					while (!flag61 && num504 < 100)
					{
						num504++;
						int num505 = Main.rand.Next(num499 - num503, num499 + num503);
						int num506 = Main.rand.Next(num500 - num503, num500 + num503);
						for (int num507 = num506; num507 < num500 + num503; num507++)
						{
							if ((num507 < num500 - 4 || num507 > num500 + 4 || num505 < num499 - 4 || num505 > num499 + 4) && (num507 < num502 - 1 || num507 > num502 + 1 || num505 < num501 - 1 || num505 > num501 + 1) && Main.tile[num505, num507].nactive())
							{
								bool flag62 = true;
								if ((this.type == 32 || (this.type >= 281 && this.type <= 286)) && !Main.wallDungeon[(int)Main.tile[num505, num507 - 1].wall])
								{
									flag62 = false;
								}
								else if (Main.tile[num505, num507 - 1].lava())
								{
									flag62 = false;
								}
								if (flag62 && Main.tileSolid[(int)Main.tile[num505, num507].type] && !Collision.SolidTiles(num505 - 1, num505 + 1, num507 - 4, num507 - 1))
								{
									this.ai[1] = 20f;
									this.ai[2] = (float)num505;
									this.ai[3] = (float)num507;
									flag61 = true;
									break;
								}
							}
						}
					}
					this.netUpdate = true;
				}
				if (this.ai[1] > 0f)
				{
					this.ai[1] -= 1f;
					if (this.type == 533)
					{
						if (this.ai[1] % 30f == 0f && this.ai[1] / 30f < 5f)
						{
							if (Main.netMode != 1)
							{
								Point point3 = base.Center.ToTileCoordinates();
								Point point4 = Main.player[this.target].Center.ToTileCoordinates();
								Vector2 vector49 = Main.player[this.target].Center - base.Center;
								int num508 = 6;
								int num509 = 6;
								int num510 = 0;
								int num511 = 2;
								int num512 = 0;
								bool flag63 = false;
								if (vector49.Length() > 2000f)
								{
									flag63 = true;
								}
								while (!flag63)
								{
									if (num512 >= 50)
									{
										break;
									}
									num512++;
									int num513 = Main.rand.Next(point4.X - num508, point4.X + num508 + 1);
									int num514 = Main.rand.Next(point4.Y - num508, point4.Y + num508 + 1);
									if ((num514 < point4.Y - num510 || num514 > point4.Y + num510 || num513 < point4.X - num510 || num513 > point4.X + num510) && (num514 < point3.Y - num509 || num514 > point3.Y + num509 || num513 < point3.X - num509 || num513 > point3.X + num509) && !Main.tile[num513, num514].nactive())
									{
										bool flag64 = true;
										if (flag64 && Main.tile[num513, num514].lava())
										{
											flag64 = false;
										}
										if (flag64 && Collision.SolidTiles(num513 - num511, num513 + num511, num514 - num511, num514 + num511))
										{
											flag64 = false;
										}
										if (flag64)
										{
											Projectile.NewProjectile((float)(num513 * 16 + 8), (float)(num514 * 16 + 8), 0f, 0f, 596, 0, 1f, Main.myPlayer, (float)this.target, 0f);
											break;
										}
									}
								}
							}
						}
					}
					else if (this.ai[1] == 25f)
					{
						if (this.type >= 281 && this.type <= 286)
						{
							if (Main.netMode != 1)
							{
								float num515 = 6f;
								if (this.type == 285 || this.type == 286)
								{
									num515 = 8f;
								}
								if (this.type == 281 || this.type == 282)
								{
									num515 = 4f;
								}
								Vector2 vector50 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y);
								float num516 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector50.X;
								float num517 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector50.Y;
								if (this.type == 283 || this.type == 284)
								{
									num516 += (float)Main.rand.Next(-30, 31);
									num517 += (float)Main.rand.Next(-30, 31);
									num516 -= Main.player[this.target].velocity.X * 10f;
									num517 -= Main.player[this.target].velocity.Y * 10f;
								}
								float num518 = (float)Math.Sqrt((double)(num516 * num516 + num517 * num517));
								num518 = num515 / num518;
								num516 *= num518;
								num517 *= num518;
								int num519 = 30;
								int num520 = 290;
								if (this.type == 285 || this.type == 286)
								{
									num520 = 291;
									num519 = 40;
								}
								if (this.type == 281 || this.type == 282)
								{
									num520 = 293;
									num519 = 40;
								}
								if (Main.expertMode)
								{
									num519 = (int)((double)num519 * 0.8);
								}
								int num521 = Projectile.NewProjectile(vector50.X, vector50.Y, num516, num517, num520, num519, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num521].timeLeft = 300;
								if (num520 == 291)
								{
									Main.projectile[num521].ai[0] = Main.player[this.target].Center.X;
									Main.projectile[num521].ai[1] = Main.player[this.target].Center.Y;
									Main.projectile[num521].netUpdate = true;
								}
								this.localAI[0] = 0f;
							}
						}
						else
						{
							if (Main.netMode != 1)
							{
								if (this.type == 29 || this.type == 45)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 30, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (this.type == 32)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 33, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (this.type == 172)
								{
									float num522 = 10f;
									Vector2 vector51 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num523 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector51.X + (float)Main.rand.Next(-10, 11);
									float num524 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector51.Y + (float)Main.rand.Next(-10, 11);
									float num525 = (float)Math.Sqrt((double)(num523 * num523 + num524 * num524));
									num525 = num522 / num525;
									num523 *= num525;
									num524 *= num525;
									int num526 = 40;
									int num527 = 129;
									int num528 = Projectile.NewProjectile(vector51.X, vector51.Y, num523, num524, num527, num526, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num528].timeLeft = 300;
									this.localAI[0] = 0f;
								}
								else
								{
									NPC.NewNPC((int)this.position.X + this.width / 2 + this.direction * 8, (int)this.position.Y + 20, 25, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
					}
				}
				if (this.type == 29 || this.type == 45)
				{
					if (Main.rand.Next(5) == 0)
					{
						return;
					}
				}
				else if (this.type == 32)
				{
					if (Main.rand.Next(3) != 0)
					{
						return;
					}
				}
				else
				{
					if (this.type == 172)
					{
						return;
					}
					if (this.type == 283 || this.type == 284)
					{
						if (Main.rand.Next(2) == 0)
						{
							return;
						}
					}
					else if (this.type == 285 || this.type == 286)
					{
						if (Main.rand.Next(2) == 0)
						{
							return;
						}
					}
					else if (this.type == 281 || this.type == 282)
					{
						if (Main.rand.Next(2) == 0)
						{
							return;
						}
					}
					else
					{
						if (this.type == 533)
						{
							return;
						}
						if (Main.rand.Next(2) == 0)
						{
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 9)
			{
				if (this.type == 516)
				{
					if (this.alpha < 220)
					{
						this.alpha += 40;
					}
					if (this.ai[0] == 0f)
					{
						this.ai[0] = 1f;
						Vector2 vector52 = Main.player[this.target].Center - base.Center;
						vector52.Normalize();
						if (vector52.HasNaNs())
						{
							vector52 = -Vector2.UnitY;
						}
						vector52 = vector52.RotatedByRandom(1.5707963705062866).RotatedBy(-0.78539818525314331, default(Vector2));
						if (vector52.Y > 0.2f)
						{
							vector52.Y = 0.2f;
						}
						this.velocity = vector52 * (6f + Main.rand.NextFloat() * 4f);
					}
					if (this.collideX || this.collideY || base.Distance(Main.player[this.target].Center) < 20f)
					{
						this.StrikeNPCNoInteraction(9999, 0f, this.direction, false, false, false);
					}
				}
				if (this.target == 255)
				{
					this.TargetClosest(true);
					float num538 = 6f;
					if (this.type == 25)
					{
						num538 = 5f;
					}
					if (this.type == 112)
					{
						num538 = 7f;
					}
					Vector2 vector53 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num539 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector53.X;
					float num540 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector53.Y;
					float num541 = (float)Math.Sqrt((double)(num539 * num539 + num540 * num540));
					num541 = num538 / num541;
					this.velocity.X = num539 * num541;
					this.velocity.Y = num540 * num541;
				}
				if (this.type == 112)
				{
					this.damage = ((this.ai[1] == 1f) ? 65 : this.defDamage);
					this.ai[0] += 1f;
					if (this.ai[0] > 3f)
					{
						this.ai[0] = 3f;
					}
					if (this.ai[0] == 2f)
					{
						this.position += this.velocity;
					}
				}
				if (this.type == 112 && Collision.SolidCollision(this.position, this.width, this.height))
				{
					int arg_1FD8D_0 = Main.netMode;
					this.StrikeNPCNoInteraction(999, 0f, 0, false, false, false);
				}
				if (this.timeLeft > 100)
				{
					this.timeLeft = 100;
				}
				if (this.type != 516)
				{
					for (int num544 = 0; num544 < 2; num544++)
					{
						if (this.type == 30)
						{
							this.alpha = 255;
						}
					}
					this.rotation += 0.4f * (float)this.direction;
					return;
				}
				this.rotation += 0.1f * (float)this.direction;
				float num556 = 15f;
				float num557 = 0.0833333358f;
				Vector2 center4 = base.Center;
				Vector2 center5 = Main.player[this.target].Center;
				Vector2 vec3 = center5 - center4;
				vec3.Normalize();
				if (vec3.HasNaNs())
				{
					vec3 = new Vector2((float)this.direction, 0f);
				}
				this.velocity = (this.velocity * (num556 - 1f) + vec3 * (this.velocity.Length() + num557)) / num556;
				if (this.velocity.Length() < 6f)
				{
					this.velocity *= 1.05f;
					return;
				}
			}
			else if (this.aiStyle == 10)
			{
				float num558 = 1f;
				float num559 = 0.011f;
				this.TargetClosest(true);
				Vector2 vector54 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num560 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector54.X;
				float num561 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector54.Y;
				float num562 = (float)Math.Sqrt((double)(num560 * num560 + num561 * num561));
				float num563 = num562;
				this.ai[1] += 1f;
				if (this.ai[1] > 600f)
				{
					num559 *= 8f;
					num558 = 4f;
					if (this.ai[1] > 650f)
					{
						this.ai[1] = 0f;
					}
				}
				else if (num563 < 250f)
				{
					this.ai[0] += 0.9f;
					if (this.ai[0] > 0f)
					{
						this.velocity.Y = this.velocity.Y + 0.019f;
					}
					else
					{
						this.velocity.Y = this.velocity.Y - 0.019f;
					}
					if (this.ai[0] < -100f || this.ai[0] > 100f)
					{
						this.velocity.X = this.velocity.X + 0.019f;
					}
					else
					{
						this.velocity.X = this.velocity.X - 0.019f;
					}
					if (this.ai[0] > 200f)
					{
						this.ai[0] = -200f;
					}
				}
				if (num563 > 350f)
				{
					num558 = 5f;
					num559 = 0.3f;
				}
				else if (num563 > 300f)
				{
					num558 = 3f;
					num559 = 0.2f;
				}
				else if (num563 > 250f)
				{
					num558 = 1.5f;
					num559 = 0.1f;
				}
				num562 = num558 / num562;
				num560 *= num562;
				num561 *= num562;
				if (Main.player[this.target].dead)
				{
					num560 = (float)this.direction * num558 / 2f;
					num561 = -num558 / 2f;
				}
				if (this.velocity.X < num560)
				{
					this.velocity.X = this.velocity.X + num559;
				}
				else if (this.velocity.X > num560)
				{
					this.velocity.X = this.velocity.X - num559;
				}
				if (this.velocity.Y < num561)
				{
					this.velocity.Y = this.velocity.Y + num559;
				}
				else if (this.velocity.Y > num561)
				{
					this.velocity.Y = this.velocity.Y - num559;
				}
				if (num560 > 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)num561, (double)num560);
				}
				if (num560 < 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)num561, (double)num560) + 3.14f;
				}
				if (this.type == 289)
				{
					if (this.justHit)
					{
						this.ai[2] = 0f;
						this.ai[3] = 0f;
					}
					vector54 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					num560 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector54.X;
					num561 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector54.Y;
					num562 = (float)Math.Sqrt((double)(num560 * num560 + num561 * num561));
					if (num562 > 500f)
					{
						this.ai[2] = 0f;
						this.ai[3] = 0f;
						return;
					}
					this.ai[2] += 1f;
					if (this.ai[3] == 0f)
					{
						if (this.ai[2] > 120f)
						{
							this.ai[2] = 0f;
							this.ai[3] = 1f;
							this.netUpdate = true;
							return;
						}
					}
					else
					{
						if (this.ai[2] > 40f)
						{
							this.ai[3] = 0f;
						}
						if (Main.netMode != 1 && this.ai[2] == 20f)
						{
							float num564 = 6f;
							int num565 = 25;
							int num566 = 299;
							num562 = num564 / num562;
							num560 *= num562;
							num561 *= num562;
							Projectile.NewProjectile(vector54.X, vector54.Y, num560, num561, num566, num565, 0f, Main.myPlayer, 0f, 0f);
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 11)
			{
				this.defense = this.defDefense;
				if (this.ai[0] == 0f && Main.netMode != 1)
				{
					this.TargetClosest(true);
					this.ai[0] = 1f;
					if (this.type != 68)
					{
						int num567 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						Main.npc[num567].ai[0] = -1f;
						Main.npc[num567].ai[1] = (float)this.whoAmI;
						Main.npc[num567].target = this.target;
						Main.npc[num567].netUpdate = true;
						num567 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						Main.npc[num567].ai[0] = 1f;
						Main.npc[num567].ai[1] = (float)this.whoAmI;
						Main.npc[num567].ai[3] = 150f;
						Main.npc[num567].target = this.target;
						Main.npc[num567].netUpdate = true;
					}
				}
				if (this.type == 68 && this.ai[1] != 3f && this.ai[1] != 2f)
				{
					this.ai[1] = 2f;
				}
				if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
				{
					this.TargetClosest(true);
					if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						this.ai[1] = 3f;
					}
				}
				if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
				{
					this.ai[1] = 2f;
				}
				int num568 = 0;
				if (Main.expertMode)
				{
					for (int num569 = 0; num569 < 200; num569++)
					{
						if (Main.npc[num569].active && Main.npc[num569].type == this.type + 1)
						{
							num568++;
						}
					}
					this.defense += num568 * 25;
					if ((num568 < 2 || (double)this.life < (double)this.lifeMax * 0.75) && this.ai[1] == 0f)
					{
						float num570 = 80f;
						if (num568 == 0)
						{
							num570 /= 2f;
						}
						if (Main.netMode != 1 && this.ai[2] % num570 == 0f)
						{
							Vector2 vector55 = base.Center;
							float num571 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector55.X;
							float num572 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector55.Y;
							Math.Sqrt((double)(num571 * num571 + num572 * num572));
							if (Collision.CanHit(vector55, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num573 = 3f;
								if (num568 == 0)
								{
									num573 += 2f;
								}
								float num574 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector55.X + (float)Main.rand.Next(-20, 21);
								float num575 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector55.Y + (float)Main.rand.Next(-20, 21);
								float num576 = (float)Math.Sqrt((double)(num574 * num574 + num575 * num575));
								num576 = num573 / num576;
								num574 *= num576;
								num575 *= num576;
								Vector2 value12 = new Vector2(num574 * 1f + (float)Main.rand.Next(-50, 51) * 0.01f, num575 * 1f + (float)Main.rand.Next(-50, 51) * 0.01f);
								value12.Normalize();
								value12 *= num573;
								value12 += this.velocity;
								num574 = value12.X;
								num575 = value12.Y;
								int num577 = 17;
								int num578 = 270;
								vector55 += value12 * 5f;
								int num579 = Projectile.NewProjectile(vector55.X, vector55.Y, num574, num575, num578, num577, 0f, Main.myPlayer, -1f, 0f);
								Main.projectile[num579].timeLeft = 300;
							}
						}
					}
				}
				if (this.ai[1] == 0f)
				{
					this.damage = this.defDamage;
					this.ai[2] += 1f;
					if (this.ai[2] >= 800f)
					{
						this.ai[2] = 0f;
						this.ai[1] = 1f;
						this.TargetClosest(true);
						this.netUpdate = true;
					}
					this.rotation = this.velocity.X / 15f;
					float num580 = 0.02f;
					float num581 = 2f;
					float num582 = 0.05f;
					float num583 = 8f;
					if (Main.expertMode)
					{
						num580 = 0.03f;
						num581 = 4f;
						num582 = 0.07f;
						num583 = 9.5f;
					}
					if (this.position.Y > Main.player[this.target].position.Y - 250f)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.98f;
						}
						this.velocity.Y = this.velocity.Y - num580;
						if (this.velocity.Y > num581)
						{
							this.velocity.Y = num581;
						}
					}
					else if (this.position.Y < Main.player[this.target].position.Y - 250f)
					{
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.98f;
						}
						this.velocity.Y = this.velocity.Y + num580;
						if (this.velocity.Y < -num581)
						{
							this.velocity.Y = -num581;
						}
					}
					if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
					{
						if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
						}
						this.velocity.X = this.velocity.X - num582;
						if (this.velocity.X > num583)
						{
							this.velocity.X = num583;
						}
					}
					if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
						}
						this.velocity.X = this.velocity.X + num582;
						if (this.velocity.X < -num583)
						{
							this.velocity.X = -num583;
						}
					}
				}
				else if (this.ai[1] == 1f)
				{
					this.defense -= 10;
					this.ai[2] += 1f;
					if (this.ai[2] >= 400f)
					{
						this.ai[2] = 0f;
						this.ai[1] = 0f;
					}
					this.rotation += (float)this.direction * 0.3f;
					Vector2 vector56 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num584 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector56.X;
					float num585 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector56.Y;
					float num586 = (float)Math.Sqrt((double)(num584 * num584 + num585 * num585));
					float num587 = 1.5f;
					if (Main.expertMode)
					{
						this.damage = (int)((double)this.defDamage * 1.3);
						num587 = 4f;
						if (num586 > 150f)
						{
							num587 *= 1.05f;
						}
						if (num586 > 200f)
						{
							num587 *= 1.1f;
						}
						if (num586 > 250f)
						{
							num587 *= 1.1f;
						}
						if (num586 > 300f)
						{
							num587 *= 1.1f;
						}
						if (num586 > 350f)
						{
							num587 *= 1.1f;
						}
						if (num586 > 400f)
						{
							num587 *= 1.1f;
						}
						if (num586 > 450f)
						{
							num587 *= 1.1f;
						}
						if (num586 > 500f)
						{
							num587 *= 1.1f;
						}
						if (num586 > 550f)
						{
							num587 *= 1.1f;
						}
						if (num586 > 600f)
						{
							num587 *= 1.1f;
						}
						if (num568 == 0)
						{
							num587 *= 1.2f;
						}
						else if (num568 == 1)
						{
							num587 *= 1.1f;
						}
					}
					num586 = num587 / num586;
					this.velocity.X = num584 * num586;
					this.velocity.Y = num585 * num586;
				}
				else if (this.ai[1] == 2f)
				{
					this.damage = 1000;
					this.defense = 9999;
					this.rotation += (float)this.direction * 0.3f;
					Vector2 vector57 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num588 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector57.X;
					float num589 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector57.Y;
					float num590 = (float)Math.Sqrt((double)(num588 * num588 + num589 * num589));
					num590 = 8f / num590;
					this.velocity.X = num588 * num590;
					this.velocity.Y = num589 * num590;
				}
				else if (this.ai[1] == 3f)
				{
					this.velocity.Y = this.velocity.Y + 0.1f;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.X = this.velocity.X * 0.95f;
					if (this.timeLeft > 50)
					{
						this.timeLeft = 50;
					}
				}
				if (this.ai[1] != 2f && this.ai[1] != 3f && this.type != 68)
				{
					if (num568 == 0 && Main.expertMode)
					{
						return;
					}
					return;
				}
			}
			else if (this.aiStyle == 12)
			{
				this.spriteDirection = -(int)this.ai[0];
				if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 11)
				{
					this.ai[2] += 10f;
					if (this.ai[2] > 50f || Main.netMode != 2)
					{
						this.life = -1;
						this.HitEffect(0, 10.0);
						this.active = false;
					}
				}
				if (this.ai[2] == 0f || this.ai[2] == 3f)
				{
					if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
					{
						if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y - 0.07f;
							if (this.velocity.Y > 6f)
							{
								this.velocity.Y = 6f;
							}
						}
						else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
						{
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y + 0.07f;
							if (this.velocity.Y < -6f)
							{
								this.velocity.Y = -6f;
							}
						}
						if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
						}
						if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
						}
					}
					else
					{
						this.ai[3] += 1f;
						if (Main.expertMode)
						{
							this.ai[3] += 0.5f;
						}
						if (this.ai[3] >= 300f)
						{
							this.ai[2] += 1f;
							this.ai[3] = 0f;
							this.netUpdate = true;
						}
						if (Main.expertMode)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.04f;
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.07f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.07f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
							}
						}
						if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 230f)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
						}
						else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
						{
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y + 0.04f;
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X - 0.07f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
						}
						if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X + 0.07f;
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
						}
					}
					Vector2 vector58 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num593 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector58.X;
					float num594 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector58.Y;
					Math.Sqrt((double)(num593 * num593 + num594 * num594));
					this.rotation = (float)Math.Atan2((double)num594, (double)num593) + 1.57f;
					return;
				}
				if (this.ai[2] == 1f)
				{
					Vector2 vector59 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num595 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector59.X;
					float num596 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector59.Y;
					float num597 = (float)Math.Sqrt((double)(num595 * num595 + num596 * num596));
					this.rotation = (float)Math.Atan2((double)num596, (double)num595) + 1.57f;
					this.velocity.X = this.velocity.X * 0.95f;
					this.velocity.Y = this.velocity.Y - 0.1f;
					if (Main.expertMode)
					{
						this.velocity.Y = this.velocity.Y - 0.06f;
						if (this.velocity.Y < -13f)
						{
							this.velocity.Y = -13f;
						}
					}
					else if (this.velocity.Y < -8f)
					{
						this.velocity.Y = -8f;
					}
					if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
					{
						this.TargetClosest(true);
						this.ai[2] = 2f;
						vector59 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num595 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector59.X;
						num596 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector59.Y;
						num597 = (float)Math.Sqrt((double)(num595 * num595 + num596 * num596));
						if (Main.expertMode)
						{
							num597 = 21f / num597;
						}
						else
						{
							num597 = 18f / num597;
						}
						this.velocity.X = num595 * num597;
						this.velocity.Y = num596 * num597;
						this.netUpdate = true;
						return;
					}
				}
				else if (this.ai[2] == 2f)
				{
					if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
					{
						this.ai[2] = 3f;
						return;
					}
				}
				else if (this.ai[2] == 4f)
				{
					Vector2 vector60 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num598 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector60.X;
					float num599 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector60.Y;
					float num600 = (float)Math.Sqrt((double)(num598 * num598 + num599 * num599));
					this.rotation = (float)Math.Atan2((double)num599, (double)num598) + 1.57f;
					this.velocity.Y = this.velocity.Y * 0.95f;
					this.velocity.X = this.velocity.X + 0.1f * -this.ai[0];
					if (Main.expertMode)
					{
						this.velocity.X = this.velocity.X + 0.07f * -this.ai[0];
						if (this.velocity.X < -12f)
						{
							this.velocity.X = -12f;
						}
						else if (this.velocity.X > 12f)
						{
							this.velocity.X = 12f;
						}
					}
					else if (this.velocity.X < -8f)
					{
						this.velocity.X = -8f;
					}
					else if (this.velocity.X > 8f)
					{
						this.velocity.X = 8f;
					}
					if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
					{
						this.TargetClosest(true);
						this.ai[2] = 5f;
						vector60 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num598 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector60.X;
						num599 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector60.Y;
						num600 = (float)Math.Sqrt((double)(num598 * num598 + num599 * num599));
						if (Main.expertMode)
						{
							num600 = 22f / num600;
						}
						else
						{
							num600 = 17f / num600;
						}
						this.velocity.X = num598 * num600;
						this.velocity.Y = num599 * num600;
						this.netUpdate = true;
						return;
					}
				}
				else if (this.ai[2] == 5f && ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))))
				{
					this.ai[2] = 0f;
					return;
				}
			}
			else if (this.aiStyle == 13)
			{
				if (this.ai[0] < 0f || this.ai[0] >= (float)Main.maxTilesX || this.ai[1] < 0f || this.ai[1] >= (float)Main.maxTilesX)
				{
					return;
				}
				if (Main.tile[(int)this.ai[0], (int)this.ai[1]] == null)
				{
					Main.tile[(int)this.ai[0], (int)this.ai[1]] = new Tile();
				}
				if (!Main.tile[(int)this.ai[0], (int)this.ai[1]].active())
				{
					this.life = -1;
					this.HitEffect(0, 10.0);
					this.active = false;
					return;
				}
				this.TargetClosest(true);
				float num601 = 0.035f;
				float num602 = 150f;
				if (this.type == 43)
				{
					num602 = 250f;
				}
				if (this.type == 101)
				{
					num602 = 175f;
				}
				if (this.type == 259)
				{
					num602 = 100f;
				}
				if (this.type == 175)
				{
					num602 = 500f;
					num601 = 0.05f;
				}
				if (this.type == 260)
				{
					num602 = 350f;
					num601 = 0.15f;
				}
				this.ai[2] += 1f;
				if (this.ai[2] > 300f)
				{
					num602 = (float)((int)((double)num602 * 1.3));
					if (this.ai[2] > 450f)
					{
						this.ai[2] = 0f;
					}
				}
				Vector2 vector61 = new Vector2(this.ai[0] * 16f + 8f, this.ai[1] * 16f + 8f);
				float num603 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector61.X;
				float num604 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector61.Y;
				float num605 = (float)Math.Sqrt((double)(num603 * num603 + num604 * num604));
				if (num605 > num602)
				{
					num605 = num602 / num605;
					num603 *= num605;
					num604 *= num605;
				}
				if (this.position.X < this.ai[0] * 16f + 8f + num603)
				{
					this.velocity.X = this.velocity.X + num601;
					if (this.velocity.X < 0f && num603 > 0f)
					{
						this.velocity.X = this.velocity.X + num601 * 1.5f;
					}
				}
				else if (this.position.X > this.ai[0] * 16f + 8f + num603)
				{
					this.velocity.X = this.velocity.X - num601;
					if (this.velocity.X > 0f && num603 < 0f)
					{
						this.velocity.X = this.velocity.X - num601 * 1.5f;
					}
				}
				if (this.position.Y < this.ai[1] * 16f + 8f + num604)
				{
					this.velocity.Y = this.velocity.Y + num601;
					if (this.velocity.Y < 0f && num604 > 0f)
					{
						this.velocity.Y = this.velocity.Y + num601 * 1.5f;
					}
				}
				else if (this.position.Y > this.ai[1] * 16f + 8f + num604)
				{
					this.velocity.Y = this.velocity.Y - num601;
					if (this.velocity.Y > 0f && num604 < 0f)
					{
						this.velocity.Y = this.velocity.Y - num601 * 1.5f;
					}
				}
				if (this.type == 43)
				{
					if (this.velocity.X > 3f)
					{
						this.velocity.X = 3f;
					}
					if (this.velocity.X < -3f)
					{
						this.velocity.X = -3f;
					}
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
					if (this.velocity.Y < -3f)
					{
						this.velocity.Y = -3f;
					}
				}
				else if (this.type == 175)
				{
					if (this.velocity.X > 4f)
					{
						this.velocity.X = 4f;
					}
					if (this.velocity.X < -4f)
					{
						this.velocity.X = -4f;
					}
					if (this.velocity.Y > 4f)
					{
						this.velocity.Y = 4f;
					}
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
				}
				else
				{
					if (this.velocity.X > 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.velocity.X < -2f)
					{
						this.velocity.X = -2f;
					}
					if (this.velocity.Y > 2f)
					{
						this.velocity.Y = 2f;
					}
					if (this.velocity.Y < -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (this.type == 259 || this.type == 260)
				{
					this.rotation = (float)Math.Atan2((double)num604, (double)num603) + 1.57f;
				}
				else
				{
					if (num603 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num604, (double)num603);
					}
					if (num603 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num604, (double)num603) + 3.14f;
					}
				}
				if (this.collideX)
				{
					this.netUpdate = true;
					this.velocity.X = this.oldVelocity.X * -0.7f;
					if (this.velocity.X > 0f && this.velocity.X < 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.velocity.X < 0f && this.velocity.X > -2f)
					{
						this.velocity.X = -2f;
					}
				}
				if (this.collideY)
				{
					this.netUpdate = true;
					this.velocity.Y = this.oldVelocity.Y * -0.7f;
					if (this.velocity.Y > 0f && this.velocity.Y < 2f)
					{
						this.velocity.Y = 2f;
					}
					if (this.velocity.Y < 0f && this.velocity.Y > -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (Main.netMode != 1)
				{
					if (this.type == 101 && !Main.player[this.target].dead)
					{
						if (this.justHit)
						{
							this.localAI[0] = 0f;
						}
						this.localAI[0] += 1f;
						if (this.localAI[0] >= 120f)
						{
							if (!Collision.SolidCollision(this.position, this.width, this.height) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num606 = 10f;
								vector61 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num603 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector61.X + (float)Main.rand.Next(-10, 11);
								num604 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector61.Y + (float)Main.rand.Next(-10, 11);
								num605 = (float)Math.Sqrt((double)(num603 * num603 + num604 * num604));
								num605 = num606 / num605;
								num603 *= num605;
								num604 *= num605;
								int num607 = 22;
								if (Main.expertMode)
								{
									num607 = (int)((double)num607 * 0.8);
								}
								int num608 = 96;
								int num609 = Projectile.NewProjectile(vector61.X, vector61.Y, num603, num604, num608, num607, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num609].timeLeft = 300;
								this.localAI[0] = 0f;
							}
							else
							{
								this.localAI[0] = 100f;
							}
						}
					}
					if (this.type == 260 && !Main.player[this.target].dead)
					{
						if (this.justHit)
						{
							this.localAI[0] = 0f;
						}
						this.localAI[0] += 1f;
						if (this.localAI[0] >= 150f)
						{
							if (!Collision.SolidCollision(this.position, this.width, this.height))
							{
								float num610 = 14f;
								vector61 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num603 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector61.X + (float)Main.rand.Next(-10, 11);
								float num611 = Math.Abs(num603 * 0.1f);
								if (num604 > 0f)
								{
									num611 = 0f;
								}
								num604 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector61.Y + (float)Main.rand.Next(-10, 11) - num611;
								num605 = (float)Math.Sqrt((double)(num603 * num603 + num604 * num604));
								num605 = num610 / num605;
								num603 *= num605;
								num604 *= num605;
								int num612 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 261, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num612].velocity.X = num603;
								Main.npc[num612].velocity.Y = num604;
								Main.npc[num612].netUpdate = true;
								this.localAI[0] = 0f;
								return;
							}
							this.localAI[0] = 250f;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 14)
			{
				this.noGravity = true;
				if (this.collideX)
				{
					this.velocity.X = this.oldVelocity.X * -0.5f;
					if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
					{
						this.velocity.X = -2f;
					}
				}
				if (this.collideY)
				{
					this.velocity.Y = this.oldVelocity.Y * -0.5f;
					if (this.velocity.Y > 0f && this.velocity.Y < 1f)
					{
						this.velocity.Y = 1f;
					}
					if (this.velocity.Y < 0f && this.velocity.Y > -1f)
					{
						this.velocity.Y = -1f;
					}
				}
				if (this.type == 226)
				{
					int direction4 = 1;
					int num615 = 1;
					if (this.velocity.X < 0f)
					{
						direction4 = -1;
					}
					if (this.velocity.Y < 0f)
					{
						num615 = -1;
					}
					this.TargetClosest(true);
					if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.direction = direction4;
						this.directionY = num615;
					}
				}
				else
				{
					this.TargetClosest(true);
				}
				if (this.type == 158)
				{
					if ((double)this.position.Y < Main.worldSurface * 16.0 && Main.dayTime && !Main.eclipse)
					{
						this.directionY = -1;
						this.direction *= -1;
					}
					if (this.direction == -1 && this.velocity.X > -7f)
					{
						this.velocity.X = this.velocity.X - 0.2f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -7f)
						{
							this.velocity.X = -7f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 7f)
					{
						this.velocity.X = this.velocity.X + 0.2f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 7f)
						{
							this.velocity.X = 7f;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -7f)
					{
						this.velocity.Y = this.velocity.Y - 0.2f;
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						if (this.velocity.Y < -7f)
						{
							this.velocity.Y = -7f;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < 7f)
					{
						this.velocity.Y = this.velocity.Y + 0.2f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						if (this.velocity.Y > 7f)
						{
							this.velocity.Y = 7f;
						}
					}
				}
				else if (this.type == 226)
				{
					if (this.direction == -1 && this.velocity.X > -4f)
					{
						this.velocity.X = this.velocity.X - 0.2f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f)
					{
						this.velocity.X = this.velocity.X + 0.2f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 2.5)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				else
				{
					if (this.direction == -1 && this.velocity.X > -4f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if ((double)this.velocity.Y < -1.5)
						{
							this.velocity.Y = -1.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if ((double)this.velocity.Y > 1.5)
						{
							this.velocity.Y = 1.5f;
						}
					}
				}
				if (this.type == 49 || this.type == 51 || this.type == 60 || this.type == 62 || this.type == 66 || this.type == 93 || this.type == 137 || this.type == 150 || this.type == 151 || this.type == 152)
				{
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
					}
					if (this.type == 60)
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.07f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.03f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.07f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.03f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.02f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.02f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
				}
				if (this.type == 158 && Main.netMode != 1)
				{
					Vector2 vector62 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num616 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector62.X;
					float num617 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector62.Y;
					float num618 = (float)Math.Sqrt((double)(num616 * num616 + num617 * num617));
					if (num618 < 200f && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.Transform(159);
					}
				}
				this.ai[1] += 1f;
				if (this.type == 158)
				{
					this.ai[1] += 1f;
				}
				if (this.ai[1] > 200f)
				{
					if (!Main.player[this.target].wet && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.ai[1] = 0f;
					}
					float num619 = 0.2f;
					float num620 = 0.1f;
					float num621 = 4f;
					float num622 = 1.5f;
					if (this.type == 48 || this.type == 62 || this.type == 66)
					{
						num619 = 0.12f;
						num620 = 0.07f;
						num621 = 3f;
						num622 = 1.25f;
					}
					if (this.ai[1] > 1000f)
					{
						this.ai[1] = 0f;
					}
					this.ai[2] += 1f;
					if (this.ai[2] > 0f)
					{
						if (this.velocity.Y < num622)
						{
							this.velocity.Y = this.velocity.Y + num620;
						}
					}
					else if (this.velocity.Y > -num622)
					{
						this.velocity.Y = this.velocity.Y - num620;
					}
					if (this.ai[2] < -150f || this.ai[2] > 150f)
					{
						if (this.velocity.X < num621)
						{
							this.velocity.X = this.velocity.X + num619;
						}
					}
					else if (this.velocity.X > -num621)
					{
						this.velocity.X = this.velocity.X - num619;
					}
					if (this.ai[2] > 300f)
					{
						this.ai[2] = -300f;
					}
				}
				if (Main.netMode != 1)
				{
					if (this.type == 48)
					{
						this.ai[0] += 1f;
						if (this.ai[0] == 30f || this.ai[0] == 60f || this.ai[0] == 90f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num623 = 6f;
								Vector2 vector63 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num624 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector63.X + (float)Main.rand.Next(-100, 101);
								float num625 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector63.Y + (float)Main.rand.Next(-100, 101);
								float num626 = (float)Math.Sqrt((double)(num624 * num624 + num625 * num625));
								num626 = num623 / num626;
								num624 *= num626;
								num625 *= num626;
								int num627 = 15;
								int num628 = 38;
								int num629 = Projectile.NewProjectile(vector63.X, vector63.Y, num624, num625, num628, num627, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num629].timeLeft = 300;
							}
						}
						else if (this.ai[0] >= (float)(400 + Main.rand.Next(400)))
						{
							this.ai[0] = 0f;
						}
					}
					if (this.type == 62 || this.type == 66)
					{
						this.ai[0] += 1f;
						if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 80f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num630 = 0.2f;
								Vector2 vector64 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num631 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector64.X + (float)Main.rand.Next(-100, 101);
								float num632 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector64.Y + (float)Main.rand.Next(-100, 101);
								float num633 = (float)Math.Sqrt((double)(num631 * num631 + num632 * num632));
								num633 = num630 / num633;
								num631 *= num633;
								num632 *= num633;
								int num634 = 21;
								int num635 = 44;
								int num636 = Projectile.NewProjectile(vector64.X, vector64.Y, num631, num632, num635, num634, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num636].timeLeft = 300;
							}
						}
						else if (this.ai[0] >= (float)(300 + Main.rand.Next(300)))
						{
							this.ai[0] = 0f;
						}
					}
					if (this.type == 156)
					{
						this.ai[0] += 1f;
						if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 80f || this.ai[0] == 100f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num637 = 0.2f;
								Vector2 value13 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num638 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - value13.X + (float)Main.rand.Next(-50, 51);
								float num639 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - value13.Y + (float)Main.rand.Next(-50, 51);
								float num640 = (float)Math.Sqrt((double)(num638 * num638 + num639 * num639));
								num640 = num637 / num640;
								num638 *= num640;
								num639 *= num640;
								int num641 = 80;
								int num642 = 115;
								value13 += this.velocity * 5f;
								int num643 = Projectile.NewProjectile(value13.X + num638 * 100f, value13.Y + num639 * 100f, num638, num639, num642, num641, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num643].timeLeft = 300;
								return;
							}
						}
						else if (this.ai[0] >= (float)(250 + Main.rand.Next(250)))
						{
							this.ai[0] = 0f;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 15)
			{
				float num644 = 1f;
				bool flag65 = false;
				bool flag66 = false;
				this.aiAction = 0;
				if (this.ai[3] == 0f && this.life > 0)
				{
					this.ai[3] = (float)this.lifeMax;
				}
				if (this.localAI[3] == 0f && Main.netMode != 1)
				{
					this.ai[0] = -100f;
					this.localAI[3] = 1f;
					this.TargetClosest(true);
					this.netUpdate = true;
				}
				if (Main.player[this.target].dead)
				{
					this.TargetClosest(true);
					if (Main.player[this.target].dead)
					{
						this.timeLeft = 0;
						if (Main.player[this.target].Center.X < base.Center.X)
						{
							this.direction = 1;
						}
						else
						{
							this.direction = -1;
						}
					}
				}
				if (!Main.player[this.target].dead && this.ai[2] >= 300f && this.ai[1] < 5f && this.velocity.Y == 0f)
				{
					this.ai[2] = 0f;
					this.ai[0] = 0f;
					this.ai[1] = 5f;
					if (Main.netMode != 1)
					{
						this.TargetClosest(false);
						Point point5 = base.Center.ToTileCoordinates();
						Point point6 = Main.player[this.target].Center.ToTileCoordinates();
						Vector2 vector65 = Main.player[this.target].Center - base.Center;
						int num645 = 10;
						int num646 = 0;
						int num647 = 7;
						int num648 = 0;
						bool flag67 = false;
						if (vector65.Length() > 2000f)
						{
							flag67 = true;
							num648 = 100;
						}
						while (!flag67 && num648 < 100)
						{
							num648++;
							int num649 = Main.rand.Next(point6.X - num645, point6.X + num645 + 1);
							int num650 = Main.rand.Next(point6.Y - num645, point6.Y + 1);
							if ((num650 < point6.Y - num647 || num650 > point6.Y + num647 || num649 < point6.X - num647 || num649 > point6.X + num647) && (num650 < point5.Y - num646 || num650 > point5.Y + num646 || num649 < point5.X - num646 || num649 > point5.X + num646) && !Main.tile[num649, num650].nactive())
							{
								int num651 = num650;
								int num652 = 0;
								bool flag68 = Main.tile[num649, num651].nactive() && Main.tileSolid[(int)Main.tile[num649, num651].type] && !Main.tileSolidTop[(int)Main.tile[num649, num651].type];
								if (flag68)
								{
									num652 = 1;
								}
								else
								{
									while (num652 < 150 && num651 + num652 < Main.maxTilesY)
									{
										int num653 = num651 + num652;
										bool flag69 = Main.tile[num649, num653].nactive() && Main.tileSolid[(int)Main.tile[num649, num653].type] && !Main.tileSolidTop[(int)Main.tile[num649, num653].type];
										if (flag69)
										{
											num652--;
											break;
										}
										num652++;
									}
								}
								num650 += num652;
								bool flag70 = true;
								if (flag70 && Main.tile[num649, num650].lava())
								{
									flag70 = false;
								}
								if (flag70 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
								{
									flag70 = false;
								}
								if (flag70)
								{
									this.localAI[1] = (float)(num649 * 16 + 8);
									this.localAI[2] = (float)(num650 * 16 + 16);
									break;
								}
							}
						}
						if (num648 >= 100)
						{
							Vector2 bottom = Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].Bottom;
							this.localAI[1] = bottom.X;
							this.localAI[2] = bottom.Y;
						}
					}
				}
				if (!Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
				{
					this.ai[2] += 1f;
				}
				if (Math.Abs(base.Top.Y - Main.player[this.target].Bottom.Y) > 320f)
				{
					this.ai[2] += 1f;
				}
				if (this.ai[1] == 5f)
				{
					this.aiAction = 1;
					this.ai[0] += 1f;
					num644 = MathHelper.Clamp((60f - this.ai[0]) / 60f, 0f, 1f);
					num644 = 0.5f + num644 * 0.5f;
					if (this.ai[0] >= 60f && Main.netMode != 1)
					{
						base.Bottom = new Vector2(this.localAI[1], this.localAI[2]);
						this.ai[1] = 6f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					if (Main.netMode == 1 && this.ai[0] >= 120f)
					{
						this.ai[1] = 6f;
						this.ai[0] = 0f;
					}
				}
				else if (this.ai[1] == 6f)
				{
					flag65 = true;
					this.aiAction = 0;
					this.ai[0] += 1f;
					num644 = MathHelper.Clamp(this.ai[0] / 30f, 0f, 1f);
					num644 = 0.5f + num644 * 0.5f;
					if (this.ai[0] >= 30f && Main.netMode != 1)
					{
						this.ai[1] = 0f;
						this.ai[0] = 0f;
						this.netUpdate = true;
						this.TargetClosest(true);
					}
					if (Main.netMode == 1 && this.ai[0] >= 60f)
					{
						this.ai[1] = 0f;
						this.ai[0] = 0f;
						this.TargetClosest(true);
					}
				}
				this.dontTakeDamage = (this.hide = flag66);
				if (this.velocity.Y == 0f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if (!flag65)
					{
						this.ai[0] += 2f;
						if ((double)this.life < (double)this.lifeMax * 0.8)
						{
							this.ai[0] += 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.6)
						{
							this.ai[0] += 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.4)
						{
							this.ai[0] += 2f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.2)
						{
							this.ai[0] += 3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.1)
						{
							this.ai[0] += 4f;
						}
						if (this.ai[0] >= 0f)
						{
							this.netUpdate = true;
							this.TargetClosest(true);
							if (this.ai[1] == 3f)
							{
								this.velocity.Y = -13f;
								this.velocity.X = this.velocity.X + 3.5f * (float)this.direction;
								this.ai[0] = -200f;
								this.ai[1] = 0f;
							}
							else if (this.ai[1] == 2f)
							{
								this.velocity.Y = -6f;
								this.velocity.X = this.velocity.X + 4.5f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] += 1f;
							}
							else
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X + 4f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] += 1f;
							}
						}
						else if (this.ai[0] >= -30f)
						{
							this.aiAction = 1;
						}
					}
				}
				else if (this.target < 255 && ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f)))
				{
					if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
					{
						this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.93f;
					}
				}
				if (this.life > 0)
				{
					float num659 = (float)this.life / (float)this.lifeMax;
					num659 = num659 * 0.5f + 0.75f;
					num659 *= num644;
					if (num659 != this.scale)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)this.height;
						this.scale = num659;
						this.width = (int)(98f * this.scale);
						this.height = (int)(92f * this.scale);
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)this.height;
					}
					if (Main.netMode != 1)
					{
						int num660 = (int)((double)this.lifeMax * 0.05);
						if ((float)(this.life + num660) < this.ai[3])
						{
							this.ai[3] = (float)this.life;
							int num661 = Main.rand.Next(1, 4);
							for (int num662 = 0; num662 < num661; num662++)
							{
								int x = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
								int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
								int num663 = 1;
								if (Main.expertMode && Main.rand.Next(4) == 0)
								{
									num663 = 535;
								}
								int num664 = NPC.NewNPC(x, y, num663, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num664].SetDefaults(num663, -1f);
								Main.npc[num664].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
								Main.npc[num664].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
								Main.npc[num664].ai[0] = (float)(-1000 * Main.rand.Next(3));
								Main.npc[num664].ai[1] = 0f;
								if (Main.netMode == 2 && num664 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num664, 0f, 0f, 0f, 0, 0, 0);
								}
							}
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 16)
			{
				if (this.direction == 0)
				{
					this.TargetClosest(true);
				}
				if (this.wet)
				{
					bool flag71 = false;
					if (this.type != 55)
					{
						this.TargetClosest(false);
						if (Main.player[this.target].wet && !Main.player[this.target].dead)
						{
							flag71 = true;
						}
					}
					if (!flag71)
					{
						if (this.collideX)
						{
							this.velocity.X = this.velocity.X * -1f;
							this.direction *= -1;
							this.netUpdate = true;
						}
						if (this.collideY)
						{
							this.netUpdate = true;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
								this.directionY = -1;
								this.ai[0] = -1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = Math.Abs(this.velocity.Y);
								this.directionY = 1;
								this.ai[0] = 1f;
							}
						}
					}
					if (flag71)
					{
						this.TargetClosest(true);
						if (this.type == 157)
						{
							if (this.velocity.X > 0f && this.direction < 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < 0f && this.direction > 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * 0.25f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.2f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 7f;
							}
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -7f;
							}
							if (this.velocity.Y > 5f)
							{
								this.velocity.Y = 4f;
							}
							if (this.velocity.Y < -5f)
							{
								this.velocity.Y = -4f;
							}
						}
						else if (this.type == 65 || this.type == 102)
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.15f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.15f;
							if (this.velocity.X > 5f)
							{
								this.velocity.X = 5f;
							}
							if (this.velocity.X < -5f)
							{
								this.velocity.X = -5f;
							}
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						else
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.1f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							if (this.velocity.Y > 2f)
							{
								this.velocity.Y = 2f;
							}
							if (this.velocity.Y < -2f)
							{
								this.velocity.Y = -2f;
							}
						}
					}
					else
					{
						if (this.type == 157)
						{
							if (Main.player[this.target].position.Y > this.position.Y)
							{
								this.directionY = 1;
							}
							else
							{
								this.directionY = -1;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * 0.2f;
							if (this.velocity.X < -2f || this.velocity.X > 2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.ai[0] == -1f)
							{
								float num665 = -0.6f;
								if (this.directionY < 0)
								{
									num665 = -1f;
								}
								if (this.directionY > 0)
								{
									num665 = -0.2f;
								}
								this.velocity.Y = this.velocity.Y - 0.02f;
								if (this.velocity.Y < num665)
								{
									this.ai[0] = 1f;
								}
							}
							else
							{
								float num666 = 0.6f;
								if (this.directionY < 0)
								{
									num666 = 0.2f;
								}
								if (this.directionY > 0)
								{
									num666 = 1f;
								}
								this.velocity.Y = this.velocity.Y + 0.02f;
								if (this.velocity.Y > num666)
								{
									this.ai[0] = -1f;
								}
							}
						}
						else
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
							if (this.velocity.X < -1f || this.velocity.X > 1f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.ai[0] == -1f)
							{
								this.velocity.Y = this.velocity.Y - 0.01f;
								if ((double)this.velocity.Y < -0.3)
								{
									this.ai[0] = 1f;
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.01f;
								if ((double)this.velocity.Y > 0.3)
								{
									this.ai[0] = -1f;
								}
							}
						}
						int num667 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int num668 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
						if (Main.tile[num667, num668 - 1] == null)
						{
							Main.tile[num667, num668 - 1] = new Tile();
						}
						if (Main.tile[num667, num668 + 1] == null)
						{
							Main.tile[num667, num668 + 1] = new Tile();
						}
						if (Main.tile[num667, num668 + 2] == null)
						{
							Main.tile[num667, num668 + 2] = new Tile();
						}
						if (Main.tile[num667, num668 - 1].liquid > 128)
						{
							if (Main.tile[num667, num668 + 1].active())
							{
								this.ai[0] = -1f;
							}
							else if (Main.tile[num667, num668 + 2].active())
							{
								this.ai[0] = -1f;
							}
						}
						if (this.type != 157 && ((double)this.velocity.Y > 0.4 || (double)this.velocity.Y < -0.4))
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						if (this.type == 65)
						{
							this.velocity.X = this.velocity.X * 0.94f;
							if ((double)this.velocity.X > -0.2 && (double)this.velocity.X < 0.2)
							{
								this.velocity.X = 0f;
							}
						}
						else if (Main.netMode != 1)
						{
							this.velocity.Y = (float)Main.rand.Next(-50, -20) * 0.1f;
							this.velocity.X = (float)Main.rand.Next(-20, 20) * 0.1f;
							this.netUpdate = true;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.3f;
					if (this.velocity.Y > 10f)
					{
						this.velocity.Y = 10f;
					}
					this.ai[0] = 1f;
				}
				this.rotation = this.velocity.Y * (float)this.direction * 0.1f;
				if ((double)this.rotation < -0.2)
				{
					this.rotation = -0.2f;
				}
				if ((double)this.rotation > 0.2)
				{
					this.rotation = 0.2f;
					return;
				}
			}
			else if (this.aiStyle == 17)
			{
				this.noGravity = true;
				if (this.ai[0] == 0f)
				{
					this.noGravity = false;
					this.TargetClosest(true);
					if (Main.netMode != 1)
					{
						if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
						{
							this.ai[0] = 1f;
							this.netUpdate = true;
						}
						else
						{
							Rectangle rectangle6 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
							Rectangle rectangle7 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
							if (rectangle7.Intersects(rectangle6) || this.life < this.lifeMax)
							{
								this.ai[0] = 1f;
								this.velocity.Y = this.velocity.Y - 6f;
								this.netUpdate = true;
							}
						}
					}
				}
				else if (!Main.player[this.target].dead)
				{
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -3f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 3f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 3f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -3f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
					}
					float num669 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
					float num670 = Main.player[this.target].position.Y - (float)(this.height / 2);
					if (num669 > 50f)
					{
						num670 -= 100f;
					}
					if (this.position.Y < num670)
					{
						this.velocity.Y = this.velocity.Y + 0.05f;
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.01f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y - 0.05f;
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.01f;
						}
					}
					if (this.velocity.Y < -3f)
					{
						this.velocity.Y = -3f;
					}
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				if (this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
					return;
				}
			}
			else if (this.aiStyle == 18)
			{
				bool flag72 = false;
				if (this.wet && this.ai[1] == 1f)
				{
					flag72 = true;
				}
				else
				{
					this.dontTakeDamage = false;
				}
				if (Main.expertMode && (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242))
				{
					if (this.wet)
					{
						if (this.target >= 0 && Main.player[this.target].wet && !Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() < 150f)
						{
							if (this.ai[1] == 0f)
							{
								this.ai[2] += 2f;
							}
							else
							{
								this.ai[2] -= 0.25f;
							}
						}
						if (flag72)
						{
							this.dontTakeDamage = true;
							this.ai[2] += 1f;
							if (this.ai[2] >= 120f)
							{
								this.ai[1] = 0f;
							}
						}
						else
						{
							this.ai[2] += 1f;
							if (this.ai[2] >= 420f)
							{
								this.ai[1] = 1f;
								this.ai[2] = 0f;
							}
						}
					}
					else
					{
						this.ai[1] = 0f;
						this.ai[2] = 0f;
					}
				}
				float num671 = 1f;
				if (flag72)
				{
					num671 += 0.5f;
				}
				if (this.direction == 0)
				{
					this.TargetClosest(true);
				}
				if (flag72)
				{
					return;
				}
				if (!this.wet)
				{
					this.rotation += this.velocity.X * 0.1f;
					if (this.velocity.Y == 0f)
					{
						this.velocity.X = this.velocity.X * 0.98f;
						if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
						{
							this.velocity.X = 0f;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.2f;
					if (this.velocity.Y > 10f)
					{
						this.velocity.Y = 10f;
					}
					this.ai[0] = 1f;
					return;
				}
				if (this.collideX)
				{
					this.velocity.X = this.velocity.X * -1f;
					this.direction *= -1;
				}
				if (this.collideY)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
						this.directionY = -1;
						this.ai[0] = -1f;
					}
					else if (this.velocity.Y < 0f)
					{
						this.velocity.Y = Math.Abs(this.velocity.Y);
						this.directionY = 1;
						this.ai[0] = 1f;
					}
				}
				bool flag73 = false;
				if (!this.friendly)
				{
					this.TargetClosest(false);
					if (Main.player[this.target].wet && !Main.player[this.target].dead)
					{
						flag73 = true;
					}
				}
				if (flag73)
				{
					this.localAI[2] = 1f;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					this.velocity *= 0.98f;
					float num672 = 0.2f;
					if (this.type == 103)
					{
						this.velocity *= 0.98f;
						num672 = 0.6f;
					}
					if (this.type == 221)
					{
						this.velocity *= 0.99f;
						num672 = 1f;
					}
					if (this.type == 242)
					{
						this.velocity *= 0.995f;
						num672 = 3f;
					}
					if (this.velocity.X > -num672 && this.velocity.X < num672 && this.velocity.Y > -num672 && this.velocity.Y < num672)
					{
						if (this.type == 221)
						{
							this.localAI[0] = 1f;
						}
						this.TargetClosest(true);
						float num673 = 7f;
						if (this.type == 103)
						{
							num673 = 9f;
						}
						Vector2 vector66 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num674 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector66.X;
						float num675 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector66.Y;
						float num676 = (float)Math.Sqrt((double)(num674 * num674 + num675 * num675));
						num676 = num673 / num676;
						num674 *= num676;
						num675 *= num676;
						this.velocity.X = num674;
						this.velocity.Y = num675;
						return;
					}
				}
				else
				{
					this.localAI[2] = 0f;
					this.velocity.X = this.velocity.X + (float)this.direction * 0.02f;
					this.rotation = this.velocity.X * 0.4f;
					if (this.velocity.X < -1f || this.velocity.X > 1f)
					{
						this.velocity.X = this.velocity.X * 0.95f;
					}
					if (this.ai[0] == -1f)
					{
						this.velocity.Y = this.velocity.Y - 0.01f;
						if (this.velocity.Y < -1f)
						{
							this.ai[0] = 1f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y + 0.01f;
						if (this.velocity.Y > 1f)
						{
							this.ai[0] = -1f;
						}
					}
					int num677 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num678 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (Main.tile[num677, num678 - 1] == null)
					{
						Main.tile[num677, num678 - 1] = new Tile();
					}
					if (Main.tile[num677, num678 + 1] == null)
					{
						Main.tile[num677, num678 + 1] = new Tile();
					}
					if (Main.tile[num677, num678 + 2] == null)
					{
						Main.tile[num677, num678 + 2] = new Tile();
					}
					if (Main.tile[num677, num678 - 1].liquid > 128)
					{
						if (Main.tile[num677, num678 + 1].active())
						{
							this.ai[0] = -1f;
						}
						else if (Main.tile[num677, num678 + 2].active())
						{
							this.ai[0] = -1f;
						}
					}
					else
					{
						this.ai[0] = 1f;
					}
					if ((double)this.velocity.Y > 1.2 || (double)this.velocity.Y < -1.2)
					{
						this.velocity.Y = this.velocity.Y * 0.99f;
						return;
					}
				}
			}
			else
			{
				if (this.aiStyle == 19)
				{
					this.TargetClosest(true);
					float num679 = 12f;
					Vector2 vector67 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num680 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector67.X;
					float num681 = Main.player[this.target].position.Y - vector67.Y;
					float num682 = (float)Math.Sqrt((double)(num680 * num680 + num681 * num681));
					num682 = num679 / num682;
					num680 *= num682;
					num681 *= num682;
					bool flag74 = false;
					if (this.directionY < 0)
					{
						this.rotation = (float)(Math.Atan2((double)num681, (double)num680) + 1.57);
						flag74 = ((double)this.rotation >= -1.2 && (double)this.rotation <= 1.2);
						if ((double)this.rotation < -0.8)
						{
							this.rotation = -0.8f;
						}
						else if ((double)this.rotation > 0.8)
						{
							this.rotation = 0.8f;
						}
						if (this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
							if ((double)this.velocity.X > -0.1 || (double)this.velocity.X < 0.1)
							{
								this.netUpdate = true;
								this.velocity.X = 0f;
							}
						}
					}
					if (this.ai[0] > 0f)
					{
						this.ai[0] -= 1f;
					}
					if (Main.netMode != 1 && flag74 && this.ai[0] == 0f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.ai[0] = 200f;
						int num683 = 10;
						int num684 = 31;
						int num685 = Projectile.NewProjectile(vector67.X, vector67.Y, num680, num681, num684, num683, 0f, Main.myPlayer, 0f, 0f);
						Main.projectile[num685].ai[0] = 2f;
						Main.projectile[num685].timeLeft = 300;
						Main.projectile[num685].friendly = false;
						NetMessage.SendData(27, -1, -1, "", num685, 0f, 0f, 0f, 0, 0, 0);
						this.netUpdate = true;
					}
					try
					{
						int num686 = (int)this.position.X / 16;
						int num687 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int num688 = (int)(this.position.X + (float)this.width) / 16;
						int num689 = (int)(this.position.Y + (float)this.height) / 16;
						bool flag75 = false;
						if (Main.tile[num686, num689] == null)
						{
							Main.tile[num686, num689] = new Tile();
						}
						if (Main.tile[num687, num689] == null)
						{
							Main.tile[num686, num689] = new Tile();
						}
						if (Main.tile[num688, num689] == null)
						{
							Main.tile[num686, num689] = new Tile();
						}
						if ((Main.tile[num686, num689].nactive() && Main.tileSolid[(int)Main.tile[num686, num689].type]) || (Main.tile[num687, num689].nactive() && Main.tileSolid[(int)Main.tile[num687, num689].type]) || (Main.tile[num688, num689].nactive() && Main.tileSolid[(int)Main.tile[num688, num689].type]))
						{
							flag75 = true;
						}
						if (flag75)
						{
							this.noGravity = true;
							this.noTileCollide = true;
							this.velocity.Y = -0.2f;
						}
						else
						{
							this.noGravity = false;
							this.noTileCollide = false;
						}
						return;
					}
					catch
					{
						return;
					}
				}
				if (this.aiStyle == 20)
				{
					if (this.ai[0] == 0f)
					{
						if (Main.netMode != 1)
						{
							this.TargetClosest(true);
							this.direction *= -1;
							this.directionY *= -1;
							this.position.Y = this.position.Y + (float)(this.height / 2 + 8);
							this.ai[1] = this.position.X + (float)(this.width / 2);
							this.ai[2] = this.position.Y + (float)(this.height / 2);
							if (this.direction == 0)
							{
								this.direction = 1;
							}
							if (this.directionY == 0)
							{
								this.directionY = 1;
							}
							this.ai[3] = 1f + (float)Main.rand.Next(15) * 0.1f;
							this.velocity.Y = (float)(this.directionY * 6) * this.ai[3];
							this.ai[0] += 1f;
							this.netUpdate = true;
							return;
						}
						this.ai[1] = this.position.X + (float)(this.width / 2);
						this.ai[2] = this.position.Y + (float)(this.height / 2);
						return;
					}
					else
					{
						float num691 = 6f * this.ai[3];
						float num692 = 0.2f * this.ai[3];
						float num693 = num691 / num692 / 2f;
						if (this.ai[0] >= 1f && this.ai[0] < (float)((int)num693))
						{
							this.velocity.Y = (float)this.directionY * num691;
							this.ai[0] += 1f;
							return;
						}
						if (this.ai[0] >= (float)((int)num693))
						{
							this.velocity.Y = 0f;
							this.directionY *= -1;
							this.velocity.X = num691 * (float)this.direction;
							this.ai[0] = -1f;
							return;
						}
						if (this.directionY > 0)
						{
							if (this.velocity.Y >= num691)
							{
								this.directionY *= -1;
								this.velocity.Y = num691;
							}
						}
						else if (this.directionY < 0 && this.velocity.Y <= -num691)
						{
							this.directionY *= -1;
							this.velocity.Y = -num691;
						}
						if (this.direction > 0)
						{
							if (this.velocity.X >= num691)
							{
								this.direction *= -1;
								this.velocity.X = num691;
							}
						}
						else if (this.direction < 0 && this.velocity.X <= -num691)
						{
							this.direction *= -1;
							this.velocity.X = -num691;
						}
						this.velocity.X = this.velocity.X + num692 * (float)this.direction;
						this.velocity.Y = this.velocity.Y + num692 * (float)this.directionY;
						return;
					}
				}
				else
				{
					if (this.aiStyle == 21)
					{
						if (this.ai[0] == 0f)
						{
							this.TargetClosest(true);
							this.directionY = 1;
							this.ai[0] = 1f;
						}
						int num694 = 6;
						if (this.ai[1] == 0f)
						{
							this.rotation += (float)(this.direction * this.directionY) * 0.13f;
							if (this.collideY)
							{
								this.ai[0] = 2f;
							}
							if (!this.collideY && this.ai[0] == 2f)
							{
								this.direction = -this.direction;
								this.ai[1] = 1f;
								this.ai[0] = 1f;
							}
							if (this.collideX)
							{
								this.directionY = -this.directionY;
								this.ai[1] = 1f;
							}
						}
						else
						{
							this.rotation -= (float)(this.direction * this.directionY) * 0.13f;
							if (this.collideX)
							{
								this.ai[0] = 2f;
							}
							if (!this.collideX && this.ai[0] == 2f)
							{
								this.directionY = -this.directionY;
								this.ai[1] = 0f;
								this.ai[0] = 1f;
							}
							if (this.collideY)
							{
								this.direction = -this.direction;
								this.ai[1] = 0f;
							}
						}
						this.velocity.X = (float)(num694 * this.direction);
						this.velocity.Y = (float)(num694 * this.directionY);
						float num695 = (float)(270 - (int)Main.mouseTextColor) / 400f;
						return;
					}
					if (this.aiStyle == 22)
					{
						bool flag76 = false;
						bool flag77 = this.type == 330 && !Main.pumpkinMoon;
						if (this.type == 253 && !Main.eclipse)
						{
							flag77 = true;
						}
						if (this.type == 490 && Main.dayTime)
						{
							flag77 = true;
						}
						if (this.justHit)
						{
							this.ai[2] = 0f;
						}
						if (!flag77)
						{
							if (this.ai[2] >= 0f)
							{
								int num696 = 16;
								bool flag78 = false;
								bool flag79 = false;
								if (this.position.X > this.ai[0] - (float)num696 && this.position.X < this.ai[0] + (float)num696)
								{
									flag78 = true;
								}
								else if ((this.velocity.X < 0f && this.direction > 0) || (this.velocity.X > 0f && this.direction < 0))
								{
									flag78 = true;
								}
								num696 += 24;
								if (this.position.Y > this.ai[1] - (float)num696 && this.position.Y < this.ai[1] + (float)num696)
								{
									flag79 = true;
								}
								if (flag78 && flag79)
								{
									this.ai[2] += 1f;
									if (this.ai[2] >= 30f && num696 == 16)
									{
										flag76 = true;
									}
									if (this.ai[2] >= 60f)
									{
										this.ai[2] = -200f;
										this.direction *= -1;
										this.velocity.X = this.velocity.X * -1f;
										this.collideX = false;
									}
								}
								else
								{
									this.ai[0] = this.position.X;
									this.ai[1] = this.position.Y;
									this.ai[2] = 0f;
								}
								this.TargetClosest(true);
							}
							else if (this.type == 253)
							{
								this.TargetClosest(true);
								this.ai[2] += 2f;
							}
							else
							{
								if (this.type == 330)
								{
									this.ai[2] += 0.1f;
								}
								else
								{
									this.ai[2] += 1f;
								}
								if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
							}
						}
						int num697 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction * 2;
						int num698 = (int)((this.position.Y + (float)this.height) / 16f);
						bool flag80 = true;
						bool flag81 = false;
						int num699 = 3;
						if (this.type == 122)
						{
							if (this.justHit)
							{
								this.ai[3] = 0f;
								this.localAI[1] = 0f;
							}
							float num700 = 7f;
							Vector2 vector68 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num701 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector68.X;
							float num702 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector68.Y;
							float num703 = (float)Math.Sqrt((double)(num701 * num701 + num702 * num702));
							num703 = num700 / num703;
							num701 *= num703;
							num702 *= num703;
							if (Main.netMode != 1 && this.ai[3] == 32f && !Main.player[this.target].npcTypeNoAggro[this.type])
							{
								int num704 = 25;
								int num705 = 84;
								Projectile.NewProjectile(vector68.X, vector68.Y, num701, num702, num705, num704, 0f, Main.myPlayer, 0f, 0f);
							}
							num699 = 8;
							if (this.ai[3] > 0f)
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 64f)
								{
									this.ai[3] = 0f;
								}
							}
							if (Main.netMode != 1 && this.ai[3] == 0f)
							{
								this.localAI[1] += 1f;
								if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && !Main.player[this.target].npcTypeNoAggro[this.type])
								{
									this.localAI[1] = 0f;
									this.ai[3] = 1f;
									this.netUpdate = true;
								}
							}
						}
						else if (this.type == 75)
						{
							num699 = 4;
						}
						else if (this.type == 169)
						{
							this.alpha = 30;
							if (this.justHit)
							{
								this.ai[3] = 0f;
								this.localAI[1] = 0f;
							}
							float num708 = 5f;
							Vector2 vector69 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num709 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector69.X;
							float num710 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector69.Y;
							float num711 = (float)Math.Sqrt((double)(num709 * num709 + num710 * num710));
							num711 = num708 / num711;
							num709 *= num711;
							num710 *= num711;
							if (num709 > 0f)
							{
								this.direction = 1;
							}
							else
							{
								this.direction = -1;
							}
							this.spriteDirection = this.direction;
							if (this.direction < 0)
							{
								this.rotation = (float)Math.Atan2((double)(-(double)num710), (double)(-(double)num709));
							}
							else
							{
								this.rotation = (float)Math.Atan2((double)num710, (double)num709);
							}
							if (Main.netMode != 1 && this.ai[3] == 16f)
							{
								int num712 = 45;
								int num713 = 128;
								Projectile.NewProjectile(vector69.X, vector69.Y, num709, num710, num713, num712, 0f, Main.myPlayer, 0f, 0f);
							}
							num699 = 10;
							if (this.ai[3] > 0f)
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 64f)
								{
									this.ai[3] = 0f;
								}
							}
							if (Main.netMode != 1 && this.ai[3] == 0f)
							{
								this.localAI[1] += 1f;
								if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.localAI[1] = 0f;
									this.ai[3] = 1f;
									this.netUpdate = true;
								}
							}
						}
						else if (this.type == 268)
						{
							this.rotation = this.velocity.X * 0.1f;
							if (Main.player[this.target].Center.Y < base.Center.Y)
							{
								num699 = 12;
							}
							else
							{
								num699 = 6;
							}
							if (Main.netMode != 1 && !this.confused)
							{
								this.ai[3] += 1f;
								if (this.justHit)
								{
									this.ai[3] = -45f;
									this.localAI[1] = 0f;
								}
								if (Main.netMode != 1 && this.ai[3] >= (float)(60 + Main.rand.Next(60)))
								{
									this.ai[3] = 0f;
									if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].head))
									{
										float num714 = 10f;
										Vector2 vector70 = new Vector2(this.position.X + (float)this.width * 0.5f - 4f, this.position.Y + (float)this.height * 0.7f);
										float num715 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector70.X;
										float num716 = Math.Abs(num715) * 0.1f;
										float num717 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector70.Y - num716;
										num715 += (float)Main.rand.Next(-10, 11);
										num717 += (float)Main.rand.Next(-30, 21);
										float num718 = (float)Math.Sqrt((double)(num715 * num715 + num717 * num717));
										num718 = num714 / num718;
										num715 *= num718;
										num717 *= num718;
										int num719 = 40;
										int num720 = 288;
										Projectile.NewProjectile(vector70.X, vector70.Y, num715, num717, num720, num719, 0f, Main.myPlayer, 0f, 0f);
									}
								}
							}
						}
						if (this.type == 490)
						{
							num699 = 4;
							if (this.target >= 0)
							{
								float num721 = (Main.player[this.target].Center - base.Center).Length();
								num721 /= 70f;
								if (num721 > 8f)
								{
									num721 = 8f;
								}
								num699 += (int)num721;
							}
						}
						for (int num722 = num698; num722 < num698 + num699; num722++)
						{
							if (Main.tile[num697, num722] == null)
							{
								Main.tile[num697, num722] = new Tile();
							}
							if ((Main.tile[num697, num722].nactive() && Main.tileSolid[(int)Main.tile[num697, num722].type]) || Main.tile[num697, num722].liquid > 0)
							{
								if (num722 <= num698 + 1)
								{
									flag81 = true;
								}
								flag80 = false;
								break;
							}
						}
						if (Main.player[this.target].npcTypeNoAggro[this.type])
						{
							bool flag82 = false;
							for (int num723 = num698; num723 < num698 + num699 - 2; num723++)
							{
								if (Main.tile[num697, num723] == null)
								{
									Main.tile[num697, num723] = new Tile();
								}
								if ((Main.tile[num697, num723].nactive() && Main.tileSolid[(int)Main.tile[num697, num723].type]) || Main.tile[num697, num723].liquid > 0)
								{
									flag82 = true;
									break;
								}
							}
							this.directionY = (!flag82).ToDirectionInt();
						}
						if (this.type == 169 || this.type == 268)
						{
							for (int num724 = num698 - 3; num724 < num698; num724++)
							{
								if (Main.tile[num697, num724] == null)
								{
									Main.tile[num697, num724] = new Tile();
								}
								if ((Main.tile[num697, num724].nactive() && Main.tileSolid[(int)Main.tile[num697, num724].type]) || Main.tile[num697, num724].liquid > 0)
								{
									flag81 = false;
									flag76 = true;
									break;
								}
							}
						}
						if (flag76)
						{
							flag81 = false;
							flag80 = true;
							if (this.type == 268)
							{
								this.velocity.Y = this.velocity.Y + 2f;
							}
						}
						if (flag80)
						{
							if (this.type == 75 || this.type == 169)
							{
								this.velocity.Y = this.velocity.Y + 0.2f;
								if (this.velocity.Y > 2f)
								{
									this.velocity.Y = 2f;
								}
							}
							else if (this.type == 490)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
								if ((double)this.velocity.Y > 0.75)
								{
									this.velocity.Y = 0.75f;
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
							}
						}
						else
						{
							if (this.type == 75 || this.type == 169)
							{
								if ((this.directionY < 0 && this.velocity.Y > 0f) || flag81)
								{
									this.velocity.Y = this.velocity.Y - 0.2f;
								}
							}
							else if (this.type == 490)
							{
								if ((this.directionY < 0 && this.velocity.Y > 0f) || flag81)
								{
									this.velocity.Y = this.velocity.Y - 0.075f;
								}
								if (this.velocity.Y < -0.75f)
								{
									this.velocity.Y = -0.75f;
								}
							}
							else if (this.directionY < 0 && this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						if (this.type == 75 && this.wet)
						{
							this.velocity.Y = this.velocity.Y - 0.2f;
							if (this.velocity.Y < -2f)
							{
								this.velocity.Y = -2f;
							}
						}
						if (this.collideX)
						{
							this.velocity.X = this.oldVelocity.X * -0.4f;
							if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 1f)
							{
								this.velocity.X = 1f;
							}
							if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -1f)
							{
								this.velocity.X = -1f;
							}
						}
						if (this.collideY)
						{
							this.velocity.Y = this.oldVelocity.Y * -0.25f;
							if (this.velocity.Y > 0f && this.velocity.Y < 1f)
							{
								this.velocity.Y = 1f;
							}
							if (this.velocity.Y < 0f && this.velocity.Y > -1f)
							{
								this.velocity.Y = -1f;
							}
						}
						float num725 = 2f;
						if (this.type == 75)
						{
							num725 = 3f;
						}
						if (this.type == 253)
						{
							num725 = 4f;
						}
						if (this.type == 490)
						{
							num725 = 1.5f;
						}
						if (this.type == 330)
						{
							this.alpha = 0;
							num725 = 4f;
							if (!flag77)
							{
								this.TargetClosest(true);
							}
							else if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
							}
							if (this.direction < 0 && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (this.direction > 0 && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
						}
						if (this.direction == -1 && this.velocity.X > -num725)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > num725)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -num725)
							{
								this.velocity.X = -num725;
							}
						}
						else if (this.direction == 1 && this.velocity.X < num725)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -num725)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > num725)
							{
								this.velocity.X = num725;
							}
						}
						if (this.type == 490)
						{
							num725 = 1f;
						}
						else
						{
							num725 = 1.5f;
						}
						if (this.directionY == -1 && this.velocity.Y > -num725)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.velocity.Y > num725)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if (this.velocity.Y < -num725)
							{
								this.velocity.Y = -num725;
							}
						}
						else if (this.directionY == 1 && this.velocity.Y < num725)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if (this.velocity.Y < -num725)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if (this.velocity.Y > num725)
							{
								this.velocity.Y = num725;
							}
						}
						if (this.type == 122)
						{
							return;
						}
					}
					else if (this.aiStyle == 23)
					{
						this.noGravity = true;
						this.noTileCollide = true;
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						if (this.ai[0] == 0f)
						{
							float num726 = 9f;
							Vector2 vector71 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num727 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector71.X;
							float num728 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector71.Y;
							float num729 = (float)Math.Sqrt((double)(num727 * num727 + num728 * num728));
							num729 = num726 / num729;
							num727 *= num729;
							num728 *= num729;
							this.velocity.X = num727;
							this.velocity.Y = num728;
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
							this.ai[0] = 1f;
							this.ai[1] = 0f;
							this.netUpdate = true;
							return;
						}
						if (this.ai[0] == 1f)
						{
							if (this.justHit)
							{
								this.ai[0] = 2f;
								this.ai[1] = 0f;
							}
							this.velocity *= 0.99f;
							this.ai[1] += 1f;
							if (this.ai[1] >= 100f)
							{
								this.netUpdate = true;
								this.ai[0] = 2f;
								this.ai[1] = 0f;
								this.velocity.X = 0f;
								this.velocity.Y = 0f;
								return;
							}
						}
						else
						{
							if (this.justHit)
							{
								this.ai[0] = 2f;
								this.ai[1] = 0f;
							}
							this.velocity *= 0.96f;
							this.ai[1] += 1f;
							float num730 = this.ai[1] / 120f;
							num730 = 0.1f + num730 * 0.4f;
							this.rotation += num730 * (float)this.direction;
							if (this.ai[1] >= 120f)
							{
								this.netUpdate = true;
								this.ai[0] = 0f;
								this.ai[1] = 0f;
								return;
							}
						}
					}
					else if (this.aiStyle == 24)
					{
						this.noGravity = true;
						if (this.ai[0] == 0f)
						{
							this.noGravity = false;
							this.TargetClosest(true);
							if (Main.netMode != 1)
							{
								if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
									this.direction = -this.direction;
								}
								else
								{
									Rectangle rectangle8 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
									Rectangle rectangle9 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
									if (rectangle9.Intersects(rectangle8) || this.life < this.lifeMax)
									{
										this.ai[0] = 1f;
										this.velocity.Y = this.velocity.Y - 6f;
										this.netUpdate = true;
										this.direction = -this.direction;
									}
								}
							}
						}
						else if (!Main.player[this.target].dead)
						{
							if (this.collideX)
							{
								this.direction *= -1;
								this.velocity.X = this.oldVelocity.X * -0.5f;
								if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
								{
									this.velocity.X = 2f;
								}
								if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
								{
									this.velocity.X = -2f;
								}
							}
							if (this.collideY)
							{
								this.velocity.Y = this.oldVelocity.Y * -0.5f;
								if (this.velocity.Y > 0f && this.velocity.Y < 1f)
								{
									this.velocity.Y = 1f;
								}
								if (this.velocity.Y < 0f && this.velocity.Y > -1f)
								{
									this.velocity.Y = -1f;
								}
							}
							if (this.direction == -1 && this.velocity.X > -3f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 3f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								if (this.velocity.X < -3f)
								{
									this.velocity.X = -3f;
								}
							}
							else if (this.direction == 1 && this.velocity.X < 3f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -3f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.velocity.X > 3f)
								{
									this.velocity.X = 3f;
								}
							}
							int num731 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
							int num732 = (int)((this.position.Y + (float)this.height) / 16f);
							bool flag83 = true;
							int num733 = 15;
							bool flag84 = false;
							for (int num734 = num732; num734 < num732 + num733; num734++)
							{
								if (Main.tile[num731, num734] == null)
								{
									Main.tile[num731, num734] = new Tile();
								}
								if ((Main.tile[num731, num734].nactive() && Main.tileSolid[(int)Main.tile[num731, num734].type]) || Main.tile[num731, num734].liquid > 0)
								{
									if (num734 < num732 + 5)
									{
										flag84 = true;
									}
									flag83 = false;
									break;
								}
							}
							if (flag83)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							if (flag84)
							{
								this.velocity.Y = this.velocity.Y - 0.2f;
							}
							if (this.velocity.Y > 2f)
							{
								this.velocity.Y = 2f;
							}
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						if (this.wet)
						{
							this.ai[1] = 0f;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
							this.velocity.Y = this.velocity.Y - 0.5f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
							this.TargetClosest(true);
							return;
						}
					}
					else if (this.aiStyle == 25)
					{
						bool flag85 = this.type == 341 && !Main.snowMoon;
						if (this.ai[3] == 0f)
						{
							this.position.X = this.position.X + 8f;
							if (this.position.Y / 16f > (float)(Main.maxTilesY - 200))
							{
								this.ai[3] = 3f;
							}
							else if ((double)(this.position.Y / 16f) > Main.worldSurface)
							{
								this.TargetClosest(true);
								if (Main.player[this.target].ZoneSnow)
								{
									this.ai[3] = 4f;
								}
								else
								{
									this.ai[3] = 2f;
								}
							}
							else
							{
								this.ai[3] = 1f;
							}
						}
						if (this.type == 341)
						{
							this.ai[3] = 1f;
						}
						if (this.ai[0] == 0f)
						{
							if (!flag85)
							{
								this.TargetClosest(true);
							}
							if (Main.netMode != 1)
							{
								if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
									return;
								}
								Rectangle rectangle10 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
								Rectangle rectangle11 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
								if (rectangle11.Intersects(rectangle10) || this.life < this.lifeMax)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
									return;
								}
							}
						}
						else if (this.velocity.Y == 0f)
						{
							this.ai[2] += 1f;
							int num735 = 20;
							if (this.ai[1] == 0f)
							{
								num735 = 12;
							}
							if (this.ai[2] < (float)num735)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								return;
							}
							this.ai[2] = 0f;
							if (!flag85)
							{
								this.TargetClosest(true);
							}
							if (this.direction == 0)
							{
								this.direction = -1;
							}
							this.spriteDirection = this.direction;
							this.ai[1] += 1f;
							if (this.ai[1] == 2f)
							{
								this.velocity.X = (float)this.direction * 2.5f;
								this.velocity.Y = -8f;
								this.ai[1] = 0f;
							}
							else
							{
								this.velocity.X = (float)this.direction * 3.5f;
								this.velocity.Y = -4f;
							}
							this.netUpdate = true;
							return;
						}
						else
						{
							if (this.direction == 1 && this.velocity.X < 1f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								return;
							}
							if (this.direction == -1 && this.velocity.X > -1f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								return;
							}
						}
					}
					else if (this.aiStyle == 26)
					{
						int num736 = 30;
						int num737 = 10;
						bool flag86 = false;
						bool flag87 = false;
						bool flag88 = false;
						if (this.velocity.Y == 0f && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
						{
							flag87 = true;
							this.ai[3] += 1f;
						}
						if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num736 || flag87)
						{
							this.ai[3] += 1f;
							flag88 = true;
						}
						else if (this.ai[3] > 0f)
						{
							this.ai[3] -= 1f;
						}
						if (this.ai[3] > (float)(num736 * num737))
						{
							this.ai[3] = 0f;
						}
						if (this.justHit)
						{
							this.ai[3] = 0f;
						}
						if (this.ai[3] == (float)num736)
						{
							this.netUpdate = true;
						}
						Vector2 vector72 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num738 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector72.X;
						float num739 = Main.player[this.target].position.Y - vector72.Y;
						float num740 = (float)Math.Sqrt((double)(num738 * num738 + num739 * num739));
						if (num740 < 200f && !flag88)
						{
							this.ai[3] = 0f;
						}
						if (this.type == 410)
						{
							this.ai[1] += 1f;
							bool flag89 = this.ai[1] >= 240f;
							if (!flag89 && this.velocity.Y == 0f)
							{
								for (int num741 = 0; num741 < 255; num741++)
								{
									if (Main.player[num741].active && !Main.player[num741].dead && Main.player[num741].Distance(base.Center) < 800f && Main.player[num741].Center.Y < base.Center.Y && Math.Abs(Main.player[num741].Center.X - base.Center.X) < 20f)
									{
										flag89 = true;
										break;
									}
								}
							}
							if (flag89 && Main.netMode != 1)
							{
								for (int num742 = 0; num742 < 3; num742++)
								{
									Projectile.NewProjectile(base.Center.X, base.Center.Y, (Main.rand.NextFloat() - 0.5f) * 2f, -4f - 10f * Main.rand.NextFloat(), 538, 50, 0f, Main.myPlayer, 0f, 0f);
								}
								this.HitEffect(9999, 10.0);
								this.active = false;
								return;
							}
						}
						else if (this.type == 423)
						{
							if (this.ai[2] == 1f)
							{
								this.ai[1] += 1f;
								this.velocity.X = this.velocity.X * 0.7f;
								if (this.velocity.X > -0.5f && this.velocity.X < 0.5f)
								{
									this.velocity.X = 0f;
								}
								if (this.ai[1] == 30f && Main.netMode != 1)
								{
									int num744 = Main.expertMode ? 35 : 50;
									Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * -20), base.Center.Y, (float)(this.spriteDirection * -7), 0f, 575, num744, 0f, Main.myPlayer, (float)this.target, 0f);
								}
								if (this.ai[1] >= 60f)
								{
									this.ai[1] = (float)(-(float)Main.rand.Next(320, 601));
									this.ai[2] = 0f;
								}
							}
							else
							{
								this.ai[1] += 1f;
								if (this.ai[1] >= 180f && num740 < 500f && this.velocity.Y == 0f)
								{
									flag86 = true;
									this.ai[1] = 0f;
									this.ai[2] = 1f;
									this.netUpdate = true;
								}
								else if (this.velocity.Y == 0f && num740 < 100f && Math.Abs(this.velocity.X) > 3f && ((base.Center.X < Main.player[this.target].Center.X && this.velocity.X > 0f) || (base.Center.X > Main.player[this.target].Center.X && this.velocity.X < 0f)))
								{
									this.velocity.Y = this.velocity.Y - 4f;
								}
							}
						}
						else if ((this.type == 155 || this.type == 329) && this.velocity.Y == 0f && num740 < 100f && Math.Abs(this.velocity.X) > 3f && ((this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X > 0f) || (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X < 0f)))
						{
							this.velocity.Y = this.velocity.Y - 4f;
						}
						if (this.ai[3] < (float)num736)
						{
							if ((this.type == 329 || this.type == 315) && !Main.pumpkinMoon)
							{
								if (this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
							}
							else
							{
								this.TargetClosest(true);
							}
						}
						else
						{
							if (this.velocity.X == 0f)
							{
								if (this.velocity.Y == 0f)
								{
									this.ai[0] += 1f;
									if (this.ai[0] >= 2f)
									{
										this.direction *= -1;
										this.spriteDirection = this.direction;
										this.ai[0] = 0f;
									}
								}
							}
							else
							{
								this.ai[0] = 0f;
							}
							this.directionY = -1;
							if (this.direction == 0)
							{
								this.direction = 1;
							}
						}
						float num745 = 6f;
						float num746 = 0.07f;
						if (!flag86 && (this.velocity.Y == 0f || this.wet || (this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0)))
						{
							if (this.type == 155)
							{
								if (this.velocity.X > 0f && this.direction < 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.velocity.X < 0f && this.direction > 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
							}
							else if (this.type == 329)
							{
								if (this.velocity.X > 0f && this.direction < 0)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if (this.velocity.X < 0f && this.direction > 0)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if (this.direction > 0 && this.velocity.X < 3f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								if (this.direction < 0 && this.velocity.X > -3f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
							}
							else if (this.type == 315)
							{
								if (this.velocity.X > 0f && this.direction < 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.velocity.X < 0f && this.direction > 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.velocity.X < -num745 || this.velocity.X > num745)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
									}
								}
								else if (this.velocity.X < num745 && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > num745)
									{
										this.velocity.X = num745;
									}
								}
								else if (this.velocity.X > -num745 && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -num745)
									{
										this.velocity.X = -num745;
									}
								}
							}
							else if (this.type == 410)
							{
								if (Math.Sign(this.velocity.X) != this.direction)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								num745 = 6f;
								num746 = 0.2f;
							}
							else if (this.type == 423)
							{
								if (Math.Sign(this.velocity.X) != this.direction)
								{
									this.velocity.X = this.velocity.X * 0.85f;
								}
								num745 = 10f;
								num746 = 0.2f;
							}
							if (this.velocity.X < -num745 || this.velocity.X > num745)
							{
								if (this.velocity.Y == 0f)
								{
									this.velocity *= 0.8f;
								}
							}
							else if (this.velocity.X < num745 && this.direction == 1)
							{
								this.velocity.X = this.velocity.X + num746;
								if (this.velocity.X > num745)
								{
									this.velocity.X = num745;
								}
							}
							else if (this.velocity.X > -num745 && this.direction == -1)
							{
								this.velocity.X = this.velocity.X - num746;
								if (this.velocity.X < -num745)
								{
									this.velocity.X = -num745;
								}
							}
						}
						if (this.velocity.Y >= 0f)
						{
							int num747 = 0;
							if (this.velocity.X < 0f)
							{
								num747 = -1;
							}
							if (this.velocity.X > 0f)
							{
								num747 = 1;
							}
							Vector2 position5 = this.position;
							position5.X += this.velocity.X;
							int num748 = (int)((position5.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num747)) / 16f);
							int num749 = (int)((position5.Y + (float)this.height - 1f) / 16f);
							if (Main.tile[num748, num749] == null)
							{
								Main.tile[num748, num749] = new Tile();
							}
							if (Main.tile[num748, num749 - 1] == null)
							{
								Main.tile[num748, num749 - 1] = new Tile();
							}
							if (Main.tile[num748, num749 - 2] == null)
							{
								Main.tile[num748, num749 - 2] = new Tile();
							}
							if (Main.tile[num748, num749 - 3] == null)
							{
								Main.tile[num748, num749 - 3] = new Tile();
							}
							if (Main.tile[num748, num749 + 1] == null)
							{
								Main.tile[num748, num749 + 1] = new Tile();
							}
							if ((float)(num748 * 16) < position5.X + (float)this.width && (float)(num748 * 16 + 16) > position5.X && ((Main.tile[num748, num749].nactive() && !Main.tile[num748, num749].topSlope() && !Main.tile[num748, num749 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num748, num749].type] && !Main.tileSolidTop[(int)Main.tile[num748, num749].type]) || (Main.tile[num748, num749 - 1].halfBrick() && Main.tile[num748, num749 - 1].nactive())) && (!Main.tile[num748, num749 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num748, num749 - 1].type] || Main.tileSolidTop[(int)Main.tile[num748, num749 - 1].type] || (Main.tile[num748, num749 - 1].halfBrick() && (!Main.tile[num748, num749 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num748, num749 - 4].type] || Main.tileSolidTop[(int)Main.tile[num748, num749 - 4].type]))) && (!Main.tile[num748, num749 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num748, num749 - 2].type] || Main.tileSolidTop[(int)Main.tile[num748, num749 - 2].type]) && (!Main.tile[num748, num749 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num748, num749 - 3].type] || Main.tileSolidTop[(int)Main.tile[num748, num749 - 3].type]) && (!Main.tile[num748 - num747, num749 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num748 - num747, num749 - 3].type]))
							{
								float num750 = (float)(num749 * 16);
								if (Main.tile[num748, num749].halfBrick())
								{
									num750 += 8f;
								}
								if (Main.tile[num748, num749 - 1].halfBrick())
								{
									num750 -= 8f;
								}
								if (num750 < position5.Y + (float)this.height)
								{
									float num751 = position5.Y + (float)this.height - num750;
									if ((double)num751 <= 16.1)
									{
										this.gfxOffY += this.position.Y + (float)this.height - num750;
										this.position.Y = num750 - (float)this.height;
										if (num751 < 9f)
										{
											this.stepSpeed = 1f;
										}
										else
										{
											this.stepSpeed = 2f;
										}
									}
								}
							}
						}
						if (this.velocity.Y == 0f)
						{
							int num752 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 2) * this.direction) + this.velocity.X * 5f) / 16f);
							int num753 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
							if (Main.tile[num752, num753] == null)
							{
								Main.tile[num752, num753] = new Tile();
							}
							if (Main.tile[num752, num753 - 1] == null)
							{
								Main.tile[num752, num753 - 1] = new Tile();
							}
							if (Main.tile[num752, num753 - 2] == null)
							{
								Main.tile[num752, num753 - 2] = new Tile();
							}
							if (Main.tile[num752, num753 - 3] == null)
							{
								Main.tile[num752, num753 - 3] = new Tile();
							}
							if (Main.tile[num752, num753 + 1] == null)
							{
								Main.tile[num752, num753 + 1] = new Tile();
							}
							if (Main.tile[num752 + this.direction, num753 - 1] == null)
							{
								Main.tile[num752 + this.direction, num753 - 1] = new Tile();
							}
							if (Main.tile[num752 + this.direction, num753 + 1] == null)
							{
								Main.tile[num752 + this.direction, num753 + 1] = new Tile();
							}
							if (Main.tile[num752 - this.direction, num753 + 1] == null)
							{
								Main.tile[num752 - this.direction, num753 + 1] = new Tile();
							}
							int num754 = this.spriteDirection;
							if (this.type == 423 || this.type == 410)
							{
								num754 *= -1;
							}
							if ((this.velocity.X < 0f && num754 == -1) || (this.velocity.X > 0f && num754 == 1))
							{
								bool flag90 = this.type == 410 || this.type == 423;
								float num755 = 3f;
								if (Main.tile[num752, num753 - 2].nactive() && Main.tileSolid[(int)Main.tile[num752, num753 - 2].type])
								{
									if (Main.tile[num752, num753 - 3].nactive() && Main.tileSolid[(int)Main.tile[num752, num753 - 3].type])
									{
										this.velocity.Y = -8.5f;
										this.netUpdate = true;
									}
									else
									{
										this.velocity.Y = -7.5f;
										this.netUpdate = true;
									}
								}
								else if (Main.tile[num752, num753 - 1].nactive() && !Main.tile[num752, num753 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num752, num753 - 1].type])
								{
									this.velocity.Y = -7f;
									this.netUpdate = true;
								}
								else if (this.position.Y + (float)this.height - (float)(num753 * 16) > 20f && Main.tile[num752, num753].nactive() && !Main.tile[num752, num753].topSlope() && Main.tileSolid[(int)Main.tile[num752, num753].type])
								{
									this.velocity.Y = -6f;
									this.netUpdate = true;
								}
								else if ((this.directionY < 0 || Math.Abs(this.velocity.X) > num755) && (!flag90 || !Main.tile[num752, num753 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num752, num753 + 1].type]) && (!Main.tile[num752, num753 + 2].nactive() || !Main.tileSolid[(int)Main.tile[num752, num753 + 2].type]) && (!Main.tile[num752 + this.direction, num753 + 3].nactive() || !Main.tileSolid[(int)Main.tile[num752 + this.direction, num753 + 3].type]))
								{
									this.velocity.Y = -8f;
									this.netUpdate = true;
								}
							}
						}
						if (this.type == 423 && Math.Abs(this.velocity.X) >= num745 * 0.95f)
						{
							return;
						}
					}
					else if (this.aiStyle == 27)
					{
						if (this.position.X < 160f || this.position.X > (float)((Main.maxTilesX - 10) * 16))
						{
							this.active = false;
						}
						if (this.localAI[0] == 0f)
						{
							this.localAI[0] = 1f;
							Main.wofB = -1;
							Main.wofT = -1;
						}
						this.ai[1] += 1f;
						if (this.ai[2] == 0f)
						{
							if ((double)this.life < (double)this.lifeMax * 0.5)
							{
								this.ai[1] += 1f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.2)
							{
								this.ai[1] += 1f;
							}
							if (this.ai[1] > 2700f)
							{
								this.ai[2] = 1f;
							}
						}
						if (this.ai[2] > 0f && this.ai[1] > 60f)
						{
							int num757 = 3;
							if ((double)this.life < (double)this.lifeMax * 0.3)
							{
								num757++;
							}
							this.ai[2] += 1f;
							this.ai[1] = 0f;
							if (this.ai[2] > (float)num757)
							{
								this.ai[2] = 0f;
							}
							if (Main.netMode != 1)
							{
								int num758 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)(this.height / 2) + 20f), 117, 1, 0f, 0f, 0f, 0f, 255);
								Main.npc[num758].velocity.X = (float)(this.direction * 8);
							}
						}
						this.localAI[3] += 1f;
						if (this.localAI[3] >= (float)(600 + Main.rand.Next(1000)))
						{
							this.localAI[3] = (float)(-(float)Main.rand.Next(200));
						}
						Main.wof = this.whoAmI;
						int num759 = (int)(this.position.X / 16f);
						int num760 = (int)((this.position.X + (float)this.width) / 16f);
						int num761 = (int)((this.position.Y + (float)(this.height / 2)) / 16f);
						int num762 = 0;
						int num763 = num761 + 7;
						while (num762 < 15 && num763 > Main.maxTilesY - 200)
						{
							num763++;
							for (int num764 = num759; num764 <= num760; num764++)
							{
								try
								{
									if (WorldGen.SolidTile(num764, num763) || Main.tile[num764, num763].liquid > 0)
									{
										num762++;
									}
								}
								catch
								{
									num762 += 15;
								}
							}
						}
						num763 += 4;
						if (Main.wofB == -1)
						{
							Main.wofB = num763 * 16;
						}
						else if (Main.wofB > num763 * 16)
						{
							Main.wofB--;
							if (Main.wofB < num763 * 16)
							{
								Main.wofB = num763 * 16;
							}
						}
						else if (Main.wofB < num763 * 16)
						{
							Main.wofB++;
							if (Main.wofB > num763 * 16)
							{
								Main.wofB = num763 * 16;
							}
						}
						num762 = 0;
						num763 = num761 - 7;
						while (num762 < 15 && num763 < Main.maxTilesY - 10)
						{
							num763--;
							for (int num765 = num759; num765 <= num760; num765++)
							{
								try
								{
									if (WorldGen.SolidTile(num765, num763) || Main.tile[num765, num763].liquid > 0)
									{
										num762++;
									}
								}
								catch
								{
									num762 += 15;
								}
							}
						}
						num763 -= 4;
						if (Main.wofT == -1)
						{
							Main.wofT = num763 * 16;
						}
						else if (Main.wofT > num763 * 16)
						{
							Main.wofT--;
							if (Main.wofT < num763 * 16)
							{
								Main.wofT = num763 * 16;
							}
						}
						else if (Main.wofT < num763 * 16)
						{
							Main.wofT++;
							if (Main.wofT > num763 * 16)
							{
								Main.wofT = num763 * 16;
							}
						}
						float num766 = (float)((Main.wofB + Main.wofT) / 2 - this.height / 2);
						if (this.position.Y > num766 + 1f)
						{
							this.velocity.Y = -1f;
						}
						else if (this.position.Y < num766 - 1f)
						{
							this.velocity.Y = 1f;
						}
						this.velocity.Y = 0f;
						this.position.Y = num766;
						float num767 = 1.5f;
						if ((double)this.life < (double)this.lifeMax * 0.75)
						{
							num767 += 0.25f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.5)
						{
							num767 += 0.4f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.25)
						{
							num767 += 0.5f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.1)
						{
							num767 += 0.6f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.66 && Main.expertMode)
						{
							num767 += 0.3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.33 && Main.expertMode)
						{
							num767 += 0.3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.05 && Main.expertMode)
						{
							num767 += 0.6f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.035 && Main.expertMode)
						{
							num767 += 0.6f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.025 && Main.expertMode)
						{
							num767 += 0.6f;
						}
						if (Main.expertMode)
						{
							num767 *= 1.35f;
							num767 += 0.35f;
						}
						if (this.velocity.X == 0f)
						{
							this.TargetClosest(true);
							this.velocity.X = (float)this.direction;
						}
						if (this.velocity.X < 0f)
						{
							this.velocity.X = -num767;
							this.direction = -1;
						}
						else
						{
							this.velocity.X = num767;
							this.direction = 1;
						}
						this.spriteDirection = this.direction;
						Vector2 vector77 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num768 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector77.X;
						float num769 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector77.Y;
						float num770 = (float)Math.Sqrt((double)(num768 * num768 + num769 * num769));
						num768 *= num770;
						num769 *= num770;
						if (this.direction > 0)
						{
							if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
							{
								this.rotation = (float)Math.Atan2((double)(-(double)num769), (double)(-(double)num768)) + 3.14f;
							}
							else
							{
								this.rotation = 0f;
							}
						}
						else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.rotation = (float)Math.Atan2((double)num769, (double)num768) + 3.14f;
						}
						else
						{
							this.rotation = 0f;
						}
						if (Main.expertMode && Main.netMode != 1)
						{
							int num771 = (int)(1f + (float)this.life / (float)this.lifeMax * 10f);
							num771 *= num771;
							if (num771 < 400)
							{
								num771 = (num771 * 19 + 400) / 20;
							}
							if (num771 < 60)
							{
								num771 = (num771 * 3 + 60) / 4;
							}
							if (num771 < 20)
							{
								num771 = (num771 + 20) / 2;
							}
							num771 = (int)((double)num771 * 0.7);
							if (Main.rand.Next(num771) == 0)
							{
								int num772 = 0;
								float[] array2 = new float[10];
								for (int num773 = 0; num773 < 200; num773++)
								{
									if (num772 < 10 && Main.npc[num773].active && Main.npc[num773].type == 115)
									{
										array2[num772] = Main.npc[num773].ai[0];
										num772++;
									}
								}
								int maxValue7 = 1 + num772 * 2;
								if (num772 < 10 && Main.rand.Next(maxValue7) <= 1)
								{
									int num774 = -1;
									for (int num775 = 0; num775 < 1000; num775++)
									{
										int num776 = Main.rand.Next(10);
										float num777 = (float)num776 * 0.1f - 0.05f;
										bool flag91 = true;
										for (int num778 = 0; num778 < num772; num778++)
										{
											if (num777 == array2[num778])
											{
												flag91 = false;
												break;
											}
										}
										if (flag91)
										{
											num774 = num776;
											break;
										}
									}
									if (num774 >= 0)
									{
										int num779 = NPC.NewNPC((int)this.position.X, (int)num766, 115, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num779].ai[0] = (float)num774 * 0.1f - 0.05f;
									}
								}
							}
						}
						if (this.localAI[0] == 1f && Main.netMode != 1)
						{
							this.localAI[0] = 2f;
							num766 = (float)((Main.wofB + Main.wofT) / 2);
							num766 = (num766 + (float)Main.wofT) / 2f;
							int num780 = NPC.NewNPC((int)this.position.X, (int)num766, 114, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num780].ai[0] = 1f;
							num766 = (float)((Main.wofB + Main.wofT) / 2);
							num766 = (num766 + (float)Main.wofB) / 2f;
							num780 = NPC.NewNPC((int)this.position.X, (int)num766, 114, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num780].ai[0] = -1f;
							num766 = (float)((Main.wofB + Main.wofT) / 2);
							num766 = (num766 + (float)Main.wofB) / 2f;
							for (int num781 = 0; num781 < 11; num781++)
							{
								num780 = NPC.NewNPC((int)this.position.X, (int)num766, 115, this.whoAmI, 0f, 0f, 0f, 0f, 255);
								Main.npc[num780].ai[0] = (float)num781 * 0.1f - 0.05f;
							}
							return;
						}
					}
					else if (this.aiStyle == 28)
					{
						if (Main.wof < 0)
						{
							this.active = false;
							return;
						}
						this.realLife = Main.wof;
						if (Main.npc[Main.wof].life > 0)
						{
							this.life = Main.npc[Main.wof].life;
						}
						this.TargetClosest(true);
						this.position.X = Main.npc[Main.wof].position.X;
						this.direction = Main.npc[Main.wof].direction;
						this.spriteDirection = this.direction;
						float num782 = (float)((Main.wofB + Main.wofT) / 2);
						if (this.ai[0] > 0f)
						{
							num782 = (num782 + (float)Main.wofT) / 2f;
						}
						else
						{
							num782 = (num782 + (float)Main.wofB) / 2f;
						}
						num782 -= (float)(this.height / 2);
						if (this.position.Y > num782 + 1f)
						{
							this.velocity.Y = -1f;
						}
						else if (this.position.Y < num782 - 1f)
						{
							this.velocity.Y = 1f;
						}
						else
						{
							this.velocity.Y = 0f;
							this.position.Y = num782;
						}
						if (this.velocity.Y > 5f)
						{
							this.velocity.Y = 5f;
						}
						if (this.velocity.Y < -5f)
						{
							this.velocity.Y = -5f;
						}
						Vector2 vector78 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num783 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector78.X;
						float num784 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector78.Y;
						float num785 = (float)Math.Sqrt((double)(num783 * num783 + num784 * num784));
						num783 *= num785;
						num784 *= num785;
						bool flag92 = true;
						if (this.direction > 0)
						{
							if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
							{
								this.rotation = (float)Math.Atan2((double)(-(double)num784), (double)(-(double)num783)) + 3.14f;
							}
							else
							{
								this.rotation = 0f;
								flag92 = false;
							}
						}
						else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.rotation = (float)Math.Atan2((double)num784, (double)num783) + 3.14f;
						}
						else
						{
							this.rotation = 0f;
							flag92 = false;
						}
						if (Main.netMode != 1)
						{
							int num786 = 4;
							this.localAI[1] += 1f;
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
							{
								this.localAI[1] += 1f;
								num786++;
							}
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
							{
								this.localAI[1] += 1f;
								num786++;
							}
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
							{
								this.localAI[1] += 1f;
								num786 += 2;
							}
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
							{
								this.localAI[1] += 2f;
								num786 += 3;
							}
							if (Main.expertMode)
							{
								this.localAI[1] += 0.5f;
								num786++;
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
								{
									this.localAI[1] += 2f;
									num786 += 3;
								}
							}
							if (this.localAI[2] == 0f)
							{
								if (this.localAI[1] > 600f)
								{
									this.localAI[2] = 1f;
									this.localAI[1] = 0f;
									return;
								}
							}
							else if (this.localAI[1] > 45f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								this.localAI[1] = 0f;
								this.localAI[2] += 1f;
								if (this.localAI[2] >= (float)num786)
								{
									this.localAI[2] = 0f;
								}
								if (flag92)
								{
									float num787 = 9f;
									int num788 = 11;
									int num789 = 83;
									if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
									{
										num788++;
										num787 += 1f;
									}
									if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
									{
										num788++;
										num787 += 1f;
									}
									if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
									{
										num788 += 2;
										num787 += 2f;
									}
									vector78 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num783 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector78.X;
									num784 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector78.Y;
									num785 = (float)Math.Sqrt((double)(num783 * num783 + num784 * num784));
									num785 = num787 / num785;
									num783 *= num785;
									num784 *= num785;
									vector78.X += num783;
									vector78.Y += num784;
									Projectile.NewProjectile(vector78.X, vector78.Y, num783, num784, num789, num788, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 29)
					{
						if (this.justHit)
						{
							this.ai[1] = 10f;
						}
						if (Main.wof < 0)
						{
							this.active = false;
							return;
						}
						this.TargetClosest(true);
						float num790 = 0.1f;
						float num791 = 300f;
						if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
						{
							this.damage = (int)(75f * Main.damageMultiplier);
							this.defense = 40;
							if (!Main.expertMode)
							{
								num791 = 900f;
							}
							else
							{
								num790 += 0.1f;
							}
						}
						else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
						{
							this.damage = (int)(60f * Main.damageMultiplier);
							this.defense = 30;
							if (!Main.expertMode)
							{
								num791 = 700f;
							}
							else
							{
								num790 += 0.066f;
							}
						}
						else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
						{
							this.damage = (int)(45f * Main.damageMultiplier);
							this.defense = 20;
							if (!Main.expertMode)
							{
								num791 = 500f;
							}
							else
							{
								num790 += 0.033f;
							}
						}
						if (Main.expertMode)
						{
							this.defense = this.defDefense;
							if (this.whoAmI % 4 == 0)
							{
								num791 *= 1.75f;
							}
							if (this.whoAmI % 4 == 1)
							{
								num791 *= 1.5f;
							}
							if (this.whoAmI % 4 == 2)
							{
								num791 *= 1.25f;
							}
							if (this.whoAmI % 3 == 0)
							{
								num791 *= 1.5f;
							}
							if (this.whoAmI % 3 == 1)
							{
								num791 *= 1.25f;
							}
							num791 *= 0.75f;
						}
						float num792 = Main.npc[Main.wof].position.X + (float)(Main.npc[Main.wof].width / 2);
						float num793 = Main.npc[Main.wof].position.Y;
						float num794 = (float)(Main.wofB - Main.wofT);
						num793 = (float)Main.wofT + num794 * this.ai[0];
						this.ai[2] += 1f;
						if (this.ai[2] > 100f)
						{
							num791 = (float)((int)(num791 * 1.3f));
							if (this.ai[2] > 200f)
							{
								this.ai[2] = 0f;
							}
						}
						Vector2 vector79 = new Vector2(num792, num793);
						float num795 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector79.X;
						float num796 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector79.Y;
						float num797 = (float)Math.Sqrt((double)(num795 * num795 + num796 * num796));
						if (this.ai[1] == 0f)
						{
							if (num797 > num791)
							{
								num797 = num791 / num797;
								num795 *= num797;
								num796 *= num797;
							}
							if (this.position.X < num792 + num795)
							{
								this.velocity.X = this.velocity.X + num790;
								if (this.velocity.X < 0f && num795 > 0f)
								{
									this.velocity.X = this.velocity.X + num790 * 2.5f;
								}
							}
							else if (this.position.X > num792 + num795)
							{
								this.velocity.X = this.velocity.X - num790;
								if (this.velocity.X > 0f && num795 < 0f)
								{
									this.velocity.X = this.velocity.X - num790 * 2.5f;
								}
							}
							if (this.position.Y < num793 + num796)
							{
								this.velocity.Y = this.velocity.Y + num790;
								if (this.velocity.Y < 0f && num796 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num790 * 2.5f;
								}
							}
							else if (this.position.Y > num793 + num796)
							{
								this.velocity.Y = this.velocity.Y - num790;
								if (this.velocity.Y > 0f && num796 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num790 * 2.5f;
								}
							}
							float num798 = 4f;
							if (Main.expertMode && Main.wof >= 0)
							{
								float num799 = 1.5f;
								float num800 = (float)(Main.npc[Main.wof].life / Main.npc[Main.wof].lifeMax);
								if ((double)num800 < 0.75)
								{
									num799 += 0.7f;
								}
								if ((double)num800 < 0.5)
								{
									num799 += 0.7f;
								}
								if ((double)num800 < 0.25)
								{
									num799 += 0.9f;
								}
								if ((double)num800 < 0.1)
								{
									num799 += 0.9f;
								}
								num799 *= 1.25f;
								num799 += 0.3f;
								num798 += num799 * 0.35f;
								if (base.Center.X < Main.npc[Main.wof].Center.X && Main.npc[Main.wof].velocity.X > 0f)
								{
									num798 += 6f;
								}
								if (base.Center.X > Main.npc[Main.wof].Center.X && Main.npc[Main.wof].velocity.X < 0f)
								{
									num798 += 6f;
								}
							}
							if (this.velocity.X > num798)
							{
								this.velocity.X = num798;
							}
							if (this.velocity.X < -num798)
							{
								this.velocity.X = -num798;
							}
							if (this.velocity.Y > num798)
							{
								this.velocity.Y = num798;
							}
							if (this.velocity.Y < -num798)
							{
								this.velocity.Y = -num798;
							}
						}
						else if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						else
						{
							this.ai[1] = 0f;
						}
						if (num795 > 0f)
						{
							this.spriteDirection = 1;
							this.rotation = (float)Math.Atan2((double)num796, (double)num795);
						}
						if (num795 < 0f)
						{
							this.spriteDirection = -1;
							this.rotation = (float)Math.Atan2((double)num796, (double)num795) + 3.14f;
						}
						return;
					}
					else if (this.aiStyle == 30)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						bool dead2 = Main.player[this.target].dead;
						float num801 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
						float num802 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
						float num803 = (float)Math.Atan2((double)num802, (double)num801) + 1.57f;
						if (num803 < 0f)
						{
							num803 += 6.283f;
						}
						else if ((double)num803 > 6.283)
						{
							num803 -= 6.283f;
						}
						float num804 = 0.1f;
						if (this.rotation < num803)
						{
							if ((double)(num803 - this.rotation) > 3.1415)
							{
								this.rotation -= num804;
							}
							else
							{
								this.rotation += num804;
							}
						}
						else if (this.rotation > num803)
						{
							if ((double)(this.rotation - num803) > 3.1415)
							{
								this.rotation += num804;
							}
							else
							{
								this.rotation -= num804;
							}
						}
						if (this.rotation > num803 - num804 && this.rotation < num803 + num804)
						{
							this.rotation = num803;
						}
						if (this.rotation < 0f)
						{
							this.rotation += 6.283f;
						}
						else if ((double)this.rotation > 6.283)
						{
							this.rotation -= 6.283f;
						}
						if (this.rotation > num803 - num804 && this.rotation < num803 + num804)
						{
							this.rotation = num803;
						}
						if (Main.netMode != 1 && !Main.dayTime && !dead2 && this.timeLeft < 10)
						{
							for (int num806 = 0; num806 < 200; num806++)
							{
								if (num806 != this.whoAmI && Main.npc[num806].active && (Main.npc[num806].type == 125 || Main.npc[num806].type == 126) && Main.npc[num806].timeLeft - 1 > this.timeLeft)
								{
									this.timeLeft = Main.npc[num806].timeLeft - 1;
								}
							}
						}
						if (Main.dayTime || dead2)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							if (this.ai[1] == 0f)
							{
								float num807 = 7f;
								float num808 = 0.1f;
								if (Main.expertMode)
								{
									num807 = 8.25f;
									num808 = 0.115f;
								}
								int num809 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num809 = -1;
								}
								Vector2 vector80 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num810 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num809 * 300) - vector80.X;
								float num811 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector80.Y;
								float num812 = (float)Math.Sqrt((double)(num810 * num810 + num811 * num811));
								float num813 = num812;
								num812 = num807 / num812;
								num810 *= num812;
								num811 *= num812;
								if (this.velocity.X < num810)
								{
									this.velocity.X = this.velocity.X + num808;
									if (this.velocity.X < 0f && num810 > 0f)
									{
										this.velocity.X = this.velocity.X + num808;
									}
								}
								else if (this.velocity.X > num810)
								{
									this.velocity.X = this.velocity.X - num808;
									if (this.velocity.X > 0f && num810 < 0f)
									{
										this.velocity.X = this.velocity.X - num808;
									}
								}
								if (this.velocity.Y < num811)
								{
									this.velocity.Y = this.velocity.Y + num808;
									if (this.velocity.Y < 0f && num811 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num808;
									}
								}
								else if (this.velocity.Y > num811)
								{
									this.velocity.Y = this.velocity.Y - num808;
									if (this.velocity.Y > 0f && num811 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num808;
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 600f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
								else if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && num813 < 400f)
								{
									if (!Main.player[this.target].dead)
									{
										this.ai[3] += 1f;
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.9)
										{
											this.ai[3] += 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.8)
										{
											this.ai[3] += 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.7)
										{
											this.ai[3] += 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.6)
										{
											this.ai[3] += 0.3f;
										}
									}
									if (this.ai[3] >= 60f)
									{
										this.ai[3] = 0f;
										vector80 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num810 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector80.X;
										num811 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector80.Y;
										if (Main.netMode != 1)
										{
											float num814 = 9f;
											int num815 = 20;
											int num816 = 83;
											if (Main.expertMode)
											{
												num814 = 10.5f;
												num815 = 19;
											}
											num812 = (float)Math.Sqrt((double)(num810 * num810 + num811 * num811));
											num812 = num814 / num812;
											num810 *= num812;
											num811 *= num812;
											num810 += (float)Main.rand.Next(-40, 41) * 0.08f;
											num811 += (float)Main.rand.Next(-40, 41) * 0.08f;
											vector80.X += num810 * 15f;
											vector80.Y += num811 * 15f;
											Projectile.NewProjectile(vector80.X, vector80.Y, num810, num811, num816, num815, 0f, Main.myPlayer, 0f, 0f);
										}
									}
								}
							}
							else if (this.ai[1] == 1f)
							{
								this.rotation = num803;
								float num817 = 12f;
								if (Main.expertMode)
								{
									num817 = 15f;
								}
								Vector2 vector81 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num818 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector81.X;
								float num819 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector81.Y;
								float num820 = (float)Math.Sqrt((double)(num818 * num818 + num819 * num819));
								num820 = num817 / num820;
								this.velocity.X = num818 * num820;
								this.velocity.Y = num819 * num820;
								this.ai[1] = 2f;
							}
							else if (this.ai[1] == 2f)
							{
								this.ai[2] += 1f;
								if (this.ai[2] >= 25f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
									this.velocity.Y = this.velocity.Y * 0.96f;
									if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
									{
										this.velocity.X = 0f;
									}
									if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
									{
										this.velocity.Y = 0f;
									}
								}
								else
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
								}
								if (this.ai[2] >= 70f)
								{
									this.ai[3] += 1f;
									this.ai[2] = 0f;
									this.target = 255;
									this.rotation = num803;
									if (this.ai[3] >= 4f)
									{
										this.ai[1] = 0f;
										this.ai[3] = 0f;
									}
									else
									{
										this.ai[1] = 1f;
									}
								}
							}
							if ((double)this.life < (double)this.lifeMax * 0.4)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 1f || this.ai[0] == 2f)
						{
							if (this.ai[0] == 1f)
							{
								this.ai[2] += 0.005f;
								if ((double)this.ai[2] > 0.5)
								{
									this.ai[2] = 0.5f;
								}
							}
							else
							{
								this.ai[2] -= 0.005f;
								if (this.ai[2] < 0f)
								{
									this.ai[2] = 0f;
								}
							}
							this.rotation += this.ai[2];
							this.ai[1] += 1f;
							if (this.ai[1] == 100f)
							{
								this.ai[0] += 1f;
								this.ai[1] = 0f;
								if (this.ai[0] == 3f)
								{
									this.ai[2] = 0f;
								}
							}
							this.velocity.X *= 0.98f;
							this.velocity.Y *= 0.98f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
								return;
							}
						}
						else
						{
							this.damage = (int)((double)this.defDamage * 1.5);
							this.defense = this.defDefense + 10;
							this.soundHit = 4;
							if (this.ai[1] == 0f)
							{
								float num823 = 8f;
								float num824 = 0.15f;
								if (Main.expertMode)
								{
									num823 = 9.5f;
									num824 = 0.175f;
								}
								Vector2 vector82 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num825 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector82.X;
								float num826 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector82.Y;
								float num827 = (float)Math.Sqrt((double)(num825 * num825 + num826 * num826));
								num827 = num823 / num827;
								num825 *= num827;
								num826 *= num827;
								if (this.velocity.X < num825)
								{
									this.velocity.X = this.velocity.X + num824;
									if (this.velocity.X < 0f && num825 > 0f)
									{
										this.velocity.X = this.velocity.X + num824;
									}
								}
								else if (this.velocity.X > num825)
								{
									this.velocity.X = this.velocity.X - num824;
									if (this.velocity.X > 0f && num825 < 0f)
									{
										this.velocity.X = this.velocity.X - num824;
									}
								}
								if (this.velocity.Y < num826)
								{
									this.velocity.Y = this.velocity.Y + num824;
									if (this.velocity.Y < 0f && num826 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num824;
									}
								}
								else if (this.velocity.Y > num826)
								{
									this.velocity.Y = this.velocity.Y - num824;
									if (this.velocity.Y > 0f && num826 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num824;
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 300f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.TargetClosest(true);
									this.netUpdate = true;
								}
								vector82 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num825 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector82.X;
								num826 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector82.Y;
								this.rotation = (float)Math.Atan2((double)num826, (double)num825) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] += 2f;
									}
									if (this.localAI[1] > 180f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										float num828 = 8.5f;
										int num829 = 25;
										int num830 = 100;
										if (Main.expertMode)
										{
											num828 = 10f;
											num829 = 23;
										}
										num827 = (float)Math.Sqrt((double)(num825 * num825 + num826 * num826));
										num827 = num828 / num827;
										num825 *= num827;
										num826 *= num827;
										vector82.X += num825 * 15f;
										vector82.Y += num826 * 15f;
										Projectile.NewProjectile(vector82.X, vector82.Y, num825, num826, num830, num829, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
							else
							{
								int num831 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num831 = -1;
								}
								float num832 = 8f;
								float num833 = 0.2f;
								if (Main.expertMode)
								{
									num832 = 9.5f;
									num833 = 0.25f;
								}
								Vector2 vector83 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num834 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num831 * 340) - vector83.X;
								float num835 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector83.Y;
								float num836 = (float)Math.Sqrt((double)(num834 * num834 + num835 * num835));
								num836 = num832 / num836;
								num834 *= num836;
								num835 *= num836;
								if (this.velocity.X < num834)
								{
									this.velocity.X = this.velocity.X + num833;
									if (this.velocity.X < 0f && num834 > 0f)
									{
										this.velocity.X = this.velocity.X + num833;
									}
								}
								else if (this.velocity.X > num834)
								{
									this.velocity.X = this.velocity.X - num833;
									if (this.velocity.X > 0f && num834 < 0f)
									{
										this.velocity.X = this.velocity.X - num833;
									}
								}
								if (this.velocity.Y < num835)
								{
									this.velocity.Y = this.velocity.Y + num833;
									if (this.velocity.Y < 0f && num835 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num833;
									}
								}
								else if (this.velocity.Y > num835)
								{
									this.velocity.Y = this.velocity.Y - num833;
									if (this.velocity.Y > 0f && num835 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num833;
									}
								}
								vector83 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num834 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector83.X;
								num835 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector83.Y;
								this.rotation = (float)Math.Atan2((double)num835, (double)num834) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										this.localAI[1] += 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										this.localAI[1] += 0.75f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] += 1.5f;
									}
									if (Main.expertMode)
									{
										this.localAI[1] += 1.5f;
									}
									if (this.localAI[1] > 60f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										float num837 = 9f;
										int num838 = 18;
										int num839 = 100;
										if (Main.expertMode)
										{
											num838 = 17;
										}
										num836 = (float)Math.Sqrt((double)(num834 * num834 + num835 * num835));
										num836 = num837 / num836;
										num834 *= num836;
										num835 *= num836;
										vector83.X += num834 * 15f;
										vector83.Y += num835 * 15f;
										Projectile.NewProjectile(vector83.X, vector83.Y, num834, num835, num839, num838, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 180f)
								{
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.TargetClosest(true);
									this.netUpdate = true;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 31)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						bool dead3 = Main.player[this.target].dead;
						float num840 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
						float num841 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
						float num842 = (float)Math.Atan2((double)num841, (double)num840) + 1.57f;
						if (num842 < 0f)
						{
							num842 += 6.283f;
						}
						else if ((double)num842 > 6.283)
						{
							num842 -= 6.283f;
						}
						float num843 = 0.15f;
						if (this.rotation < num842)
						{
							if ((double)(num842 - this.rotation) > 3.1415)
							{
								this.rotation -= num843;
							}
							else
							{
								this.rotation += num843;
							}
						}
						else if (this.rotation > num842)
						{
							if ((double)(this.rotation - num842) > 3.1415)
							{
								this.rotation += num843;
							}
							else
							{
								this.rotation -= num843;
							}
						}
						if (this.rotation > num842 - num843 && this.rotation < num842 + num843)
						{
							this.rotation = num842;
						}
						if (this.rotation < 0f)
						{
							this.rotation += 6.283f;
						}
						else if ((double)this.rotation > 6.283)
						{
							this.rotation -= 6.283f;
						}
						if (this.rotation > num842 - num843 && this.rotation < num842 + num843)
						{
							this.rotation = num842;
						}
						if (Main.netMode != 1 && !Main.dayTime && !dead3 && this.timeLeft < 10)
						{
							for (int num845 = 0; num845 < 200; num845++)
							{
								if (num845 != this.whoAmI && Main.npc[num845].active && (Main.npc[num845].type == 125 || Main.npc[num845].type == 126) && Main.npc[num845].timeLeft - 1 > this.timeLeft)
								{
									this.timeLeft = Main.npc[num845].timeLeft - 1;
								}
							}
						}
						if (Main.dayTime || dead3)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							if (this.ai[1] == 0f)
							{
								this.TargetClosest(true);
								float num846 = 12f;
								float num847 = 0.4f;
								int num848 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num848 = -1;
								}
								Vector2 vector84 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num849 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num848 * 400) - vector84.X;
								float num850 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector84.Y;
								float num851 = (float)Math.Sqrt((double)(num849 * num849 + num850 * num850));
								num851 = num846 / num851;
								num849 *= num851;
								num850 *= num851;
								if (this.velocity.X < num849)
								{
									this.velocity.X = this.velocity.X + num847;
									if (this.velocity.X < 0f && num849 > 0f)
									{
										this.velocity.X = this.velocity.X + num847;
									}
								}
								else if (this.velocity.X > num849)
								{
									this.velocity.X = this.velocity.X - num847;
									if (this.velocity.X > 0f && num849 < 0f)
									{
										this.velocity.X = this.velocity.X - num847;
									}
								}
								if (this.velocity.Y < num850)
								{
									this.velocity.Y = this.velocity.Y + num847;
									if (this.velocity.Y < 0f && num850 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num847;
									}
								}
								else if (this.velocity.Y > num850)
								{
									this.velocity.Y = this.velocity.Y - num847;
									if (this.velocity.Y > 0f && num850 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num847;
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 600f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
								else
								{
									if (!Main.player[this.target].dead)
									{
										this.ai[3] += 1f;
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.8)
										{
											this.ai[3] += 0.6f;
										}
									}
									if (this.ai[3] >= 60f)
									{
										this.ai[3] = 0f;
										vector84 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num849 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector84.X;
										num850 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector84.Y;
										if (Main.netMode != 1)
										{
											float num852 = 12f;
											int num853 = 25;
											int num854 = 96;
											if (Main.expertMode)
											{
												num852 = 14f;
												num853 = 22;
											}
											num851 = (float)Math.Sqrt((double)(num849 * num849 + num850 * num850));
											num851 = num852 / num851;
											num849 *= num851;
											num850 *= num851;
											num849 += (float)Main.rand.Next(-40, 41) * 0.05f;
											num850 += (float)Main.rand.Next(-40, 41) * 0.05f;
											vector84.X += num849 * 4f;
											vector84.Y += num850 * 4f;
											Projectile.NewProjectile(vector84.X, vector84.Y, num849, num850, num854, num853, 0f, Main.myPlayer, 0f, 0f);
										}
									}
								}
							}
							else if (this.ai[1] == 1f)
							{
								this.rotation = num842;
								float num855 = 13f;
								if (Main.expertMode)
								{
									if ((double)this.life < (double)this.lifeMax * 0.9)
									{
										num855 += 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.8)
									{
										num855 += 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.7)
									{
										num855 += 0.55f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.6)
									{
										num855 += 0.6f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num855 += 0.65f;
									}
								}
								Vector2 vector85 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num856 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector85.X;
								float num857 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector85.Y;
								float num858 = (float)Math.Sqrt((double)(num856 * num856 + num857 * num857));
								num858 = num855 / num858;
								this.velocity.X = num856 * num858;
								this.velocity.Y = num857 * num858;
								this.ai[1] = 2f;
							}
							else if (this.ai[1] == 2f)
							{
								this.ai[2] += 1f;
								if (this.ai[2] >= 8f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.velocity.Y = this.velocity.Y * 0.9f;
									if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
									{
										this.velocity.X = 0f;
									}
									if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
									{
										this.velocity.Y = 0f;
									}
								}
								else
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
								}
								if (this.ai[2] >= 42f)
								{
									this.ai[3] += 1f;
									this.ai[2] = 0f;
									this.target = 255;
									this.rotation = num842;
									if (this.ai[3] >= 10f)
									{
										this.ai[1] = 0f;
										this.ai[3] = 0f;
									}
									else
									{
										this.ai[1] = 1f;
									}
								}
							}
							if ((double)this.life < (double)this.lifeMax * 0.4)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 1f || this.ai[0] == 2f)
						{
							if (this.ai[0] == 1f)
							{
								this.ai[2] += 0.005f;
								if ((double)this.ai[2] > 0.5)
								{
									this.ai[2] = 0.5f;
								}
							}
							else
							{
								this.ai[2] -= 0.005f;
								if (this.ai[2] < 0f)
								{
									this.ai[2] = 0f;
								}
							}
							this.rotation += this.ai[2];
							this.ai[1] += 1f;
							if (this.ai[1] == 100f)
							{
								this.ai[0] += 1f;
								this.ai[1] = 0f;
								if (this.ai[0] == 3f)
								{
									this.ai[2] = 0f;
								}
							}
							this.velocity.X = this.velocity.X * 0.98f;
							this.velocity.Y = this.velocity.Y * 0.98f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
								return;
							}
						}
						else
						{
							this.soundHit = 4;
							this.damage = (int)((double)this.defDamage * 1.5);
							this.defense = this.defDefense + 18;
							if (this.ai[1] == 0f)
							{
								float num861 = 4f;
								float num862 = 0.1f;
								int num863 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num863 = -1;
								}
								Vector2 vector86 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num864 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num863 * 180) - vector86.X;
								float num865 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector86.Y;
								float num866 = (float)Math.Sqrt((double)(num864 * num864 + num865 * num865));
								if (Main.expertMode)
								{
									if (num866 > 300f)
									{
										num861 += 0.5f;
									}
									if (num866 > 400f)
									{
										num861 += 0.5f;
									}
									if (num866 > 500f)
									{
										num861 += 0.55f;
									}
									if (num866 > 600f)
									{
										num861 += 0.55f;
									}
									if (num866 > 700f)
									{
										num861 += 0.6f;
									}
									if (num866 > 800f)
									{
										num861 += 0.6f;
									}
								}
								num866 = num861 / num866;
								num864 *= num866;
								num865 *= num866;
								if (this.velocity.X < num864)
								{
									this.velocity.X = this.velocity.X + num862;
									if (this.velocity.X < 0f && num864 > 0f)
									{
										this.velocity.X = this.velocity.X + num862;
									}
								}
								else if (this.velocity.X > num864)
								{
									this.velocity.X = this.velocity.X - num862;
									if (this.velocity.X > 0f && num864 < 0f)
									{
										this.velocity.X = this.velocity.X - num862;
									}
								}
								if (this.velocity.Y < num865)
								{
									this.velocity.Y = this.velocity.Y + num862;
									if (this.velocity.Y < 0f && num865 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num862;
									}
								}
								else if (this.velocity.Y > num865)
								{
									this.velocity.Y = this.velocity.Y - num862;
									if (this.velocity.Y > 0f && num865 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num862;
									}
								}
								this.ai[2] += 1f;
								if (this.ai[2] >= 400f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.localAI[2] += 1f;
									if (this.localAI[2] > 22f)
									{
										this.localAI[2] = 0f;
									}
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											this.localAI[1] += 2f;
										}
										if (this.localAI[1] > 8f)
										{
											this.localAI[1] = 0f;
											float num867 = 6f;
											int num868 = 30;
											if (Main.expertMode)
											{
												num868 = 27;
											}
											int num869 = 101;
											vector86 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num864 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector86.X;
											num865 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector86.Y;
											num866 = (float)Math.Sqrt((double)(num864 * num864 + num865 * num865));
											num866 = num867 / num866;
											num864 *= num866;
											num865 *= num866;
											num865 += (float)Main.rand.Next(-40, 41) * 0.01f;
											num864 += (float)Main.rand.Next(-40, 41) * 0.01f;
											num865 += this.velocity.Y * 0.5f;
											num864 += this.velocity.X * 0.5f;
											vector86.X -= num864 * 1f;
											vector86.Y -= num865 * 1f;
											Projectile.NewProjectile(vector86.X, vector86.Y, num864, num865, num869, num868, 0f, Main.myPlayer, 0f, 0f);
											return;
										}
									}
								}
							}
							else
							{
								if (this.ai[1] == 1f)
								{
									this.rotation = num842;
									float num870 = 14f;
									if (Main.expertMode)
									{
										num870 += 2.5f;
									}
									Vector2 vector87 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num871 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector87.X;
									float num872 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector87.Y;
									float num873 = (float)Math.Sqrt((double)(num871 * num871 + num872 * num872));
									num873 = num870 / num873;
									this.velocity.X = num871 * num873;
									this.velocity.Y = num872 * num873;
									this.ai[1] = 2f;
									return;
								}
								if (this.ai[1] == 2f)
								{
									this.ai[2] += 1f;
									if (Main.expertMode)
									{
										this.ai[2] += 0.5f;
									}
									if (this.ai[2] >= 50f)
									{
										this.velocity.X = this.velocity.X * 0.93f;
										this.velocity.Y = this.velocity.Y * 0.93f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = 0f;
										}
									}
									else
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									}
									if (this.ai[2] >= 80f)
									{
										this.ai[3] += 1f;
										this.ai[2] = 0f;
										this.target = 255;
										this.rotation = num842;
										if (this.ai[3] >= 6f)
										{
											this.ai[1] = 0f;
											this.ai[3] = 0f;
											return;
										}
										this.ai[1] = 1f;
										return;
									}
								}
							}
						}
					}
					else if (this.aiStyle == 32)
					{
						this.damage = this.defDamage;
						this.defense = this.defDefense;
						if (this.ai[0] == 0f && Main.netMode != 1)
						{
							this.TargetClosest(true);
							this.ai[0] = 1f;
							int num874 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 128, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num874].ai[0] = -1f;
							Main.npc[num874].ai[1] = (float)this.whoAmI;
							Main.npc[num874].target = this.target;
							Main.npc[num874].netUpdate = true;
							num874 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 129, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num874].ai[0] = 1f;
							Main.npc[num874].ai[1] = (float)this.whoAmI;
							Main.npc[num874].target = this.target;
							Main.npc[num874].netUpdate = true;
							num874 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 130, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num874].ai[0] = -1f;
							Main.npc[num874].ai[1] = (float)this.whoAmI;
							Main.npc[num874].target = this.target;
							Main.npc[num874].ai[3] = 150f;
							Main.npc[num874].netUpdate = true;
							num874 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 131, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num874].ai[0] = 1f;
							Main.npc[num874].ai[1] = (float)this.whoAmI;
							Main.npc[num874].target = this.target;
							Main.npc[num874].netUpdate = true;
							Main.npc[num874].ai[3] = 150f;
						}
						if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
						{
							this.TargetClosest(true);
							if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
							{
								this.ai[1] = 3f;
							}
						}
						if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
						{
							this.ai[1] = 2f;
						}
						if (this.ai[1] == 0f)
						{
							this.ai[2] += 1f;
							if (this.ai[2] >= 600f)
							{
								this.ai[2] = 0f;
								this.ai[1] = 1f;
								this.TargetClosest(true);
								this.netUpdate = true;
							}
							this.rotation = this.velocity.X / 15f;
							if (this.position.Y > Main.player[this.target].position.Y - 200f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.98f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 2f)
								{
									this.velocity.Y = 2f;
								}
							}
							else if (this.position.Y < Main.player[this.target].position.Y - 500f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.98f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -2f)
								{
									this.velocity.Y = -2f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + 100f)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
									return;
								}
							}
						}
						else
						{
							if (this.ai[1] == 1f)
							{
								this.defense *= 2;
								this.damage *= 2;
								this.ai[2] += 1f;
								if (this.ai[2] >= 400f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
								this.rotation += (float)this.direction * 0.3f;
								Vector2 vector88 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num875 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector88.X;
								float num876 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector88.Y;
								float num877 = (float)Math.Sqrt((double)(num875 * num875 + num876 * num876));
								num877 = 2f / num877;
								this.velocity.X = num875 * num877;
								this.velocity.Y = num876 * num877;
								return;
							}
							if (this.ai[1] == 2f)
							{
								this.damage = 1000;
								this.defense = 9999;
								this.rotation += (float)this.direction * 0.3f;
								Vector2 vector89 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num878 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector89.X;
								float num879 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector89.Y;
								float num880 = (float)Math.Sqrt((double)(num878 * num878 + num879 * num879));
								float num881 = 10f;
								num881 += num880 / 100f;
								if (num881 < 8f)
								{
									num881 = 8f;
								}
								if (num881 > 32f)
								{
									num881 = 32f;
								}
								num880 = num881 / num880;
								this.velocity.X = num878 * num880;
								this.velocity.Y = num879 * num880;
								return;
							}
							if (this.ai[1] == 3f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.X = this.velocity.X * 0.95f;
								if (this.timeLeft > 500)
								{
									this.timeLeft = 500;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 33)
					{
						Vector2 vector90 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num882 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector90.X;
						float num883 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector90.Y;
						float num884 = (float)Math.Sqrt((double)(num882 * num882 + num883 * num883));
						if (this.ai[2] != 99f)
						{
							if (num884 > 800f)
							{
								this.ai[2] = 99f;
							}
						}
						else if (num884 < 400f)
						{
							this.ai[2] = 0f;
						}
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] += 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10.0);
								this.active = false;
							}
						}
						if (this.ai[2] == 99f)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X < -12f)
								{
									this.velocity.X = -12f;
									return;
								}
							}
						}
						else
						{
							if (this.ai[2] == 0f || this.ai[2] == 3f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
								{
									this.TargetClosest(true);
									if (Main.player[this.target].dead)
									{
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y > 16f)
										{
											this.velocity.Y = 16f;
										}
									}
									else
									{
										Vector2 vector91 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num885 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector91.X;
										float num886 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector91.Y;
										float num887 = (float)Math.Sqrt((double)(num885 * num885 + num886 * num886));
										num887 = 7f / num887;
										num885 *= num887;
										num886 *= num887;
										this.rotation = (float)Math.Atan2((double)num886, (double)num885) - 1.57f;
										if (this.velocity.X > num885)
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X - 0.05f;
										}
										if (this.velocity.X < num885)
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X + 0.05f;
										}
										if (this.velocity.Y > num886)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y - 0.05f;
										}
										if (this.velocity.Y < num886)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y + 0.05f;
										}
									}
									this.ai[3] += 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
								}
								else
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 300f)
									{
										this.ai[2] += 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 320f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.04f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 260f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.04f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.3f;
										if (this.velocity.X > 12f)
										{
											this.velocity.X = 12f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 250f)
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.3f;
										if (this.velocity.X < -12f)
										{
											this.velocity.X = -12f;
										}
									}
								}
								Vector2 vector92 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num888 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector92.X;
								float num889 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector92.Y;
								Math.Sqrt((double)(num888 * num888 + num889 * num889));
								this.rotation = (float)Math.Atan2((double)num889, (double)num888) + 1.57f;
								return;
							}
							if (this.ai[2] == 1f)
							{
								Vector2 vector93 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num890 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector93.X;
								float num891 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector93.Y;
								float num892 = (float)Math.Sqrt((double)(num890 * num890 + num891 * num891));
								this.rotation = (float)Math.Atan2((double)num891, (double)num890) + 1.57f;
								this.velocity.X = this.velocity.X * 0.95f;
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
								if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
								{
									this.TargetClosest(true);
									this.ai[2] = 2f;
									vector93 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num890 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector93.X;
									num891 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector93.Y;
									num892 = (float)Math.Sqrt((double)(num890 * num890 + num891 * num891));
									num892 = 22f / num892;
									this.velocity.X = num890 * num892;
									this.velocity.Y = num891 * num892;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] == 2f)
							{
								if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
								{
									this.ai[2] = 3f;
									return;
								}
							}
							else
							{
								if (this.ai[2] == 4f)
								{
									this.TargetClosest(true);
									Vector2 vector94 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num893 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector94.X;
									float num894 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector94.Y;
									float num895 = (float)Math.Sqrt((double)(num893 * num893 + num894 * num894));
									num895 = 7f / num895;
									num893 *= num895;
									num894 *= num895;
									if (this.velocity.X > num893)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.97f;
										}
										this.velocity.X = this.velocity.X - 0.05f;
									}
									if (this.velocity.X < num893)
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.97f;
										}
										this.velocity.X = this.velocity.X + 0.05f;
									}
									if (this.velocity.Y > num894)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.97f;
										}
										this.velocity.Y = this.velocity.Y - 0.05f;
									}
									if (this.velocity.Y < num894)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.97f;
										}
										this.velocity.Y = this.velocity.Y + 0.05f;
									}
									this.ai[3] += 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									vector94 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num893 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector94.X;
									num894 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector94.Y;
									num895 = (float)Math.Sqrt((double)(num893 * num893 + num894 * num894));
									this.rotation = (float)Math.Atan2((double)num894, (double)num893) + 1.57f;
									return;
								}
								if (this.ai[2] == 5f && ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))))
								{
									this.ai[2] = 0f;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 34)
					{
						this.spriteDirection = -(int)this.ai[0];
						Vector2 vector95 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num896 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector95.X;
						float num897 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector95.Y;
						float num898 = (float)Math.Sqrt((double)(num896 * num896 + num897 * num897));
						if (this.ai[2] != 99f)
						{
							if (num898 > 800f)
							{
								this.ai[2] = 99f;
							}
						}
						else if (num898 < 400f)
						{
							this.ai[2] = 0f;
						}
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] += 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10.0);
								this.active = false;
							}
						}
						if (this.ai[2] == 99f)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X < -12f)
								{
									this.velocity.X = -12f;
									return;
								}
							}
						}
						else
						{
							if (this.ai[2] == 0f || this.ai[2] == 3f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
								{
									this.TargetClosest(true);
									this.TargetClosest(true);
									if (Main.player[this.target].dead)
									{
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y > 16f)
										{
											this.velocity.Y = 16f;
										}
									}
									else
									{
										Vector2 vector96 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num899 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector96.X;
										float num900 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector96.Y;
										float num901 = (float)Math.Sqrt((double)(num899 * num899 + num900 * num900));
										num901 = 12f / num901;
										num899 *= num901;
										num900 *= num901;
										this.rotation = (float)Math.Atan2((double)num900, (double)num899) - 1.57f;
										if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 2f)
										{
											this.rotation = (float)Math.Atan2((double)num900, (double)num899) - 1.57f;
											this.velocity.X = num899;
											this.velocity.Y = num900;
											this.netUpdate = true;
										}
										else
										{
											this.velocity *= 0.97f;
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
									}
								}
								else
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] += 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 300f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.1f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 250f)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.94f;
										}
										this.velocity.X = this.velocity.X - 0.3f;
										if (this.velocity.X > 9f)
										{
											this.velocity.X = 9f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.94f;
										}
										this.velocity.X = this.velocity.X + 0.2f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								Vector2 vector97 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num902 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector97.X;
								float num903 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector97.Y;
								Math.Sqrt((double)(num902 * num902 + num903 * num903));
								this.rotation = (float)Math.Atan2((double)num903, (double)num902) + 1.57f;
								return;
							}
							if (this.ai[2] == 1f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								Vector2 vector98 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num904 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 280f * this.ai[0] - vector98.X;
								float num905 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector98.Y;
								float num906 = (float)Math.Sqrt((double)(num904 * num904 + num905 * num905));
								this.rotation = (float)Math.Atan2((double)num905, (double)num904) + 1.57f;
								this.velocity.X = (this.velocity.X * 5f + Main.npc[(int)this.ai[1]].velocity.X) / 6f;
								this.velocity.X = this.velocity.X + 0.5f;
								this.velocity.Y = this.velocity.Y - 0.5f;
								if (this.velocity.Y < -9f)
								{
									this.velocity.Y = -9f;
								}
								if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 280f)
								{
									this.TargetClosest(true);
									this.ai[2] = 2f;
									vector98 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num904 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector98.X;
									num905 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector98.Y;
									num906 = (float)Math.Sqrt((double)(num904 * num904 + num905 * num905));
									num906 = 20f / num906;
									this.velocity.X = num904 * num906;
									this.velocity.Y = num905 * num906;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] == 2f)
							{
								if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
								{
									if (this.ai[3] >= 4f)
									{
										this.ai[2] = 3f;
										this.ai[3] = 0f;
										return;
									}
									this.ai[2] = 1f;
									this.ai[3] += 1f;
									return;
								}
							}
							else if (this.ai[2] == 4f)
							{
								Vector2 vector99 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num907 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector99.X;
								float num908 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector99.Y;
								float num909 = (float)Math.Sqrt((double)(num907 * num907 + num908 * num908));
								this.rotation = (float)Math.Atan2((double)num908, (double)num907) + 1.57f;
								this.velocity.Y = (this.velocity.Y * 5f + Main.npc[(int)this.ai[1]].velocity.Y) / 6f;
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
								{
									this.TargetClosest(true);
									this.ai[2] = 5f;
									vector99 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num907 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector99.X;
									num908 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector99.Y;
									num909 = (float)Math.Sqrt((double)(num907 * num907 + num908 * num908));
									num909 = 17f / num909;
									this.velocity.X = num907 * num909;
									this.velocity.Y = num908 * num909;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] == 5f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
							{
								if (this.ai[3] >= 4f)
								{
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									return;
								}
								this.ai[2] = 4f;
								this.ai[3] += 1f;
								return;
							}
						}
					}
					else if (this.aiStyle == 35)
					{
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] += 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10.0);
								this.active = false;
							}
						}
						if (this.ai[2] == 0f)
						{
							if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
							{
								this.timeLeft = 10;
							}
							if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
							{
								this.localAI[0] += 2f;
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.07f;
									if (this.velocity.Y > 6f)
									{
										this.velocity.Y = 6f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.07f;
									if (this.velocity.Y < -6f)
									{
										this.velocity.Y = -6f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							else
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 1100f)
								{
									this.localAI[0] = 0f;
									this.ai[2] = 1f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 150f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.04f;
									if (this.velocity.Y > 3f)
									{
										this.velocity.Y = 3f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 150f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.04f;
									if (this.velocity.Y < -3f)
									{
										this.velocity.Y = -3f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 200f)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.2f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 160f)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.2f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							Vector2 vector100 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num910 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector100.X;
							float num911 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector100.Y;
							float num912 = (float)Math.Sqrt((double)(num910 * num910 + num911 * num911));
							this.rotation = (float)Math.Atan2((double)num911, (double)num910) + 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] += 1f;
								if (this.localAI[0] > 140f)
								{
									this.localAI[0] = 0f;
									float num913 = 12f;
									int num914 = 0;
									int num915 = 102;
									num912 = num913 / num912;
									num910 = -num910 * num912;
									num911 = -num911 * num912;
									num910 += (float)Main.rand.Next(-40, 41) * 0.01f;
									num911 += (float)Main.rand.Next(-40, 41) * 0.01f;
									vector100.X += num910 * 4f;
									vector100.Y += num911 * 4f;
									Projectile.NewProjectile(vector100.X, vector100.Y, num910, num911, num915, num914, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
						else if (this.ai[2] == 1f)
						{
							this.ai[3] += 1f;
							if (this.ai[3] >= 300f)
							{
								this.localAI[0] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
							}
							Vector2 vector101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num916 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector101.X;
							float num917 = Main.npc[(int)this.ai[1]].position.Y - vector101.Y;
							num917 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 80f - vector101.Y;
							float num918 = (float)Math.Sqrt((double)(num916 * num916 + num917 * num917));
							num918 = 6f / num918;
							num916 *= num918;
							num917 *= num918;
							if (this.velocity.X > num916)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X - 0.04f;
							}
							if (this.velocity.X < num916)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X + 0.04f;
							}
							if (this.velocity.Y > num917)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y - 0.08f;
							}
							if (this.velocity.Y < num917)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y + 0.08f;
							}
							this.TargetClosest(true);
							vector101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							num916 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector101.X;
							num917 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector101.Y;
							num918 = (float)Math.Sqrt((double)(num916 * num916 + num917 * num917));
							this.rotation = (float)Math.Atan2((double)num917, (double)num916) - 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] += 1f;
								if (this.localAI[0] > 40f)
								{
									this.localAI[0] = 0f;
									float num919 = 10f;
									int num920 = 0;
									int num921 = 102;
									num918 = num919 / num918;
									num916 *= num918;
									num917 *= num918;
									num916 += (float)Main.rand.Next(-40, 41) * 0.01f;
									num917 += (float)Main.rand.Next(-40, 41) * 0.01f;
									vector101.X += num916 * 4f;
									vector101.Y += num917 * 4f;
									Projectile.NewProjectile(vector101.X, vector101.Y, num916, num917, num921, num920, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 36)
					{
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] += 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10.0);
								this.active = false;
							}
						}
						if (this.ai[2] == 0f || this.ai[2] == 3f)
						{
							if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
							{
								this.timeLeft = 10;
							}
							if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
							{
								this.localAI[0] += 3f;
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.07f;
									if (this.velocity.Y > 6f)
									{
										this.velocity.Y = 6f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.07f;
									if (this.velocity.Y < -6f)
									{
										this.velocity.Y = -6f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							else
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 800f)
								{
									this.ai[2] += 1f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 3f)
									{
										this.velocity.Y = 3f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -3f)
									{
										this.velocity.Y = -3f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.14f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.14f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							this.TargetClosest(true);
							Vector2 vector102 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num922 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector102.X;
							float num923 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector102.Y;
							float num924 = (float)Math.Sqrt((double)(num922 * num922 + num923 * num923));
							this.rotation = (float)Math.Atan2((double)num923, (double)num922) - 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] += 1f;
								if (this.localAI[0] > 200f)
								{
									this.localAI[0] = 0f;
									float num925 = 8f;
									int num926 = 25;
									int num927 = 100;
									num924 = num925 / num924;
									num922 *= num924;
									num923 *= num924;
									num922 += (float)Main.rand.Next(-40, 41) * 0.05f;
									num923 += (float)Main.rand.Next(-40, 41) * 0.05f;
									vector102.X += num922 * 8f;
									vector102.Y += num923 * 8f;
									Projectile.NewProjectile(vector102.X, vector102.Y, num922, num923, num927, num926, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
						else if (this.ai[2] == 1f)
						{
							this.ai[3] += 1f;
							if (this.ai[3] >= 200f)
							{
								this.localAI[0] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
							}
							Vector2 vector103 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num928 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 350f - vector103.X;
							float num929 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 20f - vector103.Y;
							float num930 = (float)Math.Sqrt((double)(num928 * num928 + num929 * num929));
							num930 = 7f / num930;
							num928 *= num930;
							num929 *= num930;
							if (this.velocity.X > num928)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
							}
							if (this.velocity.X < num928)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.velocity.Y > num929)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if (this.velocity.Y < num929)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							this.TargetClosest(true);
							vector103 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							num928 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector103.X;
							num929 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector103.Y;
							num930 = (float)Math.Sqrt((double)(num928 * num928 + num929 * num929));
							this.rotation = (float)Math.Atan2((double)num929, (double)num928) - 1.57f;
							if (Main.netMode == 1)
							{
								this.localAI[0] += 1f;
								if (this.localAI[0] > 80f)
								{
									this.localAI[0] = 0f;
									float num931 = 10f;
									int num932 = 25;
									int num933 = 100;
									num930 = num931 / num930;
									num928 *= num930;
									num929 *= num930;
									num928 += (float)Main.rand.Next(-40, 41) * 0.05f;
									num929 += (float)Main.rand.Next(-40, 41) * 0.05f;
									vector103.X += num928 * 8f;
									vector103.Y += num929 * 8f;
									Projectile.NewProjectile(vector103.X, vector103.Y, num928, num929, num933, num932, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 37)
					{
						if (this.ai[3] > 0f)
						{
							this.realLife = (int)this.ai[3];
						}
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						if (this.type >= 134 && this.type <= 136)
						{
							this.velocity.Length();
							if (this.type == 134 || (this.type != 134 && Main.npc[(int)this.ai[1]].alpha < 128))
							{
								this.alpha -= 42;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
							}
						}
						if (this.type > 134)
						{
							bool flag93 = false;
							if (this.ai[1] <= 0f)
							{
								flag93 = true;
							}
							else if (Main.npc[(int)this.ai[1]].life <= 0)
							{
								flag93 = true;
							}
							if (flag93)
							{
								this.life = 0;
								this.HitEffect(0, 10.0);
								this.checkDead();
							}
						}
						if (Main.netMode != 1)
						{
							if (this.ai[0] == 0f && this.type == 134)
							{
								this.ai[3] = (float)this.whoAmI;
								this.realLife = this.whoAmI;
								int num936 = this.whoAmI;
								int num937 = 80;
								for (int num938 = 0; num938 <= num937; num938++)
								{
									int num939 = 135;
									if (num938 == num937)
									{
										num939 = 136;
									}
									int num940 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num939, this.whoAmI, 0f, 0f, 0f, 0f, 255);
									Main.npc[num940].ai[3] = (float)this.whoAmI;
									Main.npc[num940].realLife = this.whoAmI;
									Main.npc[num940].ai[1] = (float)num936;
									Main.npc[num936].ai[0] = (float)num940;
									NetMessage.SendData(23, -1, -1, "", num940, 0f, 0f, 0f, 0, 0, 0);
									num936 = num940;
								}
							}
							if (this.type == 135)
							{
								this.localAI[0] += (float)Main.rand.Next(4);
								if (this.localAI[0] >= (float)Main.rand.Next(1400, 26000))
								{
									this.localAI[0] = 0f;
									this.TargetClosest(true);
									if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										float num941 = 8f;
										Vector2 vector104 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
										float num942 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector104.X + (float)Main.rand.Next(-20, 21);
										float num943 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector104.Y + (float)Main.rand.Next(-20, 21);
										float num944 = (float)Math.Sqrt((double)(num942 * num942 + num943 * num943));
										num944 = num941 / num944;
										num942 *= num944;
										num943 *= num944;
										num942 += (float)Main.rand.Next(-20, 21) * 0.05f;
										num943 += (float)Main.rand.Next(-20, 21) * 0.05f;
										int num945 = 22;
										if (Main.expertMode)
										{
											num945 = 18;
										}
										int num946 = 100;
										vector104.X += num942 * 5f;
										vector104.Y += num943 * 5f;
										int num947 = Projectile.NewProjectile(vector104.X, vector104.Y, num942, num943, num946, num945, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num947].timeLeft = 300;
										this.netUpdate = true;
									}
								}
							}
						}
						int num948 = (int)(this.position.X / 16f) - 1;
						int num949 = (int)((this.position.X + (float)this.width) / 16f) + 2;
						int num950 = (int)(this.position.Y / 16f) - 1;
						int num951 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
						if (num948 < 0)
						{
							num948 = 0;
						}
						if (num949 > Main.maxTilesX)
						{
							num949 = Main.maxTilesX;
						}
						if (num950 < 0)
						{
							num950 = 0;
						}
						if (num951 > Main.maxTilesY)
						{
							num951 = Main.maxTilesY;
						}
						bool flag94 = false;
						if (!flag94)
						{
							for (int num952 = num948; num952 < num949; num952++)
							{
								for (int num953 = num950; num953 < num951; num953++)
								{
									if (Main.tile[num952, num953] != null && ((Main.tile[num952, num953].nactive() && (Main.tileSolid[(int)Main.tile[num952, num953].type] || (Main.tileSolidTop[(int)Main.tile[num952, num953].type] && Main.tile[num952, num953].frameY == 0))) || Main.tile[num952, num953].liquid > 64))
									{
										Vector2 vector105;
										vector105.X = (float)(num952 * 16);
										vector105.Y = (float)(num953 * 16);
										if (this.position.X + (float)this.width > vector105.X && this.position.X < vector105.X + 16f && this.position.Y + (float)this.height > vector105.Y && this.position.Y < vector105.Y + 16f)
										{
											flag94 = true;
											break;
										}
									}
								}
							}
						}
						if (!flag94)
						{
							this.localAI[1] = 1f;
							if (this.type == 134)
							{
								Rectangle rectangle12 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
								int num954 = 1000;
								bool flag95 = true;
								if (this.position.Y > Main.player[this.target].position.Y)
								{
									for (int num955 = 0; num955 < 255; num955++)
									{
										if (Main.player[num955].active)
										{
											Rectangle rectangle13 = new Rectangle((int)Main.player[num955].position.X - num954, (int)Main.player[num955].position.Y - num954, num954 * 2, num954 * 2);
											if (rectangle12.Intersects(rectangle13))
											{
												flag95 = false;
												break;
											}
										}
									}
									if (flag95)
									{
										flag94 = true;
									}
								}
							}
						}
						else
						{
							this.localAI[1] = 0f;
						}
						float num956 = 16f;
						if (Main.dayTime || Main.player[this.target].dead)
						{
							flag94 = false;
							this.velocity.Y = this.velocity.Y + 1f;
							if ((double)this.position.Y > Main.worldSurface * 16.0)
							{
								this.velocity.Y = this.velocity.Y + 1f;
								num956 = 32f;
							}
							if ((double)this.position.Y > Main.rockLayer * 16.0)
							{
								for (int num957 = 0; num957 < 200; num957++)
								{
									if (Main.npc[num957].aiStyle == this.aiStyle)
									{
										Main.npc[num957].active = false;
									}
								}
							}
						}
						float num958 = 0.1f;
						float num959 = 0.15f;
						Vector2 vector106 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num960 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
						float num961 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
						num960 = (float)((int)(num960 / 16f) * 16);
						num961 = (float)((int)(num961 / 16f) * 16);
						vector106.X = (float)((int)(vector106.X / 16f) * 16);
						vector106.Y = (float)((int)(vector106.Y / 16f) * 16);
						num960 -= vector106.X;
						num961 -= vector106.Y;
						float num962 = (float)Math.Sqrt((double)(num960 * num960 + num961 * num961));
						if (this.ai[1] > 0f && this.ai[1] < (float)Main.npc.Length)
						{
							try
							{
								vector106 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num960 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector106.X;
								num961 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector106.Y;
							}
							catch
							{
							}
							this.rotation = (float)Math.Atan2((double)num961, (double)num960) + 1.57f;
							num962 = (float)Math.Sqrt((double)(num960 * num960 + num961 * num961));
							int num963 = (int)(44f * this.scale);
							num962 = (num962 - (float)num963) / num962;
							num960 *= num962;
							num961 *= num962;
							this.velocity = Vector2.Zero;
							this.position.X = this.position.X + num960;
							this.position.Y = this.position.Y + num961;
							return;
						}
						if (!flag94)
						{
							this.TargetClosest(true);
							this.velocity.Y = this.velocity.Y + 0.15f;
							if (this.velocity.Y > num956)
							{
								this.velocity.Y = num956;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num956 * 0.4)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X - num958 * 1.1f;
								}
								else
								{
									this.velocity.X = this.velocity.X + num958 * 1.1f;
								}
							}
							else if (this.velocity.Y == num956)
							{
								if (this.velocity.X < num960)
								{
									this.velocity.X = this.velocity.X + num958;
								}
								else if (this.velocity.X > num960)
								{
									this.velocity.X = this.velocity.X - num958;
								}
							}
							else if (this.velocity.Y > 4f)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X + num958 * 0.9f;
								}
								else
								{
									this.velocity.X = this.velocity.X - num958 * 0.9f;
								}
							}
						}
						else
						{
							if (this.soundDelay == 0)
							{
								float num964 = num962 / 40f;
								if (num964 < 10f)
								{
									num964 = 10f;
								}
								if (num964 > 20f)
								{
									num964 = 20f;
								}
								this.soundDelay = (int)num964;
							}
							num962 = (float)Math.Sqrt((double)(num960 * num960 + num961 * num961));
							float num965 = Math.Abs(num960);
							float num966 = Math.Abs(num961);
							float num967 = num956 / num962;
							num960 *= num967;
							num961 *= num967;
							if (((this.velocity.X > 0f && num960 > 0f) || (this.velocity.X < 0f && num960 < 0f)) && ((this.velocity.Y > 0f && num961 > 0f) || (this.velocity.Y < 0f && num961 < 0f)))
							{
								if (this.velocity.X < num960)
								{
									this.velocity.X = this.velocity.X + num959;
								}
								else if (this.velocity.X > num960)
								{
									this.velocity.X = this.velocity.X - num959;
								}
								if (this.velocity.Y < num961)
								{
									this.velocity.Y = this.velocity.Y + num959;
								}
								else if (this.velocity.Y > num961)
								{
									this.velocity.Y = this.velocity.Y - num959;
								}
							}
							if ((this.velocity.X > 0f && num960 > 0f) || (this.velocity.X < 0f && num960 < 0f) || (this.velocity.Y > 0f && num961 > 0f) || (this.velocity.Y < 0f && num961 < 0f))
							{
								if (this.velocity.X < num960)
								{
									this.velocity.X = this.velocity.X + num958;
								}
								else if (this.velocity.X > num960)
								{
									this.velocity.X = this.velocity.X - num958;
								}
								if (this.velocity.Y < num961)
								{
									this.velocity.Y = this.velocity.Y + num958;
								}
								else if (this.velocity.Y > num961)
								{
									this.velocity.Y = this.velocity.Y - num958;
								}
								if ((double)Math.Abs(num961) < (double)num956 * 0.2 && ((this.velocity.X > 0f && num960 < 0f) || (this.velocity.X < 0f && num960 > 0f)))
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num958 * 2f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num958 * 2f;
									}
								}
								if ((double)Math.Abs(num960) < (double)num956 * 0.2 && ((this.velocity.Y > 0f && num961 < 0f) || (this.velocity.Y < 0f && num961 > 0f)))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num958 * 2f;
									}
									else
									{
										this.velocity.X = this.velocity.X - num958 * 2f;
									}
								}
							}
							else if (num965 > num966)
							{
								if (this.velocity.X < num960)
								{
									this.velocity.X = this.velocity.X + num958 * 1.1f;
								}
								else if (this.velocity.X > num960)
								{
									this.velocity.X = this.velocity.X - num958 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num956 * 0.5)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num958;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num958;
									}
								}
							}
							else
							{
								if (this.velocity.Y < num961)
								{
									this.velocity.Y = this.velocity.Y + num958 * 1.1f;
								}
								else if (this.velocity.Y > num961)
								{
									this.velocity.Y = this.velocity.Y - num958 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num956 * 0.5)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num958;
									}
									else
									{
										this.velocity.X = this.velocity.X - num958;
									}
								}
							}
						}
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						if (this.type == 134)
						{
							if (flag94)
							{
								if (this.localAI[0] != 1f)
								{
									this.netUpdate = true;
								}
								this.localAI[0] = 1f;
							}
							else
							{
								if (this.localAI[0] != 0f)
								{
									this.netUpdate = true;
								}
								this.localAI[0] = 0f;
							}
							if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
							{
								this.netUpdate = true;
								return;
							}
						}
					}
					else if (this.aiStyle == 38)
					{
						float num968 = 4f;
						float num969 = 1f;
						if (this.type == 143)
						{
							num968 = 3f;
							num969 = 0.7f;
						}
						if (this.type == 145)
						{
							num968 = 3.5f;
							num969 = 0.8f;
						}
						if (this.type == 143)
						{
							this.ai[2] += 1f;
							if (this.ai[2] >= 120f)
							{
								this.ai[2] = 0f;
								if (Main.netMode != 1)
								{
									Vector2 vector107 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.5f);
									float speedX = (float)(12 * this.spriteDirection);
									float speedY = 0f;
									if (Main.netMode != 1)
									{
										int num970 = 25;
										int num971 = 110;
										int num972 = Projectile.NewProjectile(vector107.X, vector107.Y, speedX, speedY, num971, num970, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num972].ai[0] = 2f;
										Main.projectile[num972].timeLeft = 300;
										Main.projectile[num972].friendly = false;
										NetMessage.SendData(27, -1, -1, "", num972, 0f, 0f, 0f, 0, 0, 0);
										this.netUpdate = true;
									}
								}
							}
						}
						if (this.type == 144 && this.ai[1] >= 3f)
						{
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.ai[2] += 1f;
								if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
								{
									this.velocity.X = 0f;
								}
								if (this.ai[2] >= 200f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
							}
						}
						else if (this.type == 145 && this.ai[1] >= 3f)
						{
							this.TargetClosest(true);
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.ai[2] += 1f;
								if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
								{
									this.velocity.X = 0f;
								}
								if (this.ai[2] >= 16f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
							}
							if (this.velocity.X == 0f && this.velocity.Y == 0f && this.ai[2] == 8f)
							{
								float num973 = 10f;
								Vector2 vector108 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.25f);
								float num974 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector108.X;
								float num975 = Main.player[this.target].position.Y - vector108.Y;
								float num976 = (float)Math.Sqrt((double)(num974 * num974 + num975 * num975));
								num976 = num973 / num976;
								num974 *= num976;
								num975 *= num976;
								if (Main.netMode != 1)
								{
									int num977 = 35;
									int num978 = 109;
									int num979 = Projectile.NewProjectile(vector108.X, vector108.Y, num974, num975, num978, num977, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num979].ai[0] = 2f;
									Main.projectile[num979].timeLeft = 300;
									Main.projectile[num979].friendly = false;
									NetMessage.SendData(27, -1, -1, "", num979, 0f, 0f, 0f, 0, 0, 0);
									this.netUpdate = true;
								}
							}
						}
						else
						{
							if (this.velocity.Y == 0f)
							{
								if (this.localAI[2] == this.position.X)
								{
									this.direction *= -1;
									this.ai[3] = 60f;
								}
								this.localAI[2] = this.position.X;
								if (this.ai[3] == 0f)
								{
									this.TargetClosest(true);
								}
								this.ai[0] += 1f;
								if (this.ai[0] > 2f)
								{
									this.ai[0] = 0f;
									this.ai[1] += 1f;
									this.velocity.Y = -8.2f;
									this.velocity.X = this.velocity.X + (float)this.direction * num969 * 1.1f;
								}
								else
								{
									this.velocity.Y = -6f;
									this.velocity.X = this.velocity.X + (float)this.direction * num969 * 0.9f;
								}
								this.spriteDirection = this.direction;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * num969 * 0.01f;
						}
						if (this.ai[3] > 0f)
						{
							this.ai[3] -= 1f;
						}
						if (this.velocity.X > num968 && this.direction > 0)
						{
							this.velocity.X = 4f;
						}
						if (this.velocity.X < -num968 && this.direction < 0)
						{
							this.velocity.X = -4f;
							return;
						}
					}
					else if (this.aiStyle == 39)
					{
						if (this.target < 0 || Main.player[this.target].dead || this.direction == 0)
						{
							this.TargetClosest(true);
						}
						bool flag96 = true;
						int num980 = 0;
						if (this.velocity.X < 0f)
						{
							num980 = -1;
						}
						if (this.velocity.X > 0f)
						{
							num980 = 1;
						}
						Vector2 position6 = this.position;
						position6.X += this.velocity.X;
						int num981 = (int)((position6.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num980)) / 16f);
						int num982 = (int)((position6.Y + (float)this.height - 1f) / 16f);
						if ((float)(num981 * 16) < position6.X + (float)this.width && (float)(num981 * 16 + 16) > position6.X && ((Main.tile[num981, num982].nactive() && !Main.tile[num981, num982].topSlope() && !Main.tile[num981, num982 - 1].topSlope() && ((Main.tileSolid[(int)Main.tile[num981, num982].type] && !Main.tileSolidTop[(int)Main.tile[num981, num982].type]) || (flag96 && Main.tileSolidTop[(int)Main.tile[num981, num982].type] && (!Main.tileSolid[(int)Main.tile[num981, num982 - 1].type] || !Main.tile[num981, num982 - 1].nactive()) && Main.tile[num981, num982].type != 16 && Main.tile[num981, num982].type != 18 && Main.tile[num981, num982].type != 134))) || (Main.tile[num981, num982 - 1].halfBrick() && Main.tile[num981, num982 - 1].nactive())) && (!Main.tile[num981, num982 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num981, num982 - 1].type] || Main.tileSolidTop[(int)Main.tile[num981, num982 - 1].type] || (Main.tile[num981, num982 - 1].halfBrick() && (!Main.tile[num981, num982 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num981, num982 - 4].type] || Main.tileSolidTop[(int)Main.tile[num981, num982 - 4].type]))) && (!Main.tile[num981, num982 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num981, num982 - 2].type] || Main.tileSolidTop[(int)Main.tile[num981, num982 - 2].type]) && (!Main.tile[num981, num982 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num981, num982 - 3].type] || Main.tileSolidTop[(int)Main.tile[num981, num982 - 3].type]) && (!Main.tile[num981 - num980, num982 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num981 - num980, num982 - 3].type] || Main.tileSolidTop[(int)Main.tile[num981 - num980, num982 - 3].type]))
						{
							float num983 = (float)(num982 * 16);
							if (Main.tile[num981, num982].halfBrick())
							{
								num983 += 8f;
							}
							if (Main.tile[num981, num982 - 1].halfBrick())
							{
								num983 -= 8f;
							}
							if (num983 < position6.Y + (float)this.height)
							{
								float num984 = position6.Y + (float)this.height - num983;
								if ((double)num984 <= 16.1)
								{
									this.gfxOffY += this.position.Y + (float)this.height - num983;
									this.position.Y = num983 - (float)this.height;
									if (num984 < 9f)
									{
										this.stepSpeed = 0.75f;
									}
									else
									{
										this.stepSpeed = 1.5f;
									}
								}
							}
						}
						if (this.justHit && this.type != 417)
						{
							this.ai[0] = 0f;
							this.ai[1] = 0f;
							this.TargetClosest(true);
						}
						if (this.ai[0] == 0f)
						{
							if (this.velocity.X < 0f)
							{
								this.direction = -1;
							}
							else if (this.velocity.X > 0f)
							{
								this.direction = 1;
							}
							this.spriteDirection = this.direction;
							Vector2 vector109 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num986 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector109.X;
							float num987 = Main.player[this.target].position.Y - vector109.Y;
							float num988 = (float)Math.Sqrt((double)(num986 * num986 + num987 * num987));
							bool flag97 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							if (this.type >= 496 && this.type <= 497)
							{
								if (num988 > 200f && flag97)
								{
									this.ai[1] += 2f;
								}
								if (num988 > 600f && (flag97 || this.position.Y + (float)this.height > Main.player[this.target].position.Y - 200f))
								{
									this.ai[1] += 4f;
								}
							}
							else
							{
								if (num988 > 200f && flag97)
								{
									this.ai[1] += 4f;
								}
								if (num988 > 600f && (flag97 || this.position.Y + (float)this.height > Main.player[this.target].position.Y - 200f))
								{
									this.ai[1] += 10f;
								}
								if (this.wet)
								{
									this.ai[1] = 1000f;
								}
							}
							this.defense = this.defDefense;
							this.damage = this.defDamage;
							if (this.type >= 496 && this.type <= 497)
							{
								this.knockBackResist = 0.75f * Main.knockBackMultiplier;
							}
							else
							{
								this.knockBackResist = 0.3f * Main.knockBackMultiplier;
							}
							this.ai[1] += 1f;
							if (this.ai[1] >= 400f)
							{
								this.ai[1] = 0f;
								this.ai[0] = 1f;
							}
							if (!this.justHit && this.velocity.X != this.oldVelocity.X)
							{
								this.direction *= -1;
							}
							if (this.velocity.Y == 0f && Main.player[this.target].position.Y < this.position.Y + (float)this.height)
							{
								int num989;
								int num990;
								if (this.direction > 0)
								{
									num989 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
									num990 = num989 + 3;
								}
								else
								{
									num990 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
									num989 = num990 - 3;
								}
								int num991 = (int)((this.position.Y + (float)this.height + 2f) / 16f) - 1;
								int num992 = num991 + 4;
								bool flag98 = false;
								for (int num993 = num989; num993 <= num990; num993++)
								{
									for (int num994 = num991; num994 <= num992; num994++)
									{
										if (Main.tile[num993, num994] != null && Main.tile[num993, num994].nactive() && Main.tileSolid[(int)Main.tile[num993, num994].type])
										{
											flag98 = true;
										}
									}
								}
								if (!flag98)
								{
									this.direction *= -1;
									this.velocity.X = 0.1f * (float)this.direction;
								}
							}
							if (this.type >= 496 && this.type <= 497)
							{
								float num995 = 0.5f;
								if (this.velocity.X < -num995 || this.velocity.X > num995)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
										return;
									}
								}
								else if (this.velocity.X < num995 && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > num995)
									{
										this.velocity.X = num995;
										return;
									}
								}
								else if (this.velocity.X > -num995 && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -num995)
									{
										this.velocity.X = -num995;
										return;
									}
								}
							}
							else
							{
								float num996 = 1f;
								if (num988 < 400f)
								{
									if (this.velocity.X < -num996 || this.velocity.X > num996)
									{
										if (this.velocity.Y == 0f)
										{
											this.velocity *= 0.8f;
											return;
										}
									}
									else if (this.velocity.X < num996 && this.direction == 1)
									{
										this.velocity.X = this.velocity.X + 0.07f;
										if (this.velocity.X > num996)
										{
											this.velocity.X = num996;
											return;
										}
									}
									else if (this.velocity.X > -num996 && this.direction == -1)
									{
										this.velocity.X = this.velocity.X - 0.07f;
										if (this.velocity.X < -num996)
										{
											this.velocity.X = -num996;
											return;
										}
									}
								}
								else if (this.velocity.X < -1.5f || this.velocity.X > 1.5f)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
										return;
									}
								}
								else if (this.velocity.X < 1.5f && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > 1.5f)
									{
										this.velocity.X = 1.5f;
										return;
									}
								}
								else if (this.velocity.X > -1.5f && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -1.5f)
									{
										this.velocity.X = -1.5f;
										return;
									}
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.velocity.X = this.velocity.X * 0.5f;
							if (this.type >= 496 && this.type <= 497)
							{
								this.ai[1] += 0.5f;
							}
							else
							{
								this.ai[1] += 1f;
							}
							if (this.ai[1] >= 30f)
							{
								this.netUpdate = true;
								this.TargetClosest(true);
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[0] = 3f;
								if (this.type == 417)
								{
									this.ai[0] = 6f;
									this.ai[2] = (float)Main.rand.Next(2, 5);
									return;
								}
							}
						}
						else
						{
							if (this.ai[0] == 3f)
							{
								if (Main.expertMode)
								{
									if (this.type >= 496 && this.type <= 497)
									{
										this.damage = (int)((double)this.defDamage * 1.5 * 0.9);
									}
									else
									{
										this.damage = (int)((double)(this.defDamage * 2) * 0.9);
									}
								}
								else if (this.type >= 496 && this.type <= 497)
								{
									this.damage = (int)((double)this.defDamage * 1.5);
								}
								else
								{
									this.damage = this.defDamage * 2;
								}
								this.defense = this.defDefense * 2;
								this.ai[1] += 1f;
								if (this.ai[1] == 1f)
								{
									this.netUpdate = true;
									this.TargetClosest(true);
									this.ai[2] += 0.3f;
									this.rotation += this.ai[2] * (float)this.direction;
									this.ai[1] += 1f;
									bool flag99 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
									float num998 = 10f;
									if (!flag99)
									{
										num998 = 6f;
									}
									if (this.type >= 496 && this.type <= 497)
									{
										num998 *= 0.75f;
									}
									Vector2 vector110 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num999 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector110.X;
									float num1000 = Math.Abs(num999) * 0.2f;
									if (this.directionY > 0)
									{
										num1000 = 0f;
									}
									float num1001 = Main.player[this.target].position.Y - vector110.Y - num1000;
									float num1002 = (float)Math.Sqrt((double)(num999 * num999 + num1001 * num1001));
									this.netUpdate = true;
									num1002 = num998 / num1002;
									num999 *= num1002;
									num1001 *= num1002;
									if (!flag99)
									{
										num1001 = -10f;
									}
									this.velocity.X = num999;
									this.velocity.Y = num1001;
									this.ai[3] = this.velocity.X;
								}
								else
								{
									if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y < Main.player[this.target].position.Y + (float)Main.player[this.target].height)
									{
										this.velocity.X = this.velocity.X * 0.8f;
										this.ai[3] = 0f;
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y + 0.2f;
										}
									}
									if (this.ai[3] != 0f)
									{
										this.velocity.X = this.ai[3];
										this.velocity.Y = this.velocity.Y - 0.22f;
									}
									if (this.ai[1] >= 90f)
									{
										this.noGravity = false;
										this.ai[1] = 0f;
										this.ai[0] = 4f;
									}
								}
								if (this.wet && this.directionY < 0)
								{
									this.velocity.Y = this.velocity.Y - 0.3f;
								}
								this.rotation += this.ai[2] * (float)this.direction;
								return;
							}
							if (this.ai[0] == 4f)
							{
								if (this.wet && this.directionY < 0)
								{
									this.velocity.Y = this.velocity.Y - 0.3f;
								}
								this.velocity.X = this.velocity.X * 0.96f;
								if (this.ai[2] > 0f)
								{
									this.ai[2] -= 0.01f;
									this.rotation += this.ai[2] * (float)this.direction;
								}
								else if (this.velocity.Y >= 0f)
								{
									this.rotation = 0f;
								}
								if (this.ai[2] <= 0f && (this.velocity.Y == 0f || this.wet))
								{
									this.netUpdate = true;
									this.rotation = 0f;
									this.ai[2] = 0f;
									this.ai[1] = 0f;
									this.ai[0] = 5f;
									return;
								}
							}
							else
							{
								if (this.ai[0] == 6f)
								{
									this.damage = (int)((float)this.defDamage * (Main.expertMode ? 1.4f : 1.8f));
									this.defense = this.defDefense * 2;
									this.knockBackResist = 0f;
									this.ai[1] += 1f;
									if (this.ai[3] > 0f)
									{
										this.ai[3] += 1f;
										if (this.ai[3] >= 10f)
										{
											this.ai[3] = 0f;
										}
									}
									if (this.ai[1] == 1f)
									{
										this.netUpdate = true;
										this.TargetClosest(true);
										bool flag100 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
										float num1010 = 16f;
										if (!flag100)
										{
											num1010 = 10f;
										}
										Vector2 vector112 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1011 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector112.X;
										float num1012 = Math.Abs(num1011) * 0.2f;
										if (this.directionY > 0)
										{
											num1012 = 0f;
										}
										float num1013 = Main.player[this.target].position.Y - vector112.Y - num1012;
										float num1014 = (float)Math.Sqrt((double)(num1011 * num1011 + num1013 * num1013));
										this.netUpdate = true;
										num1014 = num1010 / num1014;
										num1011 *= num1014;
										num1013 *= num1014;
										if (!flag100)
										{
											num1013 = -12f;
										}
										this.velocity.X = num1011;
										this.velocity.Y = num1013;
									}
									else
									{
										if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y < Main.player[this.target].position.Y + (float)Main.player[this.target].height)
										{
											this.velocity.X = this.velocity.X * 0.9f;
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y + 0.2f;
											}
										}
										if (this.ai[2] == 0f || this.ai[1] >= 1200f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 5f;
										}
									}
									if (this.wet && this.directionY < 0)
									{
										this.velocity.Y = this.velocity.Y - 0.3f;
									}
									this.rotation += MathHelper.Clamp(this.velocity.X / 10f * (float)this.direction, -0.314159274f, 0.314159274f);
									return;
								}
								if (this.ai[0] == 5f)
								{
									this.rotation = 0f;
									this.velocity.X = 0f;
									if (this.type >= 496 && this.type <= 497)
									{
										this.ai[1] += 0.5f;
									}
									else
									{
										this.ai[1] += 1f;
									}
									if (this.ai[1] >= 30f)
									{
										this.TargetClosest(true);
										this.netUpdate = true;
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
									if (this.wet)
									{
										this.ai[0] = 3f;
										this.ai[1] = 0f;
										return;
									}
								}
							}
						}
					}
					else if (this.aiStyle == 40)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						float num1015 = 2f;
						float num1016 = 0.08f;
						if (this.type == 531)
						{
							num1015 = 4f;
							num1016 = 0.16f;
						}
						Vector2 vector113 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num1017 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
						float num1018 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
						num1017 = (float)((int)(num1017 / 8f) * 8);
						num1018 = (float)((int)(num1018 / 8f) * 8);
						vector113.X = (float)((int)(vector113.X / 8f) * 8);
						vector113.Y = (float)((int)(vector113.Y / 8f) * 8);
						num1017 -= vector113.X;
						num1018 -= vector113.Y;
						float num1019 = (float)Math.Sqrt((double)(num1017 * num1017 + num1018 * num1018));
						if (num1019 == 0f)
						{
							num1017 = this.velocity.X;
							num1018 = this.velocity.Y;
						}
						else
						{
							num1019 = num1015 / num1019;
							num1017 *= num1019;
							num1018 *= num1019;
						}
						if (Main.player[this.target].dead)
						{
							num1017 = (float)this.direction * num1015 / 2f;
							num1018 = -num1015 / 2f;
						}
						this.spriteDirection = -1;
						if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.ai[0] += 1f;
							if (this.ai[0] > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.023f;
							}
							else
							{
								this.velocity.Y = this.velocity.Y - 0.023f;
							}
							if (this.ai[0] < -100f || this.ai[0] > 100f)
							{
								this.velocity.X = this.velocity.X + 0.023f;
							}
							else
							{
								this.velocity.X = this.velocity.X - 0.023f;
							}
							if (this.ai[0] > 200f)
							{
								this.ai[0] = -200f;
							}
							this.velocity.X = this.velocity.X + num1017 * 0.007f;
							this.velocity.Y = this.velocity.Y + num1018 * 0.007f;
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
							if ((double)this.velocity.X > 1.5)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if ((double)this.velocity.X < -1.5)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y * 0.9f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y * 0.9f;
							}
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						else
						{
							if (this.velocity.X < num1017)
							{
								this.velocity.X = this.velocity.X + num1016;
								if (this.velocity.X < 0f && num1017 > 0f)
								{
									this.velocity.X = this.velocity.X + num1016;
								}
							}
							else if (this.velocity.X > num1017)
							{
								this.velocity.X = this.velocity.X - num1016;
								if (this.velocity.X > 0f && num1017 < 0f)
								{
									this.velocity.X = this.velocity.X - num1016;
								}
							}
							if (this.velocity.Y < num1018)
							{
								this.velocity.Y = this.velocity.Y + num1016;
								if (this.velocity.Y < 0f && num1018 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num1016;
								}
							}
							else if (this.velocity.Y > num1018)
							{
								this.velocity.Y = this.velocity.Y - num1016;
								if (this.velocity.Y > 0f && num1018 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num1016;
								}
							}
							this.rotation = (float)Math.Atan2((double)num1018, (double)num1017);
						}
						if (this.type == 531)
						{
							this.rotation += 1.57079637f;
						}
						float num1020 = 0.5f;
						if (this.collideX)
						{
							this.netUpdate = true;
							this.velocity.X = this.oldVelocity.X * -num1020;
							if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
							{
								this.velocity.X = 2f;
							}
							if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
							{
								this.velocity.X = -2f;
							}
						}
						if (this.collideY)
						{
							this.netUpdate = true;
							this.velocity.Y = this.oldVelocity.Y * -num1020;
							if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = 2f;
							}
							if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = -2f;
							}
						}
						if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
						{
							this.netUpdate = true;
						}
						if (Main.netMode != 1)
						{
							if (Main.netMode != 1 && Main.expertMode && this.target >= 0 && (this.type == 163 || this.type == 238) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.localAI[0] += 1f;
								if (this.justHit)
								{
									this.localAI[0] -= (float)Main.rand.Next(20, 60);
									if (this.localAI[0] < 0f)
									{
										this.localAI[0] = 0f;
									}
								}
								if (this.localAI[0] > (float)Main.rand.Next(180, 900))
								{
									this.localAI[0] = 0f;
									Vector2 vector114 = Main.player[this.target].Center - base.Center;
									vector114.Normalize();
									vector114 *= 8f;
									Projectile.NewProjectile(base.Center.X, base.Center.Y, vector114.X, vector114.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
								}
							}
							int num1021 = (int)base.Center.X / 16;
							int num1022 = (int)base.Center.Y / 16;
							bool flag101 = false;
							for (int num1023 = num1021 - 1; num1023 <= num1021 + 1; num1023++)
							{
								for (int num1024 = num1022 - 1; num1024 <= num1022 + 1; num1024++)
								{
									if (Main.tile[num1023, num1024] == null)
									{
										return;
									}
									if (Main.tile[num1023, num1024].wall > 0)
									{
										flag101 = true;
									}
								}
							}
							if (!flag101)
							{
								if (this.type == 237)
								{
									this.Transform(236);
									return;
								}
								if (this.type == 238)
								{
									this.Transform(163);
									return;
								}
								if (this.type == 240)
								{
									this.Transform(239);
									return;
								}
								if (this.type == 531)
								{
									this.Transform(530);
									return;
								}
								this.Transform(164);
								return;
							}
						}
					}
					else if (this.aiStyle == 41)
					{
						if (this.ai[2] > 1f)
						{
							this.ai[2] -= 1f;
						}
						if (this.ai[2] == 0f)
						{
							this.ai[0] = -100f;
							this.ai[2] = 1f;
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
						}
						if (this.type == 378)
						{
							Vector2 value14 = new Vector2(-6f, -10f);
							value14.X *= (float)this.spriteDirection;
							if (this.ai[1] == 5f)
							{
								this.velocity = Vector2.Zero;
								this.position.X = this.position.X + (float)(this.width / 2);
								this.position.Y = this.position.Y + (float)(this.height / 2);
								this.width = 160;
								this.height = 160;
								this.position.X = this.position.X - (float)(this.width / 2);
								this.position.Y = this.position.Y - (float)(this.height / 2);
								this.dontTakeDamage = true;

								if (this.ai[2] == 1f)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
								return;
							}
						}
						if (this.type == 378 && this.ai[1] != 5f)
						{
							if (this.wet || Vector2.Distance(base.Center, Main.player[this.target].Center) < 64f)
							{
								this.ai[1] = 5f;
								this.ai[2] = 3f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.wet && this.type != 177)
						{
							if (this.collideX)
							{
								this.direction *= -this.direction;
								this.spriteDirection = this.direction;
							}
							if (this.collideY)
							{
								this.TargetClosest(true);
								if (this.oldVelocity.Y < 0f)
								{
									this.velocity.Y = 5f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - 2f;
								}
								this.spriteDirection = this.direction;
							}
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
							this.velocity.Y = this.velocity.Y - 0.3f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						if (this.velocity.Y == 0f)
						{
							if (this.ai[3] == this.position.X)
							{
								this.direction *= -1;
								this.ai[2] = 300f;
							}
							this.ai[3] = 0f;
							this.velocity.X = this.velocity.X * 0.8f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if (this.type == 177)
							{
								this.ai[0] += 2f;
							}
							else
							{
								this.ai[0] += 5f;
							}
							Vector2 vector115 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num1031 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector115.X;
							float num1032 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector115.Y;
							float num1033 = (float)Math.Sqrt((double)(num1031 * num1031 + num1032 * num1032));
							float num1034 = 400f / num1033;
							if (this.type == 177)
							{
								num1034 *= 5f;
							}
							else
							{
								num1034 *= 10f;
							}
							if (num1034 > 30f)
							{
								num1034 = 30f;
							}
							this.ai[0] += (float)((int)num1034);
							if (this.ai[0] >= 0f)
							{
								this.netUpdate = true;
								if (this.ai[2] == 1f)
								{
									this.TargetClosest(true);
								}
								if (this.type == 177)
								{
									if (this.ai[1] == 2f)
									{
										this.velocity.Y = -11.5f;
										this.velocity.X = this.velocity.X + 2f * (float)this.direction;
										if (num1033 < 350f && num1033 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -200f;
										this.ai[1] = 0f;
										this.ai[3] = this.position.X;
									}
									else
									{
										this.velocity.Y = -7.5f;
										this.velocity.X = this.velocity.X + (float)(4 * this.direction);
										if (num1033 < 350f && num1033 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -120f;
										this.ai[1] += 1f;
									}
								}
								else if (this.ai[1] == 3f)
								{
									this.velocity.Y = -9f;
									this.velocity.X = this.velocity.X + (float)(3 * this.direction);
									if (num1033 < 350f && num1033 > 200f)
									{
										this.velocity.X = this.velocity.X + (float)this.direction;
									}
									this.ai[0] = -200f;
									this.ai[1] = 0f;
									this.ai[3] = this.position.X;
								}
								else
								{
									this.velocity.Y = -5f;
									this.velocity.X = this.velocity.X + (float)(5 * this.direction);
									if (num1033 < 350f && num1033 > 200f)
									{
										this.velocity.X = this.velocity.X + (float)this.direction;
									}
									this.ai[0] = -120f;
									this.ai[1] += 1f;
								}
							}
							else if (this.ai[0] >= -30f)
							{
								this.aiAction = 1;
							}
							this.spriteDirection = this.direction;
							return;
						}
						if (this.target < 255)
						{
							if (this.type == 177)
							{
								bool flag102 = false;
								if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									flag102 = true;
									this.velocity.X = this.velocity.X * 0.92f;
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
										this.velocity.Y = this.velocity.Y + 0.1f;
									}
								}
								if (!flag102 && ((this.direction == 1 && this.velocity.X < 4f) || (this.direction == -1 && this.velocity.X > -4f)))
								{
									if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
									{
										this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
										return;
									}
									this.velocity.X = this.velocity.X * 0.93f;
									return;
								}
							}
							else if ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f))
							{
								if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
								{
									this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
									return;
								}
								this.velocity.X = this.velocity.X * 0.93f;
								return;
							}
						}
					}
					else if (this.aiStyle == 42)
					{
						this.TargetClosest(true);
						if (this.ai[0] == 0f)
						{
							if (this.target >= 0)
							{
								Vector2 vector116 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num1035 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector116.X;
								float num1036 = Main.player[this.target].position.Y - vector116.Y;
								float num1037 = (float)Math.Sqrt((double)(num1035 * num1035 + num1036 * num1036));
								if (num1037 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.ai[0] = 1f;
								}
							}
							if (this.velocity.X != 0f || this.velocity.Y < 0f || this.velocity.Y > 2f || this.life != this.lifeMax)
							{
								this.ai[0] = 1f;
								return;
							}
						}
						else
						{
							this.ai[0] += 1f;
							if (this.ai[0] >= 21f)
							{
								this.ai[0] = 21f;
								this.Transform(196);
								return;
							}
						}
					}
					else if (this.aiStyle == 43)
					{
						int num1038 = 0;
						for (int num1039 = 0; num1039 < 255; num1039++)
						{
							if (Main.player[num1039].active && !Main.player[num1039].dead && (base.Center - Main.player[num1039].Center).Length() < 1000f)
							{
								num1038++;
							}
						}
						if (Main.expertMode)
						{
							int num1040 = (int)(20f * (1f - (float)this.life / (float)this.lifeMax));
							this.defense = this.defDefense + num1040;
						}
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						bool dead4 = Main.player[this.target].dead;
						if (dead4 && Main.expertMode)
						{
							if ((double)this.position.Y < Main.worldSurface * 16.0 + 2000.0)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
							}
							if (this.position.X < (float)(Main.maxTilesX * 8))
							{
								this.velocity.X = this.velocity.X - 0.04f;
							}
							else
							{
								this.velocity.X = this.velocity.X + 0.04f;
							}
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == -1f)
						{
							if (Main.netMode != 1)
							{
								float num1041 = this.ai[1];
								int num1042;
								do
								{
									num1042 = Main.rand.Next(3);
									if (num1042 == 1)
									{
										num1042 = 2;
									}
									else if (num1042 == 2)
									{
										num1042 = 3;
									}
								}
								while ((float)num1042 == num1041);
								this.ai[0] = (float)num1042;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							int num1043 = 2;
							if (Main.expertMode)
							{
								if (this.life < this.lifeMax / 2)
								{
									num1043++;
								}
								if (this.life < this.lifeMax / 3)
								{
									num1043++;
								}
								if (this.life < this.lifeMax / 5)
								{
									num1043++;
								}
							}
							if (this.ai[1] > (float)(2 * num1043) && this.ai[1] % 2f == 0f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.netUpdate = true;
								return;
							}
							if (this.ai[1] % 2f == 0f)
							{
								this.TargetClosest(true);
								if (Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 20f)
								{
									this.localAI[0] = 1f;
									this.ai[1] += 1f;
									this.ai[2] = 0f;
									float num1044 = 12f;
									if (Main.expertMode)
									{
										num1044 = 16f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1044 += 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1044 += 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1044 += 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											num1044 += 2f;
										}
									}
									Vector2 vector117 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num1045 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector117.X;
									float num1046 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector117.Y;
									float num1047 = (float)Math.Sqrt((double)(num1045 * num1045 + num1046 * num1046));
									num1047 = num1044 / num1047;
									this.velocity.X = num1045 * num1047;
									this.velocity.Y = num1046 * num1047;
									this.spriteDirection = this.direction;
									return;
								}
								this.localAI[0] = 0f;
								float num1048 = 12f;
								float num1049 = 0.15f;
								if (Main.expertMode)
								{
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										num1048 += 1f;
										num1049 += 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num1048 += 1f;
										num1049 += 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										num1048 += 2f;
										num1049 += 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										num1048 += 2f;
										num1049 += 0.1f;
									}
								}
								if (this.position.Y + (float)(this.height / 2) < Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))
								{
									this.velocity.Y = this.velocity.Y + num1049;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - num1049;
								}
								if (this.velocity.Y < -12f)
								{
									this.velocity.Y = -num1048;
								}
								if (this.velocity.Y > 12f)
								{
									this.velocity.Y = num1048;
								}
								if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > 600f)
								{
									this.velocity.X = this.velocity.X + 0.15f * (float)this.direction;
								}
								else if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 300f)
								{
									this.velocity.X = this.velocity.X - 0.15f * (float)this.direction;
								}
								else
								{
									this.velocity.X = this.velocity.X * 0.8f;
								}
								if (this.velocity.X < -16f)
								{
									this.velocity.X = -16f;
								}
								if (this.velocity.X > 16f)
								{
									this.velocity.X = 16f;
								}
								this.spriteDirection = this.direction;
								return;
							}
							else
							{
								if (this.velocity.X < 0f)
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
								this.spriteDirection = this.direction;
								int num1050 = 600;
								if (Main.expertMode)
								{
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										num1050 = 300;
									}
									else if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										num1050 = 450;
									}
									else if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num1050 = 500;
									}
									else if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										num1050 = 550;
									}
								}
								int num1051 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
								{
									num1051 = -1;
								}
								if (this.direction == num1051 && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > (float)num1050)
								{
									this.ai[2] = 1f;
								}
								if (this.ai[2] != 1f)
								{
									this.localAI[0] = 1f;
									return;
								}
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								this.localAI[0] = 0f;
								this.velocity *= 0.9f;
								float num1052 = 0.1f;
								if (Main.expertMode)
								{
									if (this.life < this.lifeMax / 2)
									{
										this.velocity *= 0.9f;
										num1052 += 0.05f;
									}
									if (this.life < this.lifeMax / 3)
									{
										this.velocity *= 0.9f;
										num1052 += 0.05f;
									}
									if (this.life < this.lifeMax / 5)
									{
										this.velocity *= 0.9f;
										num1052 += 0.05f;
									}
								}
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num1052)
								{
									this.ai[2] = 0f;
									this.ai[1] += 1f;
									return;
								}
							}
						}
						else if (this.ai[0] == 2f)
						{
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
							float num1053 = 12f;
							float num1054 = 0.07f;
							if (Main.expertMode)
							{
								num1054 = 0.1f;
							}
							Vector2 vector118 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num1055 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector118.X;
							float num1056 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector118.Y;
							float num1057 = (float)Math.Sqrt((double)(num1055 * num1055 + num1056 * num1056));
							if (num1057 < 200f)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.netUpdate = true;
								return;
							}
							num1057 = num1053 / num1057;
							if (this.velocity.X < num1055)
							{
								this.velocity.X = this.velocity.X + num1054;
								if (this.velocity.X < 0f && num1055 > 0f)
								{
									this.velocity.X = this.velocity.X + num1054;
								}
							}
							else if (this.velocity.X > num1055)
							{
								this.velocity.X = this.velocity.X - num1054;
								if (this.velocity.X > 0f && num1055 < 0f)
								{
									this.velocity.X = this.velocity.X - num1054;
								}
							}
							if (this.velocity.Y < num1056)
							{
								this.velocity.Y = this.velocity.Y + num1054;
								if (this.velocity.Y < 0f && num1056 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num1054;
									return;
								}
							}
							else if (this.velocity.Y > num1056)
							{
								this.velocity.Y = this.velocity.Y - num1054;
								if (this.velocity.Y > 0f && num1056 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num1054;
									return;
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.localAI[0] = 0f;
							this.TargetClosest(true);
							Vector2 vector119 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
							Vector2 vector120 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num1058 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector120.X;
							float num1059 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector120.Y;
							float num1060 = (float)Math.Sqrt((double)(num1058 * num1058 + num1059 * num1059));
							this.ai[1] += 1f;
							if (Main.expertMode)
							{
								this.ai[1] += (float)(num1038 / 2);
								if ((double)this.life < (double)this.lifeMax * 0.75)
								{
									this.ai[1] += 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[1] += 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.25)
								{
									this.ai[1] += 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									this.ai[1] += 0.25f;
								}
							}
							bool flag103 = false;
							if (this.ai[1] > 40f)
							{
								this.ai[1] = 0f;
								this.ai[2] += 1f;
								flag103 = true;
							}
							if (Collision.CanHit(vector119, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && flag103)
							{
								if (Main.netMode != 1)
								{
									int num1061 = Main.rand.Next(210, 212);
									int num1062 = NPC.NewNPC((int)vector119.X, (int)vector119.Y, num1061, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num1062].velocity.X = (float)Main.rand.Next(-200, 201) * 0.002f;
									Main.npc[num1062].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.002f;
									Main.npc[num1062].localAI[0] = 60f;
									Main.npc[num1062].netUpdate = true;
								}
							}
							if (num1060 > 400f || !Collision.CanHit(new Vector2(vector119.X, vector119.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num1063 = 14f;
								float num1064 = 0.1f;
								vector120 = vector119;
								num1058 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector120.X;
								num1059 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector120.Y;
								num1060 = (float)Math.Sqrt((double)(num1058 * num1058 + num1059 * num1059));
								num1060 = num1063 / num1060;
								if (this.velocity.X < num1058)
								{
									this.velocity.X = this.velocity.X + num1064;
									if (this.velocity.X < 0f && num1058 > 0f)
									{
										this.velocity.X = this.velocity.X + num1064;
									}
								}
								else if (this.velocity.X > num1058)
								{
									this.velocity.X = this.velocity.X - num1064;
									if (this.velocity.X > 0f && num1058 < 0f)
									{
										this.velocity.X = this.velocity.X - num1064;
									}
								}
								if (this.velocity.Y < num1059)
								{
									this.velocity.Y = this.velocity.Y + num1064;
									if (this.velocity.Y < 0f && num1059 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num1064;
									}
								}
								else if (this.velocity.Y > num1059)
								{
									this.velocity.Y = this.velocity.Y - num1064;
									if (this.velocity.Y > 0f && num1059 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num1064;
									}
								}
							}
							else
							{
								this.velocity *= 0.9f;
							}
							this.spriteDirection = this.direction;
							if (this.ai[2] > 5f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 1f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 3f)
						{
							float num1065 = 4f;
							float num1066 = 0.05f;
							if (Main.expertMode)
							{
								num1066 = 0.075f;
								num1065 = 6f;
							}
							Vector2 vector121 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
							Vector2 vector122 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num1067 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector122.X;
							float num1068 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector122.Y;
							float num1069 = (float)Math.Sqrt((double)(num1067 * num1067 + num1068 * num1068));
							this.ai[1] += 1f;
							bool flag104 = false;
							if (Main.expertMode)
							{
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									if (this.ai[1] % 15f == 14f)
									{
										flag104 = true;
									}
								}
								else if (this.life < this.lifeMax / 3)
								{
									if (this.ai[1] % 25f == 24f)
									{
										flag104 = true;
									}
								}
								else if (this.life < this.lifeMax / 2)
								{
									if (this.ai[1] % 30f == 29f)
									{
										flag104 = true;
									}
								}
								else if (this.ai[1] % 35f == 34f)
								{
									flag104 = true;
								}
							}
							else if (this.ai[1] % 40f == 39f)
							{
								flag104 = true;
							}
							if (flag104 && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(vector121, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								if (Main.netMode != 1)
								{
									float num1070 = 8f;
									if (Main.expertMode)
									{
										num1070 += 2f;
									}
									if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.1)
									{
										num1070 += 3f;
									}
									float num1071 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector121.X + (float)Main.rand.Next(-80, 81);
									float num1072 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector121.Y + (float)Main.rand.Next(-40, 41);
									float num1073 = (float)Math.Sqrt((double)(num1071 * num1071 + num1072 * num1072));
									num1073 = num1070 / num1073;
									num1071 *= num1073;
									num1072 *= num1073;
									int num1074 = 11;
									int num1075 = 55;
									int num1076 = Projectile.NewProjectile(vector121.X, vector121.Y, num1071, num1072, num1075, num1074, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num1076].timeLeft = 300;
								}
							}
							if (!Collision.CanHit(new Vector2(vector121.X, vector121.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								num1065 = 14f;
								num1066 = 0.1f;
								vector122 = vector121;
								num1067 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector122.X;
								num1068 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector122.Y;
								num1069 = (float)Math.Sqrt((double)(num1067 * num1067 + num1068 * num1068));
								num1069 = num1065 / num1069;
								if (this.velocity.X < num1067)
								{
									this.velocity.X = this.velocity.X + num1066;
									if (this.velocity.X < 0f && num1067 > 0f)
									{
										this.velocity.X = this.velocity.X + num1066;
									}
								}
								else if (this.velocity.X > num1067)
								{
									this.velocity.X = this.velocity.X - num1066;
									if (this.velocity.X > 0f && num1067 < 0f)
									{
										this.velocity.X = this.velocity.X - num1066;
									}
								}
								if (this.velocity.Y < num1068)
								{
									this.velocity.Y = this.velocity.Y + num1066;
									if (this.velocity.Y < 0f && num1068 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num1066;
									}
								}
								else if (this.velocity.Y > num1068)
								{
									this.velocity.Y = this.velocity.Y - num1066;
									if (this.velocity.Y > 0f && num1068 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num1066;
									}
								}
							}
							else if (num1069 > 100f)
							{
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								num1069 = num1065 / num1069;
								if (this.velocity.X < num1067)
								{
									this.velocity.X = this.velocity.X + num1066;
									if (this.velocity.X < 0f && num1067 > 0f)
									{
										this.velocity.X = this.velocity.X + num1066 * 2f;
									}
								}
								else if (this.velocity.X > num1067)
								{
									this.velocity.X = this.velocity.X - num1066;
									if (this.velocity.X > 0f && num1067 < 0f)
									{
										this.velocity.X = this.velocity.X - num1066 * 2f;
									}
								}
								if (this.velocity.Y < num1068)
								{
									this.velocity.Y = this.velocity.Y + num1066;
									if (this.velocity.Y < 0f && num1068 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num1066 * 2f;
									}
								}
								else if (this.velocity.Y > num1068)
								{
									this.velocity.Y = this.velocity.Y - num1066;
									if (this.velocity.Y > 0f && num1068 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num1066 * 2f;
									}
								}
							}
							if (this.ai[1] > 800f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 3f;
								this.netUpdate = true;
								return;
							}
						}
					}
					else if (this.aiStyle == 44)
					{
						this.noGravity = true;
						if (this.collideX)
						{
							if (this.oldVelocity.X > 0f)
							{
								this.direction = -1;
							}
							else
							{
								this.direction = 1;
							}
							this.velocity.X = (float)this.direction;
						}
						if (this.collideY)
						{
							if (this.oldVelocity.Y > 0f)
							{
								this.directionY = -1;
							}
							else
							{
								this.directionY = 1;
							}
							this.velocity.Y = (float)this.directionY;
						}
						int num1077 = this.target;
						int direction5 = this.direction;
						if (this.target == 255 || Main.player[this.target].dead || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[0] = 90f;
							this.TargetClosest(true);
						}
						else if (this.ai[0] > 0f)
						{
							this.ai[0] -= 1f;
							this.TargetClosest(true);
						}
						if (this.netUpdate && num1077 == this.target && direction5 == this.direction)
						{
							this.netUpdate = false;
						}
						float num1078 = 0.05f;
						float num1079 = 0.01f;
						float num1080 = 3f;
						float num1081 = 1f;
						float num1082 = 30f;
						float num1083 = 100f;
						float num1084 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
						float num1085 = Main.player[this.target].position.Y - (float)(this.height / 2);
						if (this.type == 509)
						{
							num1078 = 0.09f;
							num1079 = 0.03f;
							num1080 = 5f;
							num1081 = 2f;
							num1082 = 40f;
							num1083 = 150f;
							num1085 = Main.player[this.target].Center.Y - (float)(this.height / 2);
							this.rotation = this.velocity.X * 0.1f;
							for (int num1086 = 0; num1086 < 200; num1086++)
							{
								if (num1086 != this.whoAmI && Main.npc[num1086].active && Main.npc[num1086].type == this.type && Math.Abs(this.position.X - Main.npc[num1086].position.X) + Math.Abs(this.position.Y - Main.npc[num1086].position.Y) < (float)this.width)
								{
									if (this.position.X < Main.npc[num1086].position.X)
									{
										this.velocity.X = this.velocity.X - 0.05f;
									}
									else
									{
										this.velocity.X = this.velocity.X + 0.05f;
									}
									if (this.position.Y < Main.npc[num1086].position.Y)
									{
										this.velocity.Y = this.velocity.Y - 0.05f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + 0.05f;
									}
								}
							}
						}
						if (this.ai[0] <= 0f)
						{
							num1080 *= 0.8f;
							num1078 *= 0.7f;
							num1085 = base.Center.Y + (float)(this.directionY * 1000);
							if (this.velocity.X < 0f)
							{
								this.direction = -1;
							}
							else if (this.velocity.X > 0f || this.direction == 0)
							{
								this.direction = 1;
							}
						}
						if (num1084 > num1082)
						{
							if (this.direction == -1 && this.velocity.X > -num1080)
							{
								this.velocity.X = this.velocity.X - num1078;
								if (this.velocity.X > num1080)
								{
									this.velocity.X = this.velocity.X - num1078;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X - num1078 / 2f;
								}
								if (this.velocity.X < -num1080)
								{
									this.velocity.X = -num1080;
								}
							}
							else if (this.direction == 1 && this.velocity.X < num1080)
							{
								this.velocity.X = this.velocity.X + num1078;
								if (this.velocity.X < -num1080)
								{
									this.velocity.X = this.velocity.X + num1078;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X + num1078 / 2f;
								}
								if (this.velocity.X > num1080)
								{
									this.velocity.X = num1080;
								}
							}
						}
						if (num1084 > num1083)
						{
							num1085 -= num1083 / 2f;
						}
						if (this.position.Y < num1085)
						{
							this.velocity.Y = this.velocity.Y + num1079;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + num1079;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y - num1079;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - num1079;
							}
						}
						if (this.velocity.Y < -num1081)
						{
							this.velocity.Y = -num1081;
						}
						if (this.velocity.Y > num1081)
						{
							this.velocity.Y = num1081;
							return;
						}
					}
					else if (this.aiStyle == 45)
					{
						NPC.golemBoss = this.whoAmI;
						if (this.localAI[0] == 0f && Main.netMode != 1)
						{
							this.localAI[0] = 1f;
							NPC.NewNPC((int)base.Center.X - 84, (int)base.Center.Y - 9, 247, 0, 0f, 0f, 0f, 0f, 255);
							NPC.NewNPC((int)base.Center.X + 78, (int)base.Center.Y - 9, 248, 0, 0f, 0f, 0f, 0f, 255);
							NPC.NewNPC((int)base.Center.X - 3, (int)base.Center.Y - 57, 246, 0, 0f, 0f, 0f, 0f, 255);
						}
						if (this.target >= 0 && Main.player[this.target].dead)
						{
							this.TargetClosest(true);
							if (Main.player[this.target].dead)
							{
								this.noTileCollide = true;
							}
						}
						if (this.alpha > 0)
						{
							this.alpha -= 10;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
							this.ai[1] = 0f;
						}
						bool flag105 = false;
						bool flag106 = false;
						bool flag107 = false;
						this.dontTakeDamage = false;
						for (int num1087 = 0; num1087 < 200; num1087++)
						{
							if (Main.npc[num1087].active && Main.npc[num1087].type == 246)
							{
								flag105 = true;
							}
							if (Main.npc[num1087].active && Main.npc[num1087].type == 247)
							{
								flag106 = true;
							}
							if (Main.npc[num1087].active && Main.npc[num1087].type == 248)
							{
								flag107 = true;
							}
						}
						this.dontTakeDamage = flag105;
						if (this.ai[0] == 0f)
						{
							this.noTileCollide = false;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.8f;
								this.ai[1] += 1f;
								if (this.ai[1] > 0f)
								{
									if (!flag106)
									{
										this.ai[1] += 2f;
									}
									if (!flag107)
									{
										this.ai[1] += 2f;
									}
									if (!flag105)
									{
										this.ai[1] += 2f;
									}
									if (this.life < this.lifeMax)
									{
										this.ai[1] += 1f;
									}
									if (this.life < this.lifeMax / 2)
									{
										this.ai[1] += 4f;
									}
									if (this.life < this.lifeMax / 3)
									{
										this.ai[1] += 8f;
									}
								}
								if (this.ai[1] >= 300f)
								{
									this.ai[1] = -20f;
									this.frameCounter = 0.0;
								}
								else if (this.ai[1] == -1f)
								{
									this.TargetClosest(true);
									this.velocity.X = (float)(4 * this.direction);
									this.velocity.Y = -12.1f;
									this.ai[0] = 1f;
									this.ai[1] = 0f;
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							if (this.velocity.Y == 0f)
							{
								this.ai[0] = 0f;
							}
							else
							{
								this.TargetClosest(true);
								if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.velocity.Y = this.velocity.Y + 0.2f;
								}
								else
								{
									if (this.direction < 0)
									{
										this.velocity.X = this.velocity.X - 0.2f;
									}
									else if (this.direction > 0)
									{
										this.velocity.X = this.velocity.X + 0.2f;
									}
									float num1094 = 3f;
									if (this.life < this.lifeMax)
									{
										num1094 += 1f;
									}
									if (this.life < this.lifeMax / 2)
									{
										num1094 += 1f;
									}
									if (this.life < this.lifeMax / 4)
									{
										num1094 += 1f;
									}
									if (this.velocity.X < -num1094)
									{
										this.velocity.X = -num1094;
									}
									if (this.velocity.X > num1094)
									{
										this.velocity.X = num1094;
									}
								}
							}
						}
						if (this.target <= 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						int num1095 = 3000;
						if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num1095)
						{
							this.TargetClosest(true);
							if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num1095)
							{
								this.active = false;
								return;
							}
						}
					}
					else if (this.aiStyle == 46)
					{
						this.noTileCollide = true;
						if (NPC.golemBoss < 0)
						{
							this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							return;
						}
						float num1096 = 12f;
						Vector2 vector123 = new Vector2(base.Center.X, base.Center.Y);
						float num1097 = Main.npc[NPC.golemBoss].Center.X - vector123.X;
						float num1098 = Main.npc[NPC.golemBoss].Center.Y - vector123.Y;
						num1098 -= 57f;
						num1097 -= 3f;
						float num1099 = (float)Math.Sqrt((double)(num1097 * num1097 + num1098 * num1098));
						if (num1099 < 20f)
						{
							this.rotation = 0f;
							this.velocity.X = num1097;
							this.velocity.Y = num1098;
						}
						else
						{
							num1099 = num1096 / num1099;
							this.velocity.X = num1097 * num1099;
							this.velocity.Y = num1098 * num1099;
							this.rotation = this.velocity.X * 0.1f;
						}
						if (this.alpha > 0)
						{
							this.alpha -= 10;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
							this.ai[1] = 30f;
						}
						if (this.ai[0] == 0f)
						{
							this.ai[1] += 1f;
							int num1100 = 300;
							if (this.ai[1] < 20f || this.ai[1] > (float)(num1100 - 20))
							{
								this.localAI[0] = 1f;
							}
							else
							{
								this.localAI[0] = 0f;
							}
							if (this.ai[1] >= (float)num1100)
							{
								this.TargetClosest(true);
								this.ai[1] = 0f;
								Vector2 vector124 = new Vector2(base.Center.X, base.Center.Y + 10f);
								float num1101 = 8f;
								float num1102 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector124.X;
								float num1103 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector124.Y;
								float num1104 = (float)Math.Sqrt((double)(num1102 * num1102 + num1103 * num1103));
								num1104 = num1101 / num1104;
								num1102 *= num1104;
								num1103 *= num1104;
								int num1105 = 18;
								int num1106 = 258;
								if (Main.netMode != 1)
								{
									Projectile.NewProjectile(vector124.X, vector124.Y, num1102, num1103, num1106, num1105, 0f, Main.myPlayer, 0f, 0f);
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.TargetClosest(true);
							Vector2 vector125 = new Vector2(base.Center.X, base.Center.Y + 10f);
							if (Main.player[this.target].Center.X < base.Center.X - (float)this.width)
							{
								this.localAI[1] = -1f;
								vector125.X -= 40f;
							}
							else if (Main.player[this.target].Center.X > base.Center.X + (float)this.width)
							{
								this.localAI[1] = 1f;
								vector125.X += 40f;
							}
							else
							{
								this.localAI[1] = 0f;
							}
							this.ai[1] += 1f;
							if ((double)this.life < (double)this.lifeMax * 0.4)
							{
								this.ai[1] += 1f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.2)
							{
								this.ai[1] += 1f;
							}
							int num1107 = 300;
							if (this.ai[1] < 20f || this.ai[1] > (float)(num1107 - 20))
							{
								this.localAI[0] = 1f;
							}
							else
							{
								this.localAI[0] = 0f;
							}
							if (this.ai[1] >= (float)num1107)
							{
								this.TargetClosest(true);
								this.ai[1] = 0f;
								float num1108 = 8f;
								float num1109 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector125.X;
								float num1110 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector125.Y;
								float num1111 = (float)Math.Sqrt((double)(num1109 * num1109 + num1110 * num1110));
								num1111 = num1108 / num1111;
								num1109 *= num1111;
								num1110 *= num1111;
								int num1112 = 24;
								int num1113 = 258;
								if (Main.netMode != 1)
								{
									Projectile.NewProjectile(vector125.X, vector125.Y, num1109, num1110, num1113, num1112, 0f, Main.myPlayer, 0f, 0f);
								}
							}
							this.ai[2] += 1f;
							if (this.life < this.lifeMax / 3)
							{
								this.ai[2] += 1f;
							}
							if (this.life < this.lifeMax / 4)
							{
								this.ai[2] += 1f;
							}
							if (this.life < this.lifeMax / 5)
							{
								this.ai[2] += 1f;
							}
							if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.ai[2] += 4f;
							}
							if (this.ai[2] > (float)(60 + Main.rand.Next(600)))
							{
								this.ai[2] = 0f;
								int num1114 = 28;
								int num1115 = 259;
								if (this.localAI[1] == 0f)
								{
									for (int num1116 = 0; num1116 < 2; num1116++)
									{
										vector125 = new Vector2(base.Center.X, base.Center.Y - 22f);
										if (num1116 == 0)
										{
											vector125.X -= 18f;
										}
										else
										{
											vector125.X += 18f;
										}
										float num1117 = 11f;
										float num1118 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector125.X;
										float num1119 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector125.Y;
										float num1120 = (float)Math.Sqrt((double)(num1118 * num1118 + num1119 * num1119));
										num1120 = num1117 / num1120;
										num1118 *= num1120;
										num1119 *= num1120;
										vector125.X += num1118 * 3f;
										vector125.Y += num1119 * 3f;
										if (Main.netMode != 1)
										{
											int num1121 = Projectile.NewProjectile(vector125.X, vector125.Y, num1118, num1119, num1115, num1114, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num1121].timeLeft = 300;
										}
									}
								}
								else if (this.localAI[1] != 0f)
								{
									vector125 = new Vector2(base.Center.X, base.Center.Y - 22f);
									if (this.localAI[1] == -1f)
									{
										vector125.X -= 30f;
									}
									else if (this.localAI[1] == 1f)
									{
										vector125.X += 30f;
									}
									float num1122 = 12f;
									float num1123 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector125.X;
									float num1124 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector125.Y;
									float num1125 = (float)Math.Sqrt((double)(num1123 * num1123 + num1124 * num1124));
									num1125 = num1122 / num1125;
									num1123 *= num1125;
									num1124 *= num1125;
									vector125.X += num1123 * 3f;
									vector125.Y += num1124 * 3f;
									if (Main.netMode != 1)
									{
										int num1126 = Projectile.NewProjectile(vector125.X, vector125.Y, num1123, num1124, num1115, num1114, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num1126].timeLeft = 300;
									}
								}
							}
						}
						if (this.life < this.lifeMax / 2)
						{
							this.ai[0] = 1f;
							return;
						}
						this.ai[0] = 0f;
						return;
					}
					else if (this.aiStyle == 47)
					{
						if (NPC.golemBoss < 0)
						{
							this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							return;
						}
						if (this.alpha > 0)
						{
							this.alpha -= 10;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
							this.ai[1] = 0f;
						}
						if (this.ai[0] == 0f)
						{
							this.noTileCollide = true;
							float num1127 = 14f;
							if (this.life < this.lifeMax / 2)
							{
								num1127 += 3f;
							}
							if (this.life < this.lifeMax / 4)
							{
								num1127 += 3f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
							{
								num1127 += 8f;
							}
							Vector2 vector126 = new Vector2(base.Center.X, base.Center.Y);
							float num1128 = Main.npc[NPC.golemBoss].Center.X - vector126.X;
							float num1129 = Main.npc[NPC.golemBoss].Center.Y - vector126.Y;
							num1129 -= 9f;
							if (this.type == 247)
							{
								num1128 -= 84f;
							}
							else
							{
								num1128 += 78f;
							}
							float num1130 = (float)Math.Sqrt((double)(num1128 * num1128 + num1129 * num1129));
							if (num1130 < 12f + num1127)
							{
								this.rotation = 0f;
								this.velocity.X = num1128;
								this.velocity.Y = num1129;
								this.ai[1] += 1f;
								if (this.life < this.lifeMax / 2)
								{
									this.ai[1] += 1f;
								}
								if (this.life < this.lifeMax / 4)
								{
									this.ai[1] += 1f;
								}
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									this.ai[1] += 10f;
								}
								if (this.ai[1] >= 60f)
								{
									this.TargetClosest(true);
									if ((this.type == 247 && base.Center.X + 100f > Main.player[this.target].Center.X) || (this.type == 248 && base.Center.X - 100f < Main.player[this.target].Center.X))
									{
										this.ai[1] = 0f;
										this.ai[0] = 1f;
										return;
									}
									this.ai[1] = 0f;
									return;
								}
							}
							else
							{
								num1130 = num1127 / num1130;
								this.velocity.X = num1128 * num1130;
								this.velocity.Y = num1129 * num1130;
								this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
								if (this.type == 247)
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
									return;
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.noTileCollide = true;
							this.collideX = false;
							this.collideY = false;
							float num1131 = 12f;
							if (this.life < this.lifeMax / 2)
							{
								num1131 += 4f;
							}
							if (this.life < this.lifeMax / 4)
							{
								num1131 += 4f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
							{
								num1131 += 10f;
							}
							Vector2 vector127 = new Vector2(base.Center.X, base.Center.Y);
							float num1132 = Main.player[this.target].Center.X - vector127.X;
							float num1133 = Main.player[this.target].Center.Y - vector127.Y;
							float num1134 = (float)Math.Sqrt((double)(num1132 * num1132 + num1133 * num1133));
							num1134 = num1131 / num1134;
							this.velocity.X = num1132 * num1134;
							this.velocity.Y = num1133 * num1134;
							this.ai[0] = 2f;
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
							if (this.type == 247)
							{
								this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
								return;
							}
						}
						else if (this.ai[0] == 2f)
						{
							if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
							{
								if (this.velocity.X > 0f && base.Center.X > Main.player[this.target].Center.X)
								{
									this.noTileCollide = false;
								}
								if (this.velocity.X < 0f && base.Center.X < Main.player[this.target].Center.X)
								{
									this.noTileCollide = false;
								}
							}
							else
							{
								if (this.velocity.Y > 0f && base.Center.Y > Main.player[this.target].Center.Y)
								{
									this.noTileCollide = false;
								}
								if (this.velocity.Y < 0f && base.Center.Y < Main.player[this.target].Center.Y)
								{
									this.noTileCollide = false;
								}
							}
							Vector2 vector128 = new Vector2(base.Center.X, base.Center.Y);
							float num1135 = Main.npc[NPC.golemBoss].Center.X - vector128.X;
							float num1136 = Main.npc[NPC.golemBoss].Center.Y - vector128.Y;
							num1135 += Main.npc[NPC.golemBoss].velocity.X;
							num1136 += Main.npc[NPC.golemBoss].velocity.Y;
							num1136 -= 9f;
							if (this.type == 247)
							{
								num1135 -= 84f;
							}
							else
							{
								num1135 += 78f;
							}
							float num1137 = (float)Math.Sqrt((double)(num1135 * num1135 + num1136 * num1136));
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
							{
								this.knockBackResist = 0f;
								if (num1137 > 700f || this.collideX || this.collideY)
								{
									this.noTileCollide = true;
									this.ai[0] = 0f;
									return;
								}
							}
							else
							{
								bool flag108 = this.justHit;
								if (flag108)
								{
									int num1138 = 0;
									while (num1138 < 200)
									{
										if (Main.npc[num1138].active && Main.npc[num1138].type == 246)
										{
											if (Main.npc[num1138].life < Main.npc[num1138].lifeMax / 2)
											{
												if (this.knockBackResist == 0f)
												{
													flag108 = false;
												}
												this.knockBackResist = 0f;
												break;
											}
											break;
										}
										else
										{
											num1138++;
										}
									}
								}
								if (num1137 > 600f || this.collideX || this.collideY || flag108)
								{
									this.noTileCollide = true;
									this.ai[0] = 0f;
									return;
								}
							}
						}
						else if (this.ai[0] == 3f)
						{
							this.noTileCollide = true;
							float num1139 = 12f;
							float num1140 = 0.4f;
							Vector2 vector129 = new Vector2(base.Center.X, base.Center.Y);
							float num1141 = Main.player[this.target].Center.X - vector129.X;
							float num1142 = Main.player[this.target].Center.Y - vector129.Y;
							float num1143 = (float)Math.Sqrt((double)(num1141 * num1141 + num1142 * num1142));
							num1143 = num1139 / num1143;
							num1141 *= num1143;
							num1142 *= num1143;
							if (this.velocity.X < num1141)
							{
								this.velocity.X = this.velocity.X + num1140;
								if (this.velocity.X < 0f && num1141 > 0f)
								{
									this.velocity.X = this.velocity.X + num1140 * 2f;
								}
							}
							else if (this.velocity.X > num1141)
							{
								this.velocity.X = this.velocity.X - num1140;
								if (this.velocity.X > 0f && num1141 < 0f)
								{
									this.velocity.X = this.velocity.X - num1140 * 2f;
								}
							}
							if (this.velocity.Y < num1142)
							{
								this.velocity.Y = this.velocity.Y + num1140;
								if (this.velocity.Y < 0f && num1142 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num1140 * 2f;
								}
							}
							else if (this.velocity.Y > num1142)
							{
								this.velocity.Y = this.velocity.Y - num1140;
								if (this.velocity.Y > 0f && num1142 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num1140 * 2f;
								}
							}
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
							if (this.type == 247)
							{
								this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
								return;
							}
						}
					}
					else if (this.aiStyle == 48)
					{
						bool flag109 = false;
						if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.noTileCollide = true;
							flag109 = true;
						}
						else
						{
							this.noTileCollide = false;
						}
						if (NPC.golemBoss < 0)
						{
							this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							return;
						}
						this.TargetClosest(true);
						float num1144 = 7f;
						float num1145 = 0.05f;
						Vector2 vector130 = new Vector2(base.Center.X, base.Center.Y);
						float num1146 = Main.player[this.target].Center.X - vector130.X;
						float num1147 = Main.player[this.target].Center.Y - vector130.Y - 300f;
						float num1148 = (float)Math.Sqrt((double)(num1146 * num1146 + num1147 * num1147));
						num1148 = num1144 / num1148;
						num1146 *= num1148;
						num1147 *= num1148;
						if (this.velocity.X < num1146)
						{
							this.velocity.X = this.velocity.X + num1145;
							if (this.velocity.X < 0f && num1146 > 0f)
							{
								this.velocity.X = this.velocity.X + num1145;
							}
						}
						else if (this.velocity.X > num1146)
						{
							this.velocity.X = this.velocity.X - num1145;
							if (this.velocity.X > 0f && num1146 < 0f)
							{
								this.velocity.X = this.velocity.X - num1145;
							}
						}
						if (this.velocity.Y < num1147)
						{
							this.velocity.Y = this.velocity.Y + num1145;
							if (this.velocity.Y < 0f && num1147 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num1145;
							}
						}
						else if (this.velocity.Y > num1147)
						{
							this.velocity.Y = this.velocity.Y - num1145;
							if (this.velocity.Y > 0f && num1147 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num1145;
							}
						}
						this.ai[1] += 1f;
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.8)
						{
							this.ai[1] += 1f;
						}
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.6)
						{
							this.ai[1] += 1f;
						}
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
						{
							this.ai[1] += 1f;
						}
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
						{
							this.ai[1] += 1f;
						}
						int num1149 = 360;
						if (this.ai[1] < 20f || this.ai[1] > (float)(num1149 - 20))
						{
							this.localAI[0] = 1f;
						}
						else
						{
							this.localAI[0] = 0f;
						}
						if (flag109)
						{
							this.ai[1] = 20f;
						}
						if (this.ai[1] >= (float)num1149)
						{
							this.TargetClosest(true);
							this.ai[1] = 0f;
							Vector2 vector131 = new Vector2(base.Center.X, base.Center.Y - 10f);
							float num1150 = 8f;
							int num1151 = 20;
							int num1152 = 258;
							float num1153 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector131.X;
							float num1154 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector131.Y;
							float num1155 = (float)Math.Sqrt((double)(num1153 * num1153 + num1154 * num1154));
							num1155 = num1150 / num1155;
							num1153 *= num1155;
							num1154 *= num1155;
							if (Main.netMode != 1)
							{
								Projectile.NewProjectile(vector131.X, vector131.Y, num1153, num1154, num1152, num1151, 0f, Main.myPlayer, 0f, 0f);
							}
						}
						this.ai[2] += 1f;
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.25)
						{
							this.ai[2] += 1f;
						}
						if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.5)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 2)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 3)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 4)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 5)
						{
							this.ai[2] += 1f;
						}
						if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 6)
						{
							this.ai[2] += 1f;
						}
						if (!Collision.CanHit(Main.npc[NPC.golemBoss].Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] += 4f;
						}
						if (this.ai[2] > (float)(100 + Main.rand.Next(4800)))
						{
							this.ai[2] = 0f;
							for (int num1156 = 0; num1156 < 2; num1156++)
							{
								Vector2 vector132 = new Vector2(base.Center.X, base.Center.Y - 50f);
								if (num1156 == 0)
								{
									vector132.X -= 14f;
								}
								else if (num1156 == 1)
								{
									vector132.X += 14f;
								}
								float num1157 = 11f;
								int num1158 = 24;
								int num1159 = 259;
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.5)
								{
									num1158++;
									num1157 += 0.25f;
								}
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.4)
								{
									num1158++;
									num1157 += 0.25f;
								}
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.3)
								{
									num1158++;
									num1157 += 0.25f;
								}
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
								{
									num1158++;
									num1157 += 0.25f;
								}
								if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
								{
									num1158++;
									num1157 += 0.25f;
								}
								float num1160 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector132.X;
								float num1161 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector132.Y;
								float num1162 = (float)Math.Sqrt((double)(num1160 * num1160 + num1161 * num1161));
								num1162 = num1157 / num1162;
								num1160 *= num1162;
								num1161 *= num1162;
								vector132.X += num1160 * 3f;
								vector132.Y += num1161 * 3f;
								if (Main.netMode != 1)
								{
									int num1163 = Projectile.NewProjectile(vector132.X, vector132.Y, num1160, num1161, num1159, num1158, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num1163].timeLeft = 300;
								}
							}
							return;
						}
					}
					else if (this.aiStyle == 49)
					{
						this.noGravity = true;
						this.TargetClosest(true);
						float num1164 = 4f;
						float num1165 = 0.25f;
						Vector2 vector133 = new Vector2(base.Center.X, base.Center.Y);
						float num1166 = Main.player[this.target].Center.X - vector133.X;
						float num1167 = Main.player[this.target].Center.Y - vector133.Y - 200f;
						float num1168 = (float)Math.Sqrt((double)(num1166 * num1166 + num1167 * num1167));
						if (num1168 < 20f)
						{
							num1166 = this.velocity.X;
							num1167 = this.velocity.Y;
						}
						else
						{
							num1168 = num1164 / num1168;
							num1166 *= num1168;
							num1167 *= num1168;
						}
						if (this.velocity.X < num1166)
						{
							this.velocity.X = this.velocity.X + num1165;
							if (this.velocity.X < 0f && num1166 > 0f)
							{
								this.velocity.X = this.velocity.X + num1165 * 2f;
							}
						}
						else if (this.velocity.X > num1166)
						{
							this.velocity.X = this.velocity.X - num1165;
							if (this.velocity.X > 0f && num1166 < 0f)
							{
								this.velocity.X = this.velocity.X - num1165 * 2f;
							}
						}
						if (this.velocity.Y < num1167)
						{
							this.velocity.Y = this.velocity.Y + num1165;
							if (this.velocity.Y < 0f && num1167 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num1165 * 2f;
							}
						}
						else if (this.velocity.Y > num1167)
						{
							this.velocity.Y = this.velocity.Y - num1165;
							if (this.velocity.Y > 0f && num1167 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num1165 * 2f;
							}
						}
						if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && Main.netMode != 1)
						{
							this.ai[0] += 1f;
							if (this.ai[0] > 8f)
							{
								this.ai[0] = 0f;
								int num1169 = (int)(this.position.X + 10f + (float)Main.rand.Next(this.width - 20));
								int num1170 = (int)(this.position.Y + (float)this.height + 4f);
								Projectile.NewProjectile((float)num1169, (float)num1170, 0f, 5f, 264, 20, 0f, Main.myPlayer, 0f, 0f);
								return;
							}
						}
					}
					else
					{
						if (this.aiStyle == 50)
						{
							if (this.timeLeft > 5)
							{
								this.timeLeft = 5;
							}
							this.noTileCollide = true;
							this.velocity.Y = this.velocity.Y + 0.02f;
							if (this.velocity.Y < 0f && !Main.expertMode)
							{
								this.velocity.Y = this.velocity.Y * 0.99f;
							}
							if (this.velocity.Y > 1f)
							{
								this.velocity.Y = 1f;
							}
							this.TargetClosest(true);
							if (this.position.X + (float)this.width < Main.player[this.target].position.X)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								if (Main.expertMode && this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
								if (Main.expertMode)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
							}
							else if (this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								if (Main.expertMode && this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
								if (Main.expertMode)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
							}
							if (this.velocity.X > 5f || this.velocity.X < -5f)
							{
								this.velocity.X = this.velocity.X * 0.97f;
							}
							this.rotation = this.velocity.X * 0.2f;
							return;
						}
						if (this.aiStyle == 51)
						{
							bool flag110 = false;
							bool flag111 = false;
							this.TargetClosest(true);
							if (Main.player[this.target].dead)
							{
								flag111 = true;
								flag110 = true;
							}
							if (Main.netMode != 1)
							{
								int num1171 = 6000;
								if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num1171)
								{
									this.active = false;
									this.life = 0;
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
							NPC.plantBoss = this.whoAmI;
							if (this.localAI[0] == 0f && Main.netMode != 1)
							{
								this.localAI[0] = 1f;
								NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
								NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
								NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							}
							int[] array3 = new int[3];
							float num1172 = 0f;
							float num1173 = 0f;
							int num1174 = 0;
							for (int num1175 = 0; num1175 < 200; num1175++)
							{
								if (Main.npc[num1175].active && Main.npc[num1175].aiStyle == 52)
								{
									num1172 += Main.npc[num1175].Center.X;
									num1173 += Main.npc[num1175].Center.Y;
									array3[num1174] = num1175;
									num1174++;
									if (num1174 > 2)
									{
										break;
									}
								}
							}
							num1172 /= (float)num1174;
							num1173 /= (float)num1174;
							float num1176 = 2.5f;
							float num1177 = 0.025f;
							if (this.life < this.lifeMax / 2)
							{
								num1176 = 5f;
								num1177 = 0.05f;
							}
							if (this.life < this.lifeMax / 4)
							{
								num1176 = 7f;
							}
							if (!Main.player[this.target].ZoneJungle || (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0 || Main.player[this.target].position.Y > (float)((Main.maxTilesY - 200) * 16))
							{
								flag110 = true;
								num1176 += 8f;
								num1177 = 0.15f;
							}
							if (Main.expertMode)
							{
								num1176 += 1f;
								num1176 *= 1.1f;
								num1177 += 0.01f;
								num1177 *= 1.1f;
							}
							Vector2 vector134 = new Vector2(num1172, num1173);
							float num1178 = Main.player[this.target].Center.X - vector134.X;
							float num1179 = Main.player[this.target].Center.Y - vector134.Y;
							if (flag111)
							{
								num1179 *= -1f;
								num1178 *= -1f;
								num1176 += 8f;
							}
							float num1180 = (float)Math.Sqrt((double)(num1178 * num1178 + num1179 * num1179));
							int num1181 = 500;
							if (flag110)
							{
								num1181 += 350;
							}
							if (Main.expertMode)
							{
								num1181 += 150;
							}
							if (num1180 >= (float)num1181)
							{
								num1180 = (float)num1181 / num1180;
								num1178 *= num1180;
								num1179 *= num1180;
							}
							num1172 += num1178;
							num1173 += num1179;
							vector134 = new Vector2(base.Center.X, base.Center.Y);
							num1178 = num1172 - vector134.X;
							num1179 = num1173 - vector134.Y;
							num1180 = (float)Math.Sqrt((double)(num1178 * num1178 + num1179 * num1179));
							if (num1180 < num1176)
							{
								num1178 = this.velocity.X;
								num1179 = this.velocity.Y;
							}
							else
							{
								num1180 = num1176 / num1180;
								num1178 *= num1180;
								num1179 *= num1180;
							}
							if (this.velocity.X < num1178)
							{
								this.velocity.X = this.velocity.X + num1177;
								if (this.velocity.X < 0f && num1178 > 0f)
								{
									this.velocity.X = this.velocity.X + num1177 * 2f;
								}
							}
							else if (this.velocity.X > num1178)
							{
								this.velocity.X = this.velocity.X - num1177;
								if (this.velocity.X > 0f && num1178 < 0f)
								{
									this.velocity.X = this.velocity.X - num1177 * 2f;
								}
							}
							if (this.velocity.Y < num1179)
							{
								this.velocity.Y = this.velocity.Y + num1177;
								if (this.velocity.Y < 0f && num1179 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num1177 * 2f;
								}
							}
							else if (this.velocity.Y > num1179)
							{
								this.velocity.Y = this.velocity.Y - num1177;
								if (this.velocity.Y > 0f && num1179 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num1177 * 2f;
								}
							}
							Vector2 vector135 = new Vector2(base.Center.X, base.Center.Y);
							float num1182 = Main.player[this.target].Center.X - vector135.X;
							float num1183 = Main.player[this.target].Center.Y - vector135.Y;
							this.rotation = (float)Math.Atan2((double)num1183, (double)num1182) + 1.57f;
							if (this.life > this.lifeMax / 2)
							{
								this.defense = 36;
								this.damage = (int)(50f * Main.damageMultiplier);
								if (flag110)
								{
									this.defense *= 2;
									this.damage *= 2;
								}
								if (Main.netMode != 1)
								{
									this.localAI[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.9)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.8)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.7)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.6)
									{
										this.localAI[1] += 1f;
									}
									if (flag110)
									{
										this.localAI[1] += 3f;
									}
									if (Main.expertMode)
									{
										this.localAI[1] += 1f;
									}
									if (Main.expertMode && this.justHit && Main.rand.Next(2) == 0)
									{
										this.localAI[3] = 1f;
									}
									if (this.localAI[1] > 80f)
									{
										this.localAI[1] = 0f;
										bool flag112 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
										if (this.localAI[3] > 0f)
										{
											flag112 = true;
											this.localAI[3] = 0f;
										}
										if (flag112)
										{
											Vector2 vector136 = new Vector2(base.Center.X, base.Center.Y);
											float num1184 = 15f;
											if (Main.expertMode)
											{
												num1184 = 17f;
											}
											float num1185 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector136.X;
											float num1186 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector136.Y;
											float num1187 = (float)Math.Sqrt((double)(num1185 * num1185 + num1186 * num1186));
											num1187 = num1184 / num1187;
											num1185 *= num1187;
											num1186 *= num1187;
											int num1188 = 22;
											int num1189 = 275;
											int maxValue8 = 4;
											int maxValue9 = 8;
											if (Main.expertMode)
											{
												maxValue8 = 2;
												maxValue9 = 6;
											}
											if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(maxValue8) == 0)
											{
												num1188 = 27;
												this.localAI[1] = -30f;
												num1189 = 276;
											}
											else if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(maxValue9) == 0)
											{
												num1188 = 31;
												this.localAI[1] = -120f;
												num1189 = 277;
											}
											if (flag110)
											{
												num1188 *= 2;
											}
											if (Main.expertMode)
											{
												num1188 = (int)((double)num1188 * 0.9);
											}
											vector136.X += num1185 * 3f;
											vector136.Y += num1186 * 3f;
											int num1190 = Projectile.NewProjectile(vector136.X, vector136.Y, num1185, num1186, num1189, num1188, 0f, Main.myPlayer, 0f, 0f);
											if (num1189 != 277)
											{
												Main.projectile[num1190].timeLeft = 300;
												return;
											}
										}
									}
								}
							}
							else
							{
								this.defense = 10;
								this.damage = (int)(70f * Main.damageMultiplier);
								if (flag110)
								{
									this.defense *= 4;
									this.damage *= 2;
								}
								if (Main.netMode != 1)
								{
									if (this.localAI[0] == 1f)
									{
										this.localAI[0] = 2f;
										for (int num1191 = 0; num1191 < 8; num1191++)
										{
											NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										}
										if (Main.expertMode)
										{
											for (int num1192 = 0; num1192 < 200; num1192++)
											{
												if (Main.npc[num1192].active && Main.npc[num1192].aiStyle == 52)
												{
													for (int num1193 = 0; num1193 < 3; num1193++)
													{
														int num1194 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1194].ai[3] = (float)(num1192 + 1);
													}
												}
											}
										}
									}
									else if (Main.expertMode && Main.rand.Next(60) == 0)
									{
										int num1195 = 0;
										for (int num1196 = 0; num1196 < 200; num1196++)
										{
											if (Main.npc[num1196].active && Main.npc[num1196].type == 264 && Main.npc[num1196].ai[3] == 0f)
											{
												num1195++;
											}
										}
										if (num1195 < 8 && Main.rand.Next((num1195 + 1) * 10) <= 1)
										{
											NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										}
									}
								}
								if (this.localAI[2] == 0f)
								{
									this.localAI[2] = 1f;
								}
								this.localAI[1] += 1f;
								if ((double)this.life < (double)this.lifeMax * 0.4)
								{
									this.localAI[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.3)
								{
									this.localAI[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.2)
								{
									this.localAI[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									this.localAI[1] += 1f;
								}
								if (this.localAI[1] >= 350f)
								{
									float num1197 = 8f;
									Vector2 vector137 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num1198 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector137.X + (float)Main.rand.Next(-10, 11);
									float num1199 = Math.Abs(num1198 * 0.2f);
									float num1200 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector137.Y + (float)Main.rand.Next(-10, 11);
									if (num1200 > 0f)
									{
										num1199 = 0f;
									}
									num1200 -= num1199;
									float num1201 = (float)Math.Sqrt((double)(num1198 * num1198 + num1200 * num1200));
									num1201 = num1197 / num1201;
									num1198 *= num1201;
									num1200 *= num1201;
									int num1202 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 265, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num1202].velocity.X = num1198;
									Main.npc[num1202].velocity.Y = num1200;
									Main.npc[num1202].netUpdate = true;
									this.localAI[1] = 0f;
									return;
								}
							}
						}
						else if (this.aiStyle == 52)
						{
							bool flag113 = false;
							bool flag114 = false;
							if (NPC.plantBoss < 0)
							{
								this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
								this.netUpdate = true;
								return;
							}
							if (Main.player[Main.npc[NPC.plantBoss].target].dead)
							{
								flag114 = true;
							}
							if ((NPC.plantBoss != -1 && !Main.player[Main.npc[NPC.plantBoss].target].ZoneJungle) || (double)Main.player[Main.npc[NPC.plantBoss].target].position.Y < Main.worldSurface * 16.0 || Main.player[Main.npc[NPC.plantBoss].target].position.Y > (float)((Main.maxTilesY - 200) * 16) || flag114)
							{
								this.localAI[0] -= 4f;
								flag113 = true;
							}
							if (Main.netMode == 1)
							{
								if (this.ai[0] == 0f)
								{
									this.ai[0] = (float)((int)(base.Center.X / 16f));
								}
								if (this.ai[1] == 0f)
								{
									this.ai[1] = (float)((int)(base.Center.X / 16f));
								}
							}
							if (Main.netMode != 1)
							{
								if (this.ai[0] == 0f || this.ai[1] == 0f)
								{
									this.localAI[0] = 0f;
								}
								this.localAI[0] -= 1f;
								if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
								{
									this.localAI[0] -= 2f;
								}
								if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
								{
									this.localAI[0] -= 2f;
								}
								if (flag113)
								{
									this.localAI[0] -= 6f;
								}
								if (!flag114 && this.localAI[0] <= 0f && this.ai[0] != 0f)
								{
									for (int num1203 = 0; num1203 < 200; num1203++)
									{
										if (num1203 != this.whoAmI && Main.npc[num1203].active && Main.npc[num1203].type == this.type && (Main.npc[num1203].velocity.X != 0f || Main.npc[num1203].velocity.Y != 0f))
										{
											this.localAI[0] = (float)Main.rand.Next(60, 300);
										}
									}
								}
								if (this.localAI[0] <= 0f)
								{
									this.localAI[0] = (float)Main.rand.Next(300, 600);
									bool flag115 = false;
									int num1204 = 0;
									while (!flag115 && num1204 <= 1000)
									{
										num1204++;
										int num1205 = (int)(Main.player[Main.npc[NPC.plantBoss].target].Center.X / 16f);
										int num1206 = (int)(Main.player[Main.npc[NPC.plantBoss].target].Center.Y / 16f);
										if (this.ai[0] == 0f)
										{
											num1205 = (int)((Main.player[Main.npc[NPC.plantBoss].target].Center.X + Main.npc[NPC.plantBoss].Center.X) / 32f);
											num1206 = (int)((Main.player[Main.npc[NPC.plantBoss].target].Center.Y + Main.npc[NPC.plantBoss].Center.Y) / 32f);
										}
										if (flag114)
										{
											num1205 = (int)Main.npc[NPC.plantBoss].position.X / 16;
											num1206 = (int)(Main.npc[NPC.plantBoss].position.Y + 400f) / 16;
										}
										int num1207 = 20;
										num1207 += (int)(100f * ((float)num1204 / 1000f));
										int num1208 = num1205 + Main.rand.Next(-num1207, num1207 + 1);
										int num1209 = num1206 + Main.rand.Next(-num1207, num1207 + 1);
										if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2 && Main.rand.Next(6) == 0)
										{
											this.TargetClosest(true);
											int num1210 = (int)(Main.player[this.target].Center.X / 16f);
											int num1211 = (int)(Main.player[this.target].Center.Y / 16f);
											if (Main.tile[num1210, num1211].wall > 0)
											{
												num1208 = num1210;
												num1209 = num1211;
											}
										}
										try
										{
											if (WorldGen.SolidTile(num1208, num1209) || (Main.tile[num1208, num1209].wall > 0 && (num1204 > 500 || Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)))
											{
												flag115 = true;
												this.ai[0] = (float)num1208;
												this.ai[1] = (float)num1209;
												this.netUpdate = true;
											}
										}
										catch
										{
										}
									}
								}
							}
							if (this.ai[0] > 0f && this.ai[1] > 0f)
							{
								float num1212 = 6f;
								if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
								{
									num1212 = 8f;
								}
								if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
								{
									num1212 = 10f;
								}
								if (Main.expertMode)
								{
									num1212 += 1f;
								}
								if (Main.expertMode && Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
								{
									num1212 += 1f;
								}
								if (flag113)
								{
									num1212 *= 2f;
								}
								if (flag114)
								{
									num1212 *= 2f;
								}
								Vector2 vector138 = new Vector2(base.Center.X, base.Center.Y);
								float num1213 = this.ai[0] * 16f - 8f - vector138.X;
								float num1214 = this.ai[1] * 16f - 8f - vector138.Y;
								float num1215 = (float)Math.Sqrt((double)(num1213 * num1213 + num1214 * num1214));
								if (num1215 < 12f + num1212)
								{
									this.velocity.X = num1213;
									this.velocity.Y = num1214;
								}
								else
								{
									num1215 = num1212 / num1215;
									this.velocity.X = num1213 * num1215;
									this.velocity.Y = num1214 * num1215;
								}
								Vector2 vector139 = new Vector2(base.Center.X, base.Center.Y);
								float num1216 = Main.npc[NPC.plantBoss].Center.X - vector139.X;
								float num1217 = Main.npc[NPC.plantBoss].Center.Y - vector139.Y;
								this.rotation = (float)Math.Atan2((double)num1217, (double)num1216) - 1.57f;
								return;
							}
						}
						else if (this.aiStyle == 53)
						{
							if (NPC.plantBoss < 0)
							{
								this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
								this.netUpdate = true;
								return;
							}
							int num1218 = NPC.plantBoss;
							if (this.ai[3] > 0f)
							{
								num1218 = (int)this.ai[3] - 1;
							}
							if (Main.netMode != 1)
							{
								this.localAI[0] -= 1f;
								if (this.localAI[0] <= 0f)
								{
									this.localAI[0] = (float)Main.rand.Next(120, 480);
									this.ai[0] = (float)Main.rand.Next(-100, 101);
									this.ai[1] = (float)Main.rand.Next(-100, 101);
									this.netUpdate = true;
								}
							}
							this.TargetClosest(true);
							float num1219 = 0.2f;
							float num1220 = 200f;
							if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.25)
							{
								num1220 += 100f;
							}
							if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.1)
							{
								num1220 += 100f;
							}
							if (Main.expertMode)
							{
								float num1221 = 1f - (float)this.life / (float)this.lifeMax;
								num1220 += num1221 * 300f;
								num1219 += 0.3f;
							}
							if (!Main.npc[num1218].active || NPC.plantBoss < 0)
							{
								this.active = false;
								return;
							}
							float num1222 = Main.npc[num1218].position.X + (float)(Main.npc[num1218].width / 2);
							float num1223 = Main.npc[num1218].position.Y + (float)(Main.npc[num1218].height / 2);
							Vector2 vector140 = new Vector2(num1222, num1223);
							float num1224 = num1222 + this.ai[0];
							float num1225 = num1223 + this.ai[1];
							float num1226 = num1224 - vector140.X;
							float num1227 = num1225 - vector140.Y;
							float num1228 = (float)Math.Sqrt((double)(num1226 * num1226 + num1227 * num1227));
							num1228 = num1220 / num1228;
							num1226 *= num1228;
							num1227 *= num1228;
							if (this.position.X < num1222 + num1226)
							{
								this.velocity.X = this.velocity.X + num1219;
								if (this.velocity.X < 0f && num1226 > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
							}
							else if (this.position.X > num1222 + num1226)
							{
								this.velocity.X = this.velocity.X - num1219;
								if (this.velocity.X > 0f && num1226 < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
							}
							if (this.position.Y < num1223 + num1227)
							{
								this.velocity.Y = this.velocity.Y + num1219;
								if (this.velocity.Y < 0f && num1227 > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
							}
							else if (this.position.Y > num1223 + num1227)
							{
								this.velocity.Y = this.velocity.Y - num1219;
								if (this.velocity.Y > 0f && num1227 < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
							}
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
							if (this.velocity.Y > 8f)
							{
								this.velocity.Y = 8f;
							}
							if (this.velocity.Y < -8f)
							{
								this.velocity.Y = -8f;
							}
							if (num1226 > 0f)
							{
								this.spriteDirection = 1;
								this.rotation = (float)Math.Atan2((double)num1227, (double)num1226);
							}
							if (num1226 < 0f)
							{
								this.spriteDirection = -1;
								this.rotation = (float)Math.Atan2((double)num1227, (double)num1226) + 3.14f;
								return;
							}
						}
						else if (this.aiStyle == 54)
						{
							NPC.crimsonBoss = this.whoAmI;
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								this.localAI[0] = 1f;
								for (int num1229 = 0; num1229 < 20; num1229++)
								{
									float num1230 = base.Center.X;
									float num1231 = base.Center.Y;
									num1230 += (float)Main.rand.Next(-this.width, this.width);
									num1231 += (float)Main.rand.Next(-this.height, this.height);
									int num1232 = NPC.NewNPC((int)num1230, (int)num1231, 267, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num1232].velocity = new Vector2((float)Main.rand.Next(-30, 31) * 0.1f, (float)Main.rand.Next(-30, 31) * 0.1f);
									Main.npc[num1232].netUpdate = true;
								}
							}
							if (Main.netMode != 1)
							{
								this.TargetClosest(true);
								int num1233 = 6000;
								if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num1233)
								{
									this.active = false;
									this.life = 0;
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
							if (this.ai[0] < 0f)
							{
								if (this.localAI[2] == 0f)
								{
									this.localAI[2] = 1f;
								}
								this.dontTakeDamage = false;
								this.knockBackResist = 0.5f;
								if (Main.expertMode)
								{
									this.knockBackResist *= Main.expertKnockBack;
								}
								this.TargetClosest(true);
								Vector2 vector141 = new Vector2(base.Center.X, base.Center.Y);
								float num1235 = Main.player[this.target].Center.X - vector141.X;
								float num1236 = Main.player[this.target].Center.Y - vector141.Y;
								float num1237 = (float)Math.Sqrt((double)(num1235 * num1235 + num1236 * num1236));
								float num1238 = 8f;
								num1237 = num1238 / num1237;
								num1235 *= num1237;
								num1236 *= num1237;
								this.velocity.X = (this.velocity.X * 50f + num1235) / 51f;
								this.velocity.Y = (this.velocity.Y * 50f + num1236) / 51f;
								if (this.ai[0] == -1f)
								{
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if (this.justHit)
										{
											this.localAI[1] -= (float)Main.rand.Next(5);
										}
										int num1239 = 60 + Main.rand.Next(120);
										if (Main.netMode != 0)
										{
											num1239 += Main.rand.Next(30, 90);
										}
										if (this.localAI[1] >= (float)num1239)
										{
											this.localAI[1] = 0f;
											this.TargetClosest(true);
											int num1240 = 0;
											int num1241;
											int num1242;
											while (true)
											{
												num1240++;
												num1241 = (int)Main.player[this.target].Center.X / 16;
												num1242 = (int)Main.player[this.target].Center.Y / 16;
												if (Main.rand.Next(2) == 0)
												{
													num1241 += Main.rand.Next(7, 13);
												}
												else
												{
													num1241 -= Main.rand.Next(7, 13);
												}
												if (Main.rand.Next(2) == 0)
												{
													num1242 += Main.rand.Next(7, 13);
												}
												else
												{
													num1242 -= Main.rand.Next(7, 13);
												}
												if (!WorldGen.SolidTile(num1241, num1242))
												{
													break;
												}
												if (num1240 > 100)
												{
													return;
												}
											}
											this.ai[3] = 0f;
											this.ai[0] = -2f;
											this.ai[1] = (float)num1241;
											this.ai[2] = (float)num1242;
											this.netUpdate = true;
											this.netSpam = 0;
											return;
										}
									}
								}
								else
								{
									if (this.ai[0] == -2f)
									{
										this.velocity *= 0.9f;
										if (Main.netMode != 0)
										{
											this.ai[3] += 15f;
										}
										else
										{
											this.ai[3] += 25f;
										}
										if (this.ai[3] >= 255f)
										{
											this.ai[3] = 255f;
											this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
											this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
											this.ai[0] = -3f;
											this.netUpdate = true;
											this.netSpam = 0;
										}
										this.alpha = (int)this.ai[3];
										return;
									}
									if (this.ai[0] == -3f)
									{
										if (Main.netMode != 0)
										{
											this.ai[3] -= 15f;
										}
										else
										{
											this.ai[3] -= 25f;
										}
										if (this.ai[3] <= 0f)
										{
											this.ai[3] = 0f;
											this.ai[0] = -1f;
											this.netUpdate = true;
											this.netSpam = 0;
										}
										this.alpha = (int)this.ai[3];
										return;
									}
								}
							}
							else
							{
								this.TargetClosest(true);
								Vector2 vector142 = new Vector2(base.Center.X, base.Center.Y);
								float num1243 = Main.player[this.target].Center.X - vector142.X;
								float num1244 = Main.player[this.target].Center.Y - vector142.Y;
								float num1245 = (float)Math.Sqrt((double)(num1243 * num1243 + num1244 * num1244));
								float num1246 = 1f;
								if (num1245 < num1246)
								{
									this.velocity.X = num1243;
									this.velocity.Y = num1244;
								}
								else
								{
									num1245 = num1246 / num1245;
									this.velocity.X = num1243 * num1245;
									this.velocity.Y = num1244 * num1245;
								}
								if (this.ai[0] == 0f)
								{
									if (Main.netMode != 1)
									{
										int num1247 = 0;
										for (int num1248 = 0; num1248 < 200; num1248++)
										{
											if (Main.npc[num1248].active && Main.npc[num1248].type == 267)
											{
												num1247++;
											}
										}
										if (num1247 == 0)
										{
											this.ai[0] = -1f;
											this.localAI[1] = 0f;
											this.alpha = 0;
											this.netUpdate = true;
										}
										this.localAI[1] += 1f;
										if (this.localAI[1] >= (float)(120 + Main.rand.Next(300)))
										{
											this.localAI[1] = 0f;
											this.TargetClosest(true);
											int num1249 = 0;
											int num1250;
											int num1251;
											while (true)
											{
												num1249++;
												num1250 = (int)Main.player[this.target].Center.X / 16;
												num1251 = (int)Main.player[this.target].Center.Y / 16;
												num1250 += Main.rand.Next(-50, 51);
												num1251 += Main.rand.Next(-50, 51);
												if (!WorldGen.SolidTile(num1250, num1251) && Collision.CanHit(new Vector2((float)(num1250 * 16), (float)(num1251 * 16)), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
												{
													break;
												}
												if (num1249 > 100)
												{
													return;
												}
											}
											this.ai[0] = 1f;
											this.ai[1] = (float)num1250;
											this.ai[2] = (float)num1251;
											this.netUpdate = true;
											return;
										}
									}
								}
								else if (this.ai[0] == 1f)
								{
									this.alpha += 5;
									if (this.alpha >= 255)
									{
										this.alpha = 255;
										this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
										this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
										this.ai[0] = 2f;
										return;
									}
								}
								else if (this.ai[0] == 2f)
								{
									this.alpha -= 5;
									if (this.alpha <= 0)
									{
										this.alpha = 0;
										this.ai[0] = 0f;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 55)
						{
							if (NPC.crimsonBoss < 0)
							{
								this.active = false;
								this.netUpdate = true;
								return;
							}
							if (this.ai[0] == 0f)
							{
								Vector2 vector143 = new Vector2(base.Center.X, base.Center.Y);
								float num1252 = Main.npc[NPC.crimsonBoss].Center.X - vector143.X;
								float num1253 = Main.npc[NPC.crimsonBoss].Center.Y - vector143.Y;
								float num1254 = (float)Math.Sqrt((double)(num1252 * num1252 + num1253 * num1253));
								if (num1254 > 90f)
								{
									num1254 = 8f / num1254;
									num1252 *= num1254;
									num1253 *= num1254;
									this.velocity.X = (this.velocity.X * 15f + num1252) / 16f;
									this.velocity.Y = (this.velocity.Y * 15f + num1253) / 16f;
									return;
								}
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 8f)
								{
									this.velocity.Y = this.velocity.Y * 1.05f;
									this.velocity.X = this.velocity.X * 1.05f;
								}
								if (Main.netMode != 1 && ((Main.expertMode && Main.rand.Next(100) == 0) || Main.rand.Next(200) == 0))
								{
									this.TargetClosest(true);
									vector143 = new Vector2(base.Center.X, base.Center.Y);
									num1252 = Main.player[this.target].Center.X - vector143.X;
									num1253 = Main.player[this.target].Center.Y - vector143.Y;
									num1254 = (float)Math.Sqrt((double)(num1252 * num1252 + num1253 * num1253));
									num1254 = 8f / num1254;
									this.velocity.X = num1252 * num1254;
									this.velocity.Y = num1253 * num1254;
									this.ai[0] = 1f;
									this.netUpdate = true;
									return;
								}
							}
							else
							{
								if (Main.expertMode)
								{
									Vector2 value15 = Main.player[this.target].Center - base.Center;
									value15.Normalize();
									value15 *= 9f;
									this.velocity = (this.velocity * 99f + value15) / 100f;
								}
								Vector2 vector144 = new Vector2(base.Center.X, base.Center.Y);
								float num1255 = Main.npc[NPC.crimsonBoss].Center.X - vector144.X;
								float num1256 = Main.npc[NPC.crimsonBoss].Center.Y - vector144.Y;
								float num1257 = (float)Math.Sqrt((double)(num1255 * num1255 + num1256 * num1256));
								if (num1257 > 700f || this.justHit)
								{
									this.ai[0] = 0f;
									return;
								}
							}
						}
						else
						{
							if (this.aiStyle == 56)
							{
								this.TargetClosest(true);
								Vector2 vector145 = new Vector2(base.Center.X, base.Center.Y);
								float num1258 = Main.player[this.target].Center.X - vector145.X;
								float num1259 = Main.player[this.target].Center.Y - vector145.Y;
								float num1260 = (float)Math.Sqrt((double)(num1258 * num1258 + num1259 * num1259));
								float num1261 = 12f;
								num1260 = num1261 / num1260;
								num1258 *= num1260;
								num1259 *= num1260;
								this.velocity.X = (this.velocity.X * 100f + num1258) / 101f;
								this.velocity.Y = (this.velocity.Y * 100f + num1259) / 101f;
								this.rotation = (float)Math.Atan2((double)num1259, (double)num1258) - 1.57f;
								return;
							}
							if (this.aiStyle == 57)
							{
								float num1263 = 2f;
								this.noGravity = true;
								this.noTileCollide = true;
								if (!Main.dayTime)
								{
									this.TargetClosest(true);
								}
								bool flag116 = false;
								if ((double)this.life < (double)this.lifeMax * 0.75)
								{
									num1263 = 3f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									num1263 = 4f;
								}
								if (Main.dayTime)
								{
									if (this.timeLeft > 10)
									{
										this.timeLeft = 10;
									}
									num1263 = 8f;
								}
								else if (this.ai[0] == 0f)
								{
									this.ai[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										this.ai[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										this.ai[1] += 1f;
									}
									if (this.ai[1] >= 300f && Main.netMode != 1)
									{
										this.ai[1] = 0f;
										if ((double)this.life < (double)this.lifeMax * 0.25 && this.type != 344)
										{
											this.ai[0] = (float)Main.rand.Next(3, 5);
										}
										else
										{
											this.ai[0] = (float)Main.rand.Next(1, 3);
										}
										this.netUpdate = true;
									}
								}
								else if (this.ai[0] == 1f)
								{
									if (this.type == 344)
									{
										flag116 = true;
										this.ai[1] += 1f;
										if (this.ai[1] % 5f == 0f)
										{
											Vector2 vector146 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 20f + (float)Main.rand.Next(this.height - 40));
											float num1264 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector146.X;
											float num1265 = Main.player[this.target].position.Y - vector146.Y;
											num1264 += (float)Main.rand.Next(-50, 51);
											num1265 += (float)Main.rand.Next(-50, 51);
											num1265 -= Math.Abs(num1264) * ((float)Main.rand.Next(0, 21) * 0.01f);
											float num1266 = (float)Math.Sqrt((double)(num1264 * num1264 + num1265 * num1265));
											float num1267 = 12.5f;
											num1266 = num1267 / num1266;
											num1264 *= num1266;
											num1265 *= num1266;
											num1264 *= 1f + (float)Main.rand.Next(-20, 21) * 0.02f;
											num1265 *= 1f + (float)Main.rand.Next(-20, 21) * 0.02f;
											Projectile.NewProjectile(vector146.X, vector146.Y, num1264, num1265, 345, 43, 0f, Main.myPlayer, (float)Main.rand.Next(0, 31), 0f);
										}
										if (this.ai[1] >= 180f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else
									{
										flag116 = true;
										this.ai[1] += 1f;
										if (this.ai[1] % 15f == 0f)
										{
											Vector2 vector147 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num1268 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector147.X;
											float num1269 = Main.player[this.target].position.Y - vector147.Y;
											float num1270 = (float)Math.Sqrt((double)(num1268 * num1268 + num1269 * num1269));
											float num1271 = 10f;
											num1270 = num1271 / num1270;
											num1268 *= num1270;
											num1269 *= num1270;
											num1268 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
											num1269 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
											Projectile.NewProjectile(vector147.X, vector147.Y, num1268, num1269, 325, 50, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 120f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
								}
								else if (this.ai[0] == 2f)
								{
									if (this.type == 344)
									{
										flag116 = true;
										this.ai[1] += 1f;
										if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 15f == 0f)
										{
											float num1272 = 4.5f;
											Vector2 vector148 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 60f + (float)Main.rand.Next(this.height - 80));
											float num1273 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector148.X;
											float num1274 = Main.player[this.target].position.Y - vector148.Y;
											num1274 -= Math.Abs(num1273) * 0.3f;
											num1272 += Math.Abs(num1273) * 0.004f;
											num1273 += (float)Main.rand.Next(-50, 51);
											num1274 -= (float)Main.rand.Next(50, 201);
											float num1275 = (float)Math.Sqrt((double)(num1273 * num1273 + num1274 * num1274));
											num1275 = num1272 / num1275;
											num1273 *= num1275;
											num1274 *= num1275;
											num1273 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											num1274 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											Projectile.NewProjectile(vector148.X, vector148.Y, num1273, num1274, 346, 57, 0f, Main.myPlayer, 0f, (float)Main.rand.Next(2));
										}
										if (this.ai[1] >= 300f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else
									{
										flag116 = true;
										this.ai[1] += 1f;
										if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 8f == 0f)
										{
											float num1276 = 10f;
											Vector2 vector149 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num1277 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector149.X;
											float num1278 = Main.player[this.target].position.Y - vector149.Y;
											num1278 -= Math.Abs(num1277) * 0.3f;
											num1276 += Math.Abs(num1277) * 0.004f;
											if (num1276 > 14f)
											{
												num1276 = 14f;
											}
											num1277 += (float)Main.rand.Next(-50, 51);
											num1278 -= (float)Main.rand.Next(50, 201);
											float num1279 = (float)Math.Sqrt((double)(num1277 * num1277 + num1278 * num1278));
											num1279 = num1276 / num1279;
											num1277 *= num1279;
											num1278 *= num1279;
											num1277 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											num1278 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											Projectile.NewProjectile(vector149.X, vector149.Y, num1277, num1278, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 300f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
								}
								else if (this.ai[0] == 3f)
								{
									num1263 = 4f;
									this.ai[1] += 1f;
									if (this.ai[1] % 30f == 0f)
									{
										Vector2 vector150 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
										float num1280 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector150.X;
										float num1281 = Main.player[this.target].position.Y - vector150.Y;
										float num1282 = (float)Math.Sqrt((double)(num1280 * num1280 + num1281 * num1281));
										float num1283 = 16f;
										num1282 = num1283 / num1282;
										num1280 *= num1282;
										num1281 *= num1282;
										num1280 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
										num1281 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
										Projectile.NewProjectile(vector150.X, vector150.Y, num1280, num1281, 325, 75, 0f, Main.myPlayer, 0f, 0f);
									}
									if (this.ai[1] >= 120f)
									{
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
								}
								else if (this.ai[0] == 4f)
								{
									num1263 = 4f;
									this.ai[1] += 1f;
									if (this.ai[1] % 10f == 0f)
									{
										float num1284 = 12f;
										Vector2 vector151 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
										float num1285 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector151.X;
										float num1286 = Main.player[this.target].position.Y - vector151.Y;
										num1286 -= Math.Abs(num1285) * 0.2f;
										num1284 += Math.Abs(num1285) * 0.002f;
										if (num1284 > 16f)
										{
											num1284 = 16f;
										}
										num1285 += (float)Main.rand.Next(-50, 51);
										num1286 -= (float)Main.rand.Next(50, 201);
										float num1287 = (float)Math.Sqrt((double)(num1285 * num1285 + num1286 * num1286));
										num1287 = num1284 / num1287;
										num1285 *= num1287;
										num1286 *= num1287;
										num1285 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
										num1286 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
										Projectile.NewProjectile(vector151.X, vector151.Y, num1285, num1286, Main.rand.Next(326, 329), 50, 0f, Main.myPlayer, 0f, 0f);
									}
									if (this.ai[1] >= 240f)
									{
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
								}
								if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 50f)
								{
									flag116 = true;
								}
								if (flag116)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
									{
										this.velocity.X = 0f;
									}
								}
								else
								{
									if (this.direction > 0)
									{
										this.velocity.X = (this.velocity.X * 20f + num1263) / 21f;
									}
									if (this.direction < 0)
									{
										this.velocity.X = (this.velocity.X * 20f - num1263) / 21f;
									}
								}
								int num1288 = 80;
								int num1289 = 20;
								Vector2 position7 = new Vector2(base.Center.X - (float)(num1288 / 2), this.position.Y + (float)this.height - (float)num1289);
								bool flag117 = false;
								if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
								{
									flag117 = true;
								}
								if (flag117)
								{
									this.velocity.Y = this.velocity.Y + 0.5f;
								}
								else if (Collision.SolidCollision(position7, num1288, num1289))
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = 0f;
									}
									if ((double)this.velocity.Y > -0.2)
									{
										this.velocity.Y = this.velocity.Y - 0.025f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - 0.2f;
									}
									if (this.velocity.Y < -4f)
									{
										this.velocity.Y = -4f;
									}
								}
								else
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = 0f;
									}
									if ((double)this.velocity.Y < 0.1)
									{
										this.velocity.Y = this.velocity.Y + 0.025f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + 0.5f;
									}
								}
								if (this.velocity.Y > 10f)
								{
									this.velocity.Y = 10f;
									return;
								}
							}
							else
							{
								if (this.aiStyle == 58)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 6f)
									{
										this.localAI[0] = 0f;
										this.localAI[1] += 1f;
										if (this.localAI[1] > 4f)
										{
											this.localAI[1] = 0f;
										}
									}
									if (Main.netMode != 1)
									{
										this.localAI[2] += 1f;
										if (this.localAI[2] > 300f)
										{
											this.ai[3] = (float)Main.rand.Next(3);
											this.localAI[2] = 0f;
										}
										else if (this.ai[3] == 0f && this.localAI[2] % 30f == 0f && this.localAI[2] > 30f)
										{
											float num1290 = 5f;
											Vector2 vector152 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											if (!WorldGen.SolidTile((int)vector152.X / 16, (int)vector152.Y / 16))
											{
												float num1291 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector152.X;
												float num1292 = Main.player[this.target].position.Y - vector152.Y;
												num1291 += (float)Main.rand.Next(-50, 51);
												num1292 += (float)Main.rand.Next(50, 201);
												num1292 *= 0.2f;
												float num1293 = (float)Math.Sqrt((double)(num1291 * num1291 + num1292 * num1292));
												num1293 = num1290 / num1293;
												num1291 *= num1293;
												num1292 *= num1293;
												num1291 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
												num1292 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
												Projectile.NewProjectile(vector152.X, vector152.Y, num1291, num1292, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
											}
										}
									}
									if (this.ai[0] == 0f && Main.netMode != 1)
									{
										this.TargetClosest(true);
										this.ai[0] = 1f;
										int num1294 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num1294].ai[0] = -1f;
										Main.npc[num1294].ai[1] = (float)this.whoAmI;
										Main.npc[num1294].target = this.target;
										Main.npc[num1294].netUpdate = true;
										num1294 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num1294].ai[0] = 1f;
										Main.npc[num1294].ai[1] = (float)this.whoAmI;
										Main.npc[num1294].ai[3] = 150f;
										Main.npc[num1294].target = this.target;
										Main.npc[num1294].netUpdate = true;
									}
									if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
									{
										this.TargetClosest(true);
										if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
										{
											this.ai[1] = 2f;
										}
									}
									if (Main.dayTime)
									{
										this.velocity.Y = this.velocity.Y + 0.3f;
										this.velocity.X = this.velocity.X * 0.9f;
									}
									else if (this.ai[1] == 0f)
									{
										this.ai[2] += 1f;
										if (this.ai[2] >= 300f)
										{
											if (this.ai[3] != 1f)
											{
												this.ai[1] = 0f;
												this.ai[2] = 0f;
											}
											else
											{
												this.ai[2] = 0f;
												this.ai[1] = 1f;
												this.TargetClosest(true);
												this.netUpdate = true;
											}
										}
										Vector2 vector153 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1295 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector153.X;
										float num1296 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector153.Y;
										float num1297 = (float)Math.Sqrt((double)(num1295 * num1295 + num1296 * num1296));
										float num1298 = 6f;
										if (this.ai[3] == 1f)
										{
											if (num1297 > 900f)
											{
												num1298 = 12f;
											}
											else if (num1297 > 600f)
											{
												num1298 = 10f;
											}
											else if (num1297 > 300f)
											{
												num1298 = 8f;
											}
										}
										if (num1297 > 50f)
										{
											num1297 = num1298 / num1297;
											this.velocity.X = (this.velocity.X * 14f + num1295 * num1297) / 15f;
											this.velocity.Y = (this.velocity.Y * 14f + num1296 * num1297) / 15f;
										}
									}
									else if (this.ai[1] == 1f)
									{
										this.ai[2] += 1f;
										if (this.ai[2] >= 600f || this.ai[3] != 1f)
										{
											this.ai[2] = 0f;
											this.ai[1] = 0f;
										}
										Vector2 vector154 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1299 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector154.X;
										float num1300 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector154.Y;
										float num1301 = (float)Math.Sqrt((double)(num1299 * num1299 + num1300 * num1300));
										num1301 = 16f / num1301;
										this.velocity.X = (this.velocity.X * 49f + num1299 * num1301) / 50f;
										this.velocity.Y = (this.velocity.Y * 49f + num1300 * num1301) / 50f;
									}
									else if (this.ai[1] == 2f)
									{
										this.ai[1] = 3f;
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.95f;
										}
										this.velocity.X = this.velocity.X * 0.95f;
										if (this.timeLeft > 500)
										{
											this.timeLeft = 500;
										}
									}
									this.rotation = this.velocity.X * -0.02f;
									return;
								}
								if (this.aiStyle == 59)
								{
									this.spriteDirection = -(int)this.ai[0];
									if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 58)
									{
										this.ai[2] += 10f;
										if (this.ai[2] > 50f || Main.netMode != 2)
										{
											this.life = -1;
											this.HitEffect(0, 10.0);
											this.active = false;
										}
									}
									if (Main.netMode != 1 && Main.npc[(int)this.ai[1]].ai[3] == 2f)
									{
										this.localAI[1] += 1f;
										if (this.localAI[1] > 90f)
										{
											this.localAI[1] = 0f;
											float num1302 = 0.01f;
											Vector2 vector155 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num1303 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector155.X;
											float num1304 = Main.player[this.target].position.Y - vector155.Y;
											float num1305 = (float)Math.Sqrt((double)(num1303 * num1303 + num1304 * num1304));
											num1305 = num1302 / num1305;
											num1303 *= num1305;
											num1304 *= num1305;
											Projectile.NewProjectile(base.Center.X, base.Center.Y, num1303, num1304, 329, 60, 0f, Main.myPlayer, this.rotation, (float)this.spriteDirection);
										}
									}
									if (Main.dayTime)
									{
										this.velocity.Y = this.velocity.Y + 0.3f;
										this.velocity.X = this.velocity.X * 0.9f;
										return;
									}
									if (this.ai[2] == 0f || this.ai[2] == 3f)
									{
										if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
										{
											this.timeLeft = 10;
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 180f)
										{
											this.ai[2] += 1f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										Vector2 vector156 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1306 = (Main.player[this.target].Center.X + Main.npc[(int)this.ai[1]].Center.X) / 2f;
										float num1307 = (Main.player[this.target].Center.Y + Main.npc[(int)this.ai[1]].Center.Y) / 2f;
										num1306 += -170f * this.ai[0] - vector156.X;
										num1307 += 90f - vector156.Y;
										float num1308 = Math.Abs(Main.player[this.target].Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(Main.player[this.target].Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
										if (num1308 > 700f)
										{
											num1306 = Main.npc[(int)this.ai[1]].Center.X - 170f * this.ai[0] - vector156.X;
											num1307 = Main.npc[(int)this.ai[1]].Center.Y + 90f - vector156.Y;
										}
										float num1309 = (float)Math.Sqrt((double)(num1306 * num1306 + num1307 * num1307));
										float num1310 = 6f;
										if (num1309 > 1000f)
										{
											num1310 = 21f;
										}
										else if (num1309 > 800f)
										{
											num1310 = 18f;
										}
										else if (num1309 > 600f)
										{
											num1310 = 15f;
										}
										else if (num1309 > 400f)
										{
											num1310 = 12f;
										}
										else if (num1309 > 200f)
										{
											num1310 = 9f;
										}
										if (this.ai[0] < 0f && base.Center.X > Main.npc[(int)this.ai[1]].Center.X)
										{
											num1306 -= 4f;
										}
										if (this.ai[0] > 0f && base.Center.X < Main.npc[(int)this.ai[1]].Center.X)
										{
											num1306 += 4f;
										}
										num1309 = num1310 / num1309;
										this.velocity.X = (this.velocity.X * 14f + num1306 * num1309) / 15f;
										this.velocity.Y = (this.velocity.Y * 14f + num1307 * num1309) / 15f;
										num1309 = (float)Math.Sqrt((double)(num1306 * num1306 + num1307 * num1307));
										if (num1309 > 20f)
										{
											this.rotation = (float)Math.Atan2((double)num1307, (double)num1306) + 1.57f;
											return;
										}
									}
									else if (this.ai[2] == 1f)
									{
										Vector2 vector157 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1311 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector157.X;
										float num1312 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector157.Y;
										float num1313 = (float)Math.Sqrt((double)(num1311 * num1311 + num1312 * num1312));
										this.rotation = (float)Math.Atan2((double)num1312, (double)num1311) + 1.57f;
										this.velocity.X = this.velocity.X * 0.95f;
										this.velocity.Y = this.velocity.Y - 0.3f;
										if (this.velocity.Y < -14f)
										{
											this.velocity.Y = -14f;
										}
										if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
										{
											this.TargetClosest(true);
											this.ai[2] = 2f;
											vector157 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num1311 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector157.X;
											num1312 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector157.Y;
											num1313 = (float)Math.Sqrt((double)(num1311 * num1311 + num1312 * num1312));
											num1313 = 18f / num1313;
											this.velocity.X = num1311 * num1313;
											this.velocity.Y = num1312 * num1313;
											this.netUpdate = true;
											return;
										}
									}
									else if (this.ai[2] == 2f)
									{
										float num1314 = Math.Abs(base.Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(base.Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
										if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f || num1314 > 800f)
										{
											this.ai[2] = 3f;
											return;
										}
									}
									else if (this.ai[2] == 4f)
									{
										Vector2 vector158 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num1315 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector158.X;
										float num1316 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector158.Y;
										float num1317 = (float)Math.Sqrt((double)(num1315 * num1315 + num1316 * num1316));
										this.rotation = (float)Math.Atan2((double)num1316, (double)num1315) + 1.57f;
										this.velocity.Y = this.velocity.Y * 0.95f;
										this.velocity.X = this.velocity.X + 0.3f * -this.ai[0];
										if (this.velocity.X < -14f)
										{
											this.velocity.X = -14f;
										}
										if (this.velocity.X > 14f)
										{
											this.velocity.X = 14f;
										}
										if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
										{
											this.TargetClosest(true);
											this.ai[2] = 5f;
											vector158 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num1315 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector158.X;
											num1316 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector158.Y;
											num1317 = (float)Math.Sqrt((double)(num1315 * num1315 + num1316 * num1316));
											num1317 = 17f / num1317;
											this.velocity.X = num1315 * num1317;
											this.velocity.Y = num1316 * num1317;
											this.netUpdate = true;
											return;
										}
									}
									else if (this.ai[2] == 5f)
									{
										float num1318 = Math.Abs(base.Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(base.Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
										if ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || num1318 > 800f)
										{
											this.ai[2] = 0f;
											return;
										}
									}
								}
								else if (this.aiStyle == 60)
								{
									if (Main.dayTime)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X + 0.25f;
										}
										else
										{
											this.velocity.X = this.velocity.X - 0.25f;
										}
										this.velocity.Y = this.velocity.Y - 0.1f;
										this.rotation = this.velocity.X * 0.05f;
									}
									else if (this.ai[0] == 0f)
									{
										if (this.ai[2] == 0f)
										{
											this.TargetClosest(true);
											if (base.Center.X < Main.player[this.target].Center.X)
											{
												this.ai[2] = 1f;
											}
											else
											{
												this.ai[2] = -1f;
											}
										}
										this.TargetClosest(true);
										int num1319 = 800;
										float num1320 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
										if (base.Center.X < Main.player[this.target].Center.X && this.ai[2] < 0f && num1320 > (float)num1319)
										{
											this.ai[2] = 0f;
										}
										if (base.Center.X > Main.player[this.target].Center.X && this.ai[2] > 0f && num1320 > (float)num1319)
										{
											this.ai[2] = 0f;
										}
										float num1321 = 0.45f;
										float num1322 = 7f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1321 = 0.55f;
											num1322 = 8f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1321 = 0.7f;
											num1322 = 10f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1321 = 0.8f;
											num1322 = 11f;
										}
										this.velocity.X = this.velocity.X + this.ai[2] * num1321;
										if (this.velocity.X > num1322)
										{
											this.velocity.X = num1322;
										}
										if (this.velocity.X < -num1322)
										{
											this.velocity.X = -num1322;
										}
										float num1323 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
										if (num1323 < 150f)
										{
											this.velocity.Y = this.velocity.Y - 0.2f;
										}
										if (num1323 > 200f)
										{
											this.velocity.Y = this.velocity.Y + 0.2f;
										}
										if (this.velocity.Y > 8f)
										{
											this.velocity.Y = 8f;
										}
										if (this.velocity.Y < -8f)
										{
											this.velocity.Y = -8f;
										}
										this.rotation = this.velocity.X * 0.05f;
										if ((num1320 < 500f || this.ai[3] < 0f) && this.position.Y < Main.player[this.target].position.Y)
										{
											this.ai[3] += 1f;
											int num1324 = 13;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num1324 = 12;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num1324 = 11;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num1324 = 10;
											}
											num1324++;
											if (this.ai[3] > (float)num1324)
											{
												this.ai[3] = (float)(-(float)num1324);
											}
											if (this.ai[3] == 0f && Main.netMode != 1)
											{
												Vector2 vector159 = new Vector2(base.Center.X, base.Center.Y);
												vector159.X += this.velocity.X * 7f;
												float num1325 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector159.X;
												float num1326 = Main.player[this.target].Center.Y - vector159.Y;
												float num1327 = (float)Math.Sqrt((double)(num1325 * num1325 + num1326 * num1326));
												float num1328 = 6f;
												if ((double)this.life < (double)this.lifeMax * 0.75)
												{
													num1328 = 7f;
												}
												if ((double)this.life < (double)this.lifeMax * 0.5)
												{
													num1328 = 8f;
												}
												if ((double)this.life < (double)this.lifeMax * 0.25)
												{
													num1328 = 9f;
												}
												num1327 = num1328 / num1327;
												num1325 *= num1327;
												num1326 *= num1327;
												Projectile.NewProjectile(vector159.X, vector159.Y, num1325, num1326, 348, 42, 0f, Main.myPlayer, 0f, 0f);
											}
										}
										else if (this.ai[3] < 0f)
										{
											this.ai[3] += 1f;
										}
										if (Main.netMode != 1)
										{
											this.ai[1] += (float)Main.rand.Next(1, 4);
											if (this.ai[1] > 800f && num1320 < 600f)
											{
												this.ai[0] = -1f;
											}
										}
									}
									else if (this.ai[0] == 1f)
									{
										this.TargetClosest(true);
										float num1329 = 0.15f;
										float num1330 = 7f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1329 = 0.17f;
											num1330 = 8f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1329 = 0.2f;
											num1330 = 9f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1329 = 0.25f;
											num1330 = 10f;
										}
										num1329 -= 0.05f;
										num1330 -= 1f;
										if (base.Center.X < Main.player[this.target].Center.X)
										{
											this.velocity.X = this.velocity.X + num1329;
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.98f;
											}
										}
										if (base.Center.X > Main.player[this.target].Center.X)
										{
											this.velocity.X = this.velocity.X - num1329;
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.98f;
											}
										}
										if (this.velocity.X > num1330 || this.velocity.X < -num1330)
										{
											this.velocity.X = this.velocity.X * 0.95f;
										}
										float num1331 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
										if (num1331 < 180f)
										{
											this.velocity.Y = this.velocity.Y - 0.1f;
										}
										if (num1331 > 200f)
										{
											this.velocity.Y = this.velocity.Y + 0.1f;
										}
										if (this.velocity.Y > 6f)
										{
											this.velocity.Y = 6f;
										}
										if (this.velocity.Y < -6f)
										{
											this.velocity.Y = -6f;
										}
										this.rotation = this.velocity.X * 0.01f;
										if (Main.netMode != 1)
										{
											this.ai[3] += 1f;
											int num1332 = 15;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num1332 = 14;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num1332 = 12;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num1332 = 10;
											}
											if ((double)this.life < (double)this.lifeMax * 0.1)
											{
												num1332 = 8;
											}
											num1332 += 3;
											if (this.ai[3] >= (float)num1332)
											{
												this.ai[3] = 0f;
												Vector2 vector160 = new Vector2(base.Center.X, this.position.Y + (float)this.height - 14f);
												int i2 = (int)(vector160.X / 16f);
												int j2 = (int)(vector160.Y / 16f);
												if (!WorldGen.SolidTile(i2, j2))
												{
													float num1333 = this.velocity.Y;
													if (num1333 < 0f)
													{
														num1333 = 0f;
													}
													num1333 += 3f;
													float speedX2 = this.velocity.X * 0.25f;
													Projectile.NewProjectile(vector160.X, vector160.Y, speedX2, num1333, 349, 37, 0f, Main.myPlayer, (float)Main.rand.Next(5), 0f);
												}
											}
										}
										if (Main.netMode != 1)
										{
											this.ai[1] += (float)Main.rand.Next(1, 4);
											if (this.ai[1] > 600f)
											{
												this.ai[0] = -1f;
											}
										}
									}
									else if (this.ai[0] == 2f)
									{
										this.TargetClosest(true);
										Vector2 vector161 = new Vector2(base.Center.X, base.Center.Y - 20f);
										float num1334 = (float)Main.rand.Next(-1000, 1001);
										float num1335 = (float)Main.rand.Next(-1000, 1001);
										float num1336 = (float)Math.Sqrt((double)(num1334 * num1334 + num1335 * num1335));
										float num1337 = 15f;
										this.velocity *= 0.95f;
										num1336 = num1337 / num1336;
										num1334 *= num1336;
										num1335 *= num1336;
										this.rotation += 0.2f;
										vector161.X += num1334 * 4f;
										vector161.Y += num1335 * 4f;
										this.ai[3] += 1f;
										int num1338 = 7;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1338--;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1338 -= 2;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1338 -= 3;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											num1338 -= 4;
										}
										if (this.ai[3] > (float)num1338)
										{
											this.ai[3] = 0f;
											Projectile.NewProjectile(vector161.X, vector161.Y, num1334, num1335, 349, 35, 0f, Main.myPlayer, 0f, 0f);
										}
										if (Main.netMode != 1)
										{
											this.ai[1] += (float)Main.rand.Next(1, 4);
											if (this.ai[1] > 500f)
											{
												this.ai[0] = -1f;
											}
										}
									}
									if (this.ai[0] == -1f)
									{
										int num1339 = Main.rand.Next(3);
										this.TargetClosest(true);
										if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 1000f)
										{
											num1339 = 0;
										}
										this.ai[0] = (float)num1339;
										this.ai[1] = 0f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										return;
									}
								}
								else if (this.aiStyle == 61)
								{
									float num1340 = 2f;
									this.noGravity = true;
									this.noTileCollide = true;
									if (!Main.dayTime)
									{
										this.TargetClosest(true);
									}
									bool flag118 = false;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										num1340 = 3f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num1340 = 4f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										num1340 = 5f;
									}
									if (Main.dayTime)
									{
										if (this.timeLeft > 10)
										{
											this.timeLeft = 10;
										}
										num1340 = 8f;
										if (this.velocity.X == 0f)
										{
											this.velocity.X = 0.1f;
										}
									}
									else if (this.ai[0] == 0f)
									{
										this.ai[1] += 1f;
										if (this.ai[1] >= 300f && Main.netMode != 1)
										{
											this.TargetClosest(true);
											this.ai[1] = 0f;
											this.ai[0] = 1f;
											this.netUpdate = true;
										}
									}
									else if (this.ai[0] == 1f)
									{
										this.ai[1] += 1f;
										flag118 = true;
										int num1341 = 16;
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1341 = 8;
										}
										else if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1341 = 11;
										}
										else if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1341 = 14;
										}
										if (this.ai[1] % (float)num1341 == 0f)
										{
											Vector2 vector162 = new Vector2(base.Center.X + (float)(this.direction * 50), base.Center.Y + (float)Main.rand.Next(15, 36));
											float num1342 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector162.X;
											float num1343 = Main.player[this.target].Center.Y - vector162.Y;
											num1342 += (float)Main.rand.Next(-40, 41);
											num1343 += (float)Main.rand.Next(-40, 41);
											float num1344 = (float)Math.Sqrt((double)(num1342 * num1342 + num1343 * num1343));
											float num1345 = 15f;
											num1344 = num1345 / num1344;
											num1342 *= num1344;
											num1343 *= num1344;
											num1342 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
											num1343 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
											Projectile.NewProjectile(vector162.X, vector162.Y, num1342, num1343, 180, 36, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] > 240f)
										{
											this.ai[0] = 0f;
											this.ai[1] = 0f;
										}
									}
									if (Main.netMode != 1)
									{
										int num1346 = 600;
										int num1347 = 1200;
										int num1348 = 2700;
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num1346 = (int)((double)num1346 * 0.5);
											num1347 = (int)((double)num1347 * 0.5);
											num1348 = (int)((double)num1348 * 0.5);
										}
										else if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num1346 = (int)((double)num1346 * 0.75);
											num1347 = (int)((double)num1347 * 0.75);
											num1348 = (int)((double)num1348 * 0.75);
										}
										else if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num1346 = (int)((double)num1346 * 0.9);
											num1347 = (int)((double)num1347 * 0.9);
											num1348 = (int)((double)num1348 * 0.9);
										}
										if (Main.rand.Next(num1346) == 0)
										{
											Vector2 vector163 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
											float num1349 = (float)(Main.rand.Next(1, 100) * this.direction);
											float num1350 = 1f;
											float num1351 = (float)Math.Sqrt((double)(num1349 * num1349 + num1350 * num1350));
											float num1352 = 1f;
											num1351 = num1352 / num1351;
											num1349 *= num1351;
											num1350 *= num1351;
											Projectile.NewProjectile(vector163.X, vector163.Y, num1349, num1350, 352, 80, 0f, Main.myPlayer, 0f, 0f);
										}
										if (Main.rand.Next(num1347) == 0)
										{
											this.localAI[1] = 1f;
										}
										if (this.localAI[1] >= 1f)
										{
											this.localAI[1] += 1f;
											int num1353 = 12;
											if (this.localAI[1] % (float)num1353 == 0f)
											{
												Vector2 vector164 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
												float num1354 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector164.X;
												float num1355 = Main.player[this.target].Center.Y - vector164.Y;
												num1354 += (float)Main.rand.Next(-50, 51);
												num1355 += (float)Main.rand.Next(-50, 51);
												float num1356 = (float)Math.Sqrt((double)(num1354 * num1354 + num1355 * num1355));
												float num1357 = 12.5f;
												num1356 = num1357 / num1356;
												num1354 *= num1356;
												num1355 *= num1356;
												num1354 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												num1355 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												Projectile.NewProjectile(vector164.X, vector164.Y, num1354, num1355, 350, 42, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.localAI[1] >= 100f)
											{
												this.localAI[1] = 0f;
											}
										}
										if (Main.rand.Next(num1348) == 0)
										{
											this.localAI[2] = 2f;
										}
										if (this.localAI[2] > 0f)
										{
											this.localAI[2] += 1f;
											int num1358 = 9;
											if (this.localAI[2] % (float)num1358 == 0f)
											{
												Vector2 vector165 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
												float num1359 = (float)Main.rand.Next(-100, 101);
												float num1360 = -300f;
												float num1361 = (float)Math.Sqrt((double)(num1359 * num1359 + num1360 * num1360));
												float num1362 = 11f;
												num1361 = num1362 / num1361;
												num1359 *= num1361;
												num1360 *= num1361;
												num1359 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
												num1360 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
												Projectile.NewProjectile(vector165.X, vector165.Y, num1359, num1360, 351, 50, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.localAI[2] >= 100f)
											{
												this.localAI[2] = 0f;
											}
										}
									}
									if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 50f)
									{
										flag118 = true;
									}
									if (flag118)
									{
										this.velocity.X = this.velocity.X * 0.9f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
									}
									else
									{
										if (this.direction > 0)
										{
											this.velocity.X = (this.velocity.X * 20f + num1340) / 21f;
										}
										if (this.direction < 0)
										{
											this.velocity.X = (this.velocity.X * 20f - num1340) / 21f;
										}
									}
									int num1363 = 80;
									int num1364 = 20;
									Vector2 position8 = new Vector2(base.Center.X - (float)(num1363 / 2), this.position.Y + (float)this.height - (float)num1364);
									bool flag119 = false;
									if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
									{
										flag119 = true;
									}
									if (flag119)
									{
										this.velocity.Y = this.velocity.Y + 0.5f;
									}
									else if (Collision.SolidCollision(position8, num1363, num1364))
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y > -0.2)
										{
											this.velocity.Y = this.velocity.Y - 0.025f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - 0.2f;
										}
										if (this.velocity.Y < -4f)
										{
											this.velocity.Y = -4f;
										}
									}
									else
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = this.velocity.Y + 0.025f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y + 0.5f;
										}
									}
									if (this.velocity.Y > 10f)
									{
										this.velocity.Y = 10f;
										return;
									}
								}
								else if (this.aiStyle == 62)
								{
									this.TargetClosest(true);
									this.rotation = Math.Abs(this.velocity.X) * (float)this.direction * 0.1f;
									this.spriteDirection = this.direction;
									float num1365 = 7f;
									Vector2 vector166 = new Vector2(base.Center.X + (float)(this.direction * 20), base.Center.Y + 6f);
									float num1366 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector166.X;
									float num1367 = Main.player[this.target].position.Y - vector166.Y;
									float num1368 = (float)Math.Sqrt((double)(num1366 * num1366 + num1367 * num1367));
									float num1369 = num1365 / num1368;
									num1366 *= num1369;
									num1367 *= num1369;
									bool flag120 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
									if (Main.dayTime)
									{
										int num1370 = 60;
										this.velocity.X = (this.velocity.X * (float)(num1370 - 1) - num1366) / (float)num1370;
										this.velocity.Y = (this.velocity.Y * (float)(num1370 - 1) - num1367) / (float)num1370;
										if (this.timeLeft > 10)
										{
											this.timeLeft = 10;
											return;
										}
									}
									else
									{
										if (num1368 > 600f || !flag120)
										{
											int num1371 = 60;
											this.velocity.X = (this.velocity.X * (float)(num1371 - 1) + num1366) / (float)num1371;
											this.velocity.Y = (this.velocity.Y * (float)(num1371 - 1) + num1367) / (float)num1371;
											return;
										}
										this.velocity *= 0.98f;
										if (Math.Abs(this.velocity.X) < 1f && Math.Abs(this.velocity.Y) < 1f && Main.netMode != 1)
										{
											this.localAI[0] += 1f;
											if (this.localAI[0] >= 15f)
											{
												this.localAI[0] = 0f;
												num1366 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector166.X;
												num1367 = Main.player[this.target].Center.Y - vector166.Y;
												num1366 += (float)Main.rand.Next(-35, 36);
												num1367 += (float)Main.rand.Next(-35, 36);
												num1366 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												num1367 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												num1368 = (float)Math.Sqrt((double)(num1366 * num1366 + num1367 * num1367));
												num1365 = 10f;
												num1369 = num1365 / num1368;
												num1366 *= num1369;
												num1367 *= num1369;
												num1366 *= 1f + (float)Main.rand.Next(-20, 21) * 0.0125f;
												num1367 *= 1f + (float)Main.rand.Next(-20, 21) * 0.0125f;
												Projectile.NewProjectile(vector166.X, vector166.Y, num1366, num1367, 180, 32, 0f, Main.myPlayer, 0f, 0f);
												return;
											}
										}
									}
								}
								else if (this.aiStyle == 63)
								{
									this.TargetClosest(true);
									float num1372 = 11f;
									Vector2 vector167 = new Vector2(base.Center.X + (float)(this.direction * 20), base.Center.Y + 6f);
									float num1373 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector167.X;
									float num1374 = Main.player[this.target].Center.Y - vector167.Y;
									float num1375 = (float)Math.Sqrt((double)(num1373 * num1373 + num1374 * num1374));
									float num1376 = num1372 / num1375;
									num1373 *= num1376;
									num1374 *= num1376;
									if (Main.dayTime)
									{
										num1373 = -num1373;
										num1374 = -num1374;
									}
									this.ai[0] -= 1f;
									if (num1375 < 200f || this.ai[0] > 0f)
									{
										if (num1375 < 200f)
										{
											this.ai[0] = 20f;
										}
										if (this.velocity.X < 0f)
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
										this.rotation += (float)this.direction * 0.3f;
										return;
									}
									this.velocity.X = (this.velocity.X * 50f + num1373) / 51f;
									this.velocity.Y = (this.velocity.Y * 50f + num1374) / 51f;
									if (num1375 < 350f)
									{
										this.velocity.X = (this.velocity.X * 10f + num1373) / 11f;
										this.velocity.Y = (this.velocity.Y * 10f + num1374) / 11f;
									}
									if (num1375 < 300f)
									{
										this.velocity.X = (this.velocity.X * 7f + num1373) / 8f;
										this.velocity.Y = (this.velocity.Y * 7f + num1374) / 8f;
									}
									this.rotation = this.velocity.X * 0.15f;
									return;
								}
								else
								{
									if (this.aiStyle == 64)
									{
										float num1377 = this.ai[0];
										float num1378 = this.ai[1];
										if (Main.netMode != 1)
										{
											this.localAI[0] -= 1f;
											if (this.ai[3] == 0f)
											{
												this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
											}
											if (this.localAI[0] <= 0f)
											{
												this.TargetClosest(true);
												this.localAI[0] = (float)Main.rand.Next(60, 180);
												float num1379 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
												if (num1379 > 700f && this.localAI[3] == 0f)
												{
													float num1380 = (float)Main.rand.Next(50, 151) * 0.01f;
													if (num1379 > 1000f)
													{
														num1380 = (float)Main.rand.Next(150, 201) * 0.01f;
													}
													else if (num1379 > 850f)
													{
														num1380 = (float)Main.rand.Next(100, 151) * 0.01f;
													}
													int num1381 = this.direction * Main.rand.Next(100, 251);
													int num1382 = Main.rand.Next(-50, 51);
													if (this.position.Y > Main.player[this.target].position.Y - 100f)
													{
														num1382 -= Main.rand.Next(100, 251);
													}
													float num1383 = num1380 / (float)Math.Sqrt((double)(num1381 * num1381 + num1382 * num1382));
													num1377 = (float)num1381 * num1383;
													num1378 = (float)num1382 * num1383;
												}
												else
												{
													this.localAI[3] = 1f;
													float num1384 = (float)Main.rand.Next(5, 151) * 0.01f;
													int num1385 = Main.rand.Next(-100, 101);
													int num1386 = Main.rand.Next(-100, 101);
													float num1387 = num1384 / (float)Math.Sqrt((double)(num1385 * num1385 + num1386 * num1386));
													num1377 = (float)num1385 * num1387;
													num1378 = (float)num1386 * num1387;
												}
												this.netUpdate = true;
											}
										}
										this.scale = this.ai[3];
										if (this.localAI[2] > 0f)
										{
											int i3 = (int)base.Center.X / 16;
											int j3 = (int)base.Center.Y / 16;
											this.localAI[2] -= 1f;
										}
										else if (this.localAI[1] > 0f)
										{
											this.localAI[1] -= 1f;
										}
										else
										{
											this.localAI[1] = (float)Main.rand.Next(30, 180);
											if (!Main.dayTime || (double)(this.position.Y / 16f) > Main.worldSurface + 10.0)
											{
												this.localAI[2] = (float)Main.rand.Next(10, 30);
											}
										}
										int num1388 = 80;
										this.velocity.X = (this.velocity.X * (float)(num1388 - 1) + num1377) / (float)num1388;
										this.velocity.Y = (this.velocity.Y * (float)(num1388 - 1) + num1378) / (float)num1388;
										if (this.velocity.Y > 0f)
										{
											int num1389 = 4;
											int num1390 = (int)base.Center.X / 16;
											int num1391 = (int)base.Center.Y / 16;
											for (int num1392 = num1391; num1392 < num1391 + num1389; num1392++)
											{
												if (Main.tile[num1390, num1392] != null && ((Main.tile[num1390, num1392].nactive() && Main.tileSolid[(int)Main.tile[num1390, num1392].type]) || Main.tile[num1390, num1392].liquid > 0))
												{
													num1378 *= -1f;
													if (this.velocity.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.9f;
													}
												}
											}
										}
										if (this.velocity.Y < 0f)
										{
											int num1393 = 30;
											bool flag121 = false;
											int num1394 = (int)base.Center.X / 16;
											int num1395 = (int)base.Center.Y / 16;
											for (int num1396 = num1395; num1396 < num1395 + num1393; num1396++)
											{
												if (Main.tile[num1394, num1396] != null && Main.tile[num1394, num1396].nactive() && Main.tileSolid[(int)Main.tile[num1394, num1396].type])
												{
													flag121 = true;
												}
											}
											if (!flag121)
											{
												num1378 *= -1f;
												if (this.velocity.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.9f;
												}
											}
										}
										if (this.collideX)
										{
											if (this.velocity.X < 0f)
											{
												num1377 = Math.Abs(num1377);
											}
											else
											{
												num1377 = -Math.Abs(num1377);
											}
											this.velocity.X = this.velocity.X * -0.2f;
										}
										if (this.velocity.X < 0f)
										{
											this.direction = -1;
										}
										if (this.velocity.X > 0f)
										{
											this.direction = 1;
										}
										this.ai[0] = num1377;
										this.ai[1] = num1378;
										return;
									}
									if (this.aiStyle == 65)
									{
										float num1397 = this.ai[0];
										float num1398 = this.ai[1];
										if (Main.netMode != 1)
										{
											if (this.ai[2] == 0f)
											{
												int num1399 = 0;
												int num1400 = 4;
												int num1401 = 6;
												int num1402 = 3;
												int num1403 = 7;
												int num1404 = 2;
												int num1405 = 1;
												int num1406 = 5;
												int num1407 = Main.rand.Next(100);
												if (num1407 == 0)
												{
													num1407 = num1406;
												}
												else if (num1407 < 3)
												{
													num1407 = num1405;
												}
												else if (num1407 < 9)
												{
													num1407 = num1404;
												}
												else if (num1407 < 19)
												{
													num1407 = num1403;
												}
												else if (num1407 < 34)
												{
													num1407 = num1402;
												}
												else if (num1407 < 53)
												{
													num1407 = num1401;
												}
												else if (num1407 < 75)
												{
													num1407 = num1400;
												}
												else
												{
													num1407 = num1399;
												}
												this.ai[2] = (float)(1 + num1407);
											}
											if (this.ai[3] == 0f)
											{
												this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
											}
											this.localAI[0] -= 1f;
											if (this.localAI[0] <= 0f)
											{
												this.TargetClosest(true);
												this.localAI[0] = (float)Main.rand.Next(90, 240);
												float num1408 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
												if (num1408 > 700f && this.localAI[3] == 0f)
												{
													float num1409 = (float)Main.rand.Next(50, 151) * 0.01f;
													if (num1408 > 1000f)
													{
														num1409 = (float)Main.rand.Next(150, 201) * 0.01f;
													}
													else if (num1408 > 850f)
													{
														num1409 = (float)Main.rand.Next(100, 151) * 0.01f;
													}
													int num1410 = this.direction * Main.rand.Next(100, 251);
													int num1411 = Main.rand.Next(-50, 51);
													if (this.position.Y > Main.player[this.target].position.Y - 100f)
													{
														num1411 -= Main.rand.Next(100, 251);
													}
													float num1412 = num1409 / (float)Math.Sqrt((double)(num1410 * num1410 + num1411 * num1411));
													num1397 = (float)num1410 * num1412;
													num1398 = (float)num1411 * num1412;
												}
												else
												{
													this.localAI[3] = 1f;
													float num1413 = (float)Main.rand.Next(26, 301) * 0.01f;
													int num1414 = Main.rand.Next(-100, 101);
													int num1415 = Main.rand.Next(-100, 101);
													float num1416 = num1413 / (float)Math.Sqrt((double)(num1414 * num1414 + num1415 * num1415));
													num1397 = (float)num1414 * num1416;
													num1398 = (float)num1415 * num1416;
												}
												this.netUpdate = true;
											}
										}
										this.scale = this.ai[3];
										int num1417 = 60;
										this.velocity.X = (this.velocity.X * (float)(num1417 - 1) + num1397) / (float)num1417;
										this.velocity.Y = (this.velocity.Y * (float)(num1417 - 1) + num1398) / (float)num1417;
										if (this.velocity.Y > 0f)
										{
											int num1418 = 3;
											int num1419 = (int)base.Center.X / 16;
											int num1420 = (int)base.Center.Y / 16;
											for (int num1421 = num1420; num1421 < num1420 + num1418; num1421++)
											{
												if (Main.tile[num1419, num1421] != null && ((Main.tile[num1419, num1421].nactive() && Main.tileSolid[(int)Main.tile[num1419, num1421].type]) || Main.tile[num1419, num1421].liquid > 0))
												{
													num1398 *= -1f;
													if (this.velocity.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.9f;
													}
												}
											}
										}
										if (this.velocity.Y < 0f)
										{
											int num1422 = 30;
											bool flag122 = false;
											int num1423 = (int)base.Center.X / 16;
											int num1424 = (int)base.Center.Y / 16;
											for (int num1425 = num1424; num1425 < num1424 + num1422; num1425++)
											{
												if (Main.tile[num1423, num1425] != null && Main.tile[num1423, num1425].nactive() && Main.tileSolid[(int)Main.tile[num1423, num1425].type])
												{
													flag122 = true;
												}
											}
											if (!flag122)
											{
												num1398 *= -1f;
												if (this.velocity.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.9f;
												}
											}
										}
										if (this.collideX)
										{
											if (this.velocity.X < 0f)
											{
												num1397 = Math.Abs(num1397);
											}
											else
											{
												num1397 = -Math.Abs(num1397);
											}
											this.velocity.X = this.velocity.X * -0.2f;
										}
										if (this.velocity.X < 0f)
										{
											this.direction = -1;
										}
										if (this.velocity.X > 0f)
										{
											this.direction = 1;
										}
										this.ai[0] = num1397;
										this.ai[1] = num1398;
										if (this.type == 356)
										{
											this.catchItem = (short)(1994f + this.ai[2] - 1f);
											return;
										}
									}
									else if (this.aiStyle == 66)
									{
										if (this.type == 484)
										{
											float num1426 = (float)Main.rand.Next(90, 111) * 0.01f;
											num1426 *= (Main.essScale + 0.5f) / 2f;
										}
										if (this.type == 357 || this.type == 448 || (this.type >= 484 && this.type <= 487))
										{
											if (this.localAI[2] < 90f)
											{
												this.localAI[2] += 1f;
											}
											else
											{
												this.friendly = false;
											}
										}
										if (this.velocity.Y == 0f)
										{
											if (this.ai[0] == 1f)
											{
												if (this.direction == 0)
												{
													this.TargetClosest(true);
												}
												if (this.collideX)
												{
													this.direction *= -1;
												}
												float num1427 = 0.2f;
												if (this.type == 485)
												{
													num1427 = 0.25f;
												}
												if (this.type == 486)
												{
													num1427 = 0.325f;
												}
												if (this.type == 487)
												{
													num1427 = 0.4f;
												}
												this.velocity.X = num1427 * (float)this.direction;
												if (this.type == 374)
												{
													this.velocity.X = this.velocity.X * 3f;
												}
											}
											else
											{
												this.velocity.X = 0f;
											}
											if (Main.netMode != 1)
											{
												this.localAI[1] -= 1f;
												if (this.localAI[1] <= 0f)
												{
													if (this.ai[0] == 1f)
													{
														this.ai[0] = 0f;
														this.localAI[1] = (float)Main.rand.Next(300, 900);
													}
													else
													{
														this.ai[0] = 1f;
														this.localAI[1] = (float)Main.rand.Next(600, 1800);
													}
													this.netUpdate = true;
												}
											}
										}
										if (this.type == 374)
										{
											this.spriteDirection = this.direction;
											bool flag123 = false;
											for (int num1428 = 0; num1428 < 255; num1428++)
											{
												Player player4 = Main.player[num1428];
												if (player4.active && !player4.dead && Vector2.Distance(player4.Center, base.Center) <= 160f)
												{
													flag123 = true;
													break;
												}
											}
											int num1429 = 90;
											if (flag123 && this.ai[1] < (float)num1429)
											{
												this.ai[1] += 1f;
											}
											if (this.ai[1] == (float)num1429 && Main.netMode != 1)
											{
												this.position.Y = this.position.Y + 16f;
												this.Transform(375);
												this.netUpdate = true;
												return;
											}
										}
									}
									else if (this.aiStyle == 67)
									{
										if (this.type == 359)
										{
											if (this.ai[3] != 0f)
											{
												this.scale = this.ai[3];
												int num1430 = (int)(12f * this.scale);
												int num1431 = (int)(12f * this.scale);
												if (num1430 != this.width)
												{
													this.position.X = this.position.X + (float)(this.width / 2) - (float)num1430 - 2f;
													this.width = num1430;
												}
												if (num1431 != this.height)
												{
													this.position.Y = this.position.Y + (float)this.height - (float)num1431;
													this.height = num1431;
												}
											}
											if (this.ai[3] == 0f && Main.netMode != 1)
											{
												this.ai[3] = (float)Main.rand.Next(80, 111) * 0.01f;
												this.netUpdate = true;
											}
										}
										float num1432 = 0.3f;
										if (this.type == 360)
										{
											num1432 = 0.6f;
										}
										if (this.ai[0] == 0f)
										{
											this.TargetClosest(true);
											this.directionY = 1;
											this.ai[0] = 1f;
											if (this.direction > 0)
											{
												this.spriteDirection = 1;
											}
										}
										bool flag124 = false;
										if (Main.netMode != 1)
										{
											if (this.ai[2] == 0f && Main.rand.Next(7200) == 0)
											{
												this.ai[2] = 2f;
												this.netUpdate = true;
											}
											if (!this.collideX && !this.collideY)
											{
												this.localAI[3] += 1f;
												if (this.localAI[3] > 5f)
												{
													this.ai[2] = 2f;
													this.netUpdate = true;
												}
											}
											else
											{
												this.localAI[3] = 0f;
											}
										}
										if (this.ai[2] > 0f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 1f;
											this.directionY = 1;
											if (this.velocity.Y > num1432)
											{
												this.rotation += (float)this.direction * 0.1f;
											}
											else
											{
												this.rotation = 0f;
											}
											this.spriteDirection = this.direction;
											this.velocity.X = num1432 * (float)this.direction;
											this.noGravity = false;
											int num1433 = (int)(base.Center.X + (float)(this.width / 2 * -(float)this.direction)) / 16;
											int num1434 = (int)(this.position.Y + (float)this.height + 8f) / 16;
											if (Main.tile[num1433, num1434] != null && !Main.tile[num1433, num1434].topSlope() && this.collideY)
											{
												this.ai[2] -= 1f;
											}
											num1434 = (int)(this.position.Y + (float)this.height - 4f) / 16;
											num1433 = (int)(base.Center.X + (float)(this.width / 2 * this.direction)) / 16;
											if (Main.tile[num1433, num1434] != null && Main.tile[num1433, num1434].bottomSlope())
											{
												this.direction *= -1;
											}
											if (this.collideX && this.velocity.Y == 0f)
											{
												flag124 = true;
												this.ai[2] = 0f;
												this.directionY = -1;
												this.ai[1] = 1f;
											}
											if (this.velocity.Y == 0f)
											{
												if (this.localAI[1] == this.position.X)
												{
													this.localAI[2] += 1f;
													if (this.localAI[2] > 10f)
													{
														this.direction = 1;
														this.velocity.X = (float)this.direction * num1432;
														this.localAI[2] = 0f;
													}
												}
												else
												{
													this.localAI[2] = 0f;
													this.localAI[1] = this.position.X;
												}
											}
										}
										if (this.ai[2] == 0f)
										{
											this.noGravity = true;
											if (this.ai[1] == 0f)
											{
												if (this.collideY)
												{
													this.ai[0] = 2f;
												}
												if (!this.collideY && this.ai[0] == 2f)
												{
													this.direction = -this.direction;
													this.ai[1] = 1f;
													this.ai[0] = 1f;
												}
												if (this.collideX)
												{
													this.directionY = -this.directionY;
													this.ai[1] = 1f;
												}
											}
											else
											{
												if (this.collideX)
												{
													this.ai[0] = 2f;
												}
												if (!this.collideX && this.ai[0] == 2f)
												{
													this.directionY = -this.directionY;
													this.ai[1] = 0f;
													this.ai[0] = 1f;
												}
												if (this.collideY)
												{
													this.direction = -this.direction;
													this.ai[1] = 0f;
												}
											}
											if (!flag124)
											{
												float num1435 = this.rotation;
												if (this.directionY < 0)
												{
													if (this.direction < 0)
													{
														if (this.collideX)
														{
															this.rotation = 1.57f;
															this.spriteDirection = -1;
														}
														else if (this.collideY)
														{
															this.rotation = 3.14f;
															this.spriteDirection = 1;
														}
													}
													else if (this.collideY)
													{
														this.rotation = 3.14f;
														this.spriteDirection = -1;
													}
													else if (this.collideX)
													{
														this.rotation = 4.71f;
														this.spriteDirection = 1;
													}
												}
												else if (this.direction < 0)
												{
													if (this.collideY)
													{
														this.rotation = 0f;
														this.spriteDirection = -1;
													}
													else if (this.collideX)
													{
														this.rotation = 1.57f;
														this.spriteDirection = 1;
													}
												}
												else if (this.collideX)
												{
													this.rotation = 4.71f;
													this.spriteDirection = -1;
												}
												else if (this.collideY)
												{
													this.rotation = 0f;
													this.spriteDirection = 1;
												}
												float num1436 = this.rotation;
												this.rotation = num1435;
												if ((double)this.rotation > 6.28)
												{
													this.rotation -= 6.28f;
												}
												if (this.rotation < 0f)
												{
													this.rotation += 6.28f;
												}
												float num1437 = Math.Abs(this.rotation - num1436);
												float num1438 = 0.1f;
												if (this.rotation > num1436)
												{
													if ((double)num1437 > 3.14)
													{
														this.rotation += num1438;
													}
													else
													{
														this.rotation -= num1438;
														if (this.rotation < num1436)
														{
															this.rotation = num1436;
														}
													}
												}
												if (this.rotation < num1436)
												{
													if ((double)num1437 > 3.14)
													{
														this.rotation -= num1438;
													}
													else
													{
														this.rotation += num1438;
														if (this.rotation > num1436)
														{
															this.rotation = num1436;
														}
													}
												}
											}
											this.velocity.X = num1432 * (float)this.direction;
											this.velocity.Y = num1432 * (float)this.directionY;
											return;
										}
									}
									else if (this.aiStyle == 68)
									{
										this.noGravity = true;
										if (this.ai[0] == 0f)
										{
											this.noGravity = false;
											int direction6 = this.direction;
											int num1439 = this.target;
											this.TargetClosest(true);
											if (num1439 >= 0 && direction6 != 0)
											{
												this.direction = direction6;
											}
											if (this.wet)
											{
												float num1440 = 2f;
												this.velocity.X = (this.velocity.X * 19f + num1440 * (float)this.direction) / 20f;
												int num1441 = (int)(base.Center.X + (float)((this.width / 2 + 8) * this.direction)) / 16;
												int num1442 = (int)(base.Center.Y / 16f);
												int j4 = (int)(this.position.Y / 16f);
												int num1443 = (int)((this.position.Y + (float)this.height) / 16f);
												if (Main.tile[num1441, num1442] == null)
												{
													Main.tile[num1441, num1442] = new Tile();
												}
												if (Main.tile[num1441, num1443] == null)
												{
													Main.tile[num1441, num1443] = new Tile();
												}
												if (WorldGen.SolidTile(num1441, num1442) || WorldGen.SolidTile(num1441, j4) || WorldGen.SolidTile(num1441, num1443) || Main.tile[num1441, num1443].liquid == 0)
												{
													this.direction *= -1;
												}
												this.spriteDirection = this.direction;
												if (this.velocity.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.5f;
												}
												this.noGravity = true;
												num1441 = (int)(base.Center.X / 16f);
												num1442 = (int)(base.Center.Y / 16f);
												float num1444 = this.position.Y + (float)this.height;
												if (Main.tile[num1441, num1442 - 1] == null)
												{
													Main.tile[num1441, num1442 - 1] = new Tile();
												}
												if (Main.tile[num1441, num1442] == null)
												{
													Main.tile[num1441, num1442] = new Tile();
												}
												if (Main.tile[num1441, num1442 + 1] == null)
												{
													Main.tile[num1441, num1442 + 1] = new Tile();
												}
												if (Main.tile[num1441, num1442 - 1].liquid > 0)
												{
													num1444 = (float)(num1442 * 16);
													num1444 -= (float)(Main.tile[num1441, num1442 - 1].liquid / 16);
												}
												else if (Main.tile[num1441, num1442].liquid > 0)
												{
													num1444 = (float)((num1442 + 1) * 16);
													num1444 -= (float)(Main.tile[num1441, num1442].liquid / 16);
												}
												else if (Main.tile[num1441, num1442 + 1].liquid > 0)
												{
													num1444 = (float)((num1442 + 2) * 16);
													num1444 -= (float)(Main.tile[num1441, num1442 + 1].liquid / 16);
												}
												num1444 -= 6f;
												if (base.Center.Y > num1444)
												{
													this.velocity.Y = this.velocity.Y - 0.1f;
													if (this.velocity.Y < -8f)
													{
														this.velocity.Y = -8f;
													}
													if (base.Center.Y + this.velocity.Y < num1444)
													{
														this.velocity.Y = num1444 - base.Center.Y;
													}
												}
												else
												{
													this.velocity.Y = num1444 - base.Center.Y;
												}
											}
											if (Main.netMode != 1)
											{
												if (!this.wet)
												{
													this.ai[0] = 1f;
													this.netUpdate = true;
													this.direction = -this.direction;
													return;
												}
												Rectangle rectangle14 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
												Rectangle rectangle15 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
												if (rectangle15.Intersects(rectangle14) || this.life < this.lifeMax)
												{
													this.ai[0] = 1f;
													this.velocity.Y = this.velocity.Y - 6f;
													this.netUpdate = true;
													this.direction = -this.direction;
													return;
												}
											}
										}
										else if (!Main.player[this.target].dead)
										{
											bool flag125 = false;
											this.ai[1] += 1f;
											if (this.ai[1] >= 300f)
											{
												flag125 = true;
											}
											if (flag125)
											{
												if (this.velocity.Y == 0f || this.collideY || this.wet)
												{
													this.velocity.X = 0f;
													this.velocity.Y = 0f;
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													if (Main.netMode != 1)
													{
														if ((this.type == 363 || this.type == 365) && !this.wet)
														{
															int direction7 = this.direction;
															this.Transform(this.type - 1);
															this.TargetClosest(true);
															this.direction = direction7;
															this.ai[0] = 0f;
															this.ai[1] = (float)(200 + Main.rand.Next(200));
														}
														this.netUpdate = true;
														return;
													}
												}
												else
												{
													this.velocity.X = this.velocity.X * 0.98f;
													this.velocity.Y = this.velocity.Y + 0.1f;
													if (this.velocity.Y > 2f)
													{
														this.velocity.Y = 2f;
														return;
													}
												}
											}
											else
											{
												if (this.collideX)
												{
													this.direction *= -1;
													this.velocity.X = this.oldVelocity.X * -0.5f;
													if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
													{
														this.velocity.X = 2f;
													}
													if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
													{
														this.velocity.X = -2f;
													}
												}
												if (this.collideY)
												{
													this.velocity.Y = this.oldVelocity.Y * -0.5f;
													if (this.velocity.Y > 0f && this.velocity.Y < 1f)
													{
														this.velocity.Y = 1f;
													}
													if (this.velocity.Y < 0f && this.velocity.Y > -1f)
													{
														this.velocity.Y = -1f;
													}
												}
												if (this.direction == -1 && this.velocity.X > -3f)
												{
													this.velocity.X = this.velocity.X - 0.1f;
													if (this.velocity.X > 3f)
													{
														this.velocity.X = this.velocity.X - 0.1f;
													}
													else if (this.velocity.X > 0f)
													{
														this.velocity.X = this.velocity.X - 0.05f;
													}
													if (this.velocity.X < -3f)
													{
														this.velocity.X = -3f;
													}
												}
												else if (this.direction == 1 && this.velocity.X < 3f)
												{
													this.velocity.X = this.velocity.X + 0.1f;
													if (this.velocity.X < -3f)
													{
														this.velocity.X = this.velocity.X + 0.1f;
													}
													else if (this.velocity.X < 0f)
													{
														this.velocity.X = this.velocity.X + 0.05f;
													}
													if (this.velocity.X > 3f)
													{
														this.velocity.X = 3f;
													}
												}
												int num1445 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
												int num1446 = (int)((this.position.Y + (float)this.height) / 16f);
												bool flag126 = true;
												int num1447 = 15;
												bool flag127 = false;
												for (int num1448 = num1446; num1448 < num1446 + num1447; num1448++)
												{
													if (Main.tile[num1445, num1448] == null)
													{
														Main.tile[num1445, num1448] = new Tile();
													}
													if ((Main.tile[num1445, num1448].nactive() && Main.tileSolid[(int)Main.tile[num1445, num1448].type]) || Main.tile[num1445, num1448].liquid > 0)
													{
														if (num1448 < num1446 + 5)
														{
															flag127 = true;
														}
														flag126 = false;
														break;
													}
												}
												if (flag126)
												{
													this.velocity.Y = this.velocity.Y + 0.1f;
												}
												else
												{
													this.velocity.Y = this.velocity.Y - 0.1f;
												}
												if (flag127)
												{
													this.velocity.Y = this.velocity.Y - 0.2f;
												}
												if (this.velocity.Y > 3f)
												{
													this.velocity.Y = 3f;
												}
												if (this.velocity.Y < -4f)
												{
													this.velocity.Y = -4f;
													return;
												}
											}
										}
									}
									else if (this.aiStyle == 69)
									{
										bool expertMode = Main.expertMode;
										float num1449 = expertMode ? (0.6f * Main.damageMultiplier) : 1f;
										bool flag128 = (double)this.life <= (double)this.lifeMax * 0.5;
										bool flag129 = expertMode && (double)this.life <= (double)this.lifeMax * 0.15;
										bool flag130 = this.ai[0] > 4f;
										bool flag131 = this.ai[0] > 9f;
										bool flag132 = this.ai[3] < 10f;
										if (flag131)
										{
											this.damage = (int)((float)this.defDamage * 1.1f * num1449);
											this.defense = 0;
										}
										else if (flag130)
										{
											this.damage = (int)((float)this.defDamage * 1.2f * num1449);
											this.defense = (int)((float)this.defDefense * 0.8f);
										}
										else
										{
											this.damage = this.defDamage;
											this.defense = this.defDefense;
										}
										int num1450 = expertMode ? 40 : 60;
										float num1451 = expertMode ? 0.55f : 0.45f;
										float scaleFactor10 = expertMode ? 8.5f : 7.5f;
										if (flag131)
										{
											num1451 = 0.7f;
											scaleFactor10 = 12f;
											num1450 = 30;
										}
										else if (flag130 && flag132)
										{
											num1451 = (expertMode ? 0.6f : 0.5f);
											scaleFactor10 = (expertMode ? 10f : 8f);
											num1450 = (expertMode ? 40 : 20);
										}
										else if (flag132 && !flag130 && !flag131)
										{
											num1450 = 30;
										}
										int num1452 = expertMode ? 28 : 30;
										float num1453 = expertMode ? 17f : 16f;
										if (flag131)
										{
											num1452 = 25;
											num1453 = 27f;
										}
										else if (flag132 && flag130)
										{
											num1452 = (expertMode ? 27 : 30);
											if (expertMode)
											{
												num1453 = 21f;
											}
										}
										int num1454 = 80;
										int num1455 = 4;
										float num1456 = 0.3f;
										float scaleFactor11 = 5f;
										int num1457 = 90;
										int num1458 = 180;
										int num1459 = 180;
										int num1460 = 30;
										int num1461 = 120;
										int num1462 = 4;
										float scaleFactor12 = 6f;
										float scaleFactor13 = 20f;
										float num1463 = 6.28318548f / (float)(num1461 / 2);
										int num1464 = 75;
										Vector2 vector168 = base.Center;
										Player player5 = Main.player[this.target];
										if (this.target < 0 || this.target == 255 || player5.dead || !player5.active)
										{
											this.TargetClosest(true);
											player5 = Main.player[this.target];
											this.netUpdate = true;
										}
										if (player5.dead || Vector2.Distance(player5.Center, vector168) > 2400f)
										{
											this.velocity.Y = this.velocity.Y - 0.4f;
											if (this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											if (this.ai[0] > 4f)
											{
												this.ai[0] = 5f;
											}
											else
											{
												this.ai[0] = 0f;
											}
											this.ai[2] = 0f;
										}
										bool flag133 = player5.position.Y < 800f || (double)player5.position.Y > Main.worldSurface * 16.0 || (player5.position.X > 6400f && player5.position.X < (float)(Main.maxTilesX * 16 - 6400));
										if (flag133)
										{
											num1450 = 20;
											this.damage = this.defDamage * 2;
											this.defense = this.defDefense * 2;
											this.ai[3] = 0f;
											num1453 += 6f;
										}
										if (this.localAI[0] == 0f)
										{
											this.localAI[0] = 1f;
											this.alpha = 255;
											this.rotation = 0f;
											if (Main.netMode != 1)
											{
												this.ai[0] = -1f;
												this.netUpdate = true;
											}
										}
										float num1465 = (float)Math.Atan2((double)(player5.Center.Y - vector168.Y), (double)(player5.Center.X - vector168.X));
										if (this.spriteDirection == 1)
										{
											num1465 += 3.14159274f;
										}
										if (num1465 < 0f)
										{
											num1465 += 6.28318548f;
										}
										if (num1465 > 6.28318548f)
										{
											num1465 -= 6.28318548f;
										}
										if (this.ai[0] == -1f)
										{
											num1465 = 0f;
										}
										if (this.ai[0] == 3f)
										{
											num1465 = 0f;
										}
										if (this.ai[0] == 4f)
										{
											num1465 = 0f;
										}
										if (this.ai[0] == 8f)
										{
											num1465 = 0f;
										}
										float num1466 = 0.04f;
										if (this.ai[0] == 1f || this.ai[0] == 6f)
										{
											num1466 = 0f;
										}
										if (this.ai[0] == 7f)
										{
											num1466 = 0f;
										}
										if (this.ai[0] == 3f)
										{
											num1466 = 0.01f;
										}
										if (this.ai[0] == 4f)
										{
											num1466 = 0.01f;
										}
										if (this.ai[0] == 8f)
										{
											num1466 = 0.01f;
										}
										if (this.rotation < num1465)
										{
											if ((double)(num1465 - this.rotation) > 3.1415926535897931)
											{
												this.rotation -= num1466;
											}
											else
											{
												this.rotation += num1466;
											}
										}
										if (this.rotation > num1465)
										{
											if ((double)(this.rotation - num1465) > 3.1415926535897931)
											{
												this.rotation += num1466;
											}
											else
											{
												this.rotation -= num1466;
											}
										}
										if (this.rotation > num1465 - num1466 && this.rotation < num1465 + num1466)
										{
											this.rotation = num1465;
										}
										if (this.rotation < 0f)
										{
											this.rotation += 6.28318548f;
										}
										if (this.rotation > 6.28318548f)
										{
											this.rotation -= 6.28318548f;
										}
										if (this.rotation > num1465 - num1466 && this.rotation < num1465 + num1466)
										{
											this.rotation = num1465;
										}
										if (this.ai[0] != -1f && this.ai[0] < 9f)
										{
											bool flag134 = Collision.SolidCollision(this.position, this.width, this.height);
											if (flag134)
											{
												this.alpha += 15;
											}
											else
											{
												this.alpha -= 15;
											}
											if (this.alpha < 0)
											{
												this.alpha = 0;
											}
											if (this.alpha > 150)
											{
												this.alpha = 150;
											}
										}
										if (this.ai[0] == -1f)
										{
											this.velocity *= 0.98f;
											int num1467 = Math.Sign(player5.Center.X - vector168.X);
											if (num1467 != 0)
											{
												this.direction = num1467;
												this.spriteDirection = -this.direction;
											}
											if (this.ai[2] > 20f)
											{
												this.velocity.Y = -2f;
												this.alpha -= 5;
												bool flag135 = Collision.SolidCollision(this.position, this.width, this.height);
												if (flag135)
												{
													this.alpha += 15;
												}
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												if (this.alpha > 150)
												{
													this.alpha = 150;
												}
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1464)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 0f && !player5.dead)
										{
											if (this.ai[1] == 0f)
											{
												this.ai[1] = (float)(300 * Math.Sign((vector168 - player5.Center).X));
											}
											Vector2 value17 = player5.Center + new Vector2(this.ai[1], -200f) - vector168;
											Vector2 vector170 = Vector2.Normalize(value17 - this.velocity) * scaleFactor10;
											if (this.velocity.X < vector170.X)
											{
												this.velocity.X = this.velocity.X + num1451;
												if (this.velocity.X < 0f && vector170.X > 0f)
												{
													this.velocity.X = this.velocity.X + num1451;
												}
											}
											else if (this.velocity.X > vector170.X)
											{
												this.velocity.X = this.velocity.X - num1451;
												if (this.velocity.X > 0f && vector170.X < 0f)
												{
													this.velocity.X = this.velocity.X - num1451;
												}
											}
											if (this.velocity.Y < vector170.Y)
											{
												this.velocity.Y = this.velocity.Y + num1451;
												if (this.velocity.Y < 0f && vector170.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y + num1451;
												}
											}
											else if (this.velocity.Y > vector170.Y)
											{
												this.velocity.Y = this.velocity.Y - num1451;
												if (this.velocity.Y > 0f && vector170.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y - num1451;
												}
											}
											int num1471 = Math.Sign(player5.Center.X - vector168.X);
											if (num1471 != 0)
											{
												if (this.ai[2] == 0f && num1471 != this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.direction = num1471;
												if (this.spriteDirection != -this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.spriteDirection = -this.direction;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1450)
											{
												int num1472 = 0;
												switch ((int)this.ai[3])
												{
													case 0:
													case 1:
													case 2:
													case 3:
													case 4:
													case 5:
													case 6:
													case 7:
													case 8:
													case 9:
														num1472 = 1;
														break;
													case 10:
														this.ai[3] = 1f;
														num1472 = 2;
														break;
													case 11:
														this.ai[3] = 0f;
														num1472 = 3;
														break;
												}
												if (flag128)
												{
													num1472 = 4;
												}
												if (num1472 == 1)
												{
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.velocity = Vector2.Normalize(player5.Center - vector168) * num1453;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
													if (num1471 != 0)
													{
														this.direction = num1471;
														if (this.spriteDirection == 1)
														{
															this.rotation += 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
												}
												else if (num1472 == 2)
												{
													this.ai[0] = 2f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1472 == 3)
												{
													this.ai[0] = 3f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1472 == 4)
												{
													this.ai[0] = 4f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1452)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 2f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 2f)
										{
											if (this.ai[1] == 0f)
											{
												this.ai[1] = (float)(300 * Math.Sign((vector168 - player5.Center).X));
											}
											Vector2 value19 = player5.Center + new Vector2(this.ai[1], -200f) - vector168;
											Vector2 vector172 = Vector2.Normalize(value19 - this.velocity) * scaleFactor11;
											if (this.velocity.X < vector172.X)
											{
												this.velocity.X = this.velocity.X + num1456;
												if (this.velocity.X < 0f && vector172.X > 0f)
												{
													this.velocity.X = this.velocity.X + num1456;
												}
											}
											else if (this.velocity.X > vector172.X)
											{
												this.velocity.X = this.velocity.X - num1456;
												if (this.velocity.X > 0f && vector172.X < 0f)
												{
													this.velocity.X = this.velocity.X - num1456;
												}
											}
											if (this.velocity.Y < vector172.Y)
											{
												this.velocity.Y = this.velocity.Y + num1456;
												if (this.velocity.Y < 0f && vector172.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y + num1456;
												}
											}
											else if (this.velocity.Y > vector172.Y)
											{
												this.velocity.Y = this.velocity.Y - num1456;
												if (this.velocity.Y > 0f && vector172.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y - num1456;
												}
											}
											if (this.ai[2] % (float)num1455 == 0f)
											{
												if (Main.netMode != 1)
												{
													Vector2 vector173 = Vector2.Normalize(player5.Center - vector168) * (float)(this.width + 20) / 2f + vector168;
													NPC.NewNPC((int)vector173.X, (int)vector173.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
												}
											}
											int num1476 = Math.Sign(player5.Center.X - vector168.X);
											if (num1476 != 0)
											{
												this.direction = num1476;
												if (this.spriteDirection != -this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.spriteDirection = -this.direction;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1454)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 3f)
										{
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											if (Main.netMode != 1 && this.ai[2] == (float)(num1457 - 30))
											{
												Vector2 vector174 = this.rotation.ToRotationVector2() * (Vector2.UnitX * (float)this.direction) * (float)(this.width + 20) / 2f + vector168;
												Projectile.NewProjectile(vector174.X, vector174.Y, (float)(this.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
												Projectile.NewProjectile(vector174.X, vector174.Y, (float)(-(float)this.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1457)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 4f)
										{
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1458)
											{
												this.ai[0] = 5f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 5f && !player5.dead)
										{
											if (this.ai[1] == 0f)
											{
												this.ai[1] = (float)(300 * Math.Sign((vector168 - player5.Center).X));
											}
											Vector2 value20 = player5.Center + new Vector2(this.ai[1], -200f) - vector168;
											Vector2 vector175 = Vector2.Normalize(value20 - this.velocity) * scaleFactor10;
											if (this.velocity.X < vector175.X)
											{
												this.velocity.X = this.velocity.X + num1451;
												if (this.velocity.X < 0f && vector175.X > 0f)
												{
													this.velocity.X = this.velocity.X + num1451;
												}
											}
											else if (this.velocity.X > vector175.X)
											{
												this.velocity.X = this.velocity.X - num1451;
												if (this.velocity.X > 0f && vector175.X < 0f)
												{
													this.velocity.X = this.velocity.X - num1451;
												}
											}
											if (this.velocity.Y < vector175.Y)
											{
												this.velocity.Y = this.velocity.Y + num1451;
												if (this.velocity.Y < 0f && vector175.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y + num1451;
												}
											}
											else if (this.velocity.Y > vector175.Y)
											{
												this.velocity.Y = this.velocity.Y - num1451;
												if (this.velocity.Y > 0f && vector175.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y - num1451;
												}
											}
											int num1477 = Math.Sign(player5.Center.X - vector168.X);
											if (num1477 != 0)
											{
												if (this.ai[2] == 0f && num1477 != this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.direction = num1477;
												if (this.spriteDirection != -this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.spriteDirection = -this.direction;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1450)
											{
												int num1478 = 0;
												switch ((int)this.ai[3])
												{
													case 0:
													case 1:
													case 2:
													case 3:
													case 4:
													case 5:
														num1478 = 1;
														break;
													case 6:
														this.ai[3] = 1f;
														num1478 = 2;
														break;
													case 7:
														this.ai[3] = 0f;
														num1478 = 3;
														break;
												}
												if (flag129)
												{
													num1478 = 4;
												}
												if (num1478 == 1)
												{
													this.ai[0] = 6f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.velocity = Vector2.Normalize(player5.Center - vector168) * num1453;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
													if (num1477 != 0)
													{
														this.direction = num1477;
														if (this.spriteDirection == 1)
														{
															this.rotation += 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
												}
												else if (num1478 == 2)
												{
													this.velocity = Vector2.Normalize(player5.Center - vector168) * scaleFactor13;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
													if (num1477 != 0)
													{
														this.direction = num1477;
														if (this.spriteDirection == 1)
														{
															this.rotation += 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
													this.ai[0] = 7f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1478 == 3)
												{
													this.ai[0] = 8f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1478 == 4)
												{
													this.ai[0] = 9f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 6f)
										{
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1452)
											{
												this.ai[0] = 5f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 2f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 7f)
										{
											if (this.ai[2] % (float)num1462 == 0f)
											{
												if (Main.netMode != 1)
												{
													Vector2 vector177 = Vector2.Normalize(this.velocity) * (float)(this.width + 20) / 2f + vector168;
													int num1482 = NPC.NewNPC((int)vector177.X, (int)vector177.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
													Main.npc[num1482].target = this.target;
													Main.npc[num1482].velocity = Vector2.Normalize(this.velocity).RotatedBy((double)(1.57079637f * (float)this.direction), default(Vector2)) * scaleFactor12;
													Main.npc[num1482].netUpdate = true;
													Main.npc[num1482].ai[3] = (float)Main.rand.Next(80, 121) / 100f;
												}
											}
											this.velocity = this.velocity.RotatedBy((double)(-(double)num1463 * (float)this.direction), default(Vector2));
											this.rotation -= num1463 * (float)this.direction;
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1461)
											{
												this.ai[0] = 5f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 8f)
										{
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											if (Main.netMode != 1 && this.ai[2] == (float)(num1457 - 30))
											{
												Projectile.NewProjectile(vector168.X, vector168.Y, 0f, 0f, 385, 0, 0f, Main.myPlayer, 1f, (float)(this.target + 1));
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1457)
											{
												this.ai[0] = 5f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 9f)
										{
											if (this.ai[2] < (float)(num1459 - 90))
											{
												bool flag136 = Collision.SolidCollision(this.position, this.width, this.height);
												if (flag136)
												{
													this.alpha += 15;
												}
												else
												{
													this.alpha -= 15;
												}
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												if (this.alpha > 150)
												{
													this.alpha = 150;
												}
											}
											else if (this.alpha < 255)
											{
												this.alpha += 4;
												if (this.alpha > 255)
												{
													this.alpha = 255;
												}
											}
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1459)
											{
												this.ai[0] = 10f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 10f && !player5.dead)
										{
											this.dontTakeDamage = false;
											this.chaseable = false;
											if (this.alpha < 255)
											{
												this.alpha += 25;
												if (this.alpha > 255)
												{
													this.alpha = 255;
												}
											}
											if (this.ai[1] == 0f)
											{
												this.ai[1] = (float)(360 * Math.Sign((vector168 - player5.Center).X));
											}
											Vector2 value22 = player5.Center + new Vector2(this.ai[1], -200f) - vector168;
											Vector2 desiredVelocity = Vector2.Normalize(value22 - this.velocity) * scaleFactor10;
											this.SimpleFlyMovement(desiredVelocity, num1451);
											int num1483 = Math.Sign(player5.Center.X - vector168.X);
											if (num1483 != 0)
											{
												if (this.ai[2] == 0f && num1483 != this.direction)
												{
													this.rotation += 3.14159274f;
													for (int num1484 = 0; num1484 < this.oldPos.Length; num1484++)
													{
														this.oldPos[num1484] = Vector2.Zero;
													}
												}
												this.direction = num1483;
												if (this.spriteDirection != -this.direction)
												{
													this.rotation += 3.14159274f;
												}
												this.spriteDirection = -this.direction;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1450)
											{
												int num1485 = 0;
												switch ((int)this.ai[3])
												{
													case 0:
													case 2:
													case 3:
													case 5:
													case 6:
													case 7:
														num1485 = 1;
														break;
													case 1:
													case 4:
													case 8:
														num1485 = 2;
														break;
												}
												if (num1485 == 1)
												{
													this.ai[0] = 11f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.velocity = Vector2.Normalize(player5.Center - vector168) * num1453;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
													if (num1483 != 0)
													{
														this.direction = num1483;
														if (this.spriteDirection == 1)
														{
															this.rotation += 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
												}
												else if (num1485 == 2)
												{
													this.ai[0] = 12f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else if (num1485 == 3)
												{
													this.ai[0] = 13f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 11f)
										{
											this.dontTakeDamage = false;
											this.chaseable = true;
											this.alpha -= 25;
											if (this.alpha < 0)
											{
												this.alpha = 0;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1452)
											{
												this.ai[0] = 10f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 1f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 12f)
										{
											this.dontTakeDamage = true;
											this.chaseable = false;
											if (this.alpha < 255)
											{
												this.alpha += 17;
												if (this.alpha > 255)
												{
													this.alpha = 255;
												}
											}
											this.velocity *= 0.98f;
											this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
											if (Main.netMode != 1 && this.ai[2] == (float)(num1460 / 2))
											{
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(300 * Math.Sign((vector168 - player5.Center).X));
												}
												Vector2 center6 = player5.Center + new Vector2(-this.ai[1], -200f);
												vector168 = (base.Center = center6);
												int num1489 = Math.Sign(player5.Center.X - vector168.X);
												if (num1489 != 0)
												{
													if (this.ai[2] == 0f && num1489 != this.direction)
													{
														this.rotation += 3.14159274f;
														for (int num1490 = 0; num1490 < this.oldPos.Length; num1490++)
														{
															this.oldPos[num1490] = Vector2.Zero;
														}
													}
													this.direction = num1489;
													if (this.spriteDirection != -this.direction)
													{
														this.rotation += 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1460)
											{
												this.ai[0] = 10f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 1f;
												if (this.ai[3] >= 9f)
												{
													this.ai[3] = 0f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 13f)
										{
											this.velocity = this.velocity.RotatedBy((double)(-(double)num1463 * (float)this.direction), default(Vector2));
											this.rotation -= num1463 * (float)this.direction;
											this.ai[2] += 1f;
											if (this.ai[2] >= (float)num1461)
											{
												this.ai[0] = 10f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] += 1f;
												this.netUpdate = true;
												return;
											}
										}
									}
									else if (this.aiStyle == 70)
									{
										if (this.target == 255)
										{
											this.TargetClosest(true);
											this.ai[3] = (float)Main.rand.Next(80, 121) / 100f;
											float scaleFactor14 = (float)Main.rand.Next(165, 265) / 15f;
											this.velocity = Vector2.Normalize(Main.player[this.target].Center - base.Center + new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101))) * scaleFactor14;
											this.netUpdate = true;
										}
										Vector2 vector179 = Vector2.Normalize(Main.player[this.target].Center - base.Center);
										this.velocity = (this.velocity * 40f + vector179 * 20f) / 41f;
										this.scale = this.ai[3];
										this.alpha -= 30;
										if (this.alpha < 50)
										{
											this.alpha = 50;
										}
										this.alpha = 50;
										this.velocity.X = (this.velocity.X * 50f + Main.windSpeed * 2f + (float)Main.rand.Next(-10, 11) * 0.1f) / 51f;
										this.velocity.Y = (this.velocity.Y * 50f + -0.25f + (float)Main.rand.Next(-10, 11) * 0.2f) / 51f;
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y - 0.04f;
										}
										if (this.ai[0] == 0f)
										{
											int num1491 = 40;
											Rectangle rect = this.getRect();
											rect.X -= num1491 + this.width / 2;
											rect.Y -= num1491 + this.height / 2;
											rect.Width += num1491 * 2;
											rect.Height += num1491 * 2;
											for (int num1492 = 0; num1492 < 255; num1492++)
											{
												Player player6 = Main.player[num1492];
												if (player6.active && !player6.dead && rect.Intersects(player6.getRect()))
												{
													this.ai[0] = 1f;
													this.ai[1] = 4f;
													this.netUpdate = true;
													break;
												}
											}
										}
										if (this.ai[0] == 0f)
										{
											this.ai[1] += 1f;
											if (this.ai[1] >= 150f)
											{
												this.ai[0] = 1f;
												this.ai[1] = 4f;
											}
										}
										if (this.ai[0] == 1f)
										{
											this.ai[1] -= 1f;
											if (this.ai[1] <= 0f)
											{
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
												return;
											}
										}
										if (this.justHit || this.ai[0] == 1f)
										{
											this.dontTakeDamage = true;
											this.position = base.Center;
											this.width = (this.height = 100);
											this.position = new Vector2(this.position.X - (float)(this.width / 2), this.position.Y - (float)(this.height / 2));
											if (this.timeLeft > 3)
											{
												this.timeLeft = 3;
												return;
											}
										}
									}
									else if (this.aiStyle == 71)
									{
										this.noTileCollide = true;
										int num1493 = 90;
										if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
										{
											this.TargetClosest(false);
											this.direction = 1;
											this.netUpdate = true;
										}
										if (this.ai[0] == 0f)
										{
											this.ai[1] += 1f;
											int arg_5028C_0 = this.type;
											this.noGravity = true;
											this.dontTakeDamage = true;
											this.velocity.Y = this.ai[3];
											if (this.type == 373)
											{
												float num1494 = 0.104719758f;
												float num1495 = this.ai[2];
												float num1496 = (float)(Math.Cos((double)(num1494 * this.localAI[1])) - 0.5) * num1495;
												this.position.X = this.position.X - num1496 * (float)(-(float)this.direction);
												this.localAI[1] += 1f;
												num1496 = (float)(Math.Cos((double)(num1494 * this.localAI[1])) - 0.5) * num1495;
												this.position.X = this.position.X + num1496 * (float)(-(float)this.direction);
												if (Math.Abs(Math.Cos((double)(num1494 * this.localAI[1])) - 0.5) > 0.25)
												{
													this.spriteDirection = ((Math.Cos((double)(num1494 * this.localAI[1])) - 0.5 >= 0.0) ? -1 : 1);
												}
												this.rotation = this.velocity.Y * (float)this.spriteDirection * 0.1f;
												if ((double)this.rotation < -0.2)
												{
													this.rotation = -0.2f;
												}
												if ((double)this.rotation > 0.2)
												{
													this.rotation = 0.2f;
												}
												this.alpha -= 6;
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
											}
											if (this.ai[1] >= (float)num1493)
											{
												this.ai[0] = 1f;
												this.ai[1] = 0f;
												if (!Collision.SolidCollision(this.position, this.width, this.height))
												{
													this.ai[1] = 1f;
												}
												this.TargetClosest(true);
												this.spriteDirection = this.direction;
												Vector2 vector180 = Main.player[this.target].Center - base.Center;
												vector180.Normalize();
												this.velocity = vector180 * 16f;
												this.rotation = this.velocity.ToRotation();
												if (this.direction == -1)
												{
													this.rotation += 3.14159274f;
												}
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.noGravity = true;
											if (!Collision.SolidCollision(this.position, this.width, this.height))
											{
												if (this.ai[1] < 1f)
												{
													this.ai[1] = 1f;
												}
											}
											else
											{
												this.alpha -= 15;
												if (this.alpha < 150)
												{
													this.alpha = 150;
												}
											}
											if (this.ai[1] >= 1f)
											{
												this.alpha -= 60;
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												this.dontTakeDamage = false;
												this.ai[1] += 1f;
												if (Collision.SolidCollision(this.position, this.width, this.height))
												{
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
													return;
												}
											}
											if (this.ai[1] >= 60f)
											{
												this.noGravity = false;
											}
											this.rotation = this.velocity.ToRotation();
											if (this.direction == -1)
											{
												this.rotation += 3.14159274f;
												return;
											}
										}
									}
									else if (this.aiStyle == 72)
									{
										if (this.type == 384)
										{
											int num1497 = (int)this.ai[0];
											if (Main.npc[num1497].active && Main.npc[num1497].type == 383)
											{
												this.velocity = Vector2.Zero;
												this.position = Main.npc[num1497].Center;
												this.position.X = this.position.X - (float)(this.width / 2);
												this.position.Y = this.position.Y - (float)(this.height / 2);
												this.gfxOffY = Main.npc[num1497].gfxOffY;
												return;
											}
											this.life = 0;
											this.HitEffect(0, 10.0);
											this.active = false;
											return;
										}
									}
									else if (this.aiStyle == 73)
									{
										this.TargetClosest(false);
										this.spriteDirection = this.direction;
										this.velocity.X = this.velocity.X * 0.93f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if (this.type == 387)
										{
											float num1498 = 120f;
											float num1499 = 60f;
											if (this.ai[1] < num1498)
											{
												this.ai[1] += 1f;
												if (this.ai[1] > 60f)
												{
													float num1500 = (this.ai[1] - num1499) / (num1498 - num1499);
													this.alpha = (int)((1f - num1500) * 255f);
												}
												else
												{
													this.alpha = 255;
												}
												this.dontTakeDamage = true;
												this.frameCounter = 0.0;
												this.frame.Y = 0;
												float num1501 = this.ai[1] / num1499;
												return;
											}
											this.dontTakeDamage = false;
										}
										if (this.ai[0] < 60f)
										{
											this.ai[0] += 1f;
										}
										if (this.justHit)
										{
											this.ai[0] = -30f;
										}
										if (this.ai[0] == 60f)
										{
											this.ai[0] = -120f;
											Vector2 center7 = Main.player[this.target].Center;
											Vector2 value25 = base.Center - Vector2.UnitY * 10f;
											Vector2 vector181 = center7 - value25;
											vector181.X += (float)Main.rand.Next(-100, 101);
											vector181.Y += (float)Main.rand.Next(-100, 101);
											vector181.X *= (float)Main.rand.Next(70, 131) * 0.01f;
											vector181.Y *= (float)Main.rand.Next(70, 131) * 0.01f;
											vector181.Normalize();
											if (float.IsNaN(vector181.X) || float.IsNaN(vector181.Y))
											{
												vector181 = -Vector2.UnitY;
											}
											vector181 *= 14f;
											int num1504 = 35;
											if (Main.expertMode && this.type >= 381 && this.type <= 392)
											{
												num1504 = (int)((double)num1504 * 0.8);
											}
											Projectile.NewProjectile(value25.X, value25.Y, vector181.X, vector181.Y, 435, num1504, 0f, Main.myPlayer, 0f, 0f);
											return;
										}
									}
									else if (this.aiStyle == 74)
									{
										this.TargetClosest(false);
										this.rotation = this.velocity.ToRotation();
										if (Math.Sign(this.velocity.X) != 0)
										{
											this.spriteDirection = -Math.Sign(this.velocity.X);
										}
										if (this.rotation < -1.57079637f)
										{
											this.rotation += 3.14159274f;
										}
										if (this.rotation > 1.57079637f)
										{
											this.rotation -= 3.14159274f;
										}
										if (this.type == 418)
										{
											this.spriteDirection = Math.Sign(this.velocity.X);
										}
										float num1505 = 0.4f;
										float num1506 = 10f;
										float scaleFactor16 = 200f;
										float num1507 = 750f;
										float num1508 = 30f;
										float num1509 = 30f;
										float scaleFactor17 = 0.95f;
										int num1510 = 50;
										float scaleFactor18 = 14f;
										float num1511 = 30f;
										float num1512 = 100f;
										float num1513 = 20f;
										float num1514 = 0f;
										float num1515 = 7f;
										bool flag137 = true;
										if (this.type == 418)
										{
											num1505 = 0.3f;
											num1506 = 8f;
											scaleFactor16 = 300f;
											num1507 = 800f;
											num1508 = 60f;
											num1509 = 5f;
											scaleFactor17 = 0.8f;
											num1510 = 0;
											scaleFactor18 = 10f;
											num1511 = 30f;
											num1512 = 150f;
											num1513 = 60f;
											num1514 = 0.333333343f;
											num1515 = 8f;
											flag137 = false;
										}
										num1514 *= num1513;
										if (Main.expertMode)
										{
											num1505 *= Main.expertKnockBack;
										}
										if (this.ai[0] == 0f)
										{
											this.knockBackResist = num1505;
											float scaleFactor19 = num1506;
											Vector2 center8 = base.Center;
											Vector2 center9 = Main.player[this.target].Center;
											Vector2 vector183 = center9 - center8;
											Vector2 vector184 = vector183 - Vector2.UnitY * scaleFactor16;
											float num1521 = vector183.Length();
											vector183 = Vector2.Normalize(vector183) * scaleFactor19;
											vector184 = Vector2.Normalize(vector184) * scaleFactor19;
											bool flag138 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
											if (this.ai[3] >= 120f)
											{
												flag138 = true;
											}
											float num1522 = 8f;
											flag138 = (flag138 && vector183.ToRotation() > 3.14159274f / num1522 && vector183.ToRotation() < 3.14159274f - 3.14159274f / num1522);
											if (num1521 > num1507 || !flag138)
											{
												this.velocity.X = (this.velocity.X * (num1508 - 1f) + vector184.X) / num1508;
												this.velocity.Y = (this.velocity.Y * (num1508 - 1f) + vector184.Y) / num1508;
												if (!flag138)
												{
													this.ai[3] += 1f;
													if (this.ai[3] == 120f)
													{
														this.netUpdate = true;
													}
												}
												else
												{
													this.ai[3] = 0f;
												}
											}
											else
											{
												this.ai[0] = 1f;
												this.ai[2] = vector183.X;
												this.ai[3] = vector183.Y;
												this.netUpdate = true;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.knockBackResist = 0f;
											this.velocity *= scaleFactor17;
											this.ai[1] += 1f;
											if (this.ai[1] >= num1509)
											{
												this.ai[0] = 2f;
												this.ai[1] = 0f;
												this.netUpdate = true;
												Vector2 velocity2 = new Vector2(this.ai[2], this.ai[3]) + new Vector2((float)Main.rand.Next(-num1510, num1510 + 1), (float)Main.rand.Next(-num1510, num1510 + 1)) * 0.04f;
												velocity2.Normalize();
												velocity2 *= scaleFactor18;
												this.velocity = velocity2;
											}
										}
										else if (this.ai[0] == 2f)
										{
											this.knockBackResist = 0f;
											float num1524 = num1511;
											this.ai[1] += 1f;
											bool flag139 = Vector2.Distance(base.Center, Main.player[this.target].Center) > num1512 && base.Center.Y > Main.player[this.target].Center.Y;
											if ((this.ai[1] >= num1524 && flag139) || this.velocity.Length() < num1515)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.velocity /= 2f;
												this.netUpdate = true;
												if (this.type == 418)
												{
													this.ai[1] = 45f;
													this.ai[0] = 4f;
												}
											}
											else
											{
												Vector2 center10 = base.Center;
												Vector2 center11 = Main.player[this.target].Center;
												Vector2 vec4 = center11 - center10;
												vec4.Normalize();
												if (vec4.HasNaNs())
												{
													vec4 = new Vector2((float)this.direction, 0f);
												}
												this.velocity = (this.velocity * (num1513 - 1f) + vec4 * (this.velocity.Length() + num1514)) / num1513;
											}
											if (flag137 && Collision.SolidCollision(this.position, this.width, this.height))
											{
												this.ai[0] = 3f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
										}
										else if (this.ai[0] == 4f)
										{
											this.ai[1] -= 3f;
											if (this.ai[1] <= 0f)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
												this.netUpdate = true;
											}
											this.velocity *= 0.95f;
										}
										if (flag137 && this.ai[0] != 3f && Vector2.Distance(base.Center, Main.player[this.target].Center) < 64f)
										{
											this.ai[0] = 3f;
											this.ai[1] = 0f;
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										if (this.ai[0] == 3f)
										{
											this.position = base.Center;
											this.width = (this.height = 192);
											this.position.X = this.position.X - (float)(this.width / 2);
											this.position.Y = this.position.Y - (float)(this.height / 2);
											this.velocity = Vector2.Zero;
											this.damage = (int)(80f * Main.damageMultiplier);
											this.alpha = 255;

											this.ai[1] += 1f;
											if (this.ai[1] >= 3f)
											{
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
												return;
											}
										}
									}
									else if (this.aiStyle == 75)
									{
										int num1529 = -1;
										Vector2 vector185 = Vector2.Zero;
										int num1530 = 0;
										if (this.type == 390)
										{
											if (this.localAI[0] == 0f && Main.netMode != 1)
											{
												this.localAI[0] = 1f;
												int num1531 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 391, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												this.ai[0] = (float)num1531;
												this.netUpdate = true;
											}
											int num1532 = (int)this.ai[0];
											if (Main.npc[num1532].active && Main.npc[num1532].type == 391)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1529 = num1532;
												vector185 = Vector2.UnitY * -14f;
											}
										}
										if (this.type == 416)
										{
											if (this.localAI[0] == 0f && Main.netMode != 1)
											{
												this.localAI[0] = 1f;
												int num1533 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 415, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												this.ai[0] = (float)num1533;
												this.netUpdate = true;
											}
											int num1534 = (int)this.ai[0];
											if (Main.npc[num1534].active && Main.npc[num1534].type == 415)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1529 = num1534;
												vector185 = new Vector2((float)(-(float)Main.npc[num1534].spriteDirection * 10), -30f);
											}
										}
										else if (this.type == 392)
										{
											int num1535 = (int)this.ai[0];
											if (Main.npc[num1535].active && Main.npc[num1535].type == 395)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1529 = num1535;
												vector185 = Vector2.UnitY * 2f;
												vector185 *= Main.npc[num1535].scale;
												float num1536 = Main.npc[num1535].rotation;
												vector185 = vector185.RotatedBy((double)num1536, default(Vector2));
												this.rotation = num1536;
												if (Main.netMode != 1)
												{
													bool flag140 = true;
													if (Main.npc[num1535].ai[0] >= 1f || Main.npc[num1535].ai[0] < 0f)
													{
														flag140 = false;
													}
													if (flag140)
													{
														for (int num1537 = 0; num1537 < 2; num1537++)
														{
															if (Main.npc[(int)this.localAI[num1537]].active && Main.npc[(int)this.localAI[num1537]].type == 393)
															{
																flag140 = false;
															}
														}
														for (int num1538 = 2; num1538 < 4; num1538++)
														{
															if (Main.npc[(int)this.localAI[num1538]].active && Main.npc[(int)this.localAI[num1538]].type == 394)
															{
																flag140 = false;
															}
														}
													}
													if (flag140)
													{
														Main.npc[num1535].ai[0] = 1f;
														Main.npc[num1535].ai[1] = 0f;
														Main.npc[num1535].ai[2] = 0f;
														Main.npc[num1535].ai[3] = 0f;
														Main.npc[num1535].netUpdate = true;
													}
												}
											}
										}
										else if (this.type == 393)
										{
											int num1539 = (int)this.ai[0];
											if (Main.npc[num1539].active && Main.npc[num1539].type == 395)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1529 = num1539;
												vector185 = Vector2.UnitY * 29f + ((this.ai[1] == 1f) ? Vector2.UnitX : (-Vector2.UnitX)) * 60f;
												vector185 *= Main.npc[num1539].scale;
												float num1540 = Main.npc[num1539].rotation;
												vector185 = vector185.RotatedBy((double)num1540, default(Vector2));
												this.rotation = num1540;
											}
										}
										else if (this.type == 394)
										{
											int num1541 = (int)this.ai[0];
											if (Main.npc[num1541].active && Main.npc[num1541].type == 395)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1529 = num1541;
												vector185 = Vector2.UnitY * -13f + ((this.ai[1] == 1f) ? Vector2.UnitX : (-Vector2.UnitX)) * 49f;
												vector185 *= Main.npc[num1541].scale;
												float num1542 = Main.npc[num1541].rotation;
												vector185 = vector185.RotatedBy((double)num1542, default(Vector2));
												this.rotation = num1542;
												num1530 = ((this.ai[1] == 1f) ? 1 : -1);
											}
										}
										else if (this.type == 492)
										{
											int num1543 = (int)this.ai[0];
											if (Main.npc[num1543].active && Main.npc[num1543].type == 491)
											{
												if (this.timeLeft < 60)
												{
													this.timeLeft = 60;
												}
												num1529 = num1543;
												vector185 = new Vector2((-122f + 68f * this.ai[1]) * (float)((Main.npc[num1543].spriteDirection == 1) ? -1 : 1), -6f);
												vector185 *= Main.npc[num1543].scale;
												float num1544 = Main.npc[num1543].rotation;
												vector185 = vector185.RotatedBy((double)num1544, default(Vector2));
												this.rotation = num1544;
											}
										}
										if (num1529 != -1)
										{
											NPC nPC7 = Main.npc[num1529];
											this.velocity = Vector2.Zero;
											this.position = nPC7.Center;
											this.position.X = this.position.X - (float)(this.width / 2);
											this.position.Y = this.position.Y - (float)(this.height / 2);
											this.position += vector185;
											this.gfxOffY = nPC7.gfxOffY;
											this.direction = nPC7.direction;
											if (num1530 == 0)
											{
												this.spriteDirection = nPC7.spriteDirection;
											}
											else
											{
												this.spriteDirection = num1530;
											}
											if (this.type == 390)
											{
												this.timeLeft = nPC7.timeLeft;
												this.velocity = nPC7.velocity;
												this.target = nPC7.target;
												if (this.ai[1] < 60f)
												{
													this.ai[1] += 1f;
												}
												if (this.justHit)
												{
													this.ai[1] = -30f;
												}
												int num1545 = 438;
												int num1546 = 30;
												float scaleFactor20 = 7f;
												if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
												{
													Vector2 vector186 = Main.player[this.target].Center - base.Center;
													Vector2 vector187 = Vector2.Normalize(vector186);
													float num1547 = vector186.Length();
													float num1548 = 700f;
													if (this.type == 214)
													{
														num1548 = 550f;
													}
													if (this.type == 215)
													{
														num1548 = 800f;
													}
													if (num1547 < num1548)
													{
														if (this.ai[1] == 60f && Math.Sign(vector186.X) == this.direction)
														{
															this.ai[1] = -60f;
															Vector2 center12 = Main.player[this.target].Center;
															Vector2 value26 = base.Center - Vector2.UnitY * 4f;
															Vector2 vector188 = center12 - value26;
															vector188.X += (float)Main.rand.Next(-50, 51);
															vector188.Y += (float)Main.rand.Next(-50, 51);
															vector188.X *= (float)Main.rand.Next(80, 121) * 0.01f;
															vector188.Y *= (float)Main.rand.Next(80, 121) * 0.01f;
															vector188.Normalize();
															if (float.IsNaN(vector188.X) || float.IsNaN(vector188.Y))
															{
																vector188 = -Vector2.UnitY;
															}
															vector188 *= scaleFactor20;
															Projectile.NewProjectile(value26.X, value26.Y, vector188.X, vector188.Y, num1545, num1546, 0f, Main.myPlayer, 0f, 0f);
															this.netUpdate = true;
														}
														else
														{
															float num1549 = this.ai[2];
															this.velocity.X = this.velocity.X * 0.5f;
															this.ai[2] = 3f;
															if (Math.Abs(vector187.Y) > Math.Abs(vector187.X) * 2f)
															{
																if (vector187.Y > 0f)
																{
																	this.ai[2] = 1f;
																}
																else
																{
																	this.ai[2] = 5f;
																}
															}
															else if (Math.Abs(vector187.X) > Math.Abs(vector187.Y) * 2f)
															{
																this.ai[2] = 3f;
															}
															else if (vector187.Y > 0f)
															{
																this.ai[2] = 2f;
															}
															else
															{
																this.ai[2] = 4f;
															}
															if (this.ai[2] != num1549)
															{
																this.netUpdate = true;
															}
														}
													}
												}
											}
											if (this.type == 492)
											{
												this.timeLeft = nPC7.timeLeft;
												this.velocity = nPC7.velocity;
												if (this.ai[3] < 240f)
												{
													this.ai[3] += 1f;
												}
												if (this.ai[3] == 2f)
												{
													this.TargetClosest(false);
												}
												if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
												{
													Vector2 vector189 = Main.player[this.target].Center - base.Center;
													Vector2.Normalize(vector189);
													if (this.ai[3] >= 240f)
													{
														this.ai[3] = 0f;
														Vector2 center13 = Main.player[this.target].Center;
														Vector2 center14 = base.Center;
														Vector2 value27 = Vector2.Normalize(center13 - center14);
														if (float.IsNaN(value27.X) || float.IsNaN(value27.Y))
														{
															value27 = Vector2.UnitY;
														}
														value27 *= 14f;
														value27 += Vector2.UnitY * -5f;
														if (Main.netMode != 1)
														{
															Projectile.NewProjectile(center14.X, center14.Y, value27.X, value27.Y, 240, 30, 0f, Main.myPlayer, 0f, 0f);
														}
														this.netUpdate = true;
													}
													else
													{
														float num1550 = this.ai[2];
														float[] array4 = new float[8];
														for (int num1551 = 0; num1551 < array4.Length; num1551++)
														{
															array4[num1551] = Vector2.Distance(base.Center + Vector2.UnitY.RotatedBy((double)((float)num1551 * -0.7853982f), default(Vector2)) * 50f, Main.player[this.target].Center);
														}
														int num1552 = 0;
														for (int num1553 = 1; num1553 < array4.Length; num1553++)
														{
															if (array4[num1552] > array4[num1553])
															{
																num1552 = num1553;
															}
														}
														this.ai[2] = (float)(num1552 + 1);
														if (this.spriteDirection == 1)
														{
															this.ai[2] = 9f - this.ai[2];
														}
														if (this.ai[2] != num1550)
														{
															this.netUpdate = true;
														}
													}
												}
												else
												{
													if (this.ai[2] != 0f)
													{
														this.netUpdate = true;
													}
													this.ai[2] = 0f;
												}
											}
											if (this.type == 394)
											{
												this.timeLeft = nPC7.timeLeft;
												int num1554 = 50;
												if (Main.expertMode)
												{
													num1554 = 37;
												}
												this.ai[3] = nPC7.ai[3];
												float num1555 = 440f;
												float num1556 = 140f;
												if (this.ai[3] >= num1555 && this.ai[3] < num1555 + num1556)
												{
													float num1557 = this.ai[3] - num1555;
													if (num1557 % 20f == 0f)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint2 = (float)num1530 * Vector2.UnitX;
															spinningpoint2 = spinningpoint2.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint2 *= 8f;
															Vector2 vector190 = (float)num1530 * Vector2.UnitX * 36f + base.Center + Vector2.UnitY * 8f;
															Projectile.NewProjectile(vector190.X, vector190.Y, spinningpoint2.X, spinningpoint2.Y, 448, num1554, 0f, Main.myPlayer, 0f, 20f);
														}
													}
												}
											}
											if (this.type == 393)
											{
												this.timeLeft = nPC7.timeLeft;
												int num1558 = 35;
												if (Main.expertMode)
												{
													num1558 = 30;
												}
												this.ai[3] = nPC7.ai[3];
												float num1559 = 280f;
												float num1560 = 140f;
												bool flag141 = this.ai[3] >= num1559 && this.ai[3] < num1559 + num1560;
												if (!flag141)
												{
													this.TargetClosest(false);
													Player player7 = Main.player[this.target];
													Vector2 v = player7.Center - base.Center;
													if (v.Y < 0f)
													{
														v.Y = 0f;
													}
													v.Normalize();
													if (float.IsNaN(v.X) || float.IsNaN(v.Y))
													{
														v = Vector2.UnitY;
													}
													this.ai[2] = v.ToRotation();
												}
												if (flag141)
												{
													float num1561 = this.ai[3] - num1559;
													if (num1561 % 6f == 0f)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint3 = this.ai[2].ToRotationVector2();
															spinningpoint3 = spinningpoint3.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331 / 3.0, default(Vector2));
															spinningpoint3 *= 16f;
															Vector2 vector191 = base.Center + spinningpoint3 * 1f;
															Projectile.NewProjectile(vector191.X, vector191.Y, spinningpoint3.X, spinningpoint3.Y, 449, num1558, 0f, Main.myPlayer, 0f, 0f);
														}
													}
												}
											}
											if (this.type == 392)
											{
												this.timeLeft = nPC7.timeLeft;
												int num1562 = 70;
												if (Main.expertMode)
												{
													num1562 = 50;
												}
												this.ai[3] = nPC7.ai[3];
												float num1563 = 20f;
												float num1564 = 240f;
												bool flag142 = this.ai[3] >= num1563 && this.ai[3] < num1563 + num1564 && nPC7.ai[0] == 0f;
												if (flag142)
												{
													float num1565 = this.ai[3] - num1563;
													if (num1565 == 0f)
													{
														if (Main.netMode != 1)
														{
															Vector2 center15 = base.Center;
															Projectile.NewProjectile(center15.X, center15.Y, 0f, 0f, 447, num1562, 0f, Main.myPlayer, (float)(this.whoAmI + 1), 0f);
														}
													}
												}
												flag142 = false;
												int maxValue10 = 1000;
												int maxValue11 = 1000;
												int num1566 = 450;
												int num1567 = 30;
												if (Main.expertMode)
												{
													num1567 = 25;
												}
												if (nPC7.ai[0] == 2f)
												{
													flag142 = true;
													maxValue11 = 120;
													maxValue10 = 120;
												}
												if (!flag142)
												{
													num1563 = 280f;
													num1564 = 120f;
													flag142 = (flag142 || (this.ai[3] >= num1563 && this.ai[3] < num1563 + num1564));
													if (flag142)
													{
														maxValue11 = 90;
														maxValue10 = 60;
													}
												}
												if (!flag142)
												{
													num1563 = 440f;
													num1564 = 140f;
													flag142 = (flag142 || (this.ai[3] >= num1563 && this.ai[3] < num1563 + num1564));
													if (flag142)
													{
														maxValue11 = 60;
														maxValue10 = 90;
													}
												}
												bool flag143 = true;
												bool flag144 = true;
												bool flag145 = true;
												bool flag146 = true;
												if (Main.npc[(int)this.localAI[0]].active && Main.npc[(int)this.localAI[0]].type == 393)
												{
													flag143 = false;
												}
												if (Main.npc[(int)this.localAI[1]].active && Main.npc[(int)this.localAI[1]].type == 393)
												{
													flag144 = false;
												}
												if (Main.npc[(int)this.localAI[2]].active && Main.npc[(int)this.localAI[2]].type == 394)
												{
													flag145 = false;
												}
												if (Main.npc[(int)this.localAI[3]].active && Main.npc[(int)this.localAI[3]].type == 394)
												{
													flag146 = false;
												}
												if (flag142)
												{
													bool flag147 = flag143;
													if (flag147 && Main.rand.Next(maxValue10) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint4 = new Vector2(-1f * (float)Main.rand.NextDouble() * 3f, 1f);
															spinningpoint4 = spinningpoint4.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint4 *= 3f;
															Vector2 vector192 = -1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + base.Center + Vector2.UnitY * (float)Main.rand.Next(30, 45);
															Projectile.NewProjectile(vector192.X, vector192.Y, spinningpoint4.X, spinningpoint4.Y, num1566, num1567, 0f, Main.myPlayer, 0f, 0f);
														}
													}
													flag147 = flag144;
													if (flag147 && Main.rand.Next(maxValue10) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint5 = new Vector2(1f * (float)Main.rand.NextDouble() * 3f, 1f);
															spinningpoint5 = spinningpoint5.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint5 *= 3f;
															Vector2 vector193 = 1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + base.Center + Vector2.UnitY * (float)Main.rand.Next(30, 45);
															Projectile.NewProjectile(vector193.X, vector193.Y, spinningpoint5.X, spinningpoint5.Y, num1566, num1567, 0f, Main.myPlayer, 0f, 0f);
														}
													}
												}
												if (flag142)
												{
													bool flag148 = flag145;
													if (flag148 && Main.rand.Next(maxValue11) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint6 = new Vector2(-1f * (float)Main.rand.NextDouble() * 2f, -1f);
															spinningpoint6 = spinningpoint6.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint6 *= 3f;
															Vector2 vector194 = -1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + base.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10);
															Projectile.NewProjectile(vector194.X, vector194.Y, spinningpoint6.X, spinningpoint6.Y, num1566, num1567, 0f, Main.myPlayer, 0f, 0f);
														}
													}
													flag148 = flag146;
													if (flag148 && Main.rand.Next(maxValue11) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 spinningpoint7 = new Vector2(1f * (float)Main.rand.NextDouble() * 2f, -1f);
															spinningpoint7 = spinningpoint7.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
															spinningpoint7 *= 3f;
															Vector2 vector195 = 1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + base.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10);
															Projectile.NewProjectile(vector195.X, vector195.Y, spinningpoint7.X, spinningpoint7.Y, num1566, num1567, 0f, Main.myPlayer, 0f, 0f);
														}
													}
												}
												if (flag146 && Main.rand.Next(8) == 0)
												{
													return;
												}
											}
										}
										else
										{
											if (this.type == 390)
											{
												this.Transform(382);
												return;
											}
											if (this.type == 416)
											{
												this.Transform(518);
												return;
											}
											this.life = 0;
											this.HitEffect(0, 10.0);
											this.active = false;
											return;
										}
									}
									else if (this.aiStyle == 76)
									{
										if (this.localAI[3] == 0f && Main.netMode != 1 && this.type == 395)
										{
											this.localAI[3] = 1f;
											int[] array5 = new int[4];
											int num1572 = 0;
											for (int num1573 = 0; num1573 < 2; num1573++)
											{
												int num1574 = NPC.NewNPC((int)base.Center.X + num1573 * 300 - 150, (int)base.Center.Y, 393, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												Main.npc[num1574].ai[1] = (float)num1573;
												Main.npc[num1574].netUpdate = true;
												array5[num1572++] = num1574;
											}
											for (int num1575 = 0; num1575 < 2; num1575++)
											{
												int num1576 = NPC.NewNPC((int)base.Center.X + num1575 * 300 - 150, (int)base.Center.Y, 394, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												Main.npc[num1576].ai[1] = (float)num1575;
												Main.npc[num1576].netUpdate = true;
												array5[num1572++] = num1576;
											}
											int num1577 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 392, this.whoAmI, 0f, 0f, 0f, 0f, 255);
											Main.npc[num1577].ai[0] = (float)this.whoAmI;
											Main.npc[num1577].netUpdate = true;
											for (int num1578 = 0; num1578 < 4; num1578++)
											{
												Main.npc[array5[num1578]].ai[0] = (float)this.whoAmI;
											}
											for (int num1579 = 0; num1579 < 4; num1579++)
											{
												Main.npc[num1577].localAI[num1579] = (float)array5[num1579];
											}
										}
										Vector2 center16 = base.Center;
										Player player8 = Main.player[this.target];
										if (this.target < 0 || this.target == 255 || player8.dead || !player8.active)
										{
											this.TargetClosest(true);
											player8 = Main.player[this.target];
											this.netUpdate = true;
										}
										if ((player8.dead || Vector2.Distance(player8.Center, center16) > 3200f) && this.ai[0] != 1f)
										{
											if (this.ai[0] == 0f)
											{
												this.ai[0] = -1f;
											}
											if (this.ai[0] == 2f)
											{
												this.ai[0] = -2f;
											}
											this.netUpdate = true;
										}
										if (this.ai[0] == -1f || this.ai[0] == -2f)
										{
											this.velocity.Y = this.velocity.Y - 0.4f;
											if (this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											if (!player8.dead)
											{
												this.timeLeft = 300;
												if (this.ai[0] == -2f)
												{
													this.ai[0] = 2f;
												}
												if (this.ai[0] == 0f)
												{
													this.ai[0] = 0f;
												}
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[0] == 0f)
										{
											int num1580 = 0;
											if (this.ai[3] >= 580f)
											{
												num1580 = 0;
											}
											else if (this.ai[3] >= 440f)
											{
												num1580 = 5;
											}
											else if (this.ai[3] >= 420f)
											{
												num1580 = 4;
											}
											else if (this.ai[3] >= 280f)
											{
												num1580 = 3;
											}
											else if (this.ai[3] >= 260f)
											{
												num1580 = 2;
											}
											else if (this.ai[3] >= 20f)
											{
												num1580 = 1;
											}
											this.ai[3] += 1f;
											if (this.ai[3] >= 600f)
											{
												this.ai[3] = 0f;
											}
											int num1581 = num1580;
											if (this.ai[3] >= 580f)
											{
												num1580 = 0;
											}
											else if (this.ai[3] >= 440f)
											{
												num1580 = 5;
											}
											else if (this.ai[3] >= 420f)
											{
												num1580 = 4;
											}
											else if (this.ai[3] >= 280f)
											{
												num1580 = 3;
											}
											else if (this.ai[3] >= 260f)
											{
												num1580 = 2;
											}
											else if (this.ai[3] >= 20f)
											{
												num1580 = 1;
											}
											if (num1580 != num1581)
											{
												if (num1580 == 0)
												{
													this.ai[2] = 0f;
												}
												if (num1580 == 1)
												{
													this.ai[2] = (float)((Math.Sign((player8.Center - center16).X) == 1) ? 1 : -1);
												}
												if (num1580 == 2)
												{
													this.ai[2] = 0f;
												}
												this.netUpdate = true;
											}
											if (num1580 == 0)
											{
												if (this.ai[2] == 0f)
												{
													this.ai[2] = (float)(-600 * Math.Sign((center16 - player8.Center).X));
												}
												Vector2 vector196 = player8.Center + new Vector2(this.ai[2], -250f) - center16;
												if (vector196.Length() < 50f)
												{
													this.ai[3] = 19f;
												}
												else
												{
													vector196.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector196 * 16f, 0.1f);
												}
											}
											if (num1580 == 1)
											{
												int num1582 = (int)base.Center.X / 16;
												int num1583 = (int)(this.position.Y + (float)this.height) / 16;
												int num1584 = 0;
												bool flag149 = Main.tile[num1582, num1583].nactive() && Main.tileSolid[(int)Main.tile[num1582, num1583].type] && !Main.tileSolidTop[(int)Main.tile[num1582, num1583].type];
												if (flag149)
												{
													num1584 = 1;
												}
												else
												{
													while (num1584 < 150 && num1583 + num1584 < Main.maxTilesY)
													{
														int num1585 = num1583 + num1584;
														bool flag150 = Main.tile[num1582, num1585].nactive() && Main.tileSolid[(int)Main.tile[num1582, num1585].type] && !Main.tileSolidTop[(int)Main.tile[num1582, num1585].type];
														if (flag150)
														{
															num1584--;
															break;
														}
														num1584++;
													}
												}
												float num1586 = (float)(num1584 * 16);
												float num1587 = 250f;
												if (num1586 < num1587)
												{
													float num1588 = -4f;
													if (-num1588 > num1586)
													{
														num1588 = -num1586;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1588, 0.05f);
												}
												else
												{
													this.velocity.Y = this.velocity.Y * 0.95f;
												}
												this.velocity.X = 3.5f * this.ai[2];
											}
											if (num1580 == 2)
											{
												if (this.ai[2] == 0f)
												{
													this.ai[2] = (float)(300 * Math.Sign((center16 - player8.Center).X));
												}
												Vector2 vector197 = player8.Center + new Vector2(this.ai[2], -170f) - center16;
												int num1589 = (int)base.Center.X / 16;
												int num1590 = (int)(this.position.Y + (float)this.height) / 16;
												int num1591 = 0;
												bool flag151 = Main.tile[num1589, num1590].nactive() && Main.tileSolid[(int)Main.tile[num1589, num1590].type] && !Main.tileSolidTop[(int)Main.tile[num1589, num1590].type];
												if (flag151)
												{
													num1591 = 1;
												}
												else
												{
													while (num1591 < 150 && num1590 + num1591 < Main.maxTilesY)
													{
														int num1592 = num1590 + num1591;
														bool flag152 = Main.tile[num1589, num1592].nactive() && Main.tileSolid[(int)Main.tile[num1589, num1592].type] && !Main.tileSolidTop[(int)Main.tile[num1589, num1592].type];
														if (flag152)
														{
															num1591--;
															break;
														}
														num1591++;
													}
												}
												float num1593 = (float)(num1591 * 16);
												float num1594 = 170f;
												if (num1593 < num1594)
												{
													vector197.Y -= num1594 - num1593;
												}
												if (vector197.Length() < 70f)
												{
													this.ai[3] = 279f;
												}
												else
												{
													vector197.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector197 * 20f, 0.1f);
												}
											}
											else if (num1580 == 3)
											{
												float num1595 = 0.85f;
												int num1596 = (int)base.Center.X / 16;
												int num1597 = (int)(this.position.Y + (float)this.height) / 16;
												int num1598 = 0;
												bool flag153 = Main.tile[num1596, num1597].nactive() && Main.tileSolid[(int)Main.tile[num1596, num1597].type] && !Main.tileSolidTop[(int)Main.tile[num1596, num1597].type];
												if (flag153)
												{
													num1598 = 1;
												}
												else
												{
													while (num1598 < 150 && num1597 + num1598 < Main.maxTilesY)
													{
														int num1599 = num1597 + num1598;
														bool flag154 = Main.tile[num1596, num1599].nactive() && Main.tileSolid[(int)Main.tile[num1596, num1599].type] && !Main.tileSolidTop[(int)Main.tile[num1596, num1599].type];
														if (flag154)
														{
															num1598--;
															break;
														}
														num1598++;
													}
												}
												float num1600 = (float)(num1598 * 16);
												float num1601 = 170f;
												if (num1600 < num1601)
												{
													float num1602 = -4f;
													if (-num1602 > num1600)
													{
														num1602 = -num1600;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1602, 0.05f);
												}
												else
												{
													this.velocity.Y = this.velocity.Y * num1595;
												}
												this.velocity.X = this.velocity.X * num1595;
											}
											if (num1580 == 4)
											{
												Vector2 vector198 = player8.Center + new Vector2(0f, -250f) - center16;
												if (vector198.Length() < 50f)
												{
													this.ai[3] = 439f;
													return;
												}
												vector198.Normalize();
												this.velocity = Vector2.Lerp(this.velocity, vector198 * 16f, 0.1f);
												return;
											}
											else if (num1580 == 5)
											{
												this.velocity *= 0.85f;
												return;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.dontTakeDamage = false;
											this.velocity *= 0.96f;
											float num1603 = 150f;
											this.ai[1] += 1f;
											if (this.ai[1] >= num1603)
											{
												this.ai[0] = 2f;
												this.ai[1] = 0f;
												this.rotation = 0f;
												this.netUpdate = true;
												return;
											}
											if (this.ai[1] < 40f)
											{
												this.rotation = Vector2.UnitY.RotatedBy((double)(this.ai[1] / 40f * 6.28318548f), default(Vector2)).Y * 0.2f;
												return;
											}
											if (this.ai[1] < 80f)
											{
												this.rotation = Vector2.UnitY.RotatedBy((double)(this.ai[1] / 20f * 6.28318548f), default(Vector2)).Y * 0.3f;
												return;
											}
											if (this.ai[1] < 120f)
											{
												this.rotation = Vector2.UnitY.RotatedBy((double)(this.ai[1] / 10f * 6.28318548f), default(Vector2)).Y * 0.4f;
												return;
											}
											this.rotation = (this.ai[1] - 120f) / 30f * 6.28318548f;
											return;
										}
										else if (this.ai[0] == 2f)
										{
											int num1604 = 100;
											float num1605 = 3600f;
											float num1606 = 120f;
											float num1607 = 60f;
											int num1608 = 0;
											if (this.ai[3] % num1606 >= num1607)
											{
												num1608 = 1;
											}
											int num1609 = num1608;
											num1608 = 0;
											this.ai[3] += 1f;
											if (this.ai[3] % num1606 >= num1607)
											{
												num1608 = 1;
											}
											if (num1608 != num1609)
											{
												if (num1608 == 1)
												{
													this.ai[2] = (float)((Math.Sign((player8.Center - center16).X) == 1) ? 1 : -1);
													if (Main.netMode != 1)
													{
														Vector2 center17 = base.Center;
														Projectile.NewProjectile(center17.X, center17.Y, 0f, 0f, 447, num1604, 0f, Main.myPlayer, (float)(this.whoAmI + 1), 0f);
													}
												}
												this.netUpdate = true;
											}
											if (this.ai[3] >= num1605)
											{
												this.ai[0] = 2f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
											else if (num1608 == 0)
											{
												Vector2 vector199 = player8.Center + new Vector2(this.ai[2] * 350f, -250f) - center16;
												vector199.Normalize();
												this.velocity = Vector2.Lerp(this.velocity, vector199 * 16f, 0.1f);
											}
											else
											{
												int num1610 = (int)base.Center.X / 16;
												int num1611 = (int)(this.position.Y + (float)this.height) / 16;
												int num1612 = 0;
												bool flag155 = Main.tile[num1610, num1611].nactive() && Main.tileSolid[(int)Main.tile[num1610, num1611].type] && !Main.tileSolidTop[(int)Main.tile[num1610, num1611].type];
												if (flag155)
												{
													num1612 = 1;
												}
												else
												{
													while (num1612 < 150 && num1611 + num1612 < Main.maxTilesY)
													{
														int num1613 = num1611 + num1612;
														bool flag156 = Main.tile[num1610, num1613].nactive() && Main.tileSolid[(int)Main.tile[num1610, num1613].type] && !Main.tileSolidTop[(int)Main.tile[num1610, num1613].type];
														if (flag156)
														{
															num1612--;
															break;
														}
														num1612++;
													}
												}
												float num1614 = (float)(num1612 * 16);
												float num1615 = 250f;
												if (num1614 < num1615)
												{
													float num1616 = -4f;
													if (-num1616 > num1614)
													{
														num1616 = -num1614;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1616, 0.05f);
												}
												else
												{
													this.velocity.Y = this.velocity.Y * 0.95f;
												}
												this.velocity.X = 8f * this.ai[2];
											}
											this.rotation = 0f;
											return;
										}
									}
									else if (this.aiStyle == 77)
									{
										if (this.localAI[3] == 0f)
										{
											this.netUpdate = true;
											this.localAI[3] = 1f;
											this.ai[0] = -1f;
										}
										if (this.ai[0] == -2f)
										{
											this.dontTakeDamage = true;
											this.ai[1] += 1f;
											if (this.ai[1] < 60f)
											{
												MoonlordDeathDrama.RequestLight(this.ai[1] / 30f, base.Center);
											}
											if (this.ai[1] == 60f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
												if (Main.netMode != 1 && this.type == 398)
												{
													this.ai[2] = (float)Main.rand.Next(3);
													this.ai[2] = 0f;
													this.netUpdate = true;
												}
											}
										}
										if (this.ai[0] == -1f)
										{
											this.dontTakeDamage = true;
											this.ai[1] += 1f;
											if (this.ai[1] < 60f)
											{
												MoonlordDeathDrama.RequestLight(this.ai[1] / 30f, base.Center);
											}
											if (this.ai[1] == 60f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
												if (Main.netMode != 1 && this.type == 398)
												{
													this.ai[2] = (float)Main.rand.Next(3);
													this.ai[2] = 0f;
													this.netUpdate = true;
													int[] array6 = new int[3];
													int num1617 = 0;
													for (int num1618 = 0; num1618 < 2; num1618++)
													{
														int num1619 = NPC.NewNPC((int)base.Center.X + num1618 * 800 - 400, (int)base.Center.Y - 100, 397, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1619].ai[2] = (float)num1618;
														Main.npc[num1619].netUpdate = true;
														array6[num1617++] = num1619;
													}
													int num1620 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y - 400, 396, this.whoAmI, 0f, 0f, 0f, 0f, 255);
													Main.npc[num1620].netUpdate = true;
													array6[num1617++] = num1620;
													for (int num1621 = 0; num1621 < 3; num1621++)
													{
														Main.npc[array6[num1621]].ai[3] = (float)this.whoAmI;
													}
													for (int num1622 = 0; num1622 < 3; num1622++)
													{
														this.localAI[num1622] = (float)array6[num1622];
													}
												}
											}
										}
										if (this.ai[0] == 0f)
										{
											this.dontTakeDamage = true;
											this.TargetClosest(false);
											Vector2 value28 = Main.player[this.target].Center - base.Center + new Vector2(0f, 130f);
											if (value28.Length() > 20f)
											{
												Vector2 desiredVelocity2 = Vector2.Normalize(value28 - this.velocity) * 8f;
												Vector2 velocity3 = this.velocity;
												this.SimpleFlyMovement(desiredVelocity2, 0.5f);
												this.velocity = Vector2.Lerp(this.velocity, velocity3, 0.5f);
											}
											if (Main.netMode != 1)
											{
												bool flag157 = false;
												if (this.localAI[0] < 0f || this.localAI[1] < 0f || this.localAI[2] < 0f)
												{
													flag157 = true;
												}
												else if (!Main.npc[(int)this.localAI[0]].active || Main.npc[(int)this.localAI[0]].type != 397)
												{
													flag157 = true;
												}
												else if (!Main.npc[(int)this.localAI[1]].active || Main.npc[(int)this.localAI[1]].type != 397)
												{
													flag157 = true;
												}
												else if (!Main.npc[(int)this.localAI[2]].active || Main.npc[(int)this.localAI[2]].type != 396)
												{
													flag157 = true;
												}
												if (flag157)
												{
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
												}
												bool flag158 = true;
												if (Main.npc[(int)this.localAI[0]].ai[0] != -2f)
												{
													flag158 = false;
												}
												if (Main.npc[(int)this.localAI[1]].ai[0] != -2f)
												{
													flag158 = false;
												}
												if (Main.npc[(int)this.localAI[2]].ai[0] != -2f)
												{
													flag158 = false;
												}
												if (flag158)
												{
													this.ai[0] = 1f;
													this.dontTakeDamage = false;
													this.netUpdate = true;
												}
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.dontTakeDamage = false;
											this.TargetClosest(false);
											Vector2 value29 = Main.player[this.target].Center - base.Center + new Vector2(0f, 130f);
											if (value29.Length() > 20f)
											{
												Vector2 desiredVelocity3 = Vector2.Normalize(value29 - this.velocity) * 8f;
												Vector2 velocity4 = this.velocity;
												this.SimpleFlyMovement(desiredVelocity3, 0.5f);
												this.velocity = Vector2.Lerp(this.velocity, velocity4, 0.5f);
											}
										}
										else if (this.ai[0] == 2f)
										{
											this.dontTakeDamage = true;
											Vector2 value30 = new Vector2((float)this.direction, -0.5f);
											this.velocity = Vector2.Lerp(this.velocity, value30, 0.98f);
											this.ai[1] += 1f;
											if (this.ai[1] < 60f)
											{
												MoonlordDeathDrama.RequestLight(this.ai[1] / 60f, base.Center);
											}
											if (this.ai[1] == 60f)
											{
												for (int num1623 = 0; num1623 < 1000; num1623++)
												{
													Projectile projectile = Main.projectile[num1623];
													if (projectile.active && (projectile.type == 456 || projectile.type == 462 || projectile.type == 455 || projectile.type == 452 || projectile.type == 454))
													{
														projectile.Kill();
													}
												}
												for (int num1624 = 0; num1624 < 200; num1624++)
												{
													NPC nPC8 = Main.npc[num1624];
													if (nPC8.active && nPC8.type == 400)
													{
														nPC8.HitEffect(0, 9999.0);
														nPC8.active = false;
													}
												}
											}
											if (this.ai[1] % 3f == 0f && this.ai[1] < 580f && this.ai[1] > 60f)
											{
												Vector2 vector200 = Utils.RandomVector2(Main.rand, -1f, 1f);
												if (vector200 != Vector2.Zero)
												{
													vector200.Normalize();
												}
												vector200 *= 20f + Main.rand.NextFloat() * 400f;
												bool flag159 = true;
												Vector2 vec5 = base.Center + vector200;
												Point point7 = vec5.ToTileCoordinates();
												if (!WorldGen.InWorld(point7.X, point7.Y, 0))
												{
													flag159 = false;
												}
												if (!flag159 || WorldGen.SolidTile(point7.X, point7.Y))
												{
												}
												float num1625 = (float)Main.rand.Next(6, 19);
												float num1626 = 6.28318548f / num1625;
												float num1627 = 6.28318548f * Main.rand.NextFloat();
												float scaleFactor21 = 1f + Main.rand.NextFloat() * 2f;
												float num1628 = 1f + Main.rand.NextFloat();
												float fadeIn = 0.4f + Main.rand.NextFloat();
												int num1629 = Utils.SelectRandom<int>(Main.rand, new int[]
												{
													31,
													229
												});
												for (float num1630 = 0f; num1630 < this.ai[1] / 60f; num1630 += 1f)
												{
													Vector2 vector201 = Utils.RandomVector2(Main.rand, -1f, 1f);
													if (vector201 != Vector2.Zero)
													{
														vector201.Normalize();
													}
													vector201 *= 20f + Main.rand.NextFloat() * 800f;
													Vector2 vector202 = base.Center + vector201;
													Point point8 = vector202.ToTileCoordinates();
													bool flag160 = true;
													if (!WorldGen.InWorld(point8.X, point8.Y, 0))
													{
														flag160 = false;
													}
													if (flag160 && WorldGen.SolidTile(point8.X, point8.Y))
													{
														flag160 = false;
													}
												}
											}
											if (this.ai[1] % 15f == 0f && this.ai[1] < 480f && this.ai[1] >= 90f && Main.netMode != 1)
											{
												Vector2 vector203 = Utils.RandomVector2(Main.rand, -1f, 1f);
												if (vector203 != Vector2.Zero)
												{
													vector203.Normalize();
												}
												vector203 *= 20f + Main.rand.NextFloat() * 400f;
												bool flag161 = true;
												Vector2 vec6 = base.Center + vector203;
												Point point9 = vec6.ToTileCoordinates();
												if (!WorldGen.InWorld(point9.X, point9.Y, 0))
												{
													flag161 = false;
												}
												if (flag161 && WorldGen.SolidTile(point9.X, point9.Y))
												{
													flag161 = false;
												}
												if (flag161)
												{
													float num1631 = (float)(Main.rand.Next(4) < 2).ToDirectionInt() * (0.3926991f + 0.7853982f * Main.rand.NextFloat());
													Vector2 vector204 = new Vector2(0f, -Main.rand.NextFloat() * 0.5f - 0.5f).RotatedBy((double)num1631, default(Vector2)) * 6f;
													Projectile.NewProjectile(vec6.X, vec6.Y, vector204.X, vector204.Y, 622, 0, 0f, Main.myPlayer, 0f, 0f);
												}
											}
											if (this.ai[1] >= 480f)
											{
												MoonlordDeathDrama.RequestLight((this.ai[1] - 480f) / 120f, base.Center);
											}
											if (this.ai[1] >= 600f)
											{
												this.life = 0;
												this.HitEffect(0, 1337.0);
												this.checkDead();
												return;
											}
										}
										else if (this.ai[0] == 3f)
										{
											this.dontTakeDamage = true;
											Vector2 value31 = new Vector2((float)this.direction, -0.5f);
											this.velocity = Vector2.Lerp(this.velocity, value31, 0.98f);
											this.ai[1] += 1f;
											if (this.ai[1] < 60f)
											{
												MoonlordDeathDrama.RequestLight(this.ai[1] / 40f, base.Center);
											}
											if (this.ai[1] == 40f)
											{
												for (int num1632 = 0; num1632 < 1000; num1632++)
												{
													Projectile projectile2 = Main.projectile[num1632];
													if (projectile2.active && (projectile2.type == 456 || projectile2.type == 462 || projectile2.type == 455 || projectile2.type == 452 || projectile2.type == 454))
													{
														projectile2.active = false;
														if (Main.netMode != 1)
														{
															NetMessage.SendData(27, -1, -1, "", num1632, 0f, 0f, 0f, 0, 0, 0);
														}
													}
												}
												for (int num1633 = 0; num1633 < 200; num1633++)
												{
													NPC nPC9 = Main.npc[num1633];
													if (nPC9.active && nPC9.type == 400)
													{
														nPC9.active = false;
														if (Main.netMode != 1)
														{
															NetMessage.SendData(23, -1, -1, "", nPC9.whoAmI, 0f, 0f, 0f, 0, 0, 0);
														}
													}
												}
											}
											if (this.ai[1] >= 60f)
											{
												for (int num1635 = 0; num1635 < 200; num1635++)
												{
													NPC nPC10 = Main.npc[num1635];
													if (nPC10.active && (nPC10.type == 400 || nPC10.type == 397 || nPC10.type == 396))
													{
														nPC10.active = false;
														if (Main.netMode != 1)
														{
															NetMessage.SendData(23, -1, -1, "", nPC10.whoAmI, 0f, 0f, 0f, 0, 0, 0);
														}
													}
												}
												this.active = false;
												if (Main.netMode != 1)
												{
													NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
												}
												NPC.LunarApocalypseIsUp = false;
												if (Main.netMode == 2)
												{
													NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
												}
												return;
											}
										}
										bool flag162 = false;
										if (this.ai[0] == -2f || this.ai[0] == -1f || this.ai[0] == -2f || this.ai[0] == 3f)
										{
											flag162 = true;
										}
										if (Main.player[this.target].active && !Main.player[this.target].dead)
										{
											flag162 = true;
										}
										if (!flag162)
										{
											for (int num1636 = 0; num1636 < 255; num1636++)
											{
												if (Main.player[num1636].active && !Main.player[num1636].dead)
												{
													flag162 = true;
													break;
												}
											}
										}
										if (!flag162)
										{
											this.ai[0] = 3f;
											this.ai[1] = 0f;
											this.netUpdate = true;
										}
										if (this.ai[0] >= 0f && this.ai[0] < 2f && Main.netMode != 1 && base.Distance(Main.player[this.target].Center) > 2400f)
										{
											this.ai[0] = -2f;
											this.netUpdate = true;
											Vector2 value32 = Main.player[this.target].Center - Vector2.UnitY * 150f - base.Center;
											this.position += value32;
											if (Main.npc[(int)this.localAI[0]].active)
											{
												Main.npc[(int)this.localAI[0]].position += value32;
												Main.npc[(int)this.localAI[0]].netUpdate = true;
											}
											if (Main.npc[(int)this.localAI[1]].active)
											{
												Main.npc[(int)this.localAI[1]].position += value32;
												Main.npc[(int)this.localAI[1]].netUpdate = true;
											}
											if (Main.npc[(int)this.localAI[2]].active)
											{
												Main.npc[(int)this.localAI[2]].position += value32;
												Main.npc[(int)this.localAI[2]].netUpdate = true;
											}
											for (int num1637 = 0; num1637 < 200; num1637++)
											{
												NPC nPC11 = Main.npc[num1637];
												if (nPC11.active && nPC11.type == 400)
												{
													nPC11.position += value32;
													nPC11.netUpdate = true;
												}
											}
											return;
										}
									}
									else if (this.aiStyle == 78)
									{
										NPC.InitializeMoonLordAttacks();
										if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
										{
											this.life = 0;
											this.HitEffect(0, 10.0);
											this.active = false;
										}
										bool flag163 = this.ai[2] == 0f;
										float num1638 = (float)(-(float)flag163.ToDirectionInt());
										this.spriteDirection = (int)num1638;
										this.dontTakeDamage = (this.frameCounter >= 21.0);
										Vector2 vector205 = new Vector2(30f, 66f);
										float num1639 = 0f;
										float num1640 = 0f;
										bool flag164 = true;
										int num1641 = 0;
										if (this.ai[0] != -2f)
										{
											float num1642 = this.ai[0];
											this.ai[1] += 1f;
											int num1643 = (int)Main.npc[(int)this.ai[3]].ai[2];
											int num1644 = flag163 ? 0 : 1;
											int num1645 = 0;
											int num1646 = 0;
											while (num1645 < 5)
											{
												num1640 = (float)NPC.MoonLordAttacksArray[num1643, num1644, 1, num1645];
												if (num1640 + (float)num1646 > this.ai[1])
												{
													break;
												}
												num1646 += (int)num1640;
												num1645++;
											}
											if (num1645 == 5)
											{
												num1645 = 0;
												this.ai[1] = 0f;
												num1640 = (float)NPC.MoonLordAttacksArray[num1643, num1644, 1, num1645];
												num1646 = 0;
											}
											this.ai[0] = (float)NPC.MoonLordAttacksArray[num1643, num1644, 0, num1645];
											num1639 = (float)((int)this.ai[1] - num1646);
											if (this.ai[0] != num1642)
											{
												this.netUpdate = true;
											}
										}
										if (this.ai[0] == -2f)
										{
											this.damage = 80;
											num1641 = 0;
											this.dontTakeDamage = true;
											this.ai[1] += 1f;
											if (this.ai[1] >= 32f)
											{
												this.ai[1] = 0f;
											}
											if (this.ai[1] < 0f)
											{
												this.ai[1] = 0f;
											}
											Vector2 center18 = Main.npc[(int)this.ai[3]].Center;
											Vector2 value33 = center18 + new Vector2(350f * num1638, -100f);
											Vector2 vector206 = value33 - base.Center;
											if (vector206.Length() > 20f)
											{
												vector206.Normalize();
												vector206 *= 6f;
												Vector2 velocity5 = this.velocity;
												if (vector206 != Vector2.Zero)
												{
													this.SimpleFlyMovement(vector206, 0.3f);
												}
												this.velocity = Vector2.Lerp(velocity5, this.velocity, 0.5f);
											}
										}
										else if (this.ai[0] == 0f)
										{
											num1641 = 3;
											this.localAI[1] -= 0.05f;
											if (this.localAI[1] < 0f)
											{
												this.localAI[1] = 0f;
											}
											Vector2 center19 = Main.npc[(int)this.ai[3]].Center;
											Vector2 value34 = center19 + new Vector2(350f * num1638, -100f);
											Vector2 vector207 = value34 - base.Center;
											if (vector207.Length() > 20f)
											{
												vector207.Normalize();
												vector207 *= 6f;
												Vector2 velocity6 = this.velocity;
												if (vector207 != Vector2.Zero)
												{
													this.SimpleFlyMovement(vector207, 0.3f);
												}
												this.velocity = Vector2.Lerp(velocity6, this.velocity, 0.5f);
											}
										}
										else if (this.ai[0] == 1f)
										{
											num1641 = 0;
											int num1647 = 7;
											int num1648 = 4;
											if (num1639 >= (float)(num1647 * num1648 * 2))
											{
												this.localAI[1] -= 0.07f;
												if (this.localAI[1] < 0f)
												{
													this.localAI[1] = 0f;
												}
											}
											else if (num1639 >= (float)(num1647 * num1648))
											{
												this.localAI[1] += 0.05f;
												if (this.localAI[1] > 0.75f)
												{
													this.localAI[1] = 0.75f;
												}
												float num1649 = 6.28318548f * (num1639 % (float)(num1647 * num1648)) / (float)(num1647 * num1648) - 1.57079637f;
												this.localAI[0] = new Vector2((float)Math.Cos((double)num1649) * vector205.X, (float)Math.Sin((double)num1649) * vector205.Y).ToRotation();
												if (num1639 % (float)num1648 == 0f)
												{
													Vector2 value35 = new Vector2(1f * -num1638, 3f);
													Vector2 vector208 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector205 * this.localAI[1]);
													Vector2 vector209 = base.Center + Vector2.Normalize(vector208) * vector205.Length() * 0.4f + value35;
													Vector2 vector210 = Vector2.Normalize(vector208) * 8f;
													float ai = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * num1638;
													Projectile.NewProjectile(vector209.X, vector209.Y, vector210.X, vector210.Y, 452, 30, 0f, Main.myPlayer, 0f, ai);
												}
											}
											else
											{
												this.localAI[1] += 0.02f;
												if (this.localAI[1] > 0.75f)
												{
													this.localAI[1] = 0.75f;
												}
												float num1650 = 6.28318548f * (num1639 % (float)(num1647 * num1648)) / (float)(num1647 * num1648) - 1.57079637f;
												this.localAI[0] = new Vector2((float)Math.Cos((double)num1650) * vector205.X, (float)Math.Sin((double)num1650) * vector205.Y).ToRotation();
											}
										}
										else if (this.ai[0] == 2f)
										{
											this.localAI[1] -= 0.05f;
											if (this.localAI[1] < 0f)
											{
												this.localAI[1] = 0f;
											}
											Vector2 center20 = Main.npc[(int)this.ai[3]].Center;
											Vector2 value36 = new Vector2(220f * num1638, -60f) + center20;
											value36 += new Vector2(num1638 * 100f, -50f);
											Vector2 value37 = new Vector2(400f * num1638, -60f);
											if (num1639 < 30f)
											{
												Vector2 vector211 = value36 - base.Center;
												if (vector211 != Vector2.Zero)
												{
													Vector2 vector212 = vector211;
													vector212.Normalize();
													this.velocity = Vector2.SmoothStep(this.velocity, vector212 * Math.Min(8f, vector211.Length()), 0.2f);
												}
											}
											else if (num1639 < 210f)
											{
												num1641 = 1;
												int num1651 = (int)num1639 - 30;
												if (num1651 % 30 == 0 && Main.netMode != 1)
												{
													Vector2 vector213 = new Vector2(5f * num1638, -8f);
													int num1652 = num1651 / 30;
													vector213.X += ((float)num1652 - 3.5f) * num1638 * 3f;
													vector213.Y += ((float)num1652 - 4.5f) * 1f;
													vector213 *= 1.2f;
													Projectile.NewProjectile(base.Center.X, base.Center.Y, vector213.X, vector213.Y, 454, 50, 1f, Main.myPlayer, 0f, (float)this.whoAmI);
												}
												Vector2 vector214 = Vector2.SmoothStep(value36, value36 + value37, (num1639 - 30f) / 180f) - base.Center;
												if (vector214 != Vector2.Zero)
												{
													Vector2 vector215 = vector214;
													vector215.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector215 * Math.Min(20f, vector214.Length()), 0.5f);
												}
											}
											else if (num1639 < 282f)
											{
												num1641 = 0;
												this.velocity *= 0.9f;
											}
											else if (num1639 < 287f)
											{
												num1641 = 1;
												this.velocity *= 0.9f;
											}
											else if (num1639 < 292f)
											{
												num1641 = 2;
												this.velocity *= 0.9f;
											}
											else if (num1639 < 300f)
											{
												num1641 = 3;
												if (num1639 == 292f && Main.netMode != 1)
												{
													int num1653 = (int)Player.FindClosest(this.position, this.width, this.height);
													Vector2 velocity7 = Vector2.Normalize(Main.player[num1653].Center - (base.Center + Vector2.UnitY * -350f));
													if (float.IsNaN(velocity7.X) || float.IsNaN(velocity7.Y))
													{
														velocity7 = Vector2.UnitY;
													}
													velocity7 *= 12f;
													for (int num1654 = 0; num1654 < 1000; num1654++)
													{
														Projectile projectile3 = Main.projectile[num1654];
														if (projectile3.active && projectile3.type == 454 && projectile3.ai[1] == (float)this.whoAmI && projectile3.ai[0] != -1f)
														{
															projectile3.ai[0] = -1f;
															projectile3.velocity = velocity7;
															projectile3.netUpdate = true;
														}
													}
												}
												Vector2 vector216 = Vector2.SmoothStep(value36, value36 + value37, 1f - (num1639 - 270f) / 30f) - base.Center;
												if (vector216 != Vector2.Zero)
												{
													Vector2 vector217 = vector216;
													vector217.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, vector217 * Math.Min(14f, vector216.Length()), 0.1f);
												}
											}
											else
											{
												num1641 = 3;
												Vector2 vector218 = value36 - base.Center;
												if (vector218 != Vector2.Zero)
												{
													Vector2 vector219 = vector218;
													vector219.Normalize();
													this.velocity = Vector2.SmoothStep(this.velocity, vector219 * Math.Min(8f, vector218.Length()), 0.2f);
												}
											}
										}
										else if (this.ai[0] == 3f)
										{
											if (num1639 == 0f)
											{
												this.TargetClosest(false);
												this.netUpdate = true;
											}
											Vector2 v2 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
											this.localAI[0] = this.localAI[0].AngleLerp(v2.ToRotation(), 0.5f);
											this.localAI[1] += 0.05f;
											if (this.localAI[1] > 1f)
											{
												this.localAI[1] = 1f;
											}
											if ((num1639 == num1640 - 14f || num1639 == num1640 - 7f || num1639 == num1640) && Main.netMode != 1)
											{
												Vector2 vector220 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector205 * this.localAI[1]);
												Vector2 vector221 = Vector2.Normalize(v2) * 8f;
												Projectile.NewProjectile(base.Center.X + vector220.X, base.Center.Y + vector220.Y, vector221.X, vector221.Y, 462, 30, 0f, Main.myPlayer, 0f, 0f);
											}
										}
										if (flag164)
										{
											Vector2 center21 = Main.npc[(int)this.ai[3]].Center;
											Vector2 value38 = new Vector2(220f * num1638, -60f) + center21;
											Vector2 vector222 = value38 + new Vector2(num1638 * 110f, -150f);
											Vector2 max = vector222 + new Vector2(num1638 * 370f, 150f);
											if (vector222.X > max.X)
											{
												Utils.Swap<float>(ref vector222.X, ref max.X);
											}
											if (vector222.Y > max.Y)
											{
												Utils.Swap<float>(ref vector222.Y, ref max.Y);
											}
											Vector2 value39 = Vector2.Clamp(base.Center + this.velocity, vector222, max);
											if (value39 != base.Center + this.velocity)
											{
												base.Center = value39 - this.velocity;
											}
										}
										int num1655 = num1641 * 7;
										if ((double)num1655 > this.frameCounter)
										{
											this.frameCounter += 1.0;
										}
										if ((double)num1655 < this.frameCounter)
										{
											this.frameCounter -= 1.0;
										}
										if (this.frameCounter < 0.0)
										{
											this.frameCounter = 0.0;
										}
										if (this.frameCounter > 21.0)
										{
											this.frameCounter = 21.0;
										}
										int num1656 = 0;
										if (flag163)
										{
											num1656 = 0;
										}
										if (num1656 == 0)
										{
											return;
										}
										if (num1656 == 1)
										{
											if (this.ai[0] == 0f)
											{
												if ((this.ai[1] += 1f) >= 20f)
												{
													this.ai[1] = 0f;
													this.ai[0] = 1f;
													this.netUpdate = true;
												}
												this.velocity = Vector2.UnitX * 4f;
												return;
											}
											if (this.ai[0] == 1f)
											{
												if ((this.ai[1] += 1f) >= 20f)
												{
													this.ai[1] = 0f;
													this.ai[0] = 2f;
													this.netUpdate = true;
												}
												this.velocity = Vector2.UnitX * -4f;
												return;
											}
											if (this.ai[0] == 2f || this.ai[0] == 4f)
											{
												if ((this.ai[1] += 1f) >= 20f)
												{
													this.ai[1] = 0f;
													this.ai[0] += 1f;
													this.netUpdate = true;
												}
												this.velocity = Vector2.UnitY * -4f * (float)(flag163 ? 1 : -1);
												return;
											}
											if (this.ai[0] == 3f || this.ai[0] == 5f)
											{
												if ((this.ai[1] += 1f) >= 20f)
												{
													this.ai[1] = 0f;
													this.ai[0] += 1f;
													if (this.ai[0] == 6f)
													{
														this.ai[0] = 0f;
													}
													this.netUpdate = true;
												}
												this.velocity = Vector2.UnitY * 4f * (float)(flag163 ? 1 : -1);
												return;
											}
										}
										else
										{
											if (num1656 == 2)
											{
												new Vector2(30f, 66f);
												this.TargetClosest(false);
												Vector2 v3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - base.Center;
												float num1657 = v3.Length() / 200f;
												if (num1657 > 1f)
												{
													num1657 = 1f;
												}
												num1657 = 1f - num1657;
												num1657 *= 2f;
												if (num1657 > 1f)
												{
													num1657 = 1f;
												}
												this.localAI[0] = v3.ToRotation();
												this.localAI[1] = num1657;
												this.localAI[1] = 1f;
												return;
											}
											if (num1656 == 3)
											{
												int num1658 = 7;
												int num1659 = 4;
												this.ai[1] += 1f;
												if (this.ai[1] >= (float)(num1658 * num1659 * 10))
												{
													this.ai[1] = 0f;
													return;
												}
												if (this.ai[1] >= (float)(num1658 * num1659))
												{
													this.localAI[1] -= 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
														return;
													}
												}
												else
												{
													this.localAI[1] += 0.05f;
													if (this.localAI[1] > 0.75f)
													{
														this.localAI[1] = 0.75f;
													}
													float num1660 = 6.28318548f * (this.ai[1] % (float)(num1658 * num1659)) / (float)(num1658 * num1659) - 1.57079637f;
													this.localAI[0] = new Vector2((float)Math.Cos((double)num1660) * vector205.X, (float)Math.Sin((double)num1660) * vector205.Y).ToRotation();
													if (this.ai[1] % (float)num1659 == 0f)
													{
														Vector2 value40 = new Vector2(1f * -num1638, 3f);
														Vector2 vector223 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector205 * this.localAI[1]);
														Vector2 vector224 = base.Center + Vector2.Normalize(vector223) * vector205.Length() * 0.4f + value40;
														Vector2 vector225 = Vector2.Normalize(vector223) * 8f;
														float ai2 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * num1638;
														Projectile.NewProjectile(vector224.X, vector224.Y, vector225.X, vector225.Y, 452, 5, 0f, Main.myPlayer, 0f, ai2);
														return;
													}
												}
											}
											else if (num1656 == 4)
											{
												Vector2 center22 = Main.npc[(int)this.ai[3]].Center;
												Vector2 value41 = new Vector2(220f * num1638, -60f) + center22;
												value41 += new Vector2(num1638 * 100f, -50f);
												Vector2 value42 = new Vector2(400f * num1638, -60f);
												this.ai[1] += 1f;
												if (this.ai[1] < 30f)
												{
													Vector2 vector226 = value41 - base.Center;
													if (vector226 != Vector2.Zero)
													{
														Vector2 vector227 = vector226;
														vector227.Normalize();
														this.velocity = Vector2.SmoothStep(this.velocity, vector227 * Math.Min(8f, vector226.Length()), 0.2f);
														return;
													}
												}
												else if (this.ai[1] < 210f)
												{
													int num1661 = (int)this.ai[1] - 30;
													if (num1661 % 30 == 0 && Main.netMode != 1)
													{
														Vector2 vector228 = new Vector2(5f * num1638, -8f);
														int num1662 = num1661 / 30;
														vector228.X += ((float)num1662 - 3.5f) * num1638 * 3f;
														vector228.Y += ((float)num1662 - 4.5f) * 1f;
														vector228 *= 1.2f;
														Projectile.NewProjectile(base.Center.X, base.Center.Y, vector228.X, vector228.Y, 454, 1, 1f, Main.myPlayer, 0f, (float)this.whoAmI);
													}
													Vector2 vector229 = Vector2.SmoothStep(value41, value41 + value42, (this.ai[1] - 30f) / 180f) - base.Center;
													if (vector229 != Vector2.Zero)
													{
														Vector2 vector230 = vector229;
														vector230.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, vector230 * Math.Min(4f, vector229.Length()), 0.1f);
														return;
													}
												}
												else
												{
													if (this.ai[1] < 270f)
													{
														this.velocity *= 0.9f;
														return;
													}
													if (this.ai[1] >= 300f)
													{
														this.ai[1] = 0f;
														return;
													}
													if (this.ai[1] == 270f && Main.netMode != 1)
													{
														int num1663 = (int)Player.FindClosest(this.position, this.width, this.height);
														Vector2 velocity8 = Vector2.Normalize(Main.player[num1663].Center - (base.Center + Vector2.UnitY * -350f));
														if (float.IsNaN(velocity8.X) || float.IsNaN(velocity8.Y))
														{
															velocity8 = Vector2.UnitY;
														}
														velocity8 *= 12f;
														for (int num1664 = 0; num1664 < 1000; num1664++)
														{
															Projectile projectile4 = Main.projectile[num1664];
															if (projectile4.active && projectile4.type == 454 && projectile4.ai[1] == (float)this.whoAmI && projectile4.ai[0] != -1f)
															{
																projectile4.ai[0] = -1f;
																projectile4.velocity = velocity8;
																projectile4.netUpdate = true;
															}
														}
													}
													Vector2 vector231 = Vector2.SmoothStep(value41, value41 + value42, 1f - (this.ai[1] - 270f) / 30f) - base.Center;
													if (vector231 != Vector2.Zero)
													{
														Vector2 vector232 = vector231;
														vector232.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, vector232 * Math.Min(14f, vector231.Length()), 0.1f);
														return;
													}
												}
											}
											else if (num1656 == 5)
											{
												this.dontTakeDamage = true;
												this.ai[1] += 1f;
												if (this.ai[1] >= 40f)
												{
													this.ai[1] = 0f;
													return;
												}
											}
										}
									}
									else if (this.aiStyle == 79)
									{
										if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
										{
											this.life = 0;
											this.HitEffect(0, 10.0);
											this.active = false;
										}
										this.dontTakeDamage = (this.localAI[3] >= 15f);
										this.velocity = Vector2.Zero;
										base.Center = Main.npc[(int)this.ai[3]].Center + new Vector2(0f, -400f);
										Vector2 value43 = new Vector2(27f, 59f);
										float num1665 = 0f;
										float num1666 = 0f;
										int num1667 = 0;
										int num1668 = 0;
										if (this.ai[0] >= 0f)
										{
											float num1669 = this.ai[0];
											this.ai[1] += 1f;
											int num1670 = (int)Main.npc[(int)this.ai[3]].ai[2];
											int num1671 = 2;
											int num1672 = 0;
											int num1673 = 0;
											while (num1672 < 5)
											{
												num1666 = (float)NPC.MoonLordAttacksArray[num1670, num1671, 1, num1672];
												if (num1666 + (float)num1673 > this.ai[1])
												{
													break;
												}
												num1673 += (int)num1666;
												num1672++;
											}
											if (num1672 == 5)
											{
												num1672 = 0;
												this.ai[1] = 0f;
												num1666 = (float)NPC.MoonLordAttacksArray[num1670, num1671, 1, num1672];
												num1673 = 0;
											}
											this.ai[0] = (float)NPC.MoonLordAttacksArray[num1670, num1671, 0, num1672];
											num1665 = (float)((int)this.ai[1] - num1673);
											if (this.ai[0] != num1669)
											{
												this.netUpdate = true;
											}
										}
										if (this.ai[0] == -3f)
										{
											this.damage = 0;
											this.dontTakeDamage = true;
											this.rotation = MathHelper.Lerp(this.rotation, 0.2617994f, 0.07f);
											this.ai[1] += 1f;
											if (this.ai[1] >= 32f)
											{
												this.ai[1] = 0f;
											}
											if (this.ai[1] < 0f)
											{
												this.ai[1] = 0f;
											}
											if (this.localAI[2] < 14f)
											{
												this.localAI[2] += 1f;
											}
										}
										else if (this.ai[0] == -2f)
										{
											if (Main.npc[(int)this.ai[3]].ai[0] == 2f)
											{
												this.ai[0] = -3f;
												return;
											}
											this.damage = 80;
											this.dontTakeDamage = true;
											this.ai[1] += 1f;
											if (this.ai[1] >= 32f)
											{
												this.ai[1] = 0f;
											}
											if (this.ai[1] < 0f)
											{
												this.ai[1] = 0f;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= 555f)
											{
												this.ai[2] = 0f;
											}
											if (this.ai[2] >= 120f)
											{
												num1665 = this.ai[2] - 120f;
												num1666 = 555f;
												num1667 = 2;
												Vector2 value44 = new Vector2(0f, 216f);
												if (num1665 == 0f && Main.netMode != 1)
												{
													Vector2 value45 = base.Center + value44;
													for (int num1674 = 0; num1674 < 255; num1674++)
													{
														Player player9 = Main.player[num1674];
														if (player9.active && !player9.dead && Vector2.Distance(player9.Center, value45) <= 3000f)
														{
															Vector2 value46 = Main.player[this.target].Center - value45;
															if (value46 != Vector2.Zero)
															{
																value46.Normalize();
															}
															Projectile.NewProjectile(value45.X, value45.Y, value46.X, value46.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)num1674);
														}
													}
												}
												if ((num1665 == 120f || num1665 == 180f || num1665 == 240f) && Main.netMode != 1)
												{
													for (int num1675 = 0; num1675 < 1000; num1675++)
													{
														Projectile projectile5 = Main.projectile[num1675];
														if (projectile5.active && projectile5.type == 456 && Main.player[(int)projectile5.ai[1]].HasBuff(145) != -1)
														{
															Vector2 center23 = Main.player[this.target].Center;
															int num1676 = NPC.NewNPC((int)center23.X, (int)center23.Y, 401, 0, 0f, 0f, 0f, 0f, 255);
															Main.npc[num1676].netUpdate = true;
															Main.npc[num1676].ai[0] = (float)(this.whoAmI + 1);
															Main.npc[num1676].ai[1] = (float)num1675;
														}
													}
												}
											}
										}
										else if (this.ai[0] == 0f)
										{
											num1668 = 3;
											this.TargetClosest(false);
											Vector2 v4 = Main.player[this.target].Center - base.Center - new Vector2(0f, -22f);
											float num1677 = v4.Length() / 500f;
											if (num1677 > 1f)
											{
												num1677 = 1f;
											}
											num1677 = 1f - num1677;
											num1677 *= 2f;
											if (num1677 > 1f)
											{
												num1677 = 1f;
											}
											this.localAI[0] = v4.ToRotation();
											this.localAI[1] = num1677;
											this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
										}
										if (this.ai[0] == 1f)
										{
											if (num1665 < 180f)
											{
												this.localAI[1] -= 0.05f;
												if (this.localAI[1] < 0f)
												{
													this.localAI[1] = 0f;
												}
											}
											else if (num1665 < num1666 - 15f)
											{
												if (num1665 == 180f && Main.netMode != 1)
												{
													this.TargetClosest(false);
													Vector2 vector234 = Main.player[this.target].Center - base.Center;
													vector234.Normalize();
													float num1683 = -1f;
													if (vector234.X < 0f)
													{
														num1683 = 1f;
													}
													vector234 = vector234.RotatedBy((double)(-(double)num1683 * 6.28318548f / 6f), default(Vector2));
													Projectile.NewProjectile(base.Center.X, base.Center.Y, vector234.X, vector234.Y, 455, 75, 0f, Main.myPlayer, num1683 * 6.28318548f / 540f, (float)this.whoAmI);
													this.ai[2] = (vector234.ToRotation() + 9.424778f) * num1683;
													this.netUpdate = true;
												}
												this.localAI[1] += 0.05f;
												if (this.localAI[1] > 1f)
												{
													this.localAI[1] = 1f;
												}
												float num1684 = (float)(this.ai[2] >= 0f).ToDirectionInt();
												float num1685 = this.ai[2];
												if (num1685 < 0f)
												{
													num1685 *= -1f;
												}
												num1685 += -9.424778f;
												num1685 += num1684 * 6.28318548f / 540f;
												this.localAI[0] = num1685;
												this.ai[2] = (num1685 + 9.424778f) * num1684;
											}
											else
											{
												this.localAI[1] -= 0.07f;
												if (this.localAI[1] < 0f)
												{
													this.localAI[1] = 0f;
												}
												num1668 = 3;
											}
										}
										else if (this.ai[0] == 2f)
										{
											num1667 = 2;
											num1668 = 3;
											Vector2 value47 = new Vector2(0f, 216f);
											if (num1665 == 0f && Main.netMode != 1)
											{
												Vector2 value48 = base.Center + value47;
												for (int num1686 = 0; num1686 < 255; num1686++)
												{
													Player player10 = Main.player[num1686];
													if (player10.active && !player10.dead && Vector2.Distance(player10.Center, value48) <= 3000f)
													{
														Vector2 value49 = Main.player[this.target].Center - value48;
														if (value49 != Vector2.Zero)
														{
															value49.Normalize();
														}
														Projectile.NewProjectile(value48.X, value48.Y, value49.X, value49.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)num1686);
													}
												}
											}
											if ((num1665 == 120f || num1665 == 180f || num1665 == 240f) && Main.netMode != 1)
											{
												for (int num1687 = 0; num1687 < 1000; num1687++)
												{
													Projectile projectile6 = Main.projectile[num1687];
													if (projectile6.active && projectile6.type == 456 && Main.player[(int)projectile6.ai[1]].HasBuff(145) != -1)
													{
														Vector2 center25 = Main.player[this.target].Center;
														int num1688 = NPC.NewNPC((int)center25.X, (int)center25.Y, 401, 0, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1688].netUpdate = true;
														Main.npc[num1688].ai[0] = (float)(this.whoAmI + 1);
														Main.npc[num1688].ai[1] = (float)num1687;
													}
												}
											}
										}
										else if (this.ai[0] == 3f)
										{
											if (num1665 == 0f)
											{
												this.TargetClosest(false);
												this.netUpdate = true;
											}
											Vector2 v5 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
											this.localAI[0] = this.localAI[0].AngleLerp(v5.ToRotation(), 0.5f);
											this.localAI[1] += 0.05f;
											if (this.localAI[1] > 1f)
											{
												this.localAI[1] = 1f;
											}
											if ((num1665 == num1666 - 14f || num1665 == num1666 - 7f || num1665 == num1666) && Main.netMode != 1)
											{
												Vector2 vector235 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), value43 * this.localAI[1]);
												Vector2 vector236 = Vector2.Normalize(v5) * 8f;
												Projectile.NewProjectile(base.Center.X + vector235.X, base.Center.Y + vector235.Y, vector236.X, vector236.Y, 462, 30, 0f, Main.myPlayer, 0f, 0f);
											}
										}
										int num1689 = num1667 * 7;
										if ((float)num1689 > this.localAI[2])
										{
											this.localAI[2] += 1f;
										}
										if ((float)num1689 < this.localAI[2])
										{
											this.localAI[2] -= 1f;
										}
										if (this.localAI[2] < 0f)
										{
											this.localAI[2] = 0f;
										}
										if (this.localAI[2] > 14f)
										{
											this.localAI[2] = 14f;
										}
										int num1690 = num1668 * 5;
										if ((float)num1690 > this.localAI[3])
										{
											this.localAI[3] += 1f;
										}
										if ((float)num1690 < this.localAI[3])
										{
											this.localAI[3] -= 1f;
										}
										if (this.localAI[3] < 0f)
										{
											this.localAI[2] = 0f;
										}
										if (this.localAI[3] > 15f)
										{
											this.localAI[2] = 15f;
										}
										int num1691 = 0;
										if (num1691 == 1)
										{
											new Vector2(27f, 59f);
											this.TargetClosest(false);
											Vector2 v6 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - base.Center;
											float num1692 = v6.Length() / 200f;
											if (num1692 > 1f)
											{
												num1692 = 1f;
											}
											num1692 = 1f - num1692;
											num1692 *= 2f;
											if (num1692 > 1f)
											{
												num1692 = 1f;
											}
											this.localAI[0] = v6.ToRotation();
											this.localAI[1] = num1692;
											this.localAI[1] = 1f;
										}
										if (num1691 == 2)
										{
											Vector2 vector237 = new Vector2(27f, 59f);
											float num1693 = 6.28318548f * ((float)Main.time % 600f) / 600f;
											this.localAI[0] = new Vector2((float)Math.Cos((double)num1693) * vector237.X, (float)Math.Sin((double)num1693) * vector237.Y).ToRotation();
											this.localAI[1] = 0.75f;
											if (this.ai[1] == 0f)
											{
												Vector2 vector238 = num1693.ToRotationVector2();
												vector238 = Vector2.One;
												Projectile.NewProjectile(base.Center.X, base.Center.Y, vector238.X, vector238.Y, 455, 1, 0f, Main.myPlayer, 0.0104719754f, (float)this.whoAmI);
											}
											this.ai[1] += 1f;
											if (this.ai[1] >= 600f)
											{
												this.ai[1] = 0f;
											}
										}
										if (num1691 == 3)
										{
											Vector2 vector239 = new Vector2(0f, 216f);
											if (this.ai[1] == 0f)
											{
												this.TargetClosest(false);
												Vector2 vector240 = Main.player[this.target].Center - base.Center;
												vector240.Normalize();
												Projectile.NewProjectile(base.Center.X + vector239.X, base.Center.Y + vector239.Y, vector240.X, vector240.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)this.target);
											}
											this.ai[1] += 1f;
											if (this.ai[1] >= 600f)
											{
												this.ai[1] = 0f;
											}
										}
										if (num1691 == 4)
										{
											new Vector2(27f, 59f);
											this.TargetClosest(false);
											Vector2 v7 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
											this.localAI[0] = this.localAI[0].AngleLerp(v7.ToRotation(), 0.5f);
											this.localAI[1] = 1f;
											this.ai[1] += 1f;
											if (this.ai[1] == 76f || this.ai[1] == 83f || this.ai[1] == 90f)
											{
												value43 = new Vector2(27f, 59f);
												Vector2 vector241 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), value43 * this.localAI[1]);
												Vector2 vector242 = Vector2.Normalize(v7) * 8f;
												Projectile.NewProjectile(base.Center.X + vector241.X, base.Center.Y + vector241.Y, vector242.X, vector242.Y, 462, 5, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.ai[1] >= 90f)
											{
												this.ai[1] = 0f;
												return;
											}
										}
									}
									else
									{
										if (this.aiStyle == 80)
										{
											if (this.ai[0] == 0f)
											{
												if (this.collideX)
												{
													this.direction = 1 - this.direction;
												}
												this.velocity.X = 3f * (float)((this.direction == 0) ? -1 : 1);
												Vector2 center26 = base.Center;
												Point point10 = center26.ToTileCoordinates();
												int num1694 = 30;
												if (WorldGen.InWorld(point10.X, point10.Y, 30))
												{
													for (int num1695 = 0; num1695 < 30; num1695++)
													{
														if (WorldGen.SolidTile(point10.X, point10.Y + num1695))
														{
															num1694 = num1695;
															break;
														}
													}
												}
												if (num1694 < 15)
												{
													this.velocity.Y = Math.Max(this.velocity.Y - 0.05f, -3.5f);
												}
												else if (num1694 < 20)
												{
													this.velocity.Y = this.velocity.Y * 0.95f;
												}
												else
												{
													this.velocity.Y = Math.Min(this.velocity.Y + 0.05f, 1.5f);
												}
												float num1697;
												int num1696 = this.FindClosestPlayer(out num1697);
												if (num1696 == -1 || Main.player[num1696].dead)
												{
													return;
												}
												if (num1697 < 352f && Main.player[num1696].Center.Y > base.Center.Y)
												{
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													this.netUpdate = true;
												}
											}
											else if (this.ai[0] == 1f)
											{
												this.ai[1] += 1f;
												this.velocity *= 0.95f;
												if (this.ai[1] >= 60f)
												{
													this.ai[1] = 0f;
													this.ai[0] = 2f;
													int num1698 = this.FindClosestPlayer();
													if (num1698 != -1)
													{
														this.ai[3] = ((Main.player[num1698].Center.X > base.Center.X) ? -1f : 1f);
													}
													else
													{
														this.ai[3] = 1f;
													}
													this.netUpdate = true;
												}
											}
											else if (this.ai[0] == 2f)
											{
												this.noTileCollide = true;
												this.ai[1] += 1f;
												this.velocity.Y = Math.Max(this.velocity.Y - 0.1f, -10f);
												this.velocity.X = Math.Min(this.velocity.X + this.ai[3] * 0.05f, 4f);
												if (this.position.Y < (float)(-(float)this.height) || this.ai[1] >= 180f)
												{
													if (Main.netMode != 1)
													{
														Main.StartInvasion(4);
													}
													this.active = false;
													this.ai[0] = 3f;
													this.netUpdate = true;
												}
											}
											return;
										}
										if (this.aiStyle == 81)
										{
											Vector2 value50 = new Vector2(30f);
											if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
											{
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
											}
											float num1699 = 0f;
											float num1700 = this.ai[0];
											this.ai[1] += 1f;
											int num1701 = 0;
											int num1702 = 0;
											while (num1701 < 10)
											{
												num1699 = (float)NPC.MoonLordAttacksArray2[1, num1701];
												if (num1699 + (float)num1702 > this.ai[1])
												{
													break;
												}
												num1702 += (int)num1699;
												num1701++;
											}
											if (num1701 == 10)
											{
												num1701 = 0;
												this.ai[1] = 0f;
												num1699 = (float)NPC.MoonLordAttacksArray2[1, num1701];
												num1702 = 0;
											}
											this.ai[0] = (float)NPC.MoonLordAttacksArray2[0, num1701];
											float num1703 = (float)((int)this.ai[1] - num1702);
											if (this.ai[0] != num1700)
											{
												this.netUpdate = true;
											}
											if (this.ai[0] == -1f)
											{
												this.ai[1] += 1f;
												if (this.ai[1] > 180f)
												{
													this.ai[1] = 0f;
												}
												float value51;
												if (this.ai[1] < 60f)
												{
													value51 = 0.75f;
													this.localAI[0] = 0f;
													this.localAI[1] = (float)Math.Sin((double)(this.ai[1] * 6.28318548f / 15f)) * 0.35f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[0] = 3.14159274f;
													}
												}
												else if (this.ai[1] < 120f)
												{
													value51 = 1f;
													if (this.localAI[1] < 0.5f)
													{
														this.localAI[1] += 0.025f;
													}
													this.localAI[0] += 0.209439516f;
												}
												else
												{
													value51 = 1.15f;
													this.localAI[1] -= 0.05f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
												}
												this.localAI[2] = MathHelper.Lerp(this.localAI[2], value51, 0.3f);
											}
											if (this.ai[0] == 0f)
											{
												this.TargetClosest(false);
												Vector2 v8 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
												this.localAI[0] = this.localAI[0].AngleLerp(v8.ToRotation(), 0.5f);
												this.localAI[1] += 0.05f;
												if (this.localAI[1] > 0.7f)
												{
													this.localAI[1] = 0.7f;
												}
												this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
												float scaleFactor22 = 24f;
												Vector2 center27 = base.Center;
												Vector2 center28 = Main.player[this.target].Center;
												Vector2 value52 = center28 - center27;
												Vector2 vector243 = value52 - Vector2.UnitY * 200f;
												vector243 = Vector2.Normalize(vector243) * scaleFactor22;
												int num1704 = 30;
												this.velocity.X = (this.velocity.X * (float)(num1704 - 1) + vector243.X) / (float)num1704;
												this.velocity.Y = (this.velocity.Y * (float)(num1704 - 1) + vector243.Y) / (float)num1704;
												float num1705 = 0.25f;
												for (int num1706 = 0; num1706 < 200; num1706++)
												{
													if (num1706 != this.whoAmI && Main.npc[num1706].active && Main.npc[num1706].type == 400 && Vector2.Distance(base.Center, Main.npc[num1706].Center) < 150f)
													{
														if (this.position.X < Main.npc[num1706].position.X)
														{
															this.velocity.X = this.velocity.X - num1705;
														}
														else
														{
															this.velocity.X = this.velocity.X + num1705;
														}
														if (this.position.Y < Main.npc[num1706].position.Y)
														{
															this.velocity.Y = this.velocity.Y - num1705;
														}
														else
														{
															this.velocity.Y = this.velocity.Y + num1705;
														}
													}
												}
												return;
											}
											if (this.ai[0] == 1f)
											{
												if (num1703 == 0f)
												{
													this.TargetClosest(false);
													this.netUpdate = true;
												}
												this.velocity *= 0.95f;
												if (this.velocity.Length() < 1f)
												{
													this.velocity = Vector2.Zero;
												}
												Vector2 v9 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - base.Center;
												this.localAI[0] = this.localAI[0].AngleLerp(v9.ToRotation(), 0.5f);
												this.localAI[1] += 0.05f;
												if (this.localAI[1] > 1f)
												{
													this.localAI[1] = 1f;
												}
												if (num1703 < 20f)
												{
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1.1f, 0.2f);
												}
												else
												{
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
												}
												if ((num1703 == num1699 - 14f || num1703 == num1699 - 7f || num1703 == num1699) && Main.netMode != 1)
												{
													Vector2 vector244 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), value50 * this.localAI[1]);
													Vector2 vector245 = Vector2.Normalize(v9) * 8f;
													Projectile.NewProjectile(base.Center.X + vector244.X, base.Center.Y + vector244.Y, vector245.X, vector245.Y, 462, 35, 0f, Main.myPlayer, 0f, 0f);
													return;
												}
											}
											else if (this.ai[0] == 2f)
											{
												if (num1703 < 15f)
												{
													this.localAI[1] -= 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
													this.velocity *= 0.8f;
													if (this.velocity.Length() < 1f)
													{
														this.velocity = Vector2.Zero;
														return;
													}
												}
												else if (num1703 < 75f)
												{
													float num1707 = (num1703 - 15f) / 10f;
													int num1708 = 0;
													int num1709 = 0;
													switch ((int)num1707)
													{
														case 0:
															num1708 = 0;
															num1709 = 2;
															break;
														case 1:
															num1708 = 2;
															num1709 = 5;
															break;
														case 2:
															num1708 = 5;
															num1709 = 3;
															break;
														case 3:
															num1708 = 3;
															num1709 = 1;
															break;
														case 4:
															num1708 = 1;
															num1709 = 4;
															break;
														case 5:
															num1708 = 4;
															num1709 = 0;
															break;
													}
													Vector2 spinningpoint8 = Vector2.UnitY * -30f;
													Vector2 value53 = spinningpoint8.RotatedBy((double)((float)num1708 * 6.28318548f / 6f), default(Vector2));
													Vector2 value54 = spinningpoint8.RotatedBy((double)((float)num1709 * 6.28318548f / 6f), default(Vector2));
													Vector2 vector246 = Vector2.Lerp(value53, value54, num1707 - (float)((int)num1707));
													float value55 = vector246.Length() / 30f;
													this.localAI[0] = vector246.ToRotation();
													this.localAI[1] = MathHelper.Lerp(this.localAI[1], value55, 0.5f);
													if ((num1703 - 15f) % 10f == 0f && Main.netMode != 1)
													{
														Vector2 vec7 = Vector2.Normalize(vector246);
														if (vec7.HasNaNs())
														{
															vec7 = Vector2.UnitY * -1f;
														}
														vec7 *= 4f;
														Projectile.NewProjectile(base.Center.X + vector246.X, base.Center.Y + vector246.Y, vec7.X, vec7.Y, 454, 55, 0f, Main.myPlayer, 30f, (float)this.whoAmI);
														return;
													}
												}
												else
												{
													if (num1703 < 105f)
													{
														this.localAI[0] = this.localAI[0].AngleLerp(this.ai[2] - 1.57079637f, 0.2f);
														this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.75f, 0.2f);
														if (num1703 == 75f)
														{
															this.TargetClosest(false);
															this.netUpdate = true;
															this.velocity = Vector2.UnitY * -7f;
															for (int num1712 = 0; num1712 < 1000; num1712++)
															{
																Projectile projectile7 = Main.projectile[num1712];
																if (projectile7.active && projectile7.type == 454 && projectile7.ai[1] == (float)this.whoAmI && projectile7.ai[0] != -1f)
																{
																	projectile7.velocity += this.velocity;
																	projectile7.netUpdate = true;
																}
															}
														}
														this.velocity.Y = this.velocity.Y * 0.96f;
														this.ai[2] = (Main.player[this.target].Center - base.Center).ToRotation() + 1.57079637f;
														this.rotation = this.rotation.AngleTowards(this.ai[2], 0.104719758f);
														return;
													}
													if (num1703 < 120f)
													{
														if (num1703 == 105f)
														{
															this.netUpdate = true;
														}
														Vector2 velocity9 = (this.ai[2] - 1.57079637f).ToRotationVector2() * 12f;
														this.velocity = velocity9 * 2f;
														for (int num1713 = 0; num1713 < 1000; num1713++)
														{
															Projectile projectile8 = Main.projectile[num1713];
															if (projectile8.active && projectile8.type == 454 && projectile8.ai[1] == (float)this.whoAmI && projectile8.ai[0] != -1f)
															{
																projectile8.ai[0] = -1f;
																projectile8.velocity = velocity9;
																projectile8.netUpdate = true;
															}
														}
														return;
													}
													this.velocity *= 0.92f;
													this.rotation = this.rotation.AngleLerp(0f, 0.2f);
													return;
												}
											}
											else if (this.ai[0] == 3f)
											{
												if (num1703 < 15f)
												{
													this.localAI[1] -= 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
													this.velocity *= 0.9f;
													if (this.velocity.Length() < 1f)
													{
														this.velocity = Vector2.Zero;
														return;
													}
												}
												else if (num1703 < 45f)
												{
													this.localAI[0] = 0f;
													this.localAI[1] = (float)Math.Sin((double)((num1703 - 15f) * 6.28318548f / 15f)) * 0.5f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[0] = 3.14159274f;
														return;
													}
												}
												else
												{
													if (num1703 >= 185f)
													{
														this.velocity *= 0.88f;
														this.rotation = this.rotation.AngleLerp(0f, 0.2f);
														this.localAI[1] -= 0.07f;
														if (this.localAI[1] < 0f)
														{
															this.localAI[1] = 0f;
														}
														this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
														return;
													}
													if (num1703 == 45f)
													{
														this.ai[2] = (float)(Main.rand.Next(2) == 0).ToDirectionInt() * 6.28318548f / 40f;
														this.netUpdate = true;
													}
													if ((num1703 - 15f - 30f) % 40f == 0f)
													{
														this.ai[2] *= 0.95f;
													}
													this.localAI[0] += this.ai[2];
													this.localAI[1] += 0.05f;
													if (this.localAI[1] > 1f)
													{
														this.localAI[1] = 1f;
													}
													Vector2 vector247 = this.localAI[0].ToRotationVector2() * value50 * this.localAI[1];
													float scaleFactor23 = MathHelper.Lerp(8f, 20f, (num1703 - 15f - 30f) / 140f);
													this.velocity = Vector2.Normalize(vector247) * scaleFactor23;
													this.rotation = this.rotation.AngleLerp(this.velocity.ToRotation() + 1.57079637f, 0.2f);
													if ((num1703 - 15f - 30f) % 10f == 0f && Main.netMode != 1)
													{
														Vector2 vector248 = base.Center + Vector2.Normalize(vector247) * value50.Length() * 0.4f;
														Vector2 vector249 = Vector2.Normalize(vector247) * 8f;
														float ai3 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * this.ai[2];
														Projectile.NewProjectile(vector248.X, vector248.Y, vector249.X, vector249.Y, 452, 35, 0f, Main.myPlayer, 0f, ai3);
														return;
													}
												}
											}
											else if (this.ai[0] == 4f)
											{
												if (num1703 == 0f)
												{
													this.TargetClosest(false);
													this.netUpdate = true;
												}
												if (num1703 < 180f)
												{
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
													this.localAI[1] -= 0.05f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													this.velocity *= 0.95f;
													if (this.velocity.Length() < 1f)
													{
														this.velocity = Vector2.Zero;
													}
													if (num1703 >= 60f)
													{
														return;
													}
												}
												else
												{
													if (num1703 < num1699 - 15f)
													{
														if (num1703 == 180f && Main.netMode != 1)
														{
															this.TargetClosest(false);
															Vector2 vector251 = Main.player[this.target].Center - base.Center;
															vector251.Normalize();
															float num1719 = -1f;
															if (vector251.X < 0f)
															{
																num1719 = 1f;
															}
															vector251 = vector251.RotatedBy((double)(-(double)num1719 * 6.28318548f / 6f), default(Vector2));
															Projectile.NewProjectile(base.Center.X, base.Center.Y, vector251.X, vector251.Y, 455, 50, 0f, Main.myPlayer, num1719 * 6.28318548f / 540f, (float)this.whoAmI);
															this.ai[2] = (vector251.ToRotation() + 9.424778f) * num1719;
															this.netUpdate = true;
														}
														this.localAI[1] += 0.05f;
														if (this.localAI[1] > 1f)
														{
															this.localAI[1] = 1f;
														}
														float num1720 = (float)(this.ai[2] >= 0f).ToDirectionInt();
														float num1721 = this.ai[2];
														if (num1721 < 0f)
														{
															num1721 *= -1f;
														}
														num1721 += -9.424778f;
														num1721 += num1720 * 6.28318548f / 540f;
														this.localAI[0] = num1721;
														this.ai[2] = (num1721 + 9.424778f) * num1720;
														return;
													}
													this.localAI[1] -= 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
														return;
													}
												}
											}
										}
										else if (this.aiStyle == 82)
										{
											float num1722 = 90f;
											Vector2 value56 = new Vector2(0f, 216f);
											int num1723 = (int)Math.Abs(this.ai[0]) - 1;
											int num1724 = (int)this.ai[1];
											if (!Main.npc[num1723].active || Main.npc[num1723].type != 396)
											{
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
												return;
											}
											this.ai[2] += 1f;
											if (this.ai[2] >= num1722)
											{
												if (Main.netMode != 1)
												{
													int num1725 = (int)Main.npc[num1723].ai[3];
													int num1726 = -1;
													int num1727 = -1;
													int num1728 = num1723;
													for (int num1729 = 0; num1729 < 200; num1729++)
													{
														if (Main.npc[num1729].active && Main.npc[num1729].ai[3] == (float)num1725)
														{
															if (num1726 == -1 && Main.npc[num1729].type == 397 && Main.npc[num1729].ai[2] == 0f)
															{
																num1726 = num1729;
															}
															if (num1727 == -1 && Main.npc[num1729].type == 397 && Main.npc[num1729].ai[2] == 1f)
															{
																num1727 = num1729;
															}
															if (num1726 != -1 && num1727 != -1 && num1728 != -1)
															{
																break;
															}
														}
													}
													int num1730 = 1000;
													int num1731 = Main.npc[num1725].lifeMax - Main.npc[num1725].life;
													int num1732 = Main.npc[num1726].lifeMax - Main.npc[num1726].life;
													int num1733 = Main.npc[num1727].lifeMax - Main.npc[num1727].life;
													int num1734 = Main.npc[num1728].lifeMax - Main.npc[num1728].life;
													if (num1734 > 0 && num1730 > 0)
													{
														int num1735 = num1734 - num1730;
														if (num1735 > 0)
														{
															num1735 = 0;
														}
														int num1736 = num1730 + num1735;
														num1730 -= num1736;
														Main.npc[num1728].life += num1736;
														NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1728].Center, new Vector2(50f)), num1736, true);
													}
													if (num1731 > 0 && num1730 > 0)
													{
														int num1737 = num1731 - num1730;
														if (num1737 > 0)
														{
															num1737 = 0;
														}
														int num1738 = num1730 + num1737;
														num1730 -= num1738;
														Main.npc[num1725].life += num1738;
														NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1725].Center, new Vector2(50f)), num1738, true);
													}
													if (num1732 > 0 && num1730 > 0)
													{
														int num1739 = num1732 - num1730;
														if (num1739 > 0)
														{
															num1739 = 0;
														}
														int num1740 = num1730 + num1739;
														num1730 -= num1740;
														Main.npc[num1726].life += num1740;
														NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1726].Center, new Vector2(50f)), num1740, true);
													}
													if (num1733 > 0 && num1730 > 0)
													{
														int num1741 = num1733 - num1730;
														if (num1741 > 0)
														{
															num1741 = 0;
														}
														int num1742 = num1730 + num1741;
														num1730 -= num1742;
														Main.npc[num1727].life += num1742;
														NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num1727].Center, new Vector2(50f)), num1742, true);
													}
												}
												this.life = 0;
												this.HitEffect(0, 10.0);
												this.active = false;
												return;
											}
											this.velocity = Vector2.Zero;
											base.Center = Vector2.Lerp(Main.projectile[num1724].Center, Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center + value56, this.ai[2] / num1722);
											return;
										}
										else if (this.aiStyle == 83)
										{
											if (this.type == 437)
											{
												if (this.localAI[3] == 0f && Main.netMode != 1)
												{
													this.localAI[3] = 1f;
													this.netUpdate = true;
													Point[] array7 = null;
													if (!CultistRitual.CheckFloor(base.Center, out array7))
													{
														this.life = 0;
														this.HitEffect(0, 10.0);
														this.active = false;
														return;
													}
													int num1747 = 0;
													int num1748 = 1;
													for (int num1749 = 0; num1749 < 4; num1749++)
													{
														bool flag165 = num1749 == 1 || num1749 == 2;
														int num1750;
														if (flag165)
														{
															num1750 = 438;
														}
														else
														{
															num1750 = 379;
														}
														int num1751 = NPC.NewNPC(array7[num1749].X * 16 + 8, array7[num1749].Y * 16 - 48, num1750, 0, 0f, 0f, 0f, 0f, 255);
														if (flag165)
														{
															this.localAI[num1748++] = (float)(num1751 + 1);
															Main.npc[num1751].ai[3] = (float)(-(float)(this.whoAmI + 1));
														}
														else
														{
															this.ai[num1747++] = (float)(num1751 + 1);
															Main.npc[num1751].ai[3] = (float)(-(float)(this.whoAmI + 1));
														}
														Main.npc[num1751].netUpdate = true;
													}
												}
												if (this.localAI[0] == 1f && Main.netMode != 1)
												{
													this.localAI[0] = 2f;
													for (int num1752 = 0; num1752 < 2; num1752++)
													{
														Main.npc[(int)this.localAI[num1752 + 1] - 1].ai[1] = 1f;
														Main.npc[(int)this.localAI[num1752 + 1] - 1].netUpdate = true;
														Main.npc[(int)this.ai[num1752] - 1].ai[3] = 0f;
														Main.npc[(int)this.ai[num1752] - 1].TargetClosest(true);
														Main.npc[(int)this.ai[num1752] - 1].netUpdate = true;
													}
												}
												if (this.ai[0] != -1f && Main.netMode != 1)
												{
													bool flag166 = true;
													for (int num1753 = 0; num1753 < 2; num1753++)
													{
														if (Main.npc[(int)this.localAI[num1753 + 1] - 1].active && Main.npc[(int)this.localAI[num1753 + 1] - 1].type == 438)
														{
															flag166 = false;
														}
														if (Main.npc[(int)this.ai[num1753] - 1].active && Main.npc[(int)this.ai[num1753] - 1].type == 379)
														{
															flag166 = false;
														}
													}
													if (flag166)
													{
														this.ai[0] = -1f;
														this.ai[1] = 0f;
														this.ai[3] = 0f;
														int num1754 = (int)base.Center.X / 16 + 11 * (Main.rand.Next(2) == 0).ToDirectionInt();
														int num1755 = 0;
														for (int num1756 = -5; num1756 < 12; num1756++)
														{
															int num1757 = num1754;
															int num1758 = (int)base.Center.Y / 16 + num1756;
															if (WorldGen.SolidTile(num1757, num1758) && !Collision.SolidTiles(num1757 - 1, num1757 + 1, num1758 - 3, num1758 - 1))
															{
																num1755 = num1758;
																break;
															}
															if (num1756 == 11)
															{
																num1755 = num1758;
															}
														}
														int num1759 = NPC.NewNPC(num1754 * 16 + 10, num1755 * 16 - 2, 439, 0, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1759].direction = (Main.npc[num1759].spriteDirection = Math.Sign(base.Center.X - (float)(num1754 * 16) - 10f));
														this.ai[2] = (float)num1759;
														this.netUpdate = true;
														CultistRitual.TabletDestroyed();
													}
												}
												if (this.ai[0] == -1f)
												{
													this.ai[3] += 1f;
													if (this.ai[3] > 300f)
													{
														this.life = 0;
														this.HitEffect(0, 9999.0);
														this.active = false;
														if (Main.netMode != 1)
														{
															for (int num1760 = 0; num1760 < 6; num1760++)
															{
																float num1761 = 3f + Main.rand.NextFloat() * 6f;
																Vector2 vector252 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																Vector2 value57 = base.Center;
																value57 += vector252 * 30f;
																Projectile.NewProjectile(value57.X, value57.Y, vector252.X * num1761, vector252.Y * num1761, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
															}
															for (int num1762 = 0; num1762 < 20; num1762++)
															{
																if (Main.rand.Next(2) != 0)
																{
																	float num1763 = 3f + Main.rand.NextFloat() * 6f;
																	Vector2 vector253 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																	Vector2 value58 = base.Center;
																	value58 += vector253 * 30f;
																	Vector2 vector254 = base.Center + vector253 * (Main.rand.NextFloat() * 45f + 45f) + Vector2.UnitY * 20f;
																	Projectile.NewProjectile(value58.X, value58.Y, vector253.X * num1763, -20f, 526, 0, 0f, Main.myPlayer, vector254.X, vector254.Y);
																}
															}
														}
													}
													else if (this.ai[3] % 10f == 1f && this.ai[3] > 120f && Main.netMode != 1)
													{
														float num1764 = 3f + Main.rand.NextFloat() * 6f;
														Vector2 vector255 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
														Vector2 value59 = base.Center;
														value59 += vector255 * 25f;
														Projectile.NewProjectile(value59.X, value59.Y, vector255.X * num1764, vector255.Y * num1764, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
													}
												}
											}
											if (this.type == 438)
											{
												this.velocity.X = this.velocity.X * 0.93f;
												if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
												{
													this.velocity.X = 0f;
												}
												int num1765 = (int)(-this.ai[3] - 1f);
												if (num1765 == -1)
												{
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
													return;
												}
												int num1766 = Math.Sign(Main.npc[num1765].Center.X - base.Center.X);
												if (num1766 != this.direction)
												{
													this.velocity.X = 0f;
													this.direction = (this.spriteDirection = num1766);
													this.netUpdate = true;
												}
												if (this.justHit && Main.netMode != 1 && Main.npc[num1765].localAI[0] == 0f)
												{
													Main.npc[num1765].localAI[0] = 1f;
												}
												if ((this.ai[0] += 1f) >= 300f)
												{
													this.ai[0] = 0f;
													this.netUpdate = true;
												}
											}
											if (this.type == 437)
											{
												return;
											}
										}
										else
										{
											if (this.aiStyle == 84)
											{
												bool expertMode2 = Main.expertMode;
												bool flag167 = this.life <= this.lifeMax / 2;
												int num1767 = 120;
												int num1768 = 35;
												if (expertMode2)
												{
													num1767 = 90;
													num1768 = 25;
												}
												int num1769 = 18;
												int num1770 = 3;
												int num1771 = 30;
												if (expertMode2)
												{
													num1769 = 12;
													num1770 = 4;
													num1771 = 20;
												}
												int num1772 = 80;
												int num1773 = 45;
												if (expertMode2)
												{
													num1772 = 40;
													num1773 = 30;
												}
												int num1774 = 20;
												int num1775 = 2;
												if (expertMode2)
												{
													num1774 = 30;
													num1775 = 2;
												}
												int num1776 = 20;
												int num1777 = 3;
												bool flag168 = this.type == 439;
												bool flag169 = false;
												bool flag170 = false;
												if (flag167)
												{
													this.defense = (int)((float)this.defDefense * 0.65f);
												}
												if (!flag168)
												{
													bool flag171 = this.ai[3] < 0f || !Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 439;
													if (flag171)
													{
														this.life = 0;
														this.HitEffect(0, 10.0);
														this.active = false;
														return;
													}
													this.ai[0] = Main.npc[(int)this.ai[3]].ai[0];
													this.ai[1] = Main.npc[(int)this.ai[3]].ai[1];
													if (this.ai[0] == 5f)
													{
														if (this.justHit)
														{
															this.life = 0;
															this.HitEffect(0, 10.0);
															this.active = false;
															NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
															NPC nPC12 = Main.npc[(int)this.ai[3]];
															nPC12.ai[0] = 6f;
															nPC12.ai[1] = 0f;
															nPC12.netUpdate = true;
														}
													}
													else
													{
														flag169 = true;
														flag170 = true;
													}
												}
												else if (this.ai[0] == 5f && this.ai[1] >= 120f && this.ai[1] < 420f && this.justHit)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[3] += 1f;
													this.velocity = Vector2.Zero;
													this.netUpdate = true;
													List<int> list = new List<int>();
													for (int num1778 = 0; num1778 < 200; num1778++)
													{
														if (Main.npc[num1778].active && Main.npc[num1778].type == 440 && Main.npc[num1778].ai[3] == (float)this.whoAmI)
														{
															list.Add(num1778);
														}
													}
													int num1779 = 10;
													if (Main.expertMode)
													{
														num1779 = 3;
													}
													foreach (int current in list)
													{
														NPC nPC13 = Main.npc[current];
														if (nPC13.localAI[1] == this.localAI[1] && num1779 > 0)
														{
															num1779--;
															nPC13.life = 0;
															nPC13.HitEffect(0, 10.0);
															nPC13.active = false;
															NetMessage.SendData(23, -1, -1, "", current, 0f, 0f, 0f, 0, 0, 0);
														}
														else if (num1779 > 0)
														{
															num1779--;
															nPC13.life = 0;
															nPC13.HitEffect(0, 10.0);
															nPC13.active = false;
														}
													}
													Main.projectile[(int)this.ai[2]].ai[1] = -1f;
													Main.projectile[(int)this.ai[2]].netUpdate = true;
												}
												Vector2 center30 = base.Center;
												Player player11 = Main.player[this.target];
												if (this.target < 0 || this.target == 255 || player11.dead || !player11.active)
												{
													this.TargetClosest(false);
													player11 = Main.player[this.target];
													this.netUpdate = true;
												}
												if (player11.dead || Vector2.Distance(player11.Center, center30) > 5600f)
												{
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
													NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
													List<int> list2 = new List<int>();
													list2.Add(this.whoAmI);
													for (int num1780 = 0; num1780 < 200; num1780++)
													{
														if (Main.npc[num1780].active && Main.npc[num1780].type == 440 && Main.npc[num1780].ai[3] == (float)this.whoAmI)
														{
															Main.npc[num1780].life = 0;
															Main.npc[num1780].HitEffect(0, 10.0);
															Main.npc[num1780].active = false;
															NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
														}
													}
												}
												float num1781 = this.ai[3];
												if (this.localAI[0] == 0f)
												{
													this.localAI[0] = 1f;
													this.alpha = 255;
													this.rotation = 0f;
													if (Main.netMode != 1)
													{
														this.ai[0] = -1f;
														this.netUpdate = true;
													}
												}
												if (this.ai[0] == -1f)
												{
													this.alpha -= 5;
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 420f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
													else if (this.ai[1] > 360f)
													{
														this.velocity *= 0.95f;
														this.localAI[2] = 13f;
													}
													else if (this.ai[1] > 300f)
													{
														this.velocity = -Vector2.UnitY;
														this.localAI[2] = 10f;
													}
													else if (this.ai[1] > 120f)
													{
														this.localAI[2] = 1f;
													}
													else
													{
														this.localAI[2] = 0f;
													}
													flag169 = true;
													flag170 = true;
												}
												if (this.ai[0] == 0f)
												{
													if (this.ai[1] == 0f)
													{
														this.TargetClosest(false);
													}
													this.localAI[2] = 10f;
													int num1782 = Math.Sign(player11.Center.X - center30.X);
													if (num1782 != 0)
													{
														this.direction = (this.spriteDirection = num1782);
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 40f && flag168)
													{
														int num1783 = 0;
														if (flag167)
														{
															switch ((int)this.ai[3])
															{
																case 0:
																	num1783 = 0;
																	break;
																case 1:
																	num1783 = 1;
																	break;
																case 2:
																	num1783 = 0;
																	break;
																case 3:
																	num1783 = 5;
																	break;
																case 4:
																	num1783 = 0;
																	break;
																case 5:
																	num1783 = 3;
																	break;
																case 6:
																	num1783 = 0;
																	break;
																case 7:
																	num1783 = 5;
																	break;
																case 8:
																	num1783 = 0;
																	break;
																case 9:
																	num1783 = 2;
																	break;
																case 10:
																	num1783 = 0;
																	break;
																case 11:
																	num1783 = 3;
																	break;
																case 12:
																	num1783 = 0;
																	break;
																case 13:
																	num1783 = 4;
																	this.ai[3] = -1f;
																	break;
																default:
																	this.ai[3] = -1f;
																	break;
															}
														}
														else
														{
															switch ((int)this.ai[3])
															{
																case 0:
																	num1783 = 0;
																	break;
																case 1:
																	num1783 = 1;
																	break;
																case 2:
																	num1783 = 0;
																	break;
																case 3:
																	num1783 = 2;
																	break;
																case 4:
																	num1783 = 0;
																	break;
																case 5:
																	num1783 = 3;
																	break;
																case 6:
																	num1783 = 0;
																	break;
																case 7:
																	num1783 = 1;
																	break;
																case 8:
																	num1783 = 0;
																	break;
																case 9:
																	num1783 = 2;
																	break;
																case 10:
																	num1783 = 0;
																	break;
																case 11:
																	num1783 = 4;
																	this.ai[3] = -1f;
																	break;
																default:
																	this.ai[3] = -1f;
																	break;
															}
														}
														int maxValue12 = 6;
														if (this.life < this.lifeMax / 3)
														{
															maxValue12 = 4;
														}
														if (this.life < this.lifeMax / 4)
														{
															maxValue12 = 3;
														}
														if (expertMode2 && flag167 && Main.rand.Next(maxValue12) == 0 && num1783 != 0 && num1783 != 4 && num1783 != 5 && NPC.CountNPCS(523) < 10)
														{
															num1783 = 6;
														}
														if (num1783 == 0)
														{
															float num1784 = (float)Math.Ceiling((double)((player11.Center + new Vector2(0f, -100f) - center30).Length() / 50f));
															if (num1784 == 0f)
															{
																num1784 = 1f;
															}
															List<int> list3 = new List<int>();
															int num1785 = 0;
															list3.Add(this.whoAmI);
															for (int num1786 = 0; num1786 < 200; num1786++)
															{
																if (Main.npc[num1786].active && Main.npc[num1786].type == 440 && Main.npc[num1786].ai[3] == (float)this.whoAmI)
																{
																	list3.Add(num1786);
																}
															}
															bool flag172 = list3.Count % 2 == 0;
															foreach (int current2 in list3)
															{
																NPC nPC14 = Main.npc[current2];
																Vector2 center31 = nPC14.Center;
																float num1787 = (float)((num1785 + flag172.ToInt() + 1) / 2) * 6.28318548f * 0.4f / (float)list3.Count;
																if (num1785 % 2 == 1)
																{
																	num1787 *= -1f;
																}
																if (list3.Count == 1)
																{
																	num1787 = 0f;
																}
																Vector2 value60 = new Vector2(0f, -1f).RotatedBy((double)num1787, default(Vector2)) * new Vector2(300f, 200f);
																Vector2 value61 = player11.Center + value60 - center31;
																nPC14.ai[0] = 1f;
																nPC14.ai[1] = num1784 * 2f;
																nPC14.velocity = value61 / num1784;
																if (this.whoAmI >= nPC14.whoAmI)
																{
																	nPC14.position -= nPC14.velocity;
																}
																nPC14.netUpdate = true;
																num1785++;
															}
														}
														if (num1783 == 1)
														{
															this.ai[0] = 3f;
															this.ai[1] = 0f;
														}
														else if (num1783 == 2)
														{
															this.ai[0] = 2f;
															this.ai[1] = 0f;
														}
														else if (num1783 == 3)
														{
															this.ai[0] = 4f;
															this.ai[1] = 0f;
														}
														else if (num1783 == 4)
														{
															this.ai[0] = 5f;
															this.ai[1] = 0f;
														}
														if (num1783 == 5)
														{
															this.ai[0] = 7f;
															this.ai[1] = 0f;
														}
														if (num1783 == 6)
														{
															this.ai[0] = 8f;
															this.ai[1] = 0f;
														}
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 1f)
												{
													flag169 = true;
													this.localAI[2] = 10f;
													if ((float)((int)this.ai[1]) % 2f != 0f && this.ai[1] != 1f)
													{
														this.position -= this.velocity;
													}
													this.ai[1] -= 1f;
													if (this.ai[1] <= 0f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.localAI[2] = 11f;
													Vector2 vec8 = Vector2.Normalize(player11.Center - center30);
													if (vec8.HasNaNs())
													{
														vec8 = new Vector2((float)this.direction, 0f);
													}
													if (this.ai[1] >= 4f && flag168 && (int)(this.ai[1] - 4f) % num1767 == 0)
													{
														if (Main.netMode != 1)
														{
															List<int> list4 = new List<int>();
															for (int num1788 = 0; num1788 < 200; num1788++)
															{
																if (Main.npc[num1788].active && Main.npc[num1788].type == 440 && Main.npc[num1788].ai[3] == (float)this.whoAmI)
																{
																	list4.Add(num1788);
																}
															}
															foreach (int current3 in list4)
															{
																NPC nPC15 = Main.npc[current3];
																Vector2 center32 = nPC15.Center;
																int num1789 = Math.Sign(player11.Center.X - center32.X);
																if (num1789 != 0)
																{
																	nPC15.direction = (nPC15.spriteDirection = num1789);
																}
																vec8 = Vector2.Normalize(player11.Center - center32 + player11.velocity * 20f);
																if (vec8.HasNaNs())
																{
																	vec8 = new Vector2((float)this.direction, 0f);
																}
																Vector2 vector256 = center32 + new Vector2((float)(this.direction * 30), 12f);
																for (int num1790 = 0; num1790 < 1; num1790++)
																{
																	Vector2 spinninpoint = vec8 * (6f + (float)Main.rand.NextDouble() * 4f);
																	spinninpoint = spinninpoint.RotatedByRandom(0.52359879016876221);
																	Projectile.NewProjectile(vector256.X, vector256.Y, spinninpoint.X, spinninpoint.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																}
															}
														}
														if (Main.netMode != 1)
														{
															vec8 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
															if (vec8.HasNaNs())
															{
																vec8 = new Vector2((float)this.direction, 0f);
															}
															Vector2 vector257 = base.Center + new Vector2((float)(this.direction * 30), 12f);
															for (int num1791 = 0; num1791 < 1; num1791++)
															{
																Vector2 vector258 = vec8 * 4f;
																Projectile.NewProjectile(vector257.X, vector257.Y, vector258.X, vector258.Y, 464, num1768, 0f, Main.myPlayer, 0f, 1f);
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(4 + num1767))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 3f)
												{
													this.localAI[2] = 11f;
													Vector2 vec9 = Vector2.Normalize(player11.Center - center30);
													if (vec9.HasNaNs())
													{
														vec9 = new Vector2((float)this.direction, 0f);
													}
													if (this.ai[1] >= 4f && flag168 && (int)(this.ai[1] - 4f) % num1769 == 0)
													{
														int num1792 = (int)(this.ai[1] - 4f) / num1769;
														if (num1792 == 2)
														{
															List<int> list5 = new List<int>();
															for (int num1793 = 0; num1793 < 200; num1793++)
															{
																if (Main.npc[num1793].active && Main.npc[num1793].type == 440 && Main.npc[num1793].ai[3] == (float)this.whoAmI)
																{
																	list5.Add(num1793);
																}
															}
															if (Main.netMode != 1)
															{
																foreach (int current4 in list5)
																{
																	NPC nPC16 = Main.npc[current4];
																	Vector2 center33 = nPC16.Center;
																	int num1794 = Math.Sign(player11.Center.X - center33.X);
																	if (num1794 != 0)
																	{
																		nPC16.direction = (nPC16.spriteDirection = num1794);
																	}
																	vec9 = Vector2.Normalize(player11.Center - center33 + player11.velocity * 20f);
																	if (vec9.HasNaNs())
																	{
																		vec9 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 vector259 = center33 + new Vector2((float)(this.direction * 30), 12f);
																	for (int num1795 = 0; num1795 < 1; num1795++)
																	{
																		Vector2 spinninpoint2 = vec9 * (6f + (float)Main.rand.NextDouble() * 4f);
																		spinninpoint2 = spinninpoint2.RotatedByRandom(0.52359879016876221);
																		Projectile.NewProjectile(vector259.X, vector259.Y, spinninpoint2.X, spinninpoint2.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																	}
																}
															}
														}
														int num1796 = Math.Sign(player11.Center.X - center30.X);
														if (num1796 != 0)
														{
															this.direction = (this.spriteDirection = num1796);
														}
														if (Main.netMode != 1)
														{
															vec9 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
															if (vec9.HasNaNs())
															{
																vec9 = new Vector2((float)this.direction, 0f);
															}
															Vector2 vector260 = base.Center + new Vector2((float)(this.direction * 30), 12f);
															for (int num1797 = 0; num1797 < 1; num1797++)
															{
																Vector2 spinninpoint3 = vec9 * (6f + (float)Main.rand.NextDouble() * 4f);
																spinninpoint3 = spinninpoint3.RotatedByRandom(0.52359879016876221);
																Projectile.NewProjectile(vector260.X, vector260.Y, spinninpoint3.X, spinninpoint3.Y, 467, num1771, 0f, Main.myPlayer, 0f, 0f);
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(4 + num1769 * num1770))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 4f)
												{
													if (flag168)
													{
														this.localAI[2] = 12f;
													}
													else
													{
														this.localAI[2] = 11f;
													}
													if (this.ai[1] == 20f && flag168 && Main.netMode != 1)
													{
														List<int> list6 = new List<int>();
														for (int num1798 = 0; num1798 < 200; num1798++)
														{
															if (Main.npc[num1798].active && Main.npc[num1798].type == 440 && Main.npc[num1798].ai[3] == (float)this.whoAmI)
															{
																list6.Add(num1798);
															}
														}
														foreach (int current5 in list6)
														{
															NPC nPC17 = Main.npc[current5];
															Vector2 center34 = nPC17.Center;
															int num1799 = Math.Sign(player11.Center.X - center34.X);
															if (num1799 != 0)
															{
																nPC17.direction = (nPC17.spriteDirection = num1799);
															}
															if (Main.netMode != 1)
															{
																Vector2 vec10 = Vector2.Normalize(player11.Center - center34 + player11.velocity * 20f);
																if (vec10.HasNaNs())
																{
																	vec10 = new Vector2((float)this.direction, 0f);
																}
																Vector2 vector261 = center34 + new Vector2((float)(this.direction * 30), 12f);
																for (int num1800 = 0; num1800 < 1; num1800++)
																{
																	Vector2 spinninpoint4 = vec10 * (6f + (float)Main.rand.NextDouble() * 4f);
																	spinninpoint4 = spinninpoint4.RotatedByRandom(0.52359879016876221);
																	Projectile.NewProjectile(vector261.X, vector261.Y, spinninpoint4.X, spinninpoint4.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																}
															}
														}
														if ((int)(this.ai[1] - 20f) % num1772 == 0)
														{
															Projectile.NewProjectile(base.Center.X, base.Center.Y - 100f, 0f, 0f, 465, num1773, 0f, Main.myPlayer, 0f, 0f);
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(20 + num1772))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 5f)
												{
													this.localAI[2] = 10f;
													Vector2 vec11 = Vector2.Normalize(player11.Center - center30);
													if (vec11.HasNaNs())
													{
														vec11 = new Vector2((float)this.direction, 0f);
													}
													if (this.ai[1] >= 0f && this.ai[1] < 30f)
													{
														flag169 = true;
														flag170 = true;
														float num1801 = (this.ai[1] - 0f) / 30f;
														this.alpha = (int)(num1801 * 255f);
													}
													else if (this.ai[1] >= 30f && this.ai[1] < 90f)
													{
														if (this.ai[1] == 30f && Main.netMode != 1 && flag168)
														{
															this.localAI[1] += 1f;
															Vector2 spinningpoint10 = new Vector2(180f, 0f);
															List<int> list7 = new List<int>();
															for (int num1802 = 0; num1802 < 200; num1802++)
															{
																if (Main.npc[num1802].active && Main.npc[num1802].type == 440 && Main.npc[num1802].ai[3] == (float)this.whoAmI)
																{
																	list7.Add(num1802);
																}
															}
															int num1803 = 6 - list7.Count;
															if (num1803 > 2)
															{
																num1803 = 2;
															}
															int num1804 = list7.Count + num1803 + 1;
															float[] array8 = new float[num1804];
															for (int num1805 = 0; num1805 < array8.Length; num1805++)
															{
																array8[num1805] = Vector2.Distance(base.Center + spinningpoint10.RotatedBy((double)((float)num1805 * 6.28318548f / (float)num1804 - 1.57079637f), default(Vector2)), player11.Center);
															}
															int num1806 = 0;
															for (int num1807 = 1; num1807 < array8.Length; num1807++)
															{
																if (array8[num1806] > array8[num1807])
																{
																	num1806 = num1807;
																}
															}
															if (num1806 < num1804 / 2)
															{
																num1806 += num1804 / 2;
															}
															else
															{
																num1806 -= num1804 / 2;
															}
															int num1808 = num1803;
															for (int num1809 = 0; num1809 < array8.Length; num1809++)
															{
																if (num1806 != num1809)
																{
																	Vector2 center35 = base.Center + spinningpoint10.RotatedBy((double)((float)num1809 * 6.28318548f / (float)num1804 - 1.57079637f), default(Vector2));
																	if (num1808-- > 0)
																	{
																		int num1810 = NPC.NewNPC((int)center35.X, (int)center35.Y + this.height / 2, 440, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																		Main.npc[num1810].ai[3] = (float)this.whoAmI;
																		Main.npc[num1810].netUpdate = true;
																		Main.npc[num1810].localAI[1] = this.localAI[1];
																	}
																	else
																	{
																		int num1811 = list7[-num1808 - 1];
																		Main.npc[num1811].Center = center35;
																		NetMessage.SendData(23, -1, -1, "", num1811, 0f, 0f, 0f, 0, 0, 0);
																	}
																}
															}
															this.ai[2] = (float)Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 490, 0, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
															base.Center += spinningpoint10.RotatedBy((double)((float)num1806 * 6.28318548f / (float)num1804 - 1.57079637f), default(Vector2));
															this.netUpdate = true;
															list7.Clear();
														}
														flag169 = true;
														flag170 = true;
														this.alpha = 255;
														if (flag168)
														{
															Vector2 value62 = Main.projectile[(int)this.ai[2]].Center;
															value62 -= base.Center;
															if (value62 == Vector2.Zero)
															{
																value62 = -Vector2.UnitY;
															}
															value62.Normalize();
															if (Math.Abs(value62.Y) < 0.77f)
															{
																this.localAI[2] = 11f;
															}
															else if (value62.Y < 0f)
															{
																this.localAI[2] = 12f;
															}
															else
															{
																this.localAI[2] = 10f;
															}
															int num1812 = Math.Sign(value62.X);
															if (num1812 != 0)
															{
																this.direction = (this.spriteDirection = num1812);
															}
														}
														else
														{
															Vector2 value63 = Main.projectile[(int)Main.npc[(int)this.ai[3]].ai[2]].Center;
															value63 -= base.Center;
															if (value63 == Vector2.Zero)
															{
																value63 = -Vector2.UnitY;
															}
															value63.Normalize();
															if (Math.Abs(value63.Y) < 0.77f)
															{
																this.localAI[2] = 11f;
															}
															else if (value63.Y < 0f)
															{
																this.localAI[2] = 12f;
															}
															else
															{
																this.localAI[2] = 10f;
															}
															int num1813 = Math.Sign(value63.X);
															if (num1813 != 0)
															{
																this.direction = (this.spriteDirection = num1813);
															}
														}
													}
													else if (this.ai[1] >= 90f && this.ai[1] < 120f)
													{
														flag169 = true;
														flag170 = true;
														float num1814 = (this.ai[1] - 90f) / 30f;
														this.alpha = 255 - (int)(num1814 * 255f);
													}
													else if (this.ai[1] >= 120f && this.ai[1] < 420f)
													{
														flag170 = true;
														this.alpha = 0;
														if (flag168)
														{
															Vector2 value64 = Main.projectile[(int)this.ai[2]].Center;
															value64 -= base.Center;
															if (value64 == Vector2.Zero)
															{
																value64 = -Vector2.UnitY;
															}
															value64.Normalize();
															if (Math.Abs(value64.Y) < 0.77f)
															{
																this.localAI[2] = 11f;
															}
															else if (value64.Y < 0f)
															{
																this.localAI[2] = 12f;
															}
															else
															{
																this.localAI[2] = 10f;
															}
															int num1815 = Math.Sign(value64.X);
															if (num1815 != 0)
															{
																this.direction = (this.spriteDirection = num1815);
															}
														}
														else
														{
															Vector2 value65 = Main.projectile[(int)Main.npc[(int)this.ai[3]].ai[2]].Center;
															value65 -= base.Center;
															if (value65 == Vector2.Zero)
															{
																value65 = -Vector2.UnitY;
															}
															value65.Normalize();
															if (Math.Abs(value65.Y) < 0.77f)
															{
																this.localAI[2] = 11f;
															}
															else if (value65.Y < 0f)
															{
																this.localAI[2] = 12f;
															}
															else
															{
																this.localAI[2] = 10f;
															}
															int num1816 = Math.Sign(value65.X);
															if (num1816 != 0)
															{
																this.direction = (this.spriteDirection = num1816);
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 420f)
													{
														flag170 = true;
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 6f)
												{
													this.localAI[2] = 13f;
													this.ai[1] += 1f;
													if (this.ai[1] >= 120f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 7f)
												{
													this.localAI[2] = 11f;
													Vector2 vec12 = Vector2.Normalize(player11.Center - center30);
													if (vec12.HasNaNs())
													{
														vec12 = new Vector2((float)this.direction, 0f);
													}
													if (this.ai[1] >= 4f && flag168 && (int)(this.ai[1] - 4f) % num1774 == 0)
													{
														int num1817 = (int)(this.ai[1] - 4f) / num1774;
														if (num1817 == 2)
														{
															List<int> list8 = new List<int>();
															for (int num1818 = 0; num1818 < 200; num1818++)
															{
																if (Main.npc[num1818].active && Main.npc[num1818].type == 440 && Main.npc[num1818].ai[3] == (float)this.whoAmI)
																{
																	list8.Add(num1818);
																}
															}
															foreach (int current6 in list8)
															{
																NPC nPC18 = Main.npc[current6];
																Vector2 center36 = nPC18.Center;
																int num1819 = Math.Sign(player11.Center.X - center36.X);
																if (num1819 != 0)
																{
																	nPC18.direction = (nPC18.spriteDirection = num1819);
																}
																if (Main.netMode != 1)
																{
																	vec12 = Vector2.Normalize(player11.Center - center36 + player11.velocity * 20f);
																	if (vec12.HasNaNs())
																	{
																		vec12 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 vector262 = center36 + new Vector2((float)(this.direction * 30), 12f);
																	int num1820 = 0;
																	while ((float)num1820 < 5f)
																	{
																		Vector2 spinninpoint5 = vec12 * (6f + (float)Main.rand.NextDouble() * 4f);
																		spinninpoint5 = spinninpoint5.RotatedByRandom(1.2566370964050293);
																		Projectile.NewProjectile(vector262.X, vector262.Y, spinninpoint5.X, spinninpoint5.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																		num1820++;
																	}
																}
															}
														}
														int num1821 = Math.Sign(player11.Center.X - center30.X);
														if (num1821 != 0)
														{
															this.direction = (this.spriteDirection = num1821);
														}
														if (Main.netMode != 1)
														{
															vec12 = Vector2.Normalize(player11.Center - center30 + player11.velocity * 20f);
															if (vec12.HasNaNs())
															{
																vec12 = new Vector2((float)this.direction, 0f);
															}
															Vector2 vector263 = base.Center + new Vector2((float)(this.direction * 30), 12f);
															float scaleFactor24 = 8f;
															float num1822 = 0.251327425f;
															int num1823 = 0;
															while ((float)num1823 < 5f)
															{
																Vector2 vector264 = vec12 * scaleFactor24;
																vector264 = vector264.RotatedBy((double)(num1822 * (float)num1823 - (1.2566371f - num1822) / 2f), default(Vector2));
																float ai4 = (Main.rand.NextFloat() - 0.5f) * 0.3f * 6.28318548f / 60f;
																int num1824 = NPC.NewNPC((int)vector263.X, (int)vector263.Y + 7, 522, 0, 0f, ai4, vector264.X, vector264.Y, 255);
																Main.npc[num1824].velocity = vector264;
																num1823++;
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(4 + num1774 * num1775))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 8f)
												{
													this.localAI[2] = 13f;
													if (this.ai[1] >= 4f && flag168 && (int)(this.ai[1] - 4f) % num1776 == 0)
													{
														List<int> list9 = new List<int>();
														for (int num1825 = 0; num1825 < 200; num1825++)
														{
															if (Main.npc[num1825].active && Main.npc[num1825].type == 440 && Main.npc[num1825].ai[3] == (float)this.whoAmI)
															{
																list9.Add(num1825);
															}
														}
														int num1826 = list9.Count + 1;
														if (num1826 > 3)
														{
															num1826 = 3;
														}
														int num1827 = Math.Sign(player11.Center.X - center30.X);
														if (num1827 != 0)
														{
															this.direction = (this.spriteDirection = num1827);
														}
														if (Main.netMode != 1)
														{
															for (int num1828 = 0; num1828 < num1826; num1828++)
															{
																Point point11 = base.Center.ToTileCoordinates();
																Point point12 = Main.player[this.target].Center.ToTileCoordinates();
																Vector2 vector265 = Main.player[this.target].Center - base.Center;
																int num1829 = 20;
																int num1830 = 3;
																int num1831 = 7;
																int num1832 = 2;
																int num1833 = 0;
																bool flag173 = false;
																if (vector265.Length() > 2000f)
																{
																	flag173 = true;
																}
																while (!flag173 && num1833 < 100)
																{
																	num1833++;
																	int num1834 = Main.rand.Next(point12.X - num1829, point12.X + num1829 + 1);
																	int num1835 = Main.rand.Next(point12.Y - num1829, point12.Y + num1829 + 1);
																	if ((num1835 < point12.Y - num1831 || num1835 > point12.Y + num1831 || num1834 < point12.X - num1831 || num1834 > point12.X + num1831) && (num1835 < point11.Y - num1830 || num1835 > point11.Y + num1830 || num1834 < point11.X - num1830 || num1834 > point11.X + num1830) && !Main.tile[num1834, num1835].nactive())
																	{
																		bool flag174 = true;
																		if (flag174 && Collision.SolidTiles(num1834 - num1832, num1834 + num1832, num1835 - num1832, num1835 + num1832))
																		{
																			flag174 = false;
																		}
																		if (flag174)
																		{
																			NPC.NewNPC(num1834 * 16 + 8, num1835 * 16 + 8, 523, 0, (float)this.whoAmI, 0f, 0f, 0f, 255);
																			break;
																		}
																	}
																}
															}
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= (float)(4 + num1776 * num1777))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.ai[3] += 1f;
														this.velocity = Vector2.Zero;
														this.netUpdate = true;
													}
												}
												if (!flag168)
												{
													this.ai[3] = num1781;
												}
												this.dontTakeDamage = flag169;
												this.chaseable = !flag170;
												return;
											}
											if (this.aiStyle == 85)
											{
												this.noTileCollide = false;
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 1f;
													}
													else
													{
														Vector2 value66 = Main.player[this.target].Center - base.Center;
														value66.Y -= (float)(Main.player[this.target].height / 4);
														float num1836 = value66.Length();
														if (num1836 > 800f)
														{
															this.ai[0] = 2f;
														}
														else
														{
															Vector2 center37 = base.Center;
															center37.X = Main.player[this.target].Center.X;
															Vector2 vector266 = center37 - base.Center;
															if (vector266.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center37, 1, 1))
															{
																this.ai[0] = 3f;
																this.ai[1] = center37.X;
																this.ai[2] = center37.Y;
																Vector2 center38 = base.Center;
																center38.Y = Main.player[this.target].Center.Y;
																if (vector266.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center38, 1, 1) && Collision.CanHit(center38, 1, 1, Main.player[this.target].position, 1, 1))
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center38.X;
																	this.ai[2] = center38.Y;
																}
															}
															else
															{
																center37 = base.Center;
																center37.Y = Main.player[this.target].Center.Y;
																if ((center37 - base.Center).Length() > 8f && Collision.CanHit(base.Center, 1, 1, center37, 1, 1))
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center37.X;
																	this.ai[2] = center37.Y;
																}
															}
															if (this.ai[0] == 0f)
															{
																this.localAI[0] = 0f;
																value66.Normalize();
																value66 *= 0.5f;
																this.velocity += value66;
																this.ai[0] = 4f;
																this.ai[1] = 0f;
															}
														}
													}
												}
												else if (this.ai[0] == 1f)
												{
													this.rotation += (float)this.direction * 0.3f;
													Vector2 value67 = Main.player[this.target].Center - base.Center;
													if (this.type == 421)
													{
														value67 = Main.player[this.target].Top - base.Center;
													}
													float num1837 = value67.Length();
													float num1838 = 5.5f;
													num1838 += num1837 / 100f;
													int num1839 = 50;
													value67.Normalize();
													value67 *= num1838;
													this.velocity = (this.velocity * (float)(num1839 - 1) + value67) / (float)num1839;
													if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
													}
													if (this.type == 421 && num1837 < 40f && Main.player[this.target].active && !Main.player[this.target].dead)
													{
														bool flag175 = true;
														for (int num1840 = 0; num1840 < 200; num1840++)
														{
															NPC nPC19 = Main.npc[num1840];
															if (nPC19.active && nPC19.type == this.type && nPC19.ai[0] == 5f && nPC19.target == this.target)
															{
																flag175 = false;
																break;
															}
														}
														if (flag175)
														{
															base.Center = Main.player[this.target].Top;
															this.velocity = Vector2.Zero;
															this.ai[0] = 5f;
															this.ai[1] = 0f;
															this.netUpdate = true;
														}
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.rotation = this.velocity.X * 0.1f;
													this.noTileCollide = true;
													Vector2 value68 = Main.player[this.target].Center - base.Center;
													float num1841 = value68.Length();
													float scaleFactor25 = 3f;
													int num1842 = 3;
													value68.Normalize();
													value68 *= scaleFactor25;
													this.velocity = (this.velocity * (float)(num1842 - 1) + value68) / (float)num1842;
													if (num1841 < 600f && !Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.ai[0] = 0f;
													}
												}
												else if (this.ai[0] == 3f)
												{
													this.rotation = this.velocity.X * 0.1f;
													Vector2 value69 = new Vector2(this.ai[1], this.ai[2]);
													Vector2 value70 = value69 - base.Center;
													float num1843 = value70.Length();
													float num1844 = 2f;
													float num1845 = 3f;
													value70.Normalize();
													value70 *= num1844;
													this.velocity = (this.velocity * (num1845 - 1f) + value70) / num1845;
													if (this.collideX || this.collideY)
													{
														this.ai[0] = 4f;
														this.ai[1] = 0f;
													}
													if (num1843 < num1844 || num1843 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
													}
												}
												else if (this.ai[0] == 4f)
												{
													this.rotation = this.velocity.X * 0.1f;
													if (this.collideX)
													{
														this.velocity.X = this.velocity.X * -0.8f;
													}
													if (this.collideY)
													{
														this.velocity.Y = this.velocity.Y * -0.8f;
													}
													Vector2 value71;
													if (this.velocity.X == 0f && this.velocity.Y == 0f)
													{
														value71 = Main.player[this.target].Center - base.Center;
														value71.Y -= (float)(Main.player[this.target].height / 4);
														value71.Normalize();
														this.velocity = value71 * 0.1f;
													}
													float scaleFactor26 = 2f;
													float num1846 = 20f;
													value71 = this.velocity;
													value71.Normalize();
													value71 *= scaleFactor26;
													this.velocity = (this.velocity * (num1846 - 1f) + value71) / num1846;
													this.ai[1] += 1f;
													if (this.ai[1] > 180f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
													}
													if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
													}
													this.localAI[0] += 1f;
													if (this.localAI[0] >= 5f && !Collision.SolidCollision(this.position - new Vector2(10f, 10f), this.width + 20, this.height + 20))
													{
														this.localAI[0] = 0f;
														Vector2 center39 = base.Center;
														center39.X = Main.player[this.target].Center.X;
														if (Collision.CanHit(base.Center, 1, 1, center39, 1, 1) && Collision.CanHit(base.Center, 1, 1, center39, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center39, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center39.X;
															this.ai[2] = center39.Y;
														}
														else
														{
															center39 = base.Center;
															center39.Y = Main.player[this.target].Center.Y;
															if (Collision.CanHit(base.Center, 1, 1, center39, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center39, 1, 1))
															{
																this.ai[0] = 3f;
																this.ai[1] = center39.X;
																this.ai[2] = center39.Y;
															}
														}
													}
												}
												else if (this.ai[0] == 5f)
												{
													Player player12 = Main.player[this.target];
													if (!player12.active || player12.dead)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
													else
													{
														base.Center = ((player12.gravDir == 1f) ? player12.Top : player12.Bottom) + new Vector2((float)(player12.direction * 4), 0f);
														this.gfxOffY = player12.gfxOffY;
														this.velocity = Vector2.Zero;
														player12.AddBuff(163, 59, true);
													}
												}
												if (this.type == 405)
												{
													this.rotation = 0f;
													for (int num1847 = 0; num1847 < 200; num1847++)
													{
														if (num1847 != this.whoAmI && Main.npc[num1847].active && Main.npc[num1847].type == this.type && Math.Abs(this.position.X - Main.npc[num1847].position.X) + Math.Abs(this.position.Y - Main.npc[num1847].position.Y) < (float)this.width)
														{
															if (this.position.X < Main.npc[num1847].position.X)
															{
																this.velocity.X = this.velocity.X - 0.05f;
															}
															else
															{
																this.velocity.X = this.velocity.X + 0.05f;
															}
															if (this.position.Y < Main.npc[num1847].position.Y)
															{
																this.velocity.Y = this.velocity.Y - 0.05f;
															}
															else
															{
																this.velocity.Y = this.velocity.Y + 0.05f;
															}
														}
													}
													return;
												}
												if (this.type == 421)
												{
													this.hide = (this.ai[0] == 5f);
													this.rotation = this.velocity.X * 0.1f;
													for (int num1848 = 0; num1848 < 200; num1848++)
													{
														if (num1848 != this.whoAmI && Main.npc[num1848].active && Main.npc[num1848].type == this.type && Math.Abs(this.position.X - Main.npc[num1848].position.X) + Math.Abs(this.position.Y - Main.npc[num1848].position.Y) < (float)this.width)
														{
															if (this.position.X < Main.npc[num1848].position.X)
															{
																this.velocity.X = this.velocity.X - 0.05f;
															}
															else
															{
																this.velocity.X = this.velocity.X + 0.05f;
															}
															if (this.position.Y < Main.npc[num1848].position.Y)
															{
																this.velocity.Y = this.velocity.Y - 0.05f;
															}
															else
															{
																this.velocity.Y = this.velocity.Y + 0.05f;
															}
														}
													}
													return;
												}
											}
											else if (this.aiStyle == 86)
											{
												if (this.alpha > 0)
												{
													this.alpha -= 30;
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
												}
												this.noGravity = true;
												this.noTileCollide = true;
												this.knockBackResist = 0f;
												for (int num1849 = 0; num1849 < 200; num1849++)
												{
													if (num1849 != this.whoAmI && Main.npc[num1849].active && Main.npc[num1849].type == this.type)
													{
														Vector2 value72 = Main.npc[num1849].Center - base.Center;
														if (value72.Length() < 50f)
														{
															value72.Normalize();
															if (value72.X == 0f && value72.Y == 0f)
															{
																if (num1849 > this.whoAmI)
																{
																	value72.X = 1f;
																}
																else
																{
																	value72.X = -1f;
																}
															}
															value72 *= 0.4f;
															this.velocity -= value72;
															Main.npc[num1849].velocity += value72;
														}
													}
												}
												if (this.type == 472)
												{
													float num1850 = 120f;
													if (this.localAI[0] < num1850)
													{
														if (this.localAI[0] == 0f)
														{
															this.TargetClosest(true);
															if (this.direction > 0)
															{
																this.velocity.X = this.velocity.X + 2f;
															}
															else
															{
																this.velocity.X = this.velocity.X - 2f;
															}
														}
														this.localAI[0] += 1f;
													}
												}
												if (this.type == 521)
												{
													float num1857 = 120f;
													if (this.localAI[0] < num1857)
													{
														if (this.localAI[0] == 0f)
														{
															this.TargetClosest(true);
															if (this.direction > 0)
															{
																this.velocity.X = this.velocity.X + 2f;
															}
															else
															{
																this.velocity.X = this.velocity.X - 2f;
															}
														}
														this.localAI[0] += 1f;
													}
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													this.ai[0] = 1f;
													this.ai[1] = (float)this.direction;
												}
												else if (this.ai[0] == 1f)
												{
													this.TargetClosest(true);
													float num1861 = 0.3f;
													float num1862 = 7f;
													float num1863 = 4f;
													float num1864 = 660f;
													float num1865 = 4f;
													if (this.type == 521)
													{
														num1861 = 0.7f;
														num1862 = 14f;
														num1864 = 500f;
														num1863 = 6f;
														num1865 = 3f;
													}
													this.velocity.X = this.velocity.X + this.ai[1] * num1861;
													if (this.velocity.X > num1862)
													{
														this.velocity.X = num1862;
													}
													if (this.velocity.X < -num1862)
													{
														this.velocity.X = -num1862;
													}
													float num1866 = Main.player[this.target].Center.Y - base.Center.Y;
													if (Math.Abs(num1866) > num1863)
													{
														num1865 = 15f;
													}
													if (num1866 > num1863)
													{
														num1866 = num1863;
													}
													else if (num1866 < -num1863)
													{
														num1866 = -num1863;
													}
													this.velocity.Y = (this.velocity.Y * (num1865 - 1f) + num1866) / num1865;
													if ((this.ai[1] > 0f && Main.player[this.target].Center.X - base.Center.X < -num1864) || (this.ai[1] < 0f && Main.player[this.target].Center.X - base.Center.X > num1864))
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
														if (base.Center.Y + 20f > Main.player[this.target].Center.Y)
														{
															this.ai[1] = -1f;
														}
														else
														{
															this.ai[1] = 1f;
														}
													}
												}
												else if (this.ai[0] == 2f)
												{
													float num1867 = 0.4f;
													float scaleFactor27 = 0.95f;
													float num1868 = 5f;
													if (this.type == 521)
													{
														num1867 = 0.3f;
														num1868 = 7f;
														scaleFactor27 = 0.9f;
													}
													this.velocity.Y = this.velocity.Y + this.ai[1] * num1867;
													if (this.velocity.Length() > num1868)
													{
														this.velocity *= scaleFactor27;
													}
													if (this.velocity.X > -1f && this.velocity.X < 1f)
													{
														this.TargetClosest(true);
														this.ai[0] = 3f;
														this.ai[1] = (float)this.direction;
													}
												}
												else if (this.ai[0] == 3f)
												{
													float num1869 = 0.4f;
													float num1870 = 0.2f;
													float num1871 = 5f;
													float scaleFactor28 = 0.95f;
													if (this.type == 521)
													{
														num1869 = 0.6f;
														num1870 = 0.3f;
														num1871 = 7f;
														scaleFactor28 = 0.9f;
													}
													this.velocity.X = this.velocity.X + this.ai[1] * num1869;
													if (base.Center.Y > Main.player[this.target].Center.Y)
													{
														this.velocity.Y = this.velocity.Y - num1870;
													}
													else
													{
														this.velocity.Y = this.velocity.Y + num1870;
													}
													if (this.velocity.Length() > num1871)
													{
														this.velocity *= scaleFactor28;
													}
													if (this.velocity.Y > -1f && this.velocity.Y < 1f)
													{
														this.TargetClosest(true);
														this.ai[0] = 0f;
														this.ai[1] = (float)this.direction;
													}
												}
												if (this.type == 521)
												{
													return;
												}
											}
											else if (this.aiStyle == 87)
											{
												this.knockBackResist = 0.2f * Main.knockBackMultiplier;
												this.dontTakeDamage = false;
												this.noTileCollide = false;
												this.noGravity = false;
												this.reflectingProjectiles = false;
												if (this.ai[0] != 7f && Main.player[this.target].dead)
												{
													this.TargetClosest(true);
													if (Main.player[this.target].dead)
													{
														this.ai[0] = 7f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													Vector2 vector268 = Main.player[this.target].Center - base.Center;
													if (this.velocity.X != 0f || this.velocity.Y > 100f || this.justHit || vector268.Length() < 80f)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 1f)
												{
													this.ai[1] += 1f;
													if (this.ai[1] > 36f)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 2f)
												{
													if ((Main.player[this.target].Center - base.Center).Length() > 600f)
													{
														this.ai[0] = 5f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
													if (this.velocity.Y == 0f)
													{
														this.TargetClosest(true);
														this.velocity.X = this.velocity.X * 0.85f;
														this.ai[1] += 1f;
														float num1875 = 15f + 30f * ((float)this.life / (float)this.lifeMax);
														float num1876 = 3f + 4f * (1f - (float)this.life / (float)this.lifeMax);
														float num1877 = 4f;
														if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
														{
															num1877 += 2f;
														}
														if (this.ai[1] > num1875)
														{
															this.ai[3] += 1f;
															if (this.ai[3] >= 3f)
															{
																this.ai[3] = 0f;
																num1877 *= 2f;
																num1876 /= 2f;
															}
															this.ai[1] = 0f;
															this.velocity.Y = this.velocity.Y - num1877;
															this.velocity.X = num1876 * (float)this.direction;
														}
													}
													else
													{
														this.knockBackResist = 0f;
														this.velocity.X = this.velocity.X * 0.99f;
														if (this.direction < 0 && this.velocity.X > -1f)
														{
															this.velocity.X = -1f;
														}
														if (this.direction > 0 && this.velocity.X < 1f)
														{
															this.velocity.X = 1f;
														}
													}
													this.ai[2] += 1f;
													if ((double)this.ai[2] > 210.0 && this.velocity.Y == 0f && Main.netMode != 1)
													{
														int num1878 = Main.rand.Next(3);
														if (num1878 == 0)
														{
															this.ai[0] = 3f;
														}
														else if (num1878 == 1)
														{
															this.ai[0] = 4f;
															this.noTileCollide = true;
															this.velocity.Y = -8f;
														}
														else if (num1878 == 2)
														{
															this.ai[0] = 6f;
														}
														else
														{
															this.ai[0] = 2f;
														}
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 3f)
												{
													this.velocity.X = this.velocity.X * 0.85f;
													this.dontTakeDamage = true;
													this.ai[1] += 1f;
													if (this.ai[1] >= 180f)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
													}
													if (Main.expertMode)
													{
														this.ReflectProjectiles(base.Hitbox);
														this.reflectingProjectiles = true;
														return;
													}
												}
												else if (this.ai[0] == 4f)
												{
													this.noTileCollide = true;
													this.noGravity = true;
													this.knockBackResist = 0f;
													if (this.velocity.X < 0f)
													{
														this.direction = -1;
													}
													else
													{
														this.direction = 1;
													}
													this.spriteDirection = this.direction;
													this.TargetClosest(true);
													Vector2 center40 = Main.player[this.target].Center;
													center40.Y -= 350f;
													Vector2 vector269 = center40 - base.Center;
													if (this.ai[2] == 1f)
													{
														this.ai[1] += 1f;
														vector269 = Main.player[this.target].Center - base.Center;
														vector269.Normalize();
														vector269 *= 8f;
														this.velocity = (this.velocity * 4f + vector269) / 5f;
														if (this.ai[1] > 6f)
														{
															this.ai[1] = 0f;
															this.ai[0] = 4.1f;
															this.ai[2] = 0f;
															this.velocity = vector269;
															return;
														}
													}
													else
													{
														if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 40f && base.Center.Y < Main.player[this.target].Center.Y - 300f)
														{
															this.ai[1] = 0f;
															this.ai[2] = 1f;
															return;
														}
														vector269.Normalize();
														vector269 *= 12f;
														this.velocity = (this.velocity * 5f + vector269) / 6f;
														return;
													}
												}
												else if (this.ai[0] == 4.1f)
												{
													this.knockBackResist = 0f;
													if (this.ai[2] == 0f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1) && !Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.ai[2] = 1f;
													}
													if (this.position.Y + (float)this.height >= Main.player[this.target].position.Y || this.velocity.Y <= 0f)
													{
														this.ai[1] += 1f;
														if (this.ai[1] > 10f)
														{
															this.ai[0] = 2f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
															if (Collision.SolidCollision(this.position, this.width, this.height))
															{
																this.ai[0] = 5f;
															}
														}
													}
													else if (this.ai[2] == 0f)
													{
														this.noTileCollide = true;
														this.noGravity = true;
														this.knockBackResist = 0f;
													}
													this.velocity.Y = this.velocity.Y + 0.2f;
													if (this.velocity.Y > 16f)
													{
														this.velocity.Y = 16f;
														return;
													}
												}
												else
												{
													if (this.ai[0] == 5f)
													{
														if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														else
														{
															this.direction = -1;
														}
														this.spriteDirection = this.direction;
														this.noTileCollide = true;
														this.noGravity = true;
														this.knockBackResist = 0f;
														Vector2 value74 = Main.player[this.target].Center - base.Center;
														value74.Y -= 4f;
														if (value74.Length() < 200f && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															this.ai[0] = 2f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
														}
														if (value74.Length() > 10f)
														{
															value74.Normalize();
															value74 *= 10f;
														}
														this.velocity = (this.velocity * 4f + value74) / 5f;
														return;
													}
													if (this.ai[0] == 6f)
													{
														this.knockBackResist = 0f;
														if (this.velocity.Y == 0f)
														{
															this.TargetClosest(true);
															this.velocity.X = this.velocity.X * 0.8f;
															this.ai[1] += 1f;
															if (this.ai[1] > 5f)
															{
																this.ai[1] = 0f;
																this.velocity.Y = this.velocity.Y - 4f;
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y)
																{
																	this.velocity.Y = this.velocity.Y - 1.25f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 40f)
																{
																	this.velocity.Y = this.velocity.Y - 1.5f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 80f)
																{
																	this.velocity.Y = this.velocity.Y - 1.75f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 120f)
																{
																	this.velocity.Y = this.velocity.Y - 2f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 160f)
																{
																	this.velocity.Y = this.velocity.Y - 2.25f;
																}
																if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 200f)
																{
																	this.velocity.Y = this.velocity.Y - 2.5f;
																}
																if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
																{
																	this.velocity.Y = this.velocity.Y - 2f;
																}
																this.velocity.X = (float)(12 * this.direction);
																this.ai[2] += 1f;
															}
														}
														else
														{
															this.velocity.X = this.velocity.X * 0.98f;
															if (this.direction < 0 && this.velocity.X > -8f)
															{
																this.velocity.X = -8f;
															}
															if (this.direction > 0 && this.velocity.X < 8f)
															{
																this.velocity.X = 8f;
															}
														}
														if (this.ai[2] >= 3f && this.velocity.Y == 0f)
														{
															this.ai[0] = 2f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
															return;
														}
													}
													else if (this.ai[0] == 7f)
													{
														this.damage = 0;
														this.life = this.lifeMax;
														this.defense = 9999;
														this.noTileCollide = true;
														this.alpha += 7;
														if (this.alpha > 255)
														{
															this.alpha = 255;
														}
														this.velocity.X = this.velocity.X * 0.98f;
														return;
													}
												}
											}
											else if (this.aiStyle == 88)
											{
												int num1879 = 7;
												this.noTileCollide = false;
												this.noGravity = true;
												this.knockBackResist = 0.2f * Main.expertKnockBack;
												this.damage = this.defDamage;
												if (!Main.eclipse)
												{
													this.ai[0] = -1f;
												}
												else if (this.target < 0 || Main.player[this.target].dead || !Main.player[this.target].active)
												{
													this.TargetClosest(true);
													Vector2 vector270 = Main.player[this.target].Center - base.Center;
													if (Main.player[this.target].dead || vector270.Length() > 3000f)
													{
														this.ai[0] = -1f;
													}
												}
												else
												{
													Vector2 vector271 = Main.player[this.target].Center - base.Center;
													if (this.ai[0] > 1f && vector271.Length() > 1000f)
													{
														this.ai[0] = 1f;
													}
												}
												if (this.ai[0] == -1f)
												{
													Vector2 value75 = new Vector2(0f, -8f);
													this.velocity = (this.velocity * 9f + value75) / 10f;
													this.noTileCollide = true;
													this.dontTakeDamage = true;
													return;
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													if (base.Center.X < Main.player[this.target].Center.X - 2f)
													{
														this.direction = 1;
													}
													if (base.Center.X > Main.player[this.target].Center.X + 2f)
													{
														this.direction = -1;
													}
													this.spriteDirection = this.direction;
													this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
													if (this.collideX)
													{
														this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
														if (this.velocity.X > 4f)
														{
															this.velocity.X = 4f;
														}
														if (this.velocity.X < -4f)
														{
															this.velocity.X = -4f;
														}
													}
													if (this.collideY)
													{
														this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
														if (this.velocity.Y > 4f)
														{
															this.velocity.Y = 4f;
														}
														if (this.velocity.Y < -4f)
														{
															this.velocity.Y = -4f;
														}
													}
													Vector2 value76 = Main.player[this.target].Center - base.Center;
													value76.Y -= 200f;
													if (value76.Length() > 800f)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
													else if (value76.Length() > 80f)
													{
														float scaleFactor29 = 6f;
														float num1880 = 30f;
														value76.Normalize();
														value76 *= scaleFactor29;
														this.velocity = (this.velocity * (num1880 - 1f) + value76) / num1880;
													}
													else if (this.velocity.Length() > 2f)
													{
														this.velocity *= 0.95f;
													}
													else if (this.velocity.Length() < 1f)
													{
														this.velocity *= 1.05f;
													}
													this.ai[1] += 1f;
													if (this.justHit)
													{
														this.ai[1] += (float)Main.rand.Next(10, 30);
													}
													if (this.ai[1] >= 180f && Main.netMode != 1)
													{
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
														this.netUpdate = true;
														while (this.ai[0] == 0f)
														{
															int num1881 = Main.rand.Next(3);
															if (num1881 == 0 && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 2f;
															}
															else if (num1881 == 1)
															{
																this.ai[0] = 3f;
															}
															else if (num1881 == 2 && NPC.CountNPCS(478) + NPC.CountNPCS(479) < num1879)
															{
																this.ai[0] = 4f;
															}
														}
														return;
													}
												}
												else
												{
													if (this.ai[0] == 1f)
													{
														this.collideX = false;
														this.collideY = false;
														this.noTileCollide = true;
														this.knockBackResist = 0f;
														if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
														{
															this.TargetClosest(true);
														}
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.rotation = (this.rotation * 9f + this.velocity.X * 0.08f) / 10f;
														Vector2 value77 = Main.player[this.target].Center - base.Center;
														if (value77.Length() < 300f && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
														}
														float scaleFactor30 = 7f + value77.Length() / 100f;
														float num1882 = 25f;
														value77.Normalize();
														value77 *= scaleFactor30;
														this.velocity = (this.velocity * (num1882 - 1f) + value77) / num1882;
														return;
													}
													if (this.ai[0] == 2f)
													{
														this.damage = (int)((double)this.defDamage * 0.5);
														this.knockBackResist = 0f;
														if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
														{
															this.TargetClosest(true);
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
														}
														if (Main.player[this.target].Center.X - 10f < base.Center.X)
														{
															this.direction = -1;
														}
														else if (Main.player[this.target].Center.X + 10f > base.Center.X)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.rotation = (this.rotation * 4f + this.velocity.X * 0.1f) / 5f;
														if (this.collideX)
														{
															this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
															if (this.velocity.X > 4f)
															{
																this.velocity.X = 4f;
															}
															if (this.velocity.X < -4f)
															{
																this.velocity.X = -4f;
															}
														}
														if (this.collideY)
														{
															this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
															if (this.velocity.Y > 4f)
															{
																this.velocity.Y = 4f;
															}
															if (this.velocity.Y < -4f)
															{
																this.velocity.Y = -4f;
															}
														}
														Vector2 value78 = Main.player[this.target].Center - base.Center;
														value78.Y -= 20f;
														this.ai[2] += 0.0222222228f;
														if (Main.expertMode)
														{
															this.ai[2] += 0.0166666675f;
														}
														float scaleFactor31 = 4f + this.ai[2] + value78.Length() / 120f;
														float num1883 = 20f;
														value78.Normalize();
														value78 *= scaleFactor31;
														this.velocity = (this.velocity * (num1883 - 1f) + value78) / num1883;
														this.ai[1] += 1f;
														if (this.ai[1] > 240f || !Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
														{
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
															return;
														}
													}
													else
													{
														if (this.ai[0] == 3f)
														{
															this.knockBackResist = 0f;
															this.noTileCollide = true;
															if (this.velocity.X < 0f)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
															this.spriteDirection = this.direction;
															this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
															Vector2 value79 = Main.player[this.target].Center - base.Center;
															value79.Y -= 12f;
															if (base.Center.X > Main.player[this.target].Center.X)
															{
																value79.X += 400f;
															}
															else
															{
																value79.X -= 400f;
															}
															if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 350f && Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) < 20f)
															{
																this.ai[0] = 3.1f;
																this.ai[1] = 0f;
															}
															this.ai[1] += 0.0333333351f;
															float scaleFactor32 = 8f + this.ai[1];
															float num1884 = 4f;
															value79.Normalize();
															value79 *= scaleFactor32;
															this.velocity = (this.velocity * (num1884 - 1f) + value79) / num1884;
															return;
														}
														if (this.ai[0] == 3.1f)
														{
															this.knockBackResist = 0f;
															this.noTileCollide = true;
															this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
															Vector2 vector272 = Main.player[this.target].Center - base.Center;
															vector272.Y -= 12f;
															float scaleFactor33 = 16f;
															float num1885 = 8f;
															vector272.Normalize();
															vector272 *= scaleFactor33;
															this.velocity = (this.velocity * (num1885 - 1f) + vector272) / num1885;
															if (this.velocity.X < 0f)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
															this.spriteDirection = this.direction;
															this.ai[1] += 1f;
															if (this.ai[1] > 10f)
															{
																this.velocity = vector272;
																if (this.velocity.X < 0f)
																{
																	this.direction = -1;
																}
																else
																{
																	this.direction = 1;
																}
																this.ai[0] = 3.2f;
																this.ai[1] = 0f;
																this.ai[1] = (float)this.direction;
																return;
															}
														}
														else
														{
															if (this.ai[0] == 3.2f)
															{
																this.damage = (int)((double)this.defDamage * 1.3);
																this.collideX = false;
																this.collideY = false;
																this.knockBackResist = 0f;
																this.noTileCollide = true;
																this.ai[2] += 0.0333333351f;
																this.velocity.X = (16f + this.ai[2]) * this.ai[1];
																if ((this.ai[1] > 0f && base.Center.X > Main.player[this.target].Center.X + 260f) || (this.ai[1] < 0f && base.Center.X < Main.player[this.target].Center.X - 260f))
																{
																	if (!Collision.SolidCollision(this.position, this.width, this.height))
																	{
																		this.ai[0] = 0f;
																		this.ai[1] = 0f;
																		this.ai[2] = 0f;
																		this.ai[3] = 0f;
																	}
																	else if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 800f)
																	{
																		this.ai[0] = 1f;
																		this.ai[1] = 0f;
																		this.ai[2] = 0f;
																		this.ai[3] = 0f;
																	}
																}
																this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
																return;
															}
															if (this.ai[0] == 4f)
															{
																this.ai[0] = 0f;
																this.TargetClosest(true);
																if (Main.netMode != 1)
																{
																	this.ai[1] = -1f;
																	this.ai[2] = -1f;
																	for (int num1886 = 0; num1886 < 1000; num1886++)
																	{
																		int num1887 = (int)Main.player[this.target].Center.X / 16;
																		int num1888 = (int)Main.player[this.target].Center.Y / 16;
																		int num1889 = 30 + num1886 / 50;
																		int num1890 = 20 + num1886 / 75;
																		num1887 += Main.rand.Next(-num1889, num1889 + 1);
																		num1888 += Main.rand.Next(-num1890, num1890 + 1);
																		if (!WorldGen.SolidTile(num1887, num1888))
																		{
																			while (!WorldGen.SolidTile(num1887, num1888) && (double)num1888 < Main.worldSurface)
																			{
																				num1888++;
																			}
																			if ((new Vector2((float)(num1887 * 16 + 8), (float)(num1888 * 16 + 8)) - Main.player[this.target].Center).Length() < 600f)
																			{
																				this.ai[0] = 4.1f;
																				this.ai[1] = (float)num1887;
																				this.ai[2] = (float)num1888;
																				break;
																			}
																		}
																	}
																}
																this.netUpdate = true;
																return;
															}
															if (this.ai[0] == 4.1f)
															{
																if (this.velocity.X < -2f)
																{
																	this.direction = -1;
																}
																else if (this.velocity.X > 2f)
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
																this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
																this.noTileCollide = true;
																int num1891 = (int)this.ai[1];
																int num1892 = (int)this.ai[2];
																float x2 = (float)(num1891 * 16 + 8);
																float y2 = (float)(num1892 * 16 - 20);
																Vector2 vector273 = new Vector2(x2, y2);
																vector273 -= base.Center;
																float num1893 = 6f + vector273.Length() / 150f;
																if (num1893 > 10f)
																{
																	num1893 = 10f;
																}
																float num1894 = 10f;
																if (vector273.Length() < 10f)
																{
																	this.ai[0] = 4.2f;
																}
																vector273.Normalize();
																vector273 *= num1893;
																this.velocity = (this.velocity * (num1894 - 1f) + vector273) / num1894;
																return;
															}
															if (this.ai[0] == 4.2f)
															{
																this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
																this.knockBackResist = 0f;
																this.noTileCollide = true;
																int num1895 = (int)this.ai[1];
																int num1896 = (int)this.ai[2];
																float x3 = (float)(num1895 * 16 + 8);
																float y3 = (float)(num1896 * 16 - 20);
																Vector2 vector274 = new Vector2(x3, y3);
																vector274 -= base.Center;
																float num1897 = 4f;
																float num1898 = 2f;
																if (Main.netMode != 1 && vector274.Length() < 4f)
																{
																	int num1899 = 70;
																	if (Main.expertMode)
																	{
																		num1899 = (int)((double)num1899 * 0.75);
																	}
																	this.ai[3] += 1f;
																	if (this.ai[3] == (float)num1899)
																	{
																		NPC.NewNPC(num1895 * 16 + 8, num1896 * 16, 478, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																	}
																	else if (this.ai[3] == (float)(num1899 * 2))
																	{
																		this.ai[0] = 0f;
																		this.ai[1] = 0f;
																		this.ai[2] = 0f;
																		this.ai[3] = 0f;
																		if (NPC.CountNPCS(478) + NPC.CountNPCS(479) < num1879 && Main.rand.Next(3) != 0)
																		{
																			this.ai[0] = 4f;
																		}
																		else if (Collision.SolidCollision(this.position, this.width, this.height))
																		{
																			this.ai[0] = 1f;
																		}
																	}
																}
																if (vector274.Length() > num1897)
																{
																	vector274.Normalize();
																	vector274 *= num1897;
																}
																this.velocity = (this.velocity * (num1898 - 1f) + vector274) / num1898;
																return;
															}
														}
													}
												}
											}
											else if (this.aiStyle == 89)
											{
												if (this.velocity.Y == 0f)
												{
													this.velocity.X = this.velocity.X * 0.9f;
													this.rotation += this.velocity.X * 0.02f;
												}
												else
												{
													this.velocity.X = this.velocity.X * 0.99f;
													this.rotation += this.velocity.X * 0.04f;
												}
												int num1900 = 900;
												if (Main.expertMode)
												{
													num1900 = 600;
												}
												if (this.justHit)
												{
													this.ai[0] -= (float)Main.rand.Next(10, 21);
													if (!Main.expertMode)
													{
														this.ai[0] -= (float)Main.rand.Next(10, 21);
													}
												}
												this.ai[0] += 1f;
												if (this.ai[0] >= (float)num1900)
												{
													this.Transform(479);
												}
												if (Main.netMode != 1 && this.velocity.Y == 0f && (double)Math.Abs(this.velocity.X) < 0.2 && (double)this.ai[0] >= (double)num1900 * 0.75)
												{
													float num1901 = this.ai[0] - (float)num1900 * 0.75f;
													num1901 /= (float)num1900 * 0.25f;
													if ((float)Main.rand.Next(-10, 120) < num1901 * 100f)
													{
														this.velocity.Y = this.velocity.Y - (float)Main.rand.Next(20, 40) * 0.025f;
														this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 20) * 0.025f;
														this.velocity *= 1f + num1901 * 2f;
														this.netUpdate = true;
														return;
													}
												}
											}
											else if (this.aiStyle == 90)
											{
												this.noTileCollide = false;
												this.knockBackResist = 0.4f * Main.knockBackMultiplier;
												this.noGravity = true;
												this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
												if (!Main.eclipse)
												{
													if (this.timeLeft > 5)
													{
														this.timeLeft = 5;
													}
													this.velocity.Y = this.velocity.Y - 0.2f;
													if (this.velocity.Y < -8f)
													{
														this.velocity.Y = -8f;
													}
													this.noTileCollide = true;
													return;
												}
												if (this.ai[0] == 0f || this.ai[0] == 1f)
												{
													for (int num1902 = 0; num1902 < 200; num1902++)
													{
														if (num1902 != this.whoAmI && Main.npc[num1902].active && Main.npc[num1902].type == this.type)
														{
															Vector2 value80 = Main.npc[num1902].Center - base.Center;
															if (value80.Length() < (float)(this.width + this.height))
															{
																value80.Normalize();
																value80 *= -0.1f;
																this.velocity += value80;
																Main.npc[num1902].velocity -= value80;
															}
														}
													}
												}
												if (this.target < 0 || Main.player[this.target].dead || !Main.player[this.target].active)
												{
													this.TargetClosest(true);
													Vector2 vector275 = Main.player[this.target].Center - base.Center;
													if (Main.player[this.target].dead || vector275.Length() > 3000f)
													{
														this.ai[0] = -1f;
													}
												}
												else
												{
													Vector2 vector276 = Main.player[this.target].Center - base.Center;
													if (this.ai[0] > 1f && vector276.Length() > 1000f)
													{
														this.ai[0] = 1f;
													}
												}
												if (this.ai[0] == -1f)
												{
													Vector2 value81 = new Vector2(0f, -8f);
													this.velocity = (this.velocity * 9f + value81) / 10f;
													this.noTileCollide = true;
													this.dontTakeDamage = true;
													return;
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													this.spriteDirection = this.direction;
													if (this.collideX)
													{
														this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
														if (this.velocity.X > 4f)
														{
															this.velocity.X = 4f;
														}
														if (this.velocity.X < -4f)
														{
															this.velocity.X = -4f;
														}
													}
													if (this.collideY)
													{
														this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
														if (this.velocity.Y > 4f)
														{
															this.velocity.Y = 4f;
														}
														if (this.velocity.Y < -4f)
														{
															this.velocity.Y = -4f;
														}
													}
													Vector2 value82 = Main.player[this.target].Center - base.Center;
													if (value82.Length() > 800f)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
													else if (value82.Length() > 200f)
													{
														float scaleFactor34 = 5.5f + value82.Length() / 100f + this.ai[1] / 15f;
														float num1903 = 40f;
														value82.Normalize();
														value82 *= scaleFactor34;
														this.velocity = (this.velocity * (num1903 - 1f) + value82) / num1903;
													}
													else if (this.velocity.Length() > 2f)
													{
														this.velocity *= 0.95f;
													}
													else if (this.velocity.Length() < 1f)
													{
														this.velocity *= 1.05f;
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 90f)
													{
														this.ai[1] = 0f;
														this.ai[0] = 2f;
														return;
													}
												}
												else
												{
													if (this.ai[0] == 1f)
													{
														this.collideX = false;
														this.collideY = false;
														this.noTileCollide = true;
														this.knockBackResist = 0f;
														if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
														{
															this.TargetClosest(true);
														}
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.rotation = (this.rotation * 9f + this.velocity.X * 0.08f) / 10f;
														Vector2 value83 = Main.player[this.target].Center - base.Center;
														if (value83.Length() < 300f && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[2] = 0f;
															this.ai[3] = 0f;
														}
														this.ai[2] += 0.0166666675f;
														float scaleFactor35 = 5.5f + this.ai[2] + value83.Length() / 150f;
														float num1904 = 35f;
														value83.Normalize();
														value83 *= scaleFactor35;
														this.velocity = (this.velocity * (num1904 - 1f) + value83) / num1904;
														return;
													}
													if (this.ai[0] == 2f)
													{
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.rotation = (this.rotation * 7f + this.velocity.X * 0.1f) / 8f;
														this.knockBackResist = 0f;
														this.noTileCollide = true;
														Vector2 vector277 = Main.player[this.target].Center - base.Center;
														vector277.Y -= 8f;
														float scaleFactor36 = 9f;
														float num1905 = 8f;
														vector277.Normalize();
														vector277 *= scaleFactor36;
														this.velocity = (this.velocity * (num1905 - 1f) + vector277) / num1905;
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.ai[1] += 1f;
														if (this.ai[1] > 10f)
														{
															this.velocity = vector277;
															if (this.velocity.X < 0f)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
															this.ai[0] = 2.1f;
															this.ai[1] = 0f;
															return;
														}
													}
													else if (this.ai[0] == 2.1f)
													{
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														else if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														this.spriteDirection = this.direction;
														this.velocity *= 1.01f;
														this.knockBackResist = 0f;
														this.noTileCollide = true;
														this.ai[1] += 1f;
														int num1906 = 45;
														if (this.ai[1] > (float)num1906)
														{
															if (!Collision.SolidCollision(this.position, this.width, this.height))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																return;
															}
															if (this.ai[1] > (float)(num1906 * 2))
															{
																this.ai[0] = 1f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																return;
															}
														}
													}
												}
											}
											else if (this.aiStyle == 91)
											{
												this.noGravity = true;
												this.noTileCollide = false;
												this.dontTakeDamage = false;
												if (this.justHit && Main.netMode != 1 && Main.expertMode && Main.rand.Next(6) == 0)
												{
													this.netUpdate = true;
													this.ai[0] = -1f;
													this.ai[1] = 0f;
												}
												if (this.ai[0] == -1f)
												{
													this.dontTakeDamage = true;
													this.noGravity = false;
													this.velocity.X = this.velocity.X * 0.98f;
													this.ai[1] += 1f;
													if (this.ai[1] >= 120f)
													{
														this.ai[0] = (this.ai[1] = (this.ai[2] = (this.ai[3] = 0f)));
														return;
													}
												}
												else if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 1f;
														return;
													}
													Vector2 value84 = Main.player[this.target].Center - base.Center;
													value84.Y -= (float)(Main.player[this.target].height / 4);
													float num1907 = value84.Length();
													if (num1907 > 800f)
													{
														this.ai[0] = 2f;
														return;
													}
													Vector2 center41 = base.Center;
													center41.X = Main.player[this.target].Center.X;
													Vector2 vector278 = center41 - base.Center;
													if (vector278.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center41, 1, 1))
													{
														this.ai[0] = 3f;
														this.ai[1] = center41.X;
														this.ai[2] = center41.Y;
														Vector2 center42 = base.Center;
														center42.Y = Main.player[this.target].Center.Y;
														if (vector278.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center42, 1, 1) && Collision.CanHit(center42, 1, 1, Main.player[this.target].position, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center42.X;
															this.ai[2] = center42.Y;
														}
													}
													else
													{
														center41 = base.Center;
														center41.Y = Main.player[this.target].Center.Y;
														if ((center41 - base.Center).Length() > 8f && Collision.CanHit(base.Center, 1, 1, center41, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center41.X;
															this.ai[2] = center41.Y;
														}
													}
													if (this.ai[0] == 0f)
													{
														this.localAI[0] = 0f;
														value84.Normalize();
														value84 *= 0.5f;
														this.velocity += value84;
														this.ai[0] = 4f;
														this.ai[1] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 1f)
												{
													Vector2 value85 = Main.player[this.target].Center - base.Center;
													float num1908 = value85.Length();
													float num1909 = 2f;
													num1909 += num1908 / 200f;
													int num1910 = 50;
													value85.Normalize();
													value85 *= num1909;
													this.velocity = (this.velocity * (float)(num1910 - 1) + value85) / (float)num1910;
													if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.noTileCollide = true;
													Vector2 value86 = Main.player[this.target].Center - base.Center;
													float num1911 = value86.Length();
													float scaleFactor37 = 2f;
													int num1912 = 4;
													value86.Normalize();
													value86 *= scaleFactor37;
													this.velocity = (this.velocity * (float)(num1912 - 1) + value86) / (float)num1912;
													if (num1911 < 600f && !Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.ai[0] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 3f)
												{
													Vector2 value87 = new Vector2(this.ai[1], this.ai[2]);
													Vector2 value88 = value87 - base.Center;
													float num1913 = value88.Length();
													float num1914 = 1f;
													float num1915 = 3f;
													value88.Normalize();
													value88 *= num1914;
													this.velocity = (this.velocity * (num1915 - 1f) + value88) / num1915;
													if (this.collideX || this.collideY)
													{
														this.ai[0] = 4f;
														this.ai[1] = 0f;
													}
													if (num1913 < num1914 || num1913 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
														return;
													}
												}
												else if (this.ai[0] == 4f)
												{
													if (this.collideX)
													{
														this.velocity.X = this.velocity.X * -0.8f;
													}
													if (this.collideY)
													{
														this.velocity.Y = this.velocity.Y * -0.8f;
													}
													Vector2 value89;
													if (this.velocity.X == 0f && this.velocity.Y == 0f)
													{
														value89 = Main.player[this.target].Center - base.Center;
														value89.Y -= (float)(Main.player[this.target].height / 4);
														value89.Normalize();
														this.velocity = value89 * 0.1f;
													}
													float scaleFactor38 = 1.5f;
													float num1916 = 20f;
													value89 = this.velocity;
													value89.Normalize();
													value89 *= scaleFactor38;
													this.velocity = (this.velocity * (num1916 - 1f) + value89) / num1916;
													this.ai[1] += 1f;
													if (this.ai[1] > 180f)
													{
														this.ai[0] = 0f;
														this.ai[1] = 0f;
													}
													if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
													{
														this.ai[0] = 0f;
													}
													this.localAI[0] += 1f;
													if (this.localAI[0] >= 5f && !Collision.SolidCollision(this.position - new Vector2(10f, 10f), this.width + 20, this.height + 20))
													{
														this.localAI[0] = 0f;
														Vector2 center43 = base.Center;
														center43.X = Main.player[this.target].Center.X;
														if (Collision.CanHit(base.Center, 1, 1, center43, 1, 1) && Collision.CanHit(base.Center, 1, 1, center43, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center43, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center43.X;
															this.ai[2] = center43.Y;
															return;
														}
														center43 = base.Center;
														center43.Y = Main.player[this.target].Center.Y;
														if (Collision.CanHit(base.Center, 1, 1, center43, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center43, 1, 1))
														{
															this.ai[0] = 3f;
															this.ai[1] = center43.X;
															this.ai[2] = center43.Y;
															return;
														}
													}
												}
											}
											else if (this.aiStyle == 92)
											{
												if (Main.rand.Next(20) == 0)
												{
													this.soundHit = Main.rand.Next(15, 18);
												}
												if (Main.netMode != 1)
												{
													bool flag176 = false;
													int num1917 = (int)this.ai[0];
													int num1918 = (int)this.ai[1];
													if (!flag176 && (!Main.tile[num1917, num1918].active() || Main.tile[num1917, num1918].type != 378))
													{
														flag176 = true;
													}
													if (!flag176 && (this.target == 255 || Main.player[this.target].dead || Vector2.Distance(base.Center, Main.player[this.target].Center) > 160000f))
													{
														this.TargetClosest(false);
														if (this.target == 255 || Main.player[this.target].dead || Vector2.Distance(base.Center, Main.player[this.target].Center) > 160000f)
														{
															flag176 = true;
														}
													}
													if (flag176)
													{
														this.life = 0;
														this.HitEffect(0, 10.0);
														this.active = false;
														int num1919 = TETrainingDummy.Find((int)this.ai[0], (int)this.ai[1]);
														if (num1919 != -1)
														{
															((TETrainingDummy)TileEntity.ByID[num1919]).Deactivate();
														}
														return;
													}
												}
											}
											else if (this.aiStyle == 93)
											{
												if (this.localAI[0] == 0f)
												{
													this.localAI[0] = 1f;
													for (int num1920 = 0; num1920 < 4; num1920++)
													{
														int num1921 = NPC.NewNPC((int)base.Center.X + num1920 * 40 - 150, (int)base.Center.Y, 492, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1921].netUpdate = true;
														Main.npc[num1921].ai[0] = (float)this.whoAmI;
														Main.npc[num1921].ai[1] = (float)num1920;
														Main.npc[num1921].ai[3] = (float)(60 * num1920);
														Main.npc[num1921].TargetClosest(false);
														Main.npc[num1921].timeLeft = 600;
														this.ai[num1920] = (float)num1921;
													}
												}
												bool flag177 = true;
												for (int num1922 = 0; num1922 < 4; num1922++)
												{
													if (this.ai[num1922] >= 0f && (!Main.npc[(int)this.ai[num1922]].active || Main.npc[(int)this.ai[num1922]].type != 492))
													{
														this.ai[num1922] = -1f;
														this.netUpdate = true;
													}
													else if (this.ai[num1922] >= 0f)
													{
														flag177 = false;
													}
												}
												if (flag177)
												{
													this.life = 0;
													this.HitEffect(9999, 10.0);
													this.checkDead();
													return;
												}
												if (Main.netMode != 1 && Main.rand.Next(300) == 0)
												{
													Vector2 value90 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(this.width - 70), (Main.rand.NextFloat() - 0.5f) * 20f - (float)(this.height / 2) - 20f).RotatedBy((double)this.rotation, default(Vector2));
													value90 += base.Center;
													int num1923 = NPC.NewNPC((int)value90.X, (int)value90.Y, Utils.SelectRandom<int>(Main.rand, new int[]
													{
														213,
														215,
														214,
														212
													}), 0, 0f, 0f, 0f, 0f, 255);
													Main.npc[num1923].velocity = new Vector2((Main.rand.NextFloat() - 0.5f) * 5f, -8.01f) + this.velocity;
													Main.npc[num1923].netUpdate = true;
													Main.npc[num1923].timeLeft = 600;
												}
												if ((this.localAI[3] += 1f) >= 64f)
												{
													this.localAI[3] = 0f;
												}
												this.TargetClosest(true);
												int num1924 = (int)base.Center.X / 16 + Math.Sign(this.velocity.X) * 10;
												int num1925 = (int)(this.position.Y + (float)this.height) / 16;
												int num1926 = 0;
												bool flag178 = Main.tile[num1924, num1925].nactive() && Main.tileSolid[(int)Main.tile[num1924, num1925].type] && !Main.tileSolidTop[(int)Main.tile[num1924, num1925].type];
												if (flag178)
												{
													num1926 = 1;
												}
												else
												{
													while (num1926 < 150 && num1925 + num1926 < Main.maxTilesY)
													{
														int num1927 = num1925 + num1926;
														bool flag179 = Main.tile[num1924, num1927].nactive() && Main.tileSolid[(int)Main.tile[num1924, num1927].type] && !Main.tileSolidTop[(int)Main.tile[num1924, num1927].type];
														if (flag179)
														{
															num1926--;
															break;
														}
														num1926++;
													}
												}
												float num1928 = (float)(num1926 * 16);
												if (num1928 < 350f)
												{
													float num1929 = num1928 - 350f;
													if (num1929 < -4f)
													{
														num1929 = -4f;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1929, 0.05f);
												}
												else if (num1928 > 450f)
												{
													float num1930 = num1928 - 350f;
													if (num1930 > 4f)
													{
														num1930 = 4f;
													}
													this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num1930, 0.05f);
												}
												else
												{
													this.velocity.Y = this.velocity.Y * 0.95f;
												}
												float num1931 = Main.player[this.target].Center.X - base.Center.X;
												if (Math.Abs(num1931) >= 300f && (Math.Abs(this.velocity.X) < 6f || Math.Sign(this.velocity.X) != this.direction))
												{
													this.velocity.X = this.velocity.X + (float)this.direction * 0.06f;
												}
												this.rotation = this.velocity.X * 0.025f;
												this.spriteDirection = -Math.Sign(this.velocity.X);
												return;
											}
											else if (this.aiStyle == 94)
											{
												int num75;
												if (this.ai[2] == 1f)
												{
													this.velocity = Vector2.UnitY * this.velocity.Length();
													if (this.velocity.Y < 0.25f)
													{
														this.velocity.Y = this.velocity.Y + 0.02f;
													}
													if (this.velocity.Y > 0.25f)
													{
														this.velocity.Y = this.velocity.Y - 0.02f;
													}
													this.dontTakeDamage = true;
													this.ai[1] += 1f;
													if (this.ai[1] > 120f)
													{
														this.Opacity = 1f - (this.ai[1] - 120f) / 60f;
													}
													num75 = this.type;
													if (this.ai[1] >= 180f)
													{
														this.life = 0;
														this.HitEffect(0, 1337.0);
														this.checkDead();
													}
													return;
												}
												if (this.ai[3] > 0f)
												{
													bool flag180 = this.dontTakeDamage;
													num75 = this.type;
													if (num75 <= 493)
													{
														if (num75 != 422)
														{
															if (num75 == 493)
															{
																flag180 = (NPC.ShieldStrengthTowerStardust != 0);
															}
														}
														else
														{
															flag180 = (NPC.ShieldStrengthTowerVortex != 0);
														}
													}
													else if (num75 != 507)
													{
														if (num75 == 517)
														{
															flag180 = (NPC.ShieldStrengthTowerSolar != 0);
														}
													}
													else
													{
														flag180 = (NPC.ShieldStrengthTowerNebula != 0);
													}
													this.ai[3] += 1f;
													if (this.ai[3] > 120f)
													{
														this.ai[3] = 0f;
													}
												}
												num75 = this.type;
												if (num75 <= 493)
												{
													if (num75 != 422)
													{
														if (num75 == 493)
														{
															this.dontTakeDamage = (NPC.ShieldStrengthTowerStardust != 0);
														}
													}
													else
													{
														this.dontTakeDamage = (NPC.ShieldStrengthTowerVortex != 0);
													}
												}
												else if (num75 != 507)
												{
													if (num75 == 517)
													{
														this.dontTakeDamage = (NPC.ShieldStrengthTowerSolar != 0);
													}
												}
												else
												{
													this.dontTakeDamage = (NPC.ShieldStrengthTowerNebula != 0);
												}
												this.TargetClosest(false);
												if (Main.player[this.target].Distance(base.Center) > 2000f)
												{
													this.localAI[0] += 1f;
												}
												if (this.localAI[0] >= 60f && Main.netMode != 1)
												{
													this.localAI[0] = 0f;
													this.netUpdate = true;
													this.life = (int)MathHelper.Clamp((float)(this.life + 200), 0f, (float)this.lifeMax);
												}
												else
												{
													this.localAI[0] = 0f;
												}
												this.velocity = new Vector2(0f, (float)Math.Sin((double)(6.28318548f * this.ai[0] / 300f)) * 0.5f);
												this.ai[0] += 1f;
												if (this.ai[0] >= 300f)
												{
													this.ai[0] = 0f;
													this.netUpdate = true;
												}
												if (this.type == 493)
												{
													if (this.ai[1] > 0f)
													{
														this.ai[1] -= 1f;
													}
													if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 400f)
													{
														List<int> list10 = new List<int>();
														if (NPC.CountNPCS(405) + NPC.CountNPCS(406) < 2)
														{
															list10.Add(405);
														}
														if (NPC.CountNPCS(402) < 2)
														{
															list10.Add(402);
														}
														if (NPC.CountNPCS(407) < 1)
														{
															list10.Add(407);
														}
														if (list10.Count > 0)
														{
															int num1940 = Utils.SelectRandom<int>(Main.rand, list10.ToArray());
															this.ai[1] = (float)(30 * Main.rand.Next(5, 16));
															int num1941 = Main.rand.Next(3, 6);
															int num1942 = Main.rand.Next(0, 4);
															int num1943 = 0;
															List<Tuple<Vector2, int, int>> list11 = new List<Tuple<Vector2, int, int>>();
															List<Vector2> list12 = new List<Vector2>();
															list11.Add(Tuple.Create<Vector2, int, int>(base.Top - Vector2.UnitY * 120f, num1941, 0));
															int num1944 = 0;
															int num1945 = list11.Count;
															while (list11.Count > 0)
															{
																Vector2 item = list11[0].Item1;
																int num1946 = 1;
																int num1947 = 1;
																if (num1944 > 0 && num1942 > 0 && (Main.rand.Next(3) != 0 || num1944 == 1))
																{
																	num1947 = Main.rand.Next(Math.Max(1, list11[0].Item2));
																	num1946++;
																	num1942--;
																}
																for (int num1948 = 0; num1948 < num1946; num1948++)
																{
																	int num1949 = list11[0].Item3;
																	if (num1944 == 0)
																	{
																		num1949 = Utils.SelectRandom<int>(Main.rand, new int[]
																		{
																			-1,
																			1
																		});
																	}
																	else if (num1948 == 1)
																	{
																		num1949 *= -1;
																	}
																	float num1950 = ((num1944 % 2 == 0) ? 0f : 3.14159274f) + (0.5f - Main.rand.NextFloat()) * 0.7853982f + (float)num1949 * 0.7853982f * (float)(num1944 % 2 == 0).ToDirectionInt();
																	float scaleFactor39 = 100f + 50f * Main.rand.NextFloat();
																	int num1951 = list11[0].Item2;
																	if (num1948 != 0)
																	{
																		num1951 = num1947;
																	}
																	if (num1944 == 0)
																	{
																		num1950 = (0.5f - Main.rand.NextFloat()) * 0.7853982f;
																		scaleFactor39 = 100f + 100f * Main.rand.NextFloat();
																	}
																	Vector2 value92 = (-Vector2.UnitY).RotatedBy((double)num1950, default(Vector2)) * scaleFactor39;
																	if (num1951 - 1 < 0)
																	{
																		value92 = Vector2.Zero;
																	}
																	num1943 = Projectile.NewProjectile(item.X, item.Y, value92.X, value92.Y, 540, 0, 0f, Main.myPlayer, (float)(-(float)num1944) * 10f, 0.5f + Main.rand.NextFloat() * 0.5f);
																	list12.Add(item + value92);
																	if (num1944 < num1941 && list11[0].Item2 > 0)
																	{
																		list11.Add(Tuple.Create<Vector2, int, int>(item + value92, num1951 - 1, num1949));
																	}
																}
																list11.Remove(list11[0]);
																if (--num1945 == 0)
																{
																	num1945 = list11.Count;
																	num1944++;
																}
															}
															Main.projectile[num1943].localAI[0] = (float)num1940;
														}
														else
														{
															this.ai[1] = 30f;
														}
													}
												}
												if (this.type == 422)
												{
													if (this.ai[1] > 0f)
													{
														this.ai[1] -= 1f;
													}
													if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 3240f && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
													{
														this.ai[1] = (float)(60 + Main.rand.Next(120));
														Point point13 = Main.player[this.target].Top.ToTileCoordinates();
														bool flag181 = NPC.CountNPCS(427) + NPC.CountNPCS(426) < 14;
														int num1954 = 0;
														while (num1954 < 10 && !WorldGen.SolidTile(point13.X, point13.Y) && point13.Y > 10)
														{
															point13.Y--;
															num1954++;
														}
														if (flag181)
														{
															Projectile.NewProjectile((float)(point13.X * 16 + 8), (float)(point13.Y * 16 + 24), 0f, 0f, 579, 0, 0f, Main.myPlayer, 0f, 0f);
														}
														else
														{
															Projectile.NewProjectile((float)(point13.X * 16 + 8), (float)(point13.Y * 16 + 17), 0f, 0f, 578, 0, 1f, Main.myPlayer, 0f, 0f);
														}
													}
													if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 400f)
													{
														bool flag182 = NPC.CountNPCS(427) + NPC.CountNPCS(426) * 3 + NPC.CountNPCS(428) < 20;
														if (flag182)
														{
															this.ai[1] = (float)(420 + Main.rand.Next(360));
															Point point14 = base.Center.ToTileCoordinates();
															Point point15 = Main.player[this.target].Center.ToTileCoordinates();
															Vector2 vector279 = Main.player[this.target].Center - base.Center;
															int num1955 = 20;
															int num1956 = 3;
															int num1957 = 8;
															int num1958 = 2;
															int num1959 = 0;
															bool flag183 = false;
															if (vector279.Length() > 2000f)
															{
																flag183 = true;
															}
															while (!flag183 && num1959 < 100)
															{
																num1959++;
																int num1960 = Main.rand.Next(point15.X - num1955, point15.X + num1955 + 1);
																int num1961 = Main.rand.Next(point15.Y - num1955, point15.Y + num1955 + 1);
																if ((num1961 < point15.Y - num1957 || num1961 > point15.Y + num1957 || num1960 < point15.X - num1957 || num1960 > point15.X + num1957) && (num1961 < point14.Y - num1956 || num1961 > point14.Y + num1956 || num1960 < point14.X - num1956 || num1960 > point14.X + num1956) && !Main.tile[num1960, num1961].nactive())
																{
																	bool flag184 = true;
																	if (flag184 && Main.tile[num1960, num1961].lava())
																	{
																		flag184 = false;
																	}
																	if (flag184 && Collision.SolidTiles(num1960 - num1958, num1960 + num1958, num1961 - num1958, num1961 + num1958))
																	{
																		flag184 = false;
																	}
																	if (flag184 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
																	{
																		flag184 = false;
																	}
																	if (flag184)
																	{
																		Projectile.NewProjectile((float)(num1960 * 16 + 8), (float)(num1961 * 16 + 8), 0f, 0f, 579, 0, 0f, Main.myPlayer, 0f, 0f);
																		break;
																	}
																}
															}
														}
													}
												}
												if (this.type == 517)
												{
													if (this.ai[1] > 0f)
													{
														this.ai[1] -= 1f;
													}
													if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 700f)
													{
														Vector2 vector280 = base.Top + new Vector2((float)(-(float)this.width) * 0.33f, -20f) + new Vector2((float)this.width * 0.66f, 20f) * Utils.RandomVector2(Main.rand, 0f, 1f);
														Vector2 velocity10 = -Vector2.UnitY.RotatedByRandom(0.78539818525314331) * (7f + Main.rand.NextFloat() * 5f);
														int num1963 = NPC.NewNPC((int)vector280.X, (int)vector280.Y, 519, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num1963].velocity = velocity10;
														Main.npc[num1963].netUpdate = true;
														this.ai[1] = 60f;
														return;
													}
												}
											}
											else if (this.aiStyle == 95)
											{
												float num1964 = 300f;
												if (this.velocity.Length() > 4f)
												{
													this.velocity *= 0.95f;
												}
												this.velocity *= 0.99f;
												this.ai[0] += 1f;
												this.scale = 1f + 0.3f * (this.ai[0] / num1964);
												if (this.ai[0] >= num1964)
												{
													if (Main.netMode != 1)
													{
														this.Transform(405);
													}
													return;
												}
												this.rotation += this.velocity.X * 0.1f;
												if (this.ai[0] > 20f)
												{
													return;
												}
											}
											else if (this.aiStyle == 96)
											{
												float num1970 = 5f;
												float moveSpeed = 0.15f;
												this.TargetClosest(true);
												Vector2 desiredVelocity4 = Main.player[this.target].Center - base.Center + new Vector2(0f, -250f);
												float num1971 = desiredVelocity4.Length();
												if (num1971 < 20f)
												{
													desiredVelocity4 = this.velocity;
												}
												else if (num1971 < 40f)
												{
													desiredVelocity4.Normalize();
													desiredVelocity4 *= num1970 * 0.35f;
												}
												else if (num1971 < 80f)
												{
													desiredVelocity4.Normalize();
													desiredVelocity4 *= num1970 * 0.65f;
												}
												else
												{
													desiredVelocity4.Normalize();
													desiredVelocity4 *= num1970;
												}
												this.SimpleFlyMovement(desiredVelocity4, moveSpeed);
												this.rotation = this.velocity.X * 0.1f;
												if ((this.ai[0] += 1f) >= 70f)
												{
													this.ai[0] = 0f;
													if (Main.netMode != 1)
													{
														Vector2 vector282 = Vector2.Zero;
														while (Math.Abs(vector282.X) < 1.5f)
														{
															vector282 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(5f, 3f);
														}
														Projectile.NewProjectile(base.Center.X, base.Center.Y, vector282.X, vector282.Y, 539, 60, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
														return;
													}
												}
											}
											else if (this.aiStyle == 97)
											{
												float num1972 = 7f;
												int num1973 = 480;
												if (this.localAI[2] < 180f)
												{
													this.localAI[2] += 1f;
													if (Main.netMode != 1 && this.localAI[2] % 60f == 0f)
													{
														Vector2 vector283 = Vector2.Zero;
														while (Math.Abs(vector283.X) < 1.5f)
														{
															vector283 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(4f, 2.5f);
														}
														Projectile.NewProjectile(base.Center.X, base.Center.Y, vector283.X, vector283.Y, 574, 0, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
													}
												}
												if (this.localAI[1] == 1f)
												{
													this.localAI[1] = 0f;
													if (Main.rand.Next(4) == 0)
													{
														this.ai[0] = (float)num1973;
													}
												}
												this.TargetClosest(true);
												this.rotation = Math.Abs(this.velocity.X) * (float)this.direction * 0.1f;
												this.spriteDirection = -this.direction;
												Vector2 value93 = base.Center + new Vector2((float)(this.direction * 20), 6f);
												Vector2 vector284 = Main.player[this.target].Center - value93;
												bool flag185 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
												bool flag186 = false;
												if (vector284.Length() > 400f || !flag185)
												{
													Vector2 value94 = vector284;
													if (value94.Length() > num1972)
													{
														value94.Normalize();
														value94 *= num1972;
													}
													int num1974 = 30;
													this.velocity = (this.velocity * (float)(num1974 - 1) + value94) / (float)num1974;
												}
												else
												{
													this.velocity *= 0.98f;
													flag186 = true;
												}
												if (this.ai[2] != 0f && this.ai[3] != 0f)
												{
													base.Center = new Vector2(this.ai[2] * 16f, this.ai[3] * 16f);
													this.velocity = Vector2.Zero;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
												}
												this.ai[0] += 1f;
												if (this.ai[0] >= (float)num1973 && Main.netMode != 1)
												{
													this.ai[0] = 0f;
													Point point16 = base.Center.ToTileCoordinates();
													Point point17 = Main.player[this.target].Center.ToTileCoordinates();
													int num1979 = 20;
													int num1980 = 3;
													int num1981 = 10;
													int num1982 = 1;
													int num1983 = 0;
													bool flag187 = false;
													if (vector284.Length() > 2000f)
													{
														flag187 = true;
													}
													while (!flag187 && num1983 < 100)
													{
														num1983++;
														int num1984 = Main.rand.Next(point17.X - num1979, point17.X + num1979 + 1);
														int num1985 = Main.rand.Next(point17.Y - num1979, point17.Y + num1979 + 1);
														if ((num1985 < point17.Y - num1981 || num1985 > point17.Y + num1981 || num1984 < point17.X - num1981 || num1984 > point17.X + num1981) && (num1985 < point16.Y - num1980 || num1985 > point16.Y + num1980 || num1984 < point16.X - num1980 || num1984 > point16.X + num1980) && !Main.tile[num1984, num1985].nactive())
														{
															bool flag188 = true;
															if (flag188 && Main.tile[num1984, num1985].lava())
															{
																flag188 = false;
															}
															if (flag188 && Collision.SolidTiles(num1984 - num1982, num1984 + num1982, num1985 - num1982, num1985 + num1982))
															{
																flag188 = false;
															}
															if (flag188)
															{
																this.ai[1] = 20f;
																this.ai[2] = (float)num1984;
																this.ai[3] = (float)num1985;
																break;
															}
														}
													}
													this.netUpdate = true;
												}
												if (flag186 && this.velocity.Length() < 2f && Main.netMode != 1)
												{
													this.localAI[0] += 1f;
													if (this.localAI[0] >= 13f)
													{
														return;
													}
												}
											}
											else if (this.aiStyle == 98)
											{
												this.noTileCollide = false;
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(true);
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
												}
												bool flag189 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].position, 1, 1);
												bool flag190 = true;
												if (!flag189 || Main.player[this.target].dead)
												{
													flag190 = false;
												}
												else
												{
													int num1986 = (int)(Main.player[this.target].Center.X / 16f);
													int num1987 = (int)(Main.player[this.target].Center.Y / 16f);
													for (int num1988 = num1986 - 2; num1988 <= num1986 + 2; num1988++)
													{
														for (int num1989 = num1987; num1989 <= num1987 + 25; num1989++)
														{
															if (WorldGen.SolidTile2(num1988, num1989))
															{
																flag190 = false;
															}
														}
													}
												}
												if (this.ai[0] < 0f)
												{
													Vector2 vector285 = Main.player[this.target].Center - base.Center;
													float num1990 = vector285.Length();
													if (this.ai[0] == -1f)
													{
														vector285.Normalize();
														if (vector285.HasNaNs())
														{
															vector285 = new Vector2((float)this.direction, 0f);
														}
														float num1991 = 8f + num1990 / 100f;
														float num1992 = 12f;
														if (Main.player[this.target].velocity.Length() > num1992)
														{
															num1992 = Main.player[this.target].velocity.Length();
														}
														if (num1991 > num1992)
														{
															num1991 = num1992;
														}
														vector285 *= num1991;
														float num1993 = 10f;
														this.velocity = (this.velocity * (num1993 - 1f) + vector285) / num1993;
														for (int num1994 = 0; num1994 < 200; num1994++)
														{
															if (Main.npc[num1994].active && Main.npc[num1994].type == this.type && num1994 != this.whoAmI)
															{
																Vector2 value95 = Main.npc[num1994].Center - base.Center;
																if (value95.Length() < 40f)
																{
																	value95.Normalize();
																	value95 *= 1f;
																	this.velocity -= value95;
																}
															}
														}
														this.rotation += this.velocity.X * 0.03f;
														if ((double)this.rotation < -6.2831)
														{
															this.rotation += 6.2831f;
														}
														if ((double)this.rotation > 6.2831)
														{
															this.rotation -= 6.2831f;
														}
														if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														else if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														this.spriteDirection = this.direction;
													}
													this.ai[1] += 1f;
													if (this.ai[1] >= 60f && !flag190)
													{
														this.ai[0] = 0f;
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.rotation *= 0.92f;
													if ((double)Math.Abs(this.rotation) < 0.02)
													{
														this.rotation = 0f;
													}
													int num1995 = 300;
													float num1996 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
													if (num1996 < (float)num1995 && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].position, 1, 1))
													{
														this.velocity.X = this.velocity.X * 0.96f;
														this.velocity.Y = this.velocity.Y * 0.96f;
														this.ai[1] += 1f;
														if (this.ai[1] == 20f)
														{
															if (Main.netMode != 1)
															{
																NPC.NewNPC((int)base.Center.X, (int)base.Center.Y + 26, 516, 0, 0f, 0f, 0f, 0f, this.target);
															}
														}
														else if (this.ai[1] >= 30f)
														{
															this.ai[1] = 0f;
														}
														for (int num1997 = 0; num1997 < 200; num1997++)
														{
															if (Main.npc[num1997].active && Main.npc[num1997].type == this.type && num1997 != this.whoAmI)
															{
																Vector2 value96 = Main.npc[num1997].Center - base.Center;
																if (value96.Length() < 100f)
																{
																	value96.Normalize();
																	value96 *= 0.1f;
																	this.velocity -= value96;
																}
															}
														}
													}
													else
													{
														this.ai[0] = 0f;
													}
													if (Main.player[this.target].Center.X < base.Center.X)
													{
														this.direction = -1;
													}
													else if (Main.player[this.target].Center.X > base.Center.X)
													{
														this.direction = 1;
													}
													this.spriteDirection = this.direction;
												}
												if (this.ai[0] == 1f)
												{
													this.rotation *= 0.92f;
													if ((double)Math.Abs(this.rotation) < 0.02)
													{
														this.rotation = 0f;
													}
													if (flag190)
													{
														this.ai[0] = -1f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
													}
													int num1998 = 300;
													for (int num1999 = 0; num1999 < 200; num1999++)
													{
														if (Main.npc[num1999].active && Main.npc[num1999].type == this.type && num1999 != this.whoAmI)
														{
															Vector2 value97 = Main.npc[num1999].Center - base.Center;
															if (value97.Length() < 50f)
															{
																value97.Normalize();
																value97 *= 0.1f;
																this.velocity -= value97;
																this.velocity.X = this.velocity.X - value97.X * 1f;
															}
														}
													}
													int num2000 = 800;
													float num2001 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
													if (num2001 < (float)num1998 && flag189)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
													}
													else
													{
														if (this.collideX)
														{
															this.velocity.X = this.velocity.X * -0.5f;
															this.ai[1] = 60f;
															this.direction *= -1;
														}
														if (this.ai[1] > 0f)
														{
															this.ai[1] -= 1f;
														}
														else if (flag189)
														{
															if (base.Center.X > Main.player[this.target].Center.X)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
														}
														else if (num2001 > (float)num2000)
														{
															if (base.Center.X > Main.player[this.target].Center.X)
															{
																this.direction = -1;
															}
															else
															{
																this.direction = 1;
															}
														}
														float num2002 = 2f;
														float num2003 = 0.1f;
														if (this.velocity.X > num2002 || this.velocity.X < -num2002)
														{
															if (Math.Abs(this.velocity.X) < num2002 + num2003 * 2f)
															{
																if (this.velocity.X < 0f)
																{
																	this.velocity.X = -num2002;
																}
																else
																{
																	this.velocity.X = num2002;
																}
															}
															else
															{
																this.velocity.X = this.velocity.X * 0.99f;
															}
														}
														else
														{
															this.velocity.X = this.velocity.X + (float)this.direction * num2003;
														}
														this.spriteDirection = this.direction;
													}
													if (this.collideY)
													{
														this.ai[2] = 60f;
														this.directionY *= -1;
														this.velocity.Y = this.velocity.Y * -0.5f;
													}
													if (this.ai[2] > 0f)
													{
														this.ai[2] -= 1f;
													}
													else
													{
														int num2004 = (int)(base.Center.Y / 16f);
														int num2005 = (int)((base.Center.X - 8f) / 16f);
														int num2006 = 30;
														int num2007 = 15;
														int num2008 = 0;
														for (int num2009 = num2004; num2009 < num2004 + num2006; num2009++)
														{
															for (int num2010 = num2005; num2010 <= num2005 + 1; num2010++)
															{
																if (WorldGen.SolidTile(num2010, num2009) || Main.tile[num2010, num2009].liquid > 0)
																{
																	num2008 = num2009 - num2004;
																	break;
																}
															}
															if (num2008 != 0)
															{
																break;
															}
														}
														if (num2008 == 0)
														{
															this.directionY = 1;
														}
														else if (num2008 < num2007)
														{
															this.directionY = -1;
														}
													}
													float num2011 = 2f;
													float num2012 = 0.1f;
													if (this.velocity.Y <= num2011 && this.velocity.Y >= -num2011)
													{
														this.velocity.Y = this.velocity.Y + (float)this.directionY * num2012;
														return;
													}
													if (Math.Abs(this.velocity.Y) >= num2011 + num2012 * 2f)
													{
														this.velocity.Y = this.velocity.Y * 0.99f;
														return;
													}
													if (this.velocity.Y < 0f)
													{
														this.velocity.Y = -num2011;
														return;
													}
													this.velocity.Y = num2011;
													return;
												}
											}
											else if (this.aiStyle == 99)
											{
												if (this.velocity.Y == 0f && this.ai[0] == 0f)
												{
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													this.netUpdate = true;
													return;
												}
												if (this.ai[0] == 1f)
												{
													this.velocity = Vector2.Zero;
													this.position = this.oldPosition;
													this.ai[1] += 1f;
													if (this.ai[1] >= 5f)
													{
														this.HitEffect(0, 9999.0);
														this.active = false;
													}
													return;
												}
												this.velocity.Y = this.velocity.Y + 0.2f;
												if (this.velocity.Y > 12f)
												{
													this.velocity.Y = 12f;
												}
												this.rotation = this.velocity.ToRotation() - 1.57079637f;
												if (this.type == 519)
												{
													if (this.localAI[0] == 0f)
													{
														this.localAI[0] = 1f;
													}
													return;
												}
											}
											else if (this.aiStyle == 100)
											{
												if (this.velocity.Y == 0f && this.ai[0] >= 0f)
												{
													this.ai[0] = -1f;
													this.ai[1] = 0f;
													this.netUpdate = true;
													return;
												}
												if (this.ai[0] == -1f)
												{
													this.velocity = Vector2.Zero;
													this.position = this.oldPosition;
													this.ai[1] += 1f;
													if (this.ai[1] >= 5f)
													{
														this.HitEffect(0, 9999.0);
														this.active = false;
													}
													return;
												}
												this.rotation = this.velocity.ToRotation() - 1.57079637f;
												if (this.type == 522)
												{
													if (this.localAI[0] == 0f)
													{
														this.localAI[0] = 1f;
														this.velocity.X = this.ai[2];
														this.velocity.Y = this.ai[3];
													}
													this.dontTakeDamage = (this.ai[0] >= 0f && this.ai[0] <= 20f);
													if (this.ai[0] >= 0f)
													{
														this.ai[0] += 1f;
														if (this.ai[0] > 60f)
														{
															this.velocity = this.velocity.RotatedBy((double)this.ai[1], default(Vector2));
														}
														if (this.ai[0] > 120f)
														{
															this.velocity *= 0.98f;
														}
														if (this.velocity.Length() < 0.2f)
														{
															this.velocity = Vector2.Zero;
															return;
														}
													}
												}
											}
											else if (this.aiStyle == 101)
											{
												float num2021 = 420f;
												float num2022 = 120f;
												int num2023 = 1;
												float value98 = 0f;
												float value99 = 1f;
												float num2024 = 4f;
												bool flag191 = this.ai[1] < 0f || !Main.npc[(int)this.ai[0]].active;
												if (Main.npc[(int)this.ai[0]].type == 439)
												{
													if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 2)
													{
														num2023 = 2;
													}
													if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 4)
													{
														num2023 = 3;
													}
												}
												else
												{
													flag191 = true;
												}
												this.ai[1] += (float)num2023;
												float num2025 = this.ai[1] / num2022;
												num2025 = MathHelper.Clamp(num2025, 0f, 1f);
												this.position = base.Center;
												this.scale = MathHelper.Lerp(value98, value99, num2025);
												base.Center = this.position;
												this.alpha = (int)(255f - num2025 * 255f);

												this.localAI[0] += 0.05235988f;
												this.localAI[1] = 0.25f + Vector2.UnitY.RotatedBy((double)(this.ai[1] * 6.28318548f / 60f), default(Vector2)).Y * 0.25f;
												if (this.ai[1] >= num2021)
												{
													flag191 = true;
													if (Main.netMode != 1)
													{
														for (int num2026 = 0; num2026 < 4; num2026++)
														{
															Vector2 vector287 = new Vector2(0f, -num2024).RotatedBy((double)(1.57079637f * (float)num2026), default(Vector2));
															Projectile.NewProjectile(base.Center.X, base.Center.Y, vector287.X, vector287.Y, 593, this.damage, 0f, Main.myPlayer, 0f, 0f);
														}
													}
												}
												if (flag191)
												{
													this.HitEffect(0, 9999.0);
													this.active = false;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		public void ReflectProjectiles(Rectangle myRect)
		{
			for (int i = 0; i < 1000; i++)
			{
				if (Main.projectile[i].active && Main.projectile[i].CanReflect())
				{
					Rectangle hitbox = Main.projectile[i].Hitbox;
					if (myRect.Intersects(hitbox))
					{
						this.ReflectProjectile(i);
					}
				}
			}
		}
		public void ReflectProjectile(int i)
		{
			Main.projectile[i].hostile = true;
			Main.projectile[i].friendly = false;
			Vector2 vector = Main.player[Main.projectile[i].owner].Center - Main.projectile[i].Center;
			vector.Normalize();
			vector *= Main.projectile[i].oldVelocity.Length();
			Main.projectile[i].velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
			Main.projectile[i].velocity.Normalize();
			Main.projectile[i].velocity *= vector.Length();
			Main.projectile[i].velocity += vector * 20f;
			Main.projectile[i].velocity.Normalize();
			Main.projectile[i].velocity *= vector.Length();
			Main.projectile[i].damage /= 2;
			Main.projectile[i].penetrate = 1;
		}
		public int GetShootingFrame(float circleY)
		{
			int num = -4;
			if (circleY < -0.3f)
			{
				num = 1;
			}
			if (circleY < -0.1f)
			{
				num = 0;
			}
			if (circleY > 0.1f)
			{
				num = 2;
			}
			if (circleY > 0.3f)
			{
				num = 3;
			}
			if (this.type == 228 || this.type == 229 || this.type == 209 || this.type == 22 || this.type == 368)
			{
				if (num == -4)
				{
					num = 1;
				}
				if (circleY >= -0.1f)
				{
					num++;
				}
			}
			return num;
		}
		public Tuple<Vector2, float> GetSwingStats(int swingMax, int swingCurrent, int aimDir, int itemWidth, int itemHeight)
		{
			Vector2 zero = Vector2.Zero;
			if ((double)swingCurrent < (double)swingMax * 0.333)
			{
				float num = 10f;
				if (itemWidth > 32)
				{
					num = 14f;
				}
				if (itemWidth >= 52)
				{
					num = 24f;
				}
				if (itemWidth >= 64)
				{
					num = 28f;
				}
				if (itemWidth >= 92)
				{
					num = 38f;
				}
				zero.X = base.Center.X + ((float)itemWidth * 0.5f - num) * (float)aimDir;
				zero.Y = this.position.Y + 24f;
			}
			else if ((double)swingCurrent < (double)swingMax * 0.666)
			{
				float num2 = 10f;
				if (itemWidth > 32)
				{
					num2 = 18f;
				}
				if (itemWidth >= 52)
				{
					num2 = 24f;
				}
				if (itemWidth >= 64)
				{
					num2 = 28f;
				}
				if (itemWidth >= 92)
				{
					num2 = 38f;
				}
				zero.X = base.Center.X + ((float)itemWidth * 0.5f - num2) * (float)aimDir;
				num2 = 10f;
				if (itemHeight > 32)
				{
					num2 = 8f;
				}
				if (itemHeight > 52)
				{
					num2 = 12f;
				}
				if (itemHeight > 64)
				{
					num2 = 14f;
				}
				zero.Y = this.position.Y + num2;
			}
			else
			{
				float num3 = 6f;
				if (itemWidth > 32)
				{
					num3 = 14f;
				}
				if (itemWidth >= 48)
				{
					num3 = 18f;
				}
				if (itemWidth >= 52)
				{
					num3 = 24f;
				}
				if (itemWidth >= 64)
				{
					num3 = 28f;
				}
				if (itemWidth >= 92)
				{
					num3 = 38f;
				}
				zero.X = base.Center.X - ((float)itemWidth * 0.5f - num3) * (float)aimDir;
				num3 = 10f;
				if (itemHeight > 32)
				{
					num3 = 10f;
				}
				if (itemHeight > 52)
				{
					num3 = 12f;
				}
				if (itemHeight > 64)
				{
					num3 = 14f;
				}
				zero.Y = this.position.Y + num3;
			}
			float item = ((float)swingCurrent / (float)swingMax - 0.5f) * (float)(-(float)aimDir) * 3.5f - (float)aimDir * 0.3f;
			return Tuple.Create<Vector2, float>(zero, item);
		}
		public void TweakSwingStats(int swingMax, int swingCurrent, int aimDir, ref Rectangle itemRectangle)
		{
			if ((double)swingCurrent < (double)swingMax * 0.333)
			{
				if (aimDir == -1)
				{
					itemRectangle.X -= (int)((double)itemRectangle.Width * 1.4 - (double)itemRectangle.Width);
				}
				itemRectangle.Width = (int)((double)itemRectangle.Width * 1.4);
				itemRectangle.Y += (int)((double)itemRectangle.Height * 0.5);
				itemRectangle.Height = (int)((double)itemRectangle.Height * 1.1);
				return;
			}
			if ((double)swingCurrent < (double)swingMax * 0.666)
			{
				return;
			}
			if (aimDir == 1)
			{
				itemRectangle.X -= (int)((double)itemRectangle.Width * 1.2);
			}
			itemRectangle.Width *= 2;
			itemRectangle.Y -= (int)((double)itemRectangle.Height * 1.4 - (double)itemRectangle.Height);
			itemRectangle.Height = (int)((double)itemRectangle.Height * 1.4);
		}
		public void FindFrame()
		{
			int num = 1;
			//we are dedServ. Fear us.
			/*if (!Main.dedServ)
			{
				if (!Main.NPCLoaded[this.type] || Main.npcTexture[this.type] == null)
				{
					return;
				}
				num = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
			}*/
			int num2 = 0;
			if (this.aiAction == 0)
			{
				if (this.velocity.Y < 0f)
				{
					num2 = 2;
				}
				else if (this.velocity.Y > 0f)
				{
					num2 = 3;
				}
				else if (this.velocity.X != 0f)
				{
					num2 = 1;
				}
				else
				{
					num2 = 0;
				}
			}
			else if (this.aiAction == 1)
			{
				num2 = 4;
			}
			if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 17 || this.type == 18 || this.type == 19 || this.type == 20 || this.type == 22 || this.type == 142 || this.type == 353 || this.type == 178 || this.type == 38 || this.type == 26 || this.type == 27 || this.type == 28 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 21 || this.type == 44 || this.type == 54 || this.type == 37 || this.type == 73 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 104 || this.type == 107 || this.type == 108 || this.type == 120 || this.type == 124 || this.type == 140 || this.type == 159 || this.type == 160 || this.type == 167 || this.type == 181 || this.type == 185 || this.type == 196 || this.type == 197 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 207 || this.type == 208 || this.type == 209 || this.type == 212 || this.type == 213 || this.type == 227 || this.type == 228 || this.type == 229 || this.type == 287 || (this.type >= 310 && this.type <= 314) || (this.type >= 322 && this.type <= 324) || this.type == 326 || this.type == 368 || this.type == 369 || this.type == 453 || this.type == 460 || this.type == 462 || this.type == 463 || this.type == 489 || this.type == 441 || this.type == 534)
			{
				int num3 = (this.townNPC || this.type == 453) ? NPCID.Sets.ExtraFramesCount[this.type] : 0;
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					int num4 = Main.npcFrameCount[this.type] - NPCID.Sets.AttackFrameCount[this.type];
					if (this.ai[0] == 2f)
					{
						this.frameCounter += 1.0;
						if (this.frame.Y / num == num4 - 1 && this.frameCounter >= 5.0)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						else if (this.frame.Y / num == 0 && this.frameCounter >= 40.0)
						{
							this.frame.Y = num * (num4 - 1);
							this.frameCounter = 0.0;
						}
						else if (this.frame.Y != 0 && this.frame.Y != num * (num4 - 1))
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 11f)
					{
						this.frameCounter += 1.0;
						if (this.frame.Y / num == num4 - 1 && this.frameCounter >= 20.0)
						{
							if (this.frameCounter == 20.0)
							{
							}
							if (this.frameCounter >= 40.0 && Main.rand.Next(20) == 0)
							{
								this.frame.Y = 0;
								this.frameCounter = 0.0;
							}
						}
						else if (this.frame.Y / num == 0 && this.frameCounter >= 20.0)
						{
							this.frame.Y = num * (num4 - 1);
							this.frameCounter = 0.0;
							if (Main.netMode != 1)
							{
								EmoteBubble.NewBubble(89, new WorldUIAnchor(this), 30);
							}
						}
						else if (this.frame.Y != 0 && this.frame.Y != num * (num4 - 1))
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 5f)
					{
						this.frame.Y = num * (num4 - 3);
						this.frameCounter = 0.0;
					}
					else if (this.ai[0] == 6f)
					{
						this.frameCounter += 1.0;
						int num8 = this.frame.Y / num;
						switch (num4 - num8)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								goto IL_97D;
							case 3:
								if (num8 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
									goto IL_97D;
								}
								goto IL_97D;
							default:
								goto case 3;
						}
						IL_97D:
						int num9;
						if (this.frameCounter < 10.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 46.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 60.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 66.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 72.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 102.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 108.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 114.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 120.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 150.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 156.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 162.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 168.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 198.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 204.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 210.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 216.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 246.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 252.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 258.0)
						{
							num9 = 0;
						}
						else if (this.frameCounter < 264.0)
						{
							num9 = num4 - 5;
						}
						else if (this.frameCounter < 294.0)
						{
							num9 = num4 - 4;
						}
						else if (this.frameCounter < 300.0)
						{
							num9 = num4 - 5;
						}
						else
						{
							num9 = 0;
						}
						this.frame.Y = num * num9;
						if (this.frameCounter >= 300.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 7f)
					{
						this.frameCounter += 1.0;
						int num12 = this.frame.Y / num;
						switch (num4 - num12)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								goto IL_DC7;
							case 3:
								if (num12 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
									goto IL_DC7;
								}
								goto IL_DC7;
							default:
								goto case 3;
						}
						IL_DC7:
						int num13 = 0;
						if (this.frameCounter < 16.0)
						{
							num13 = 0;
						}
						else if (this.frameCounter == 16.0 && Main.netMode != 1)
						{
							EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), 112, null);
						}
						else if (this.frameCounter < 128.0)
						{
							num13 = ((this.frameCounter % 16.0 < 8.0) ? (num4 - 2) : 0);
						}
						else if (this.frameCounter < 160.0)
						{
							num13 = 0;
						}
						else if (this.frameCounter == 160.0 && Main.netMode != 1)
						{
							EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), 60, null);
						}
						else if (this.frameCounter < 220.0)
						{
							num13 = ((this.frameCounter % 12.0 < 6.0) ? (num4 - 2) : 0);
						}
						else
						{
							num13 = 0;
						}
						this.frame.Y = num * num13;
						if (this.frameCounter >= 220.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 9f)
					{
						this.frameCounter += 1.0;
						int num14 = this.frame.Y / num;
						switch (num4 - num14)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								goto IL_F6F;
							case 3:
								if (num14 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
									goto IL_F6F;
								}
								goto IL_F6F;
							default:
								goto case 3;
						}
						IL_F6F:
						int num15;
						if (this.frameCounter < 10.0)
						{
							num15 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num15 = num4 - 5;
						}
						else
						{
							num15 = num4 - 4;
						}
						if (this.ai[1] < 16f)
						{
							num15 = num4 - 5;
						}
						if (this.ai[1] < 10f)
						{
							num15 = 0;
						}
						this.frame.Y = num * num15;
					}
					else if (this.ai[0] == 10f || this.ai[0] == 13f)
					{
						this.frameCounter += 1.0;
						int num16 = this.frame.Y / num;
						switch (num16 - num4)
						{
						case 0:
						case 1:
						case 2:
						case 3:
							break;
						default:
							if (num16 != 0)
							{
								this.frame.Y = 0;
								this.frameCounter = 0.0;
							}
							break;
						}
						int num17 = 10;
						int num18 = 6;
						int num19;
						if (this.frameCounter < (double)num17)
						{
							num19 = 0;
						}
						else if (this.frameCounter < (double)(num17 + num18))
						{
							num19 = num4;
						}
						else if (this.frameCounter < (double)(num17 + num18 * 2))
						{
							num19 = num4 + 1;
						}
						else if (this.frameCounter < (double)(num17 + num18 * 3))
						{
							num19 = num4 + 2;
						}
						else if (this.frameCounter < (double)(num17 + num18 * 4))
						{
							num19 = num4 + 3;
						}
						else
						{
							num19 = 0;
						}
						this.frame.Y = num * num19;
					}
					else if (this.ai[0] == 15f)
					{
						this.frameCounter += 1.0;
						int num20 = this.frame.Y / num;
						switch (num20 - num4)
						{
						case 0:
						case 1:
						case 2:
						case 3:
							break;
						default:
							if (num20 != 0)
							{
								this.frame.Y = 0;
								this.frameCounter = 0.0;
							}
							break;
						}
						float num21 = this.ai[1] / (float)NPCID.Sets.AttackTime[this.type];
						int num22;
						if (num21 > 0.65f)
						{
							num22 = num4;
						}
						else if (num21 > 0.5f)
						{
							num22 = num4 + 1;
						}
						else if (num21 > 0.35f)
						{
							num22 = num4 + 2;
						}
						else if (num21 > 0f)
						{
							num22 = num4 + 3;
						}
						else
						{
							num22 = 0;
						}
						this.frame.Y = num * num22;
					}
					else if (this.ai[0] == 12f)
					{
						this.frameCounter += 1.0;
						int num23 = this.frame.Y / num;
						switch (num23 - num4)
						{
						case 0:
						case 1:
						case 2:
						case 3:
						case 4:
							break;
						default:
							if (num23 != 0)
							{
								this.frame.Y = 0;
								this.frameCounter = 0.0;
							}
							break;
						}
						int num24 = num4 + this.GetShootingFrame(this.ai[2]);
						this.frame.Y = num * num24;
					}
					else if (this.ai[0] == 14f)
					{
						this.frameCounter += 1.0;
						int num25 = this.frame.Y / num;
						switch (num25 - num4)
						{
						case 0:
						case 1:
							break;
						default:
							if (num25 != 0)
							{
								this.frame.Y = 0;
								this.frameCounter = 0.0;
							}
							break;
						}
						int num26 = 12;
						int num27 = (this.frameCounter % (double)num26 * 2.0 < (double)num26) ? num4 : (num4 + 1);
						this.frame.Y = num * num27;
					}
					else if (this.ai[0] == 3f || this.ai[0] == 4f)
					{
						this.frameCounter += 1.0;
						int num28 = this.frame.Y / num;
						switch (num4 - num28)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								goto IL_1396;
							case 3:
								if (num28 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
									goto IL_1396;
								}
								goto IL_1396;
							default:
								goto case 3;
						}
						IL_1396:
						bool flag = this.ai[0] == 3f;
						int num29 = 0;
						int num30 = 0;
						int num31 = -1;
						int num32 = -1;
						if (this.frameCounter < 10.0)
						{
							num29 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num29 = num4 - 5;
						}
						else if (this.frameCounter < 46.0)
						{
							num29 = num4 - 4;
						}
						else if (this.frameCounter < 60.0)
						{
							num29 = num4 - 5;
						}
						else if (this.frameCounter < 216.0)
						{
							num29 = 0;
						}
						else if (this.frameCounter == 216.0 && Main.netMode != 1)
						{
							num31 = 70;
						}
						else if (this.frameCounter < 286.0)
						{
							num29 = ((this.frameCounter % 12.0 < 6.0) ? (num4 - 2) : 0);
						}
						else if (this.frameCounter < 320.0)
						{
							num29 = 0;
						}
						else if (this.frameCounter == 320.0 && Main.netMode != 1)
						{
							num31 = 100;
						}
						else if (this.frameCounter < 420.0)
						{
							num29 = ((this.frameCounter % 16.0 < 8.0) ? (num4 - 2) : 0);
						}
						else
						{
							num29 = 0;
						}
						if (this.frameCounter < 70.0)
						{
							num30 = 0;
						}
						else if (this.frameCounter == 70.0 && Main.netMode != 1)
						{
							num32 = 90;
						}
						else if (this.frameCounter < 160.0)
						{
							num30 = ((this.frameCounter % 16.0 < 8.0) ? (num4 - 2) : 0);
						}
						else if (this.frameCounter < 166.0)
						{
							num30 = num4 - 5;
						}
						else if (this.frameCounter < 186.0)
						{
							num30 = num4 - 4;
						}
						else if (this.frameCounter < 200.0)
						{
							num30 = num4 - 5;
						}
						else if (this.frameCounter < 320.0)
						{
							num30 = 0;
						}
						else if (this.frameCounter < 326.0)
						{
							num30 = num4 - 1;
						}
						else
						{
							num30 = 0;
						}
						if (flag)
						{
							if (num31 != -1)
							{
								EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), num31, new WorldUIAnchor(Main.npc[(int)this.ai[2]]));
							}
							if (num32 != -1)
							{
								EmoteBubble.NewBubbleNPC(new WorldUIAnchor(Main.npc[(int)this.ai[2]]), num32, new WorldUIAnchor(this));
							}
						}
						this.frame.Y = num * (flag ? num29 : num30);
						if (this.frameCounter >= 420.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.ai[0] == 16f || this.ai[0] == 17f)
					{
						this.frameCounter += 1.0;
						int num33 = this.frame.Y / num;
						switch (num4 - num33)
						{
							case 1:
							case 2:
							case 4:
							case 5:
								goto IL_16FF;
							case 3:
								if (num33 != 0)
								{
									this.frame.Y = 0;
									this.frameCounter = 0.0;
									goto IL_16FF;
								}
								goto IL_16FF;
							default:
								goto case 3;
						}
						IL_16FF:
						bool flag2 = this.ai[0] == 16f;
						int num34 = 0;
						int num35 = -1;
						if (this.frameCounter < 10.0)
						{
							num34 = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 22.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 28.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 34.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 40.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter == 40.0 && Main.netMode != 1)
						{
							num35 = 45;
						}
						else if (this.frameCounter < 70.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 76.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 82.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 88.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 94.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 100.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter == 100.0 && Main.netMode != 1)
						{
							num35 = 45;
						}
						else if (this.frameCounter < 130.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 136.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 142.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 148.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter < 154.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 160.0)
						{
							num34 = num4 - 5;
						}
						else if (this.frameCounter == 160.0 && Main.netMode != 1)
						{
							num35 = 75;
						}
						else if (this.frameCounter < 220.0)
						{
							num34 = num4 - 4;
						}
						else if (this.frameCounter < 226.0)
						{
							num34 = num4 - 5;
						}
						else
						{
							num34 = 0;
						}
						if (flag2 && num35 != -1)
						{
							int num36 = (int)this.localAI[2];
							int num37 = (int)this.localAI[3];
							int num38 = (int)Main.npc[(int)this.ai[2]].localAI[3];
							int num39 = (int)Main.npc[(int)this.ai[2]].localAI[2];
							int num40 = 3 - num36 - num37;
							int num41 = 0;
							if (this.frameCounter == 40.0)
							{
								num41 = 1;
							}
							if (this.frameCounter == 100.0)
							{
								num41 = 2;
							}
							if (this.frameCounter == 160.0)
							{
								num41 = 3;
							}
							int num42 = 3 - num41;
							int num43 = -1;
							int num44 = 0;
							while (num43 < 0 && ++num44 < 100)
							{
								num43 = Main.rand.Next(2);
								if (num43 == 0 && num39 >= num37)
								{
									num43 = -1;
								}
								if (num43 == 1 && num38 >= num36)
								{
									num43 = -1;
								}
								if (num43 == -1 && num42 <= num40)
								{
									num43 = 2;
								}
							}
							if (num43 == 0)
							{
								Main.npc[(int)this.ai[2]].localAI[3] += 1f;
								num38++;
							}
							if (num43 == 1)
							{
								Main.npc[(int)this.ai[2]].localAI[2] += 1f;
								num39++;
							}
							int num45 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								38,
								37,
								36
							});
							int num46 = num45;
							if (num43 == 0)
							{
								switch (num45)
								{
								case 36:
									num46 = 38;
									break;
								case 37:
									num46 = 36;
									break;
								case 38:
									num46 = 37;
									break;
								}
							}
							else if (num43 == 1)
							{
								switch (num45)
								{
								case 36:
									num46 = 37;
									break;
								case 37:
									num46 = 38;
									break;
								case 38:
									num46 = 36;
									break;
								}
							}
							if (num42 == 0)
							{
								if (num38 >= 2)
								{
									num45 -= 3;
								}
								if (num39 >= 2)
								{
									num46 -= 3;
								}
							}
							EmoteBubble.NewBubble(num45, new WorldUIAnchor(this), num35);
							EmoteBubble.NewBubble(num46, new WorldUIAnchor(Main.npc[(int)this.ai[2]]), num35);
						}
						this.frame.Y = num * (flag2 ? num34 : num34);
						if (this.frameCounter >= 420.0)
						{
							this.frameCounter = 0.0;
						}
					}
					else if (this.velocity.X == 0f)
					{
						if (this.type == 140 || this.type == 287 || this.type == 489)
						{
							this.frame.Y = num;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else
					{
						int num47 = 6;
						if (this.type == 534)
						{
							num47 = 12;
						}
						if (this.type == 489)
						{
							num47 = 8;
							this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
							this.frameCounter += 0.5;
						}
						else
						{
							this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
							this.frameCounter += 1.0;
						}
						if (this.type == 462)
						{
							num47 = 9;
						}
						if (this.frameCounter > (double)num47)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - num3)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else if (this.type == 462)
				{
					this.frameCounter = 0.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					if (this.type == 489 || this.type == 21 || this.type == 31 || this.type == 294 || this.type == 326 || this.type == 295 || this.type == 296 || this.type == 44 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 120 || this.type == 140 || this.type == 159 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || (this.type >= 322 && this.type <= 324))
					{
						this.frame.Y = 0;
					}
					if (this.type == 181)
					{
						this.frame.Y = num * 14;
					}
				}
			}
			if (this.type >= 494 && this.type <= 495)
			{
				if (this.ai[2] > 0f)
				{
					if (this.ai[2] < 7f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[2] < 14f)
					{
						this.frame.Y = num * 6;
					}
					else if (this.ai[2] < 20f)
					{
						this.frame.Y = num * 7;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						if (this.velocity.Y < 0f)
						{
							this.frame.Y = num * 2;
						}
						else
						{
							this.frame.Y = num * 3;
						}
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8.0)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							this.frame.Y = num;
						}
						else if (this.frameCounter < 24.0)
						{
							this.frame.Y = num * 2;
						}
						else if (this.frameCounter < 32.0)
						{
							this.frame.Y = num * 3;
						}
						else if (this.frameCounter < 39.0)
						{
							this.frame.Y = num * 4;
						}
						else
						{
							this.frame.Y = num * 4;
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type >= 498 && this.type <= 506)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						if (this.ai[1] < 12f)
						{
							this.frame.Y = num * 8;
						}
						else if (this.ai[1] < 34f)
						{
							this.frame.Y = num * 9;
						}
						else
						{
							this.frame.Y = num * 8;
						}
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if (this.frameCounter > 4.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 10;
				}
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						this.frameCounter += 1.0;
						if (this.frameCounter > 9.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						this.frameCounter += 1.0;
						if (this.frameCounter > 9.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = num;
						}
					}
				}
				else
				{
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 533)
			{
				if (this.velocity.Y == 0f && this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 48.0)
				{
					this.frameCounter = 0.0;
				}
				this.frame.Y = (int)(this.frameCounter / 6.0) * num;
				if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + num * 8;
				}
			}
			if (this.type >= 496 && this.type <= 497)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 10;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 11;
					}
					else
					{
						this.frame.Y = num * 3;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 7;
				}
			}
			else if (this.aiStyle == 39 && this.type != 417)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 7;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 5;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 7;
				}
			}
			else if (this.type == 508 || this.type == 532)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.direction < 0 && this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					if (this.direction > 0 && this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
					}
				}
			}
			else if (this.type == 509)
			{
				if ((this.velocity.X > 0f && this.direction > 0) || (this.velocity.X < 0f && this.direction < 0))
				{
					this.spriteDirection = this.direction;
				}
				if ((this.frameCounter += 1.0) >= 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 415)
			{
				if (this.ai[2] < 0f)
				{
					if (this.frame.Y / num != 8 && this.frame.Y / num != 9 && this.frame.Y / num != 0)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					int num48 = 0;
					int num49 = 18;
					int num50 = 4;
					if (this.frameCounter > (double)(num49 - num50 * 2))
					{
						num48 = 8 + (int)this.frameCounter / 4 % 2;
					}
					if (this.frameCounter > (double)(num49 + num50 * 6))
					{
						num48 = 0;
						this.frameCounter = 0.0;
					}
					this.frame.Y = num * num48;
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 416)
			{
				int num51 = (int)this.ai[0];
				//No textures because WE. ARE. DEDSERV.
				/*if (Main.npc[num51].active && Main.npc[num51].type == 415 && Main.npcTexture[415] != null)
				{
					this.frame.Y = Main.npc[num51].frame.Y / (Main.npcTexture[415].Height / Main.npcFrameCount[415]) * num;
				}*/
			}
			else if (this.type == 417)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					this.frame.Y = (int)(this.frameCounter / 6.0) * num;
					if (this.frameCounter >= 48.0)
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (9 + (int)(this.ai[1] / 6f));
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (13 - (int)(this.ai[1] / 6f));
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 14;
				}
			}
			else if (this.type == 518)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 419)
			{
				if (this.ai[2] < 0f)
				{
					int num52 = 1;
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.frame.Y / num >= 9)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= (double)(num52 * 4 + 6))
					{
						this.frameCounter = 8.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * (int)(2.0 + this.frameCounter / 3.0);
					}
					else
					{
						this.frame.Y = num * (int)(4.0 + (this.frameCounter - 6.0) / (double)num52);
					}
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 9;
						}
						if (this.frame.Y / num < 9)
						{
							this.frame.Y = num * 9;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 425)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = -this.direction;
				}
				if (this.ai[2] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 12 || this.frame.Y < num * 10)
					{
						this.frame.Y = num * 10;
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 9 || this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
				}
			}
			else if (this.type == 427)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y != 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 9 || this.frame.Y < num * 6)
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5 || this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 426)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				if (this.ai[1] >= 45f)
				{
					if (this.velocity.Y == 0f)
					{
						this.frame.Y = num * 8;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter >= 2.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y >= num * 15 || this.frame.Y < num * 12)
						{
							this.frame.Y = num * 12;
						}
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 12 || this.frame.Y < num * 9)
					{
						this.frame.Y = num * 9;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 7 || this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 429)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 428)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if ((this.frameCounter += 1.0) > 10.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
				else if (this.frame.Y / num != 4)
				{
					if (this.frameCounter > 0.0)
					{
						this.frameCounter = 0.0;
					}
					if ((this.frameCounter -= 1.0) < -10.0 || this.velocity.Y > 0.6f)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 423)
			{
				if (this.ai[2] == 1f)
				{
					int num53 = 2;
					if (this.ai[1] >= 30f && this.ai[1] < 45f)
					{
						num53 = 3;
					}
					this.frame.Y = num53 * num;
				}
				else if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.velocity.X != 0f)
					{
						this.spriteDirection = Math.Sign(-this.velocity.X);
					}
					if (this.frame.Y / num < 4)
					{
						this.frame.Y = num * 4;
					}
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 421)
			{
				if (this.ai[0] == 5f)
				{
					this.frameCounter += 1.0;
				}
				if ((this.frameCounter += 1.0) >= 5.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 424)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = -this.direction;
					}
					if (this.ai[2] > 0f)
					{
						this.frame.Y = num * ((this.ai[1] > 90f) ? (Main.npcFrameCount[this.type] - 2) : (Main.npcFrameCount[this.type] - 1));
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)(this.velocity.X * 1.3f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			else if (this.type == 420 && (this.frameCounter += 1.0) >= 5.0)
			{
				this.frameCounter = 0.0;
				this.frame.Y = this.frame.Y + num;
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 411)
			{
				if (this.ai[1] >= 90f && this.ai[1] < 180f)
				{
					this.spriteDirection = -this.direction;
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = -this.direction;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 409)
			{
				if (this.velocity.Y == 0f && this.ai[1] <= 30f && this.ai[1] > 0f)
				{
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0.0;
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					if ((this.frameCounter += 1.0) >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 410)
			{
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 10.0)
				{
					this.frameCounter -= 10.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 407)
			{
				if ((this.frameCounter += 1.0) >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if ((this.type == 405 || this.type == 406) && (this.frameCounter += 1.0) >= 4.0)
			{
				this.frameCounter = 0.0;
				this.frame.Y = this.frame.Y + num;
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 516)
			{
				if (this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					this.frame.Y = num * Main.rand.Next(3);
					this.frameCounter += (double)Main.rand.Next(3);
				}
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 418)
			{
				if (this.ai[0] == 0f || this.ai[0] == 1f || this.ai[0] == -1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 2f)
				{
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				else if (this.ai[0] == -2f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 5;
					}
				}
			}
			if (this.type == 1 || this.type == 537 || this.type == 16 || this.type == 59 || this.type == 71 || this.type == 81 || this.type == 138 || this.type == 147 || this.type == 183 || this.type == 184 || this.type == 204 || this.type == 225 || this.type == 302 || this.type == 304 || (this.type >= 333 && this.type <= 336) || this.type == 535)
			{
				if (this.type == 302 || this.type == 304)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 488)
			{
				int num54 = (int)this.localAI[1];
				if (Framing.GetTileSafely((int)this.ai[0], (int)this.ai[1]).frameX >= 36)
				{
					num54 *= -1;
				}
				if (this.localAI[0] > 24f)
				{
					this.localAI[0] = 24f;
				}
				if (this.localAI[0] > 0f)
				{
					this.localAI[0] -= 1f;
				}
				if (this.localAI[0] < 0f)
				{
					this.localAI[0] = 0f;
				}
				int num55 = (num54 == -1) ? 4 : 6;
				int num56 = (int)this.localAI[0] / num55;
				if (this.localAI[0] % (float)num55 != 0f)
				{
					num56++;
				}
				if (num56 != 0 && num54 == 1)
				{
					num56 += 5;
				}
				this.frame.Y = num56 * num;
			}
			if (this.type >= 430 && this.type <= 436)
			{
				if (this.ai[2] > 0f)
				{
					if (this.ai[2] < 5f)
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[2] < 15f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else
				{
					if (this.velocity.Y == 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8.0)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < 16.0)
						{
							this.frame.Y = num;
						}
						else if (this.frameCounter < 24.0)
						{
							this.frame.Y = num * 2;
						}
						else if (this.frameCounter < 32.0)
						{
							this.frame.Y = num;
						}
						else
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 454)
			{
				int num57 = (int)(this.frameCounter / 2.0);
				this.frame.Y = num * num57;
			}
			if (this.type == 377 || this.type == 446)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.spriteDirection = this.direction;
			}
			if (this.type == 378)
			{
				if (this.velocity.Y != 0f && this.frame.Y < num * 2)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
				if (this.velocity.Y == 0f && this.frame.Y > num * 2)
				{
					this.frame.Y = this.frame.Y - num * 2;
				}
				this.frameCounter += 1.0;
				int num58 = 6;
				if (this.frameCounter >= (double)num58)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.velocity.Y != 0f && this.frame.Y >= num * 4)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.Y == 0f && this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 376)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 30.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 375)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 374)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y >= num * 4)
							{
								this.frame.Y = num;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 4)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			if (this.type == 492)
			{
				this.frame.Y = num * (int)this.ai[2];
			}
			if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.ai[0] == 0f || this.ai[0] == 7f)
				{
					this.rotation = 0f;
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else if (this.ai[0] == 1f)
				{
					this.rotation = 0f;
					this.frameCounter = 0.0;
					int num59 = 6;
					if (this.ai[1] < (float)num59)
					{
						this.frame.Y = num;
					}
					else if (this.ai[1] < (float)(num59 * 2))
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[1] < (float)(num59 * 3))
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[1] < (float)(num59 * 4))
					{
						this.frame.Y = num * 4;
					}
					else if (this.ai[1] < (float)(num59 * 5))
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.ai[0] == 2f || this.ai[0] == 6f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						int num60 = 6;
						this.frameCounter += 1.0;
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 12;
						}
						if (this.frame.Y < num * 10)
						{
							if (this.frameCounter > 8.0)
							{
								this.frame.Y = this.frame.Y + num;
								this.frameCounter = 0.0;
								if (this.frame.Y == num * 10)
								{
									this.frameCounter = (double)(num60 * 2);
								}
							}
						}
						else if (this.frameCounter < (double)num60)
						{
							this.frame.Y = num * 12;
						}
						else if (this.frameCounter < (double)(num60 * 2))
						{
							this.frame.Y = num * 11;
						}
						else if (this.frameCounter < (double)(num60 * 3))
						{
							this.frame.Y = num * 10;
						}
						else
						{
							this.frame.Y = num * 11;
							if (this.frameCounter >= (double)(num60 * 4 - 1))
							{
								this.frameCounter = 0.0;
							}
						}
					}
					else
					{
						this.frame.Y = num * 13;
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 3f)
				{
					this.rotation = 0f;
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = this.frame.Y - num;
						}
					}
				}
				else if (this.ai[0] == 4f || this.ai[0] == 5f)
				{
					if (this.ai[0] == 4f && this.ai[2] == 1f)
					{
						this.rotation = 0f;
					}
					this.frame.Y = num * 13;
					this.frameCounter = 0.0;
				}
				else if (this.ai[0] == 4.1f)
				{
					this.rotation = 0f;
					if (this.frame.Y > num * 6)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					int num61 = 4;
					if (this.frameCounter < (double)num61)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < (double)(num61 * 2))
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < (double)(num61 * 3))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num61 * 4))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num61 * 5))
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = num * 5;
						if (this.frameCounter >= (double)(num61 * 6 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 477)
			{
				this.frameCounter += (double)(this.velocity.Length() / 4f);
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.frame.Y / num > 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 479)
			{
				this.frameCounter += 1.0;
				int num62 = 4;
				if (this.frameCounter < (double)num62)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num62 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num62 * 3))
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < (double)(num62 * 4 - 1))
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 472)
			{
				if (this.velocity.X < 0f)
				{
					this.direction = -1;
				}
				else
				{
					this.direction = 1;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= 6)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type >= 449 && this.type <= 452)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num63 = 0;
						if (this.ai[1] < 22f)
						{
							num63 = -14;
						}
						else if (this.ai[1] < 28f)
						{
							num63 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num63 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num63 = 1;
						}
						this.frame.Y = num * (15 + num63);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 481)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num64 = 0;
						if (this.ai[1] < 22f)
						{
							num64 = -14;
						}
						else if (this.ai[1] < 28f)
						{
							num64 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num64 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num64 = 1;
						}
						this.frame.Y = num * (15 + num64);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 468)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num65 = 0;
						if (this.ai[1] < 22f)
						{
							num65 = -15;
						}
						else if (this.ai[1] < 28f)
						{
							num65 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num65 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num65 = 1;
						}
						this.frame.Y = num * (15 + num65);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 379 || this.type == 380)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * ((int)this.ai[2] - 1 + 2);
						this.frameCounter = 0.0;
					}
					else if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 7;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 7;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 381 || this.type == 382 || this.type == 383 || this.type == 385 || this.type == 389)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					if (this.type == 389 || this.type == 385)
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.2;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					}
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 387)
			{
				if (this.ai[0] > 0f)
				{
					this.frameCounter += 1.0;
					if (this.ai[0] >= 20f)
					{
						this.frameCounter += 1.0;
					}
					if (this.ai[0] >= 40f)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			if (this.type == 386)
			{
				if (this.ai[2] > 0f)
				{
					int num66 = (int)this.ai[2] / 12;
					this.frame.Y = num * (9 + num66 % 2);
				}
				else if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= 9)
					{
						this.frame.Y = num * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 388)
			{
				this.frameCounter += 1.0;
				int num67 = 6;
				if (this.frameCounter >= (double)num67)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 391)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = -1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = 1;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 390)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = -this.direction;
				}
				if (this.ai[2] > 0f)
				{
					this.frame.Y = num * ((int)this.ai[2] - 1);
				}
				else
				{
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 393)
			{
				Vector2 vector = this.ai[2].ToRotationVector2();
				int num68;
				if (vector.Y > Math.Abs(vector.X) * 2f)
				{
					num68 = 4;
				}
				else if (vector.Y > Math.Abs(vector.X) * 1.5f)
				{
					num68 = ((vector.X > 0f) ? 5 : 3);
				}
				else if (Math.Abs(vector.X) > vector.Y * 2f)
				{
					num68 = ((vector.X > 0f) ? 8 : 0);
				}
				else if (Math.Abs(vector.X) > vector.Y * 1.5f)
				{
					num68 = ((vector.X > 0f) ? 7 : 1);
				}
				else
				{
					num68 = ((vector.X > 0f) ? 6 : 2);
				}
				this.frame.Y = num * num68;
				float num69 = 280f;
				float num70 = 140f;
				bool flag3 = this.ai[3] >= num69 && this.ai[3] < num69 + num70;
				if (flag3 && (int)this.ai[3] % 6 <= 2)
				{
					this.frame.Y = this.frame.Y + num * 9;
				}
			}
			if (this.type == 394)
			{
				int num71 = (int)this.ai[3] - 300;
				if (num71 >= 120)
				{
					num71 -= 120;
					if (num71 >= 160)
					{
						this.frame.Y = num * (7 - (num71 - 160) / 5);
					}
					else if (num71 >= 20)
					{
						this.frame.Y = num * (num71 / 4 % 4);
					}
					else
					{
						this.frame.Y = num * (4 + num71 / 5);
					}
				}
				else
				{
					this.frame.Y = num * 4;
				}
			}
			if (this.type == 395)
			{
				float num72 = 20f;
				float num73 = 240f;
				bool flag4 = this.ai[3] >= num72 && this.ai[3] < num72 + num73;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 66.0)
				{
					this.frameCounter = 0.0;
				}
				if (flag4)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 54.0 || this.frameCounter < 36.0)
					{
						this.frameCounter = 36.0;
					}
				}
				int num74 = (int)this.frameCounter % 66;
				num74 /= 6;
				this.frame.Y = num * num74;
			}
			if (this.type == 392)
			{
				float num75 = 20f;
				float num76 = 240f;
				bool flag5 = this.ai[3] >= num75 && this.ai[3] < num75 + num76;
				this.frameCounter += 1.0;
				if (flag5)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 12.0)
				{
					this.frameCounter = 0.0;
				}
				int num77 = (int)this.frameCounter % 12;
				num77 /= 3;
				this.frame.Y = num * num77;
			}
			if (this.type == 399)
			{
				this.frameCounter = (this.frameCounter + 0.25) % 4.0 + (double)((this.ai[0] == 0f) ? 0 : 4);
				this.frame.Y = num * (int)this.frameCounter;
			}
			else if (this.type == 520)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter > 6.0)
					{
						if (Math.Abs(this.velocity.X) < 0.2f)
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			if (this.type == 398)
			{
				if (this.ai[0] <= 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					if (this.frame.Y == 0)
					{
						this.frame.Y = num;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= 30.0)
					{
						this.frameCounter = 6.0;
					}
					int num78 = (int)this.frameCounter % 30;
					num78 /= 6;
					this.frame.Y = num * num78;
				}
			}
			if (this.type == 397)
			{
				int num79 = (int)this.frameCounter / 7;
				this.frame.Y = num * num79;
			}
			if (this.type == 400)
			{
				this.frameCounter += 1.0;
				if (this.ai[0] == 0f || this.ai[0] == 3f)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 16.0)
				{
					this.frameCounter = 0.0;
				}
				int num80 = (int)this.frameCounter % 16;
				num80 /= 4;
				this.frame.Y = num * num80;
			}
			if (this.type == 437)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 20.0)
				{
					this.frameCounter = 0.0;
				}
				int num81 = (int)this.frameCounter % 20;
				num81 /= 5;
				this.frame.Y = num * num81;
			}
			if (this.type == 438)
			{
				this.frameCounter += 1.0;
				if (this.ai[1] == 1f)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 49.0)
				{
					this.frameCounter = 0.0;
				}
				int num82 = (int)this.frameCounter % 49;
				num82 /= 7;
				if (num82 >= 4)
				{
					num82 = 6 - num82;
				}
				this.frame.Y = num * num82;
			}
			if (this.type == 439 || this.type == 440)
			{
				int num83 = (int)this.localAI[2];
				if (num83 == 0)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else if (this.frame.Y != 0)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 4) * num;
					}
				}
				else if (num83 == 10)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 4) * num;
				}
				else if (num83 == 1)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
					}
					else if (this.frame.Y != num)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 10) * num;
					}
				}
				else if (num83 == 11)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 10) * num;
				}
				else if (num83 == 2)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
					}
					else if (this.frame.Y != num * 2)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 7) * num;
					}
				}
				else if (num83 == 12)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 7) * num;
				}
				else if (num83 == 13)
				{
					if (this.frameCounter >= 15.0)
					{
						this.frameCounter = 0.0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 13) * num;
				}
				this.frameCounter += 1.0;
			}
			if (this.type == 521)
			{
				if (this.velocity.X < 0f)
				{
					this.direction = -1;
				}
				else
				{
					this.direction = 1;
				}
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.spriteDirection), (double)(this.velocity.X * (float)this.spriteDirection)) + this.velocity.X * 0.1f;
				if ((this.frameCounter += 1.0) >= 5.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 523 && (this.frameCounter += 1.0) >= 6.0)
			{
				this.frame.Y = this.frame.Y + num;
				this.frameCounter = 0.0;
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 371 || this.type == 372 || this.type == 373)
			{
				this.frame.Y = num;
			}
			if (this.type == 370)
			{
				if (this.ai[0] == 0f || this.ai[0] == 5f)
				{
					int num84 = 5;
					if (this.ai[0] == 5f)
					{
						num84 = 4;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter > (double)num84)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y >= num * 6)
					{
						this.frame.Y = 0;
					}
				}
				if (this.ai[0] == 1f || this.ai[0] == 6f)
				{
					if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				if (this.ai[0] == 2f || this.ai[0] == 7f)
				{
					if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				if (this.ai[0] == 3f || this.ai[0] == 8f || this.ai[0] == -1f)
				{
					int num85 = 90;
					if (this.ai[2] < (float)(num85 - 30) || this.ai[2] > (float)(num85 - 10))
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 5.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y >= num * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = num * 6;
						if (this.ai[2] > (float)(num85 - 20) && this.ai[2] < (float)(num85 - 15))
						{
							this.frame.Y = num * 7;
						}
					}
				}
				if (this.ai[0] == 4f || this.ai[0] == 9f)
				{
					int num86 = 180;
					if (this.ai[2] < (float)(num86 - 60) || this.ai[2] > (float)(num86 - 20))
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 5.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y >= num * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = num * 6;
						if (this.ai[2] > (float)(num86 - 50) && this.ai[2] < (float)(num86 - 25))
						{
							this.frame.Y = num * 7;
						}
					}
				}
			}
			if (this.type == 359 || this.type == 360)
			{
				if (this.velocity.Y > 1f)
				{
					this.frameCounter += 1.0;
					int num87 = 6;
					if (this.frameCounter < (double)num87)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = num * 5;
						if (this.frameCounter >= (double)(num87 * 2 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					int num88 = 10;
					if (this.frameCounter < (double)num88)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < (double)(num88 * 2))
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num88 * 3))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num88 * 4))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num88 * 5))
					{
						this.frame.Y = num * 2;
					}
					else
					{
						this.frame.Y = num;
						if (this.frameCounter >= (double)(num88 * 6 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 327)
			{
				if (this.ai[3] == 0f)
				{
					if (this.frame.Y > num * 5)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > 0)
					{
						this.frameCounter -= 1.0;
					}
				}
				else if (this.ai[3] == 1f)
				{
					if (this.frame.Y > num * 10)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > num * 4)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 4)
					{
						this.frameCounter += 1.0;
					}
				}
				else if (this.ai[3] == 2f)
				{
					if (this.frame.Y < num * 2)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y > num * 8)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 8)
					{
						this.frameCounter += 1.0;
					}
				}
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y > num * 11)
					{
						this.frame.Y = 0;
					}
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 6.0;
					this.frame.Y = this.frame.Y - num;
					if (this.frame.Y < 0)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			if (this.type == 347)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 1.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 3)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 346)
			{
				if (this.ai[0] == 1f)
				{
					this.spriteDirection = this.direction;
					this.frameCounter += 1.0;
					if (this.frameCounter > 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 8)
					{
						this.frame.Y = num * 6;
					}
					if (this.frame.Y < num * 6)
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += 1.0;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5)
					{
						this.frame.Y = num;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			if (this.type == 352)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 345)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[3] >= 0f)
					{
						this.frame.Y = 0;
					}
					else if (this.velocity.X < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 5.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = num * 3;
					}
					if (this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
				else if (this.ai[0] == 2f)
				{
					this.frame.Y = num * 5;
				}
			}
			if (this.type == 344)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 2.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 325)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y < num * 5)
					{
						this.frame.Y = num * 5;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = num * 5;
					}
				}
			}
			if (this.type == 490)
			{
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 266)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.ai[0] >= 0f)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 262)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.life > this.lifeMax / 2)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type >= 305 && this.type <= 309)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y < -3f)
				{
					this.frame.Y = num * 5;
				}
				else if (this.velocity.Y <= 0f)
				{
					this.frame.Y = 0;
				}
				else if (this.velocity.Y < 2f)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num;
				}
				this.rotation = this.velocity.X * 0.1f;
			}
			else if (this.type == 263)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.frame.Y > 0)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 4.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y - num;
						}
					}
				}
				else if (this.frame.Y < 2)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
			}
			else if (this.type == 244)
			{
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 289)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 3.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				if (this.ai[3] == 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
				}
			}
			else if (this.type == 288)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 355 || this.type == 358)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter < 4.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 7.0)
					{
						this.frameCounter = 0.0;
					}
				}
				if (this.localAI[2] <= 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			else if (this.type == 356 || this.type == 444)
			{
				int num89 = 7;
				this.rotation = this.velocity.X * 0.3f;
				this.spriteDirection = this.direction;
				this.frameCounter = this.frameCounter + 1.0 + (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) / 2f);
				if (this.frameCounter < (double)num89)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num89 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num89 * 3))
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= (double)(num89 * 4 - 1))
					{
						this.frameCounter = 0.0;
					}
				}
				if (this.type != 444)
				{
					this.frame.Y = this.frame.Y + (int)((float)(num * 3) * (this.ai[2] - 1f));
				}
			}
			else if (this.type == 357 || this.type == 448 || this.type == 484)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 12.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y > num)
							{
								this.frame.Y = 0;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frame.Y = num;
				}
				int num90 = (int)base.Center.X / 16;
				int num91 = (int)this.position.Y / 16;
				if (WorldGen.InWorld(num90, num91, 0) && Main.tile[num90, num91] != null)
				{
					if (Main.tile[num90, num91].slope() == 0)
					{
						num91++;
					}
					if (Main.tile[num90, num91].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[num90, num91].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			else if (this.type >= 485 && this.type <= 487)
			{
				this.spriteDirection = this.direction;
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)Math.Abs(this.velocity.X * 5f);
						if (this.frameCounter > 10.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y > num * 3)
							{
								this.frame.Y = 0;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frame.Y = num;
				}
				int num92 = (int)base.Center.X / 16;
				int num93 = (int)this.position.Y / 16;
				if (Main.tile[num92, num93] != null)
				{
					if (Main.tile[num92, num93].slope() == 0)
					{
						num93++;
					}
					if (Main.tile[num92, num93].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[num92, num93].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			else if (this.type == 250 || this.type == 264 || this.type == 268)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 245)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[1] < -16f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[1] < -12f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[1] < -8f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[1] < -4f)
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[1] < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frame.Y = 1;
				}
			}
			else if (this.type == 246)
			{
				if (this.ai[0] == 0f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
					if (this.localAI[1] == -1f)
					{
						this.frame.Y = this.frame.Y + num * 4;
					}
					if (this.localAI[1] == 1f)
					{
						this.frame.Y = this.frame.Y + num * 2;
					}
				}
			}
			else if (this.type == 249)
			{
				if (this.localAI[0] == 1f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 141)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num)
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 243)
			{
				if (this.frameCounter < 0.0)
				{
					if (this.velocity.Y == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter < -12.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
						else if (this.frameCounter < -6.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 12;
							}
						}
						else if (this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
					}
					else
					{
						this.frameCounter = -18.0;
						if (this.velocity.Y < 0f)
						{
							this.frame.Y = num * 14;
						}
						else
						{
							this.frame.Y = num * 13;
						}
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)Math.Abs(this.velocity.X * 1.1f);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = 0;
						}
					}
					if (this.velocity.Y < -2f || this.velocity.Y > 5f)
					{
						this.frameCounter = -18.0;
					}
				}
			}
			else if (this.type == 222)
			{
				this.frameCounter += 1.0;
				if (this.localAI[0] == 1f)
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y >= num * 12)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			else if (this.type == 164 || this.type == 239 || this.type == 530)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 236)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num || this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 165 || this.type == 237 || this.type == 238 || this.type == 240 || this.type == 531)
			{
				float num94 = 0.5f;
				if (this.type == 531)
				{
					num94 = 0.4f;
				}
				this.frameCounter += (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * num94);
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 195)
			{
				if (this.ai[0] < 3f)
				{
					this.frame.Y = 0;
				}
				else if (this.ai[0] < 6f)
				{
					this.frame.Y = num;
				}
				else if (this.ai[0] < 9f)
				{
					this.frame.Y = num * 2;
				}
				else if (this.ai[0] < 12f)
				{
					this.frame.Y = num * 3;
				}
				else if (this.ai[0] < 15f)
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frame.Y = num * 5;
				}
			}
			else if (this.type == 174)
			{
				if (this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
				}
				else if ((double)this.velocity.Y < -1.5)
				{
					this.frame.Y = num;
				}
				else if ((double)this.velocity.Y > 1.5)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 177)
			{
				if (this.velocity.Y == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 30.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 163)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = -12.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < -6.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 0.0)
					{
						this.frame.Y = num * 7;
					}
					else if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 143)
			{
				if (this.velocity.Y > 0f)
				{
					this.frameCounter += 1.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter -= 1.0;
				}
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 3;
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 0.0;
				}
				if (this.frameCounter > 17.0)
				{
					this.frameCounter = 17.0;
				}
			}
			else if (this.type == 144)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.localAI[3] += 1f;
					if (this.localAI[3] < 6f)
					{
						this.frame.Y = 0;
					}
					else if (this.localAI[3] < 12f)
					{
						this.frame.Y = num;
					}
					if (this.localAI[3] >= 11f)
					{
						this.localAI[3] = 0f;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 4;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			else if (this.type == 145)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.ai[2] < 4f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[2] < 8f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[2] < 12f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[2] < 16f)
					{
						this.frame.Y = num * 3;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 6;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			else if (this.type == 50)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
					if ((this.frameCounter += 1.0) >= 4.0)
					{
						this.frame.Y = num * 5;
					}
				}
				else
				{
					if (this.frame.Y >= num * 5)
					{
						this.frame.Y = num * 4;
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (num2 > 0)
					{
						this.frameCounter += 1.0;
					}
					if (num2 == 4)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
						if (this.frame.Y >= num * 4)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 170 || this.type == 171 || this.type == 180)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 14)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 135)
			{
				if (this.ai[2] == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
				}
			}
			else if (this.type == 85 || this.type == 341)
			{
				if (this.ai[0] == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					int num95 = 3;
					if (this.velocity.Y == 0f)
					{
						this.frameCounter -= 1.0;
					}
					else
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > (double)(num95 * 4))
					{
						this.frameCounter = (double)(num95 * 4);
					}
					if (this.frameCounter < (double)num95)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num95 * 2))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num95 * 3))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num95 * 4))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num95 * 5))
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < (double)(num95 * 6))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num95 * 7))
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= (double)(num95 * 8))
						{
							this.frameCounter = (double)num95;
						}
					}
				}
				if (this.ai[3] == 2f)
				{
					this.frame.Y = this.frame.Y + num * 6;
				}
				else if (this.ai[3] == 3f)
				{
					this.frame.Y = this.frame.Y + num * 12;
				}
				else if (this.ai[3] == 4f)
				{
					this.frame.Y = this.frame.Y + num * 18;
				}
			}
			else if (this.type == 113 || this.type == 114)
			{
				if (this.ai[2] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frame.Y = 0;
					this.frameCounter = -60.0;
				}
			}
			else if (this.type == 61)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter < 4.0)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= 7.0)
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			else if (this.type == 252 || this.type == 301)
			{
				if (this.type == 301)
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = -this.direction;
					}
					else
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = -1;
						}
						if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = 1;
						}
					}
				}
				else
				{
					if ((double)this.velocity.X > 0.5)
					{
						this.spriteDirection = 1;
					}
					if ((double)this.velocity.X < -0.5)
					{
						this.spriteDirection = -1;
					}
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4 || this.frame.Y == 0)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 122)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.05f;
				if (this.ai[3] > 0f)
				{
					int num96 = (int)(this.ai[3] / 8f);
					this.frameCounter = 0.0;
					this.frame.Y = (num96 + 3) * num;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298 || this.type == 442)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 362 || this.type == 364)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 10)
					{
						this.frame.Y = num * 3;
					}
					if (this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
			}
			else if (this.type == 363 || this.type == 365)
			{
				this.spriteDirection = this.direction;
				if (this.wet)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 2)
					{
						this.frame.Y = num;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
					this.rotation = 0f;
				}
				else if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
					this.rotation = 0f;
				}
				else
				{
					this.rotation = this.velocity.X * 0.1f;
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 11;
					}
					if (this.frame.Y < num * 11)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			else if (this.type == 62 || this.type == 66)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 11.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 156)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 20.0)
				{
					this.frameCounter = 0.0;
				}
				int num97 = (int)this.frameCounter / 4;
				this.frame.Y = num97 * num;
			}
			else if (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242 || this.type == 256)
			{
				if ((this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242) && this.ai[1] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 6)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					return;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num * 3;
					if (this.frameCounter >= 23.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 221)
			{
				if (this.localAI[2] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = 0;
						this.localAI[0] = 0f;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * Main.npcFrameCount[this.type] - num;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 13.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 2 || this.type == 23 || this.type == 121 || this.type == 169 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
			{
				if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
					}
				}
				else if (this.type == 2 || this.type == 121)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 133)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				if (this.frameCounter >= 16.0)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				if ((double)this.life < (double)this.lifeMax * 0.5)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			else if (this.type == 116)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 5.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 75)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				else
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 157)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (!this.wet)
				{
					this.frameCounter += 1.0;
				}
				int num98 = 5;
				if (this.frameCounter < (double)num98)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num98 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num98 * 3))
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < (double)(num98 * 4))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num98 * 5))
				{
					this.frame.Y = num * 3;
				}
				else if (this.frameCounter < (double)(num98 * 6))
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < (double)(num98 * 7))
				{
					this.frame.Y = num * 5;
				}
				else if (this.frameCounter < (double)(num98 * 8))
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 55 || this.type == 57 || this.type == 58 || this.type == 102 || this.type == 241 || this.type == 465)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 5;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 69)
			{
				if (this.ai[0] < 190f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
				}
			}
			else if (this.type == 155)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 6;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if ((this.direction > 0 && this.velocity.X < 0f) || (this.direction < 0 && this.velocity.X > 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 8.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 329)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 3;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = num * 2;
						}
					}
				}
			}
			else if (this.type == 86)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -2f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 2f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 15;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else if (Math.Abs(this.velocity.X) < 3f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 9)
						{
							this.frame.Y = num;
						}
						if (this.frame.Y / num <= 0)
						{
							this.frame.Y = num;
						}
					}
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 9;
						}
						if (this.frame.Y / num <= 8)
						{
							this.frame.Y = num * 9;
						}
					}
				}
			}
			else if (this.type == 315)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -1f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 1f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num > 10)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			else if (this.type == 127)
			{
				if (this.ai[1] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			else if (this.type == 129)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 2.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 130)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 67 || this.type == 217 || this.type == 218 || this.type == 219)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 220)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 10.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 109)
			{
				if (this.velocity.Y == 0f && ((this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0)))
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 7.0)
				{
					this.frameCounter -= 7.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 83 || this.type == 84 || this.type == 179)
			{
				if (this.ai[0] == 2f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 72)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 65)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 224)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = this.velocity.Y * 0.2f;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = -this.velocity.Y * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 150 || this.type == 151 || this.type == 152 || this.type == 158 || this.type == 226)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 48 || this.type == 49 || this.type == 51 || this.type == 60 || this.type == 82 || this.type == 93 || this.type == 137 || this.type == 182 || this.type == 210 || this.type == 211 || this.type == 253 || this.type == 316)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.type == 210 || this.type == 211)
				{
					this.frameCounter += 1.0;
					this.rotation = this.velocity.X * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 330)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 42 || (this.type >= 231 && this.type <= 235))
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 205)
			{
				this.frameCounter += 0.5;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 176)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 43 || this.type == 56 || this.type == 175)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 23.0)
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 115)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 3.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 15.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 15.0)
				{
					this.frameCounter = 0.0;
				}
			}
			else if (this.type == 101)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num * 2;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 2)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 199)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.frame.Y < num * 3)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						return;
					}
				}
				else if (this.velocity.Y == 0f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter > 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = num * 3;
							return;
						}
					}
				}
			}
			else if (this.type == 467)
			{
				if (this.ai[0] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y < num * 6)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
							return;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						if (this.frame.Y > num * 3)
						{
							this.frame.Y = num * 3;
						}
						if (this.frame.Y > 0)
						{
							this.frame.Y = this.frame.Y - num;
							this.frameCounter = 0.0;
							return;
						}
					}
				}
			}
			else if (this.type == 480)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 8;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] < 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= Main.npcFrameCount[this.type] * num)
					{
						this.frame.Y = num * 21;
						return;
					}
					if (this.frame.Y < num * 21)
					{
						this.frame.Y = num * 21;
						return;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 7)
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter += (double)(1f + Math.Abs(this.velocity.X));
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 4)
					{
						this.frame.Y = num * 10;
						return;
					}
					if (this.frame.Y / num < 10)
					{
						this.frame.Y = num * 10;
						return;
					}
				}
			}
			else if (this.type == 483)
			{
				if (this.ai[0] == -1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 21)
					{
						this.frame.Y = num * 21;
					}
					else if (this.frame.Y < num * 13)
					{
						this.frame.Y = num * 13;
					}
					this.rotation += this.velocity.X * 0.2f;
					return;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 11)
				{
					this.frame.Y = 0;
				}
				this.rotation = this.velocity.X * 0.1f;
				return;
			}
			else if (this.type == 482)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] < 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= Main.npcFrameCount[this.type] * num)
					{
						this.frame.Y = num * 11;
						return;
					}
					if (this.frame.Y < num * 11)
					{
						this.frame.Y = num * 11;
						return;
					}
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)(0.2f + Math.Abs(this.velocity.X));
					if (this.frameCounter > 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 10)
					{
						this.frame.Y = num * 2;
						return;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 461)
			{
				if (this.wet)
				{
					if (this.velocity.X < 0f)
					{
						this.direction = -1;
					}
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
					if (this.spriteDirection != this.direction)
					{
						this.rotation *= -1f;
						this.spriteDirection = this.direction;
					}
					float num99 = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
					if ((double)Math.Abs(this.rotation - num99) >= 3.14)
					{
						if (num99 < this.rotation)
						{
							this.rotation -= 6.28f;
						}
						else
						{
							this.rotation += 6.28f;
						}
					}
					this.rotation = (this.rotation * 4f + num99) / 5f;
					this.frameCounter += (double)Math.Abs(this.velocity.Length());
					this.frameCounter += 1.0;
					if (this.frameCounter > 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 20)
					{
						this.frame.Y = num * 16;
						return;
					}
					if (this.frame.Y / num < 16)
					{
						this.frame.Y = num * 19;
						return;
					}
				}
				else
				{
					if ((double)this.rotation > 3.14)
					{
						this.rotation -= 6.28f;
					}
					if ((double)this.rotation > -0.01 && (double)this.rotation < 0.01)
					{
						this.rotation = 0f;
					}
					else
					{
						this.rotation *= 0.9f;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 15)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 466)
			{
				if (this.ai[2] <= 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] == 0f)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.ai[2] < -8f)
					{
						this.frame.Y = num;
						return;
					}
					this.frame.Y = num * 2;
					return;
				}
				else
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 3;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 17)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y / num < 4)
					{
						this.frame.Y = num * 4;
						return;
					}
				}
			}
			else if (this.type == 471)
			{
				bool flag6 = false;
				if (this.ai[3] < 0f)
				{
					flag6 = true;
				}
				if (flag6)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.Length()) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 17;
						return;
					}
					if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 18;
						return;
					}
					if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 19;
						return;
					}
					if (this.frameCounter < 23.0)
					{
						this.frame.Y = num * 18;
						return;
					}
					this.frame.Y = num * 18;
					this.frameCounter = 0.0;
					return;
				}
				else
				{
					if (this.ai[3] == 1f)
					{
						this.frame.Y = num * 16;
						this.frameCounter = 0.0;
						return;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 15)
					{
						this.frame.Y = num * 2;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 166)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 2.0;
					if (this.frameCounter > 7.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 5)
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					this.frameCounter += 1.0;
					if (this.frameCounter > 9.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 12)
					{
						this.frame.Y = num * 7;
					}
					if (this.frame.Y / num < 7)
					{
						this.frame.Y = num * 7;
						return;
					}
				}
			}
			else if (this.type == 469)
			{
				if (this.ai[2] == 1f)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					if (this.velocity.X < 0f)
					{
						this.direction = -1;
					}
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
					this.spriteDirection = this.direction;
					this.frameCounter += (double)Math.Abs(this.velocity.Length());
					if (this.frameCounter > 11.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 5)
					{
						this.frame.Y = num * 2;
					}
					if (this.frame.Y / num < 2)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
				else
				{
					this.rotation = 0f;
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					this.frameCounter += 1.0;
					if (this.frameCounter > 9.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num > 11)
					{
						this.frame.Y = num * 6;
					}
					if (this.frame.Y / num < 6)
					{
						this.frame.Y = num * 6;
						return;
					}
				}
			}
			else if (this.type == 351)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num;
					}
					this.frameCounter = 0.0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 2;
					return;
				}
			}
			else if (this.type == 343)
			{
				if (this.velocity.Y != 0f)
				{
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
					this.frameCounter = 0.0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 2;
					return;
				}
			}
			else if (this.type >= 269 && this.type <= 280)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.velocity.X == 0f)
				{
					if (this.type == 140)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
						return;
					}
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 230)
			{
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 10.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					if (this.velocity.Y > 4f)
					{
						this.rotation -= this.velocity.Y * 0.01f;
						return;
					}
				}
			}
			else if (this.type == 290)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 11;
						return;
					}
					if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 10;
						return;
					}
					this.frame.Y = num * 9;
					return;
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					if (this.frame.Y < num * 2)
					{
						this.frame.Y = num * 2;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 8)
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 110 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 291 || this.type == 292 || this.type == 293)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * (int)this.ai[2];
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 6)
				{
					this.frame.Y = num * 6;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)this.velocity.X;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 6;
					return;
				}
			}
			else if (this.type == 206)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * (int)this.ai[2];
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 6)
				{
					this.frame.Y = num * 6;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)this.velocity.X;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 6;
					return;
				}
			}
			else if (this.type == 350)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 5;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * ((int)this.ai[2] - 1);
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 7)
				{
					this.frame.Y = num * 7;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)(this.velocity.X * 1.3f);
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 7;
					return;
				}
			}
			else if (this.type == 111)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] > 0f)
				{
					this.spriteDirection = this.direction;
					this.frame.Y = num * ((int)this.ai[2] - 1);
					this.frameCounter = 0.0;
					return;
				}
				if (this.frame.Y < num * 7)
				{
					this.frame.Y = num * 7;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
				this.frameCounter += (double)(this.velocity.X * 1.3f);
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = num * 7;
					return;
				}
			}
			else if (this.type == 257)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter < 8.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 16.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				if (this.frameCounter < 32.0)
				{
					this.frame.Y = num * 3;
					return;
				}
				this.frameCounter = 0.0;
				return;
			}
			else if (this.type == 258)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 1.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5 || this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
						return;
					}
				}
				else
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
						return;
					}
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
						return;
					}
					if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
						return;
					}
					this.frameCounter = 0.0;
					return;
				}
			}
			else if (this.type == 348)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 8;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 7)
				{
					this.frame.Y = num;
					return;
				}
			}
			else if (this.type == 349)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 7)
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 3 || this.type == 342 || this.type == 331 || this.type == 332 || this.type == 52 || this.type == 53 || this.type == 536 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 254 || this.type == 255 || (this.type >= 319 && this.type <= 321))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
					return;
				}
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					return;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter < 8.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 16.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				if (this.frameCounter < 32.0)
				{
					this.frame.Y = num;
					return;
				}
				this.frameCounter = 0.0;
				return;
			}
			else if (this.type == 148 || this.type == 149 || this.type == 168 || this.type == 470)
			{
				int num100 = 0;
				if (this.localAI[0] == 2f)
				{
					num100 = 3;
				}
				if (this.localAI[0] == 3f)
				{
					num100 = 6;
				}
				if (this.localAI[0] == 4f)
				{
					num100 = 9;
				}
				num100 *= num;
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num100;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num100;
						return;
					}
					if (this.frameCounter < 12.0)
					{
						this.frame.Y = num + num100;
						return;
					}
					if (this.frameCounter < 15.0)
					{
						this.frame.Y = num * 2 + num100;
						return;
					}
					this.frameCounter = 0.0;
					this.frame.Y = num * 2 + num100;
					return;
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2 + num100;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2 + num100;
						return;
					}
				}
			}
			else if (this.type == 299 || this.type == 538 || this.type == 539)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
					{
						this.frame.Y = num;
						return;
					}
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 2;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 4;
						return;
					}
				}
			}
			else if (this.type == 300 || this.type == 447)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 8.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num > 1)
						{
							this.frame.Y = 0;
							return;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
							return;
						}
					}
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
						return;
					}
				}
			}
			else if (this.type == 361 || this.type == 445)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y == 0f)
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y > num * 5)
						{
							this.frame.Y = 0;
							return;
						}
					}
					else
					{
						this.frameCounter += 1.0;
						int num101 = 6;
						if (this.frameCounter < (double)num101)
						{
							this.frame.Y = 0;
							return;
						}
						if (this.frameCounter < (double)(num101 * 2))
						{
							this.frame.Y = num * 6;
							return;
						}
						if (this.frameCounter < (double)(num101 * 3))
						{
							this.frame.Y = num * 8;
							return;
						}
						this.frame.Y = num * 9;
						if (this.frameCounter >= (double)(num101 * 4 - 1))
						{
							this.frameCounter = 0.0;
							return;
						}
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frame.Y = num * 9;
						return;
					}
					this.frame.Y = num * 8;
					return;
				}
			}
			else if (this.type == 366 || this.type == 367)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
					return;
				}
				this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y / num >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 46 || this.type == 47 || this.type == 303 || this.type == 337 || this.type == 443 || this.type == 464)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
						return;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
						return;
					}
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 4;
						return;
					}
					if (this.velocity.Y > 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = num * 6;
						return;
					}
				}
			}
			else if (this.type == 4 || this.type == 125 || this.type == 126)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 7.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 14.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 21.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				if (this.ai[0] > 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
					return;
				}
			}
			else if (this.type == 5)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 94)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
					return;
				}
				if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
					return;
				}
				if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
					return;
				}
				this.frame.Y = num;
				if (this.frameCounter >= 23.0)
				{
					this.frameCounter = 0.0;
					return;
				}
			}
			else if (this.type == 6 || this.type == 173)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
					return;
				}
			}
			else if (this.type == 24)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.ai[1] > 0f)
				{
					if (this.frame.Y < 4)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = num * 4;
						return;
					}
					if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num * 5;
						return;
					}
					if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 6;
						return;
					}
					if (this.frameCounter <= 16.0)
					{
						this.frame.Y = num * 7;
						return;
					}
					if (this.frameCounter <= 20.0)
					{
						this.frame.Y = num * 8;
						return;
					}
					this.frame.Y = num * 9;
					this.frameCounter = 100.0;
					return;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = 0;
						return;
					}
					if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num;
						return;
					}
					if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 2;
						return;
					}
					this.frame.Y = num * 3;
					if (this.frameCounter >= 16.0)
					{
						this.frameCounter = 0.0;
						return;
					}
				}
			}
			else if (this.type == 29 || this.type == 32 || this.type == 45 || this.type == 172 || (this.type >= 281 && this.type <= 286))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				this.frame.Y = 0;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = this.frame.Y + num;
					return;
				}
				if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
					return;
				}
			}
			else if (this.type == 34)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
		}
		public void SimpleFlyMovement(Vector2 desiredVelocity, float moveSpeed)
		{
			if (this.velocity.X < desiredVelocity.X)
			{
				this.velocity.X = this.velocity.X + moveSpeed;
				if (this.velocity.X < 0f && desiredVelocity.X > 0f)
				{
					this.velocity.X = this.velocity.X + moveSpeed;
				}
			}
			else if (this.velocity.X > desiredVelocity.X)
			{
				this.velocity.X = this.velocity.X - moveSpeed;
				if (this.velocity.X > 0f && desiredVelocity.X < 0f)
				{
					this.velocity.X = this.velocity.X - moveSpeed;
				}
			}
			if (this.velocity.Y < desiredVelocity.Y)
			{
				this.velocity.Y = this.velocity.Y + moveSpeed;
				if (this.velocity.Y < 0f && desiredVelocity.Y > 0f)
				{
					this.velocity.Y = this.velocity.Y + moveSpeed;
					return;
				}
			}
			else if (this.velocity.Y > desiredVelocity.Y)
			{
				this.velocity.Y = this.velocity.Y - moveSpeed;
				if (this.velocity.Y > 0f && desiredVelocity.Y < 0f)
				{
					this.velocity.Y = this.velocity.Y - moveSpeed;
				}
			}
		}
		public void HealEffect(int healAmount, bool broadcast = true)
		{
			int num = CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.HealLife, string.Concat(healAmount), false, false);
			if (broadcast && Main.netMode == 2 && num != 100)
			{
				CombatText combatText = Main.combatText[num];
				NetMessage.SendData(81, -1, -1, combatText.text, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, 0f, 0, 0, 0);
			}
		}
		public static void HealEffect(Rectangle r, int healAmount, bool broadcast = true)
		{
			int num = CombatText.NewText(r, CombatText.HealLife, string.Concat(healAmount), false, false);
			if (broadcast && Main.netMode == 2 && num != 100)
			{
				CombatText combatText = Main.combatText[num];
				NetMessage.SendData(81, -1, -1, combatText.text, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, 0f, 0, 0, 0);
			}
		}
		public int FindClosestPlayer()
		{
			float num;
			return this.FindClosestPlayer(out num);
		}
		public int FindClosestPlayer(out float distanceToPlayer)
		{
			Vector2 center = base.Center;
			float num = 3.40282347E+38f;
			int num2 = -1;
			for (int i = 0; i < 255; i++)
			{
				Player player = Main.player[i];
				if (player.active && !player.dead && !player.ghost)
				{
					float num3 = Vector2.DistanceSquared(center, player.Center);
					if (num3 < num)
					{
						num = num3;
						num2 = i;
					}
				}
			}
			if (num2 < 0)
			{
				for (int j = 0; j < 255; j++)
				{
					Player player = Main.player[j];
					if (player.active)
					{
						float num4 = Vector2.DistanceSquared(center, player.Center);
						if (num4 < num)
						{
							num = num4;
							num2 = j;
						}
					}
				}
			}
			distanceToPlayer = (float)Math.Sqrt((double)num);
			return num2;
		}
		public void BigMimicSpawnSmoke()
		{
			//Should always be true
			if (Main.netMode == 2)
			{
				NetMessage.SendData(51, -1, -1, "", this.whoAmI, 4f, 0f, 0f, 0, 0, 0);
				return;
			}
		}
		public static bool BigMimicSummonCheck(int x, int y)
		{
			if (Main.netMode == 1 || !Main.hardMode)
			{
				return false;
			}
			int num = Chest.FindChest(x, y);
			if (num < 0)
			{
				return false;
			}
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 40; i++)
			{
				ushort num5 = Main.tile[Main.chest[num].x, Main.chest[num].y].type;
				int num6 = (int)(Main.tile[Main.chest[num].x, Main.chest[num].y].frameX / 36);
				if (num5 == 21 && (num6 < 5 || num6 > 6) && Main.chest[num].item[i] != null && Main.chest[num].item[i].type > 0)
				{
					if (Main.chest[num].item[i].type == 3092)
					{
						num2 += Main.chest[num].item[i].stack;
					}
					else if (Main.chest[num].item[i].type == 3091)
					{
						num3 += Main.chest[num].item[i].stack;
					}
					else
					{
						num4++;
					}
				}
			}
			if (num4 == 0 && num2 + num3 == 1)
			{
				if (num2 != 1)
				{
				}
				if (Main.tile[x, y].type == 21)
				{
					if (Main.tile[x, y].frameX % 36 != 0)
					{
						x--;
					}
					if (Main.tile[x, y].frameY % 36 != 0)
					{
						y--;
					}
					int number = Chest.FindChest(x, y);
					for (int j = x; j <= x + 1; j++)
					{
						for (int k = y; k <= y + 1; k++)
						{
							if (Main.tile[j, k].type == 21)
							{
								Main.tile[j, k].active(false);
							}
						}
					}
					for (int l = 0; l < 40; l++)
					{
						Main.chest[num].item[l] = new Item();
					}
					Chest.DestroyChest(x, y);
					NetMessage.SendData(34, -1, -1, "", 1, (float)x, (float)y, 0f, number, 0, 0);
					NetMessage.SendTileSquare(-1, x, y, 3);
				}
				int num7 = 475;
				if (num3 == 1)
				{
					if (WorldGen.crimson)
					{
						num7 = 474;
					}
					else
					{
						num7 = 473;
					}
				}
				int num8 = NPC.NewNPC(x * 16 + 16, y * 16 + 32, num7, 0, 0f, 0f, 0f, 0f, 255);
				Main.npc[num8].whoAmI = num8;
				NetMessage.SendData(23, -1, -1, "", num8, 0f, 0f, 0f, 0, 0, 0);
				Main.npc[num8].BigMimicSpawnSmoke();
			}
			return false;
		}
		public void TargetClosest(bool faceTarget = true)
		{
			float num = 0f;
			float num2 = 0f;
			bool flag = false;
			int num3 = -1;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active && !Main.player[i].dead && !Main.player[i].ghost)
				{
					float num4 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
					num4 -= (float)Main.player[i].aggro;
					if (Main.player[i].npcTypeNoAggro[this.type] && this.direction != 0)
					{
						num4 += 1000f;
					}
					if (!flag || num4 < num)
					{
						flag = true;
						num3 = -1;
						num2 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
						num = num4;
						this.target = i;
					}
					if (Main.player[i].tankPet >= 0 && !Main.player[i].npcTypeNoAggro[this.type])
					{
						int tankPet = Main.player[i].tankPet;
						float num5 = Math.Abs(Main.projectile[tankPet].position.X + (float)(Main.projectile[tankPet].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.projectile[tankPet].position.Y + (float)(Main.projectile[tankPet].height / 2) - this.position.Y + (float)(this.height / 2));
						num5 -= 200f;
						if (num5 < num && num5 < 200f && Collision.CanHit(base.Center, 1, 1, Main.projectile[tankPet].Center, 1, 1))
						{
							num3 = tankPet;
						}
					}
				}
			}
			if (num3 >= 0)
			{
				int num6 = num3;
				this.targetRect = new Rectangle((int)Main.projectile[num6].position.X, (int)Main.projectile[num6].position.Y, Main.projectile[num6].width, Main.projectile[num6].height);
				this.direction = 1;
				if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
				{
					this.direction = -1;
				}
				this.directionY = 1;
				if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
				{
					this.directionY = -1;
				}
			}
			else
			{
				if (this.target < 0 || this.target >= 255)
				{
					this.target = 0;
				}
				this.targetRect = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
				if (Main.player[this.target].dead)
				{
					faceTarget = false;
				}
				if (Main.player[this.target].npcTypeNoAggro[this.type] && this.direction != 0)
				{
					faceTarget = false;
				}
				if (faceTarget)
				{
					float num7 = num2 - (float)Main.player[this.target].aggro;
					float num8 = (float)((Main.player[this.target].height + Main.player[this.target].width + this.height + this.width) / 4 + 750 + 50);
					if (Main.player[this.target].itemAnimation != 0 || Main.player[this.target].aggro >= 0 || num7 <= num8 || this.oldTarget < 0 || this.oldTarget > 254)
					{
						this.direction = 1;
						if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.direction = -1;
						}
						this.directionY = 1;
						if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
						{
							this.directionY = -1;
						}
					}
				}
			}
			if (this.confused)
			{
				this.direction *= -1;
			}
			if ((this.direction != this.oldDirection || this.directionY != this.oldDirectionY || this.target != this.oldTarget) && !this.collideX && !this.collideY)
			{
				this.netUpdate = true;
			}
		}
		public void CheckActive()
		{
			if (this.active)
			{
				int num = this.type;
				if (num <= 267)
				{
					if (num <= 119)
					{
						if (num <= 41)
						{
							switch (num)
							{
							case 8:
							case 9:
							case 11:
							case 12:
							case 14:
							case 15:
								break;
							case 10:
							case 13:
								goto IL_1E6;
							default:
								switch (num)
								{
								case 40:
								case 41:
									break;
								default:
									goto IL_1E6;
								}
								break;
							}
						}
						else
						{
							switch (num)
							{
							case 88:
							case 89:
							case 90:
							case 91:
							case 92:
							case 96:
							case 97:
							case 99:
							case 100:
								break;
							case 93:
							case 94:
							case 95:
							case 98:
								goto IL_1E6;
							default:
								switch (num)
								{
								case 113:
								case 114:
								case 115:
								case 118:
								case 119:
									break;
								case 116:
								case 117:
									goto IL_1E6;
								default:
									goto IL_1E6;
								}
								break;
							}
						}
					}
					else if (num <= 249)
					{
						switch (num)
						{
						case 134:
						case 135:
						case 136:
							break;
						default:
							switch (num)
							{
							case 246:
							case 247:
							case 248:
							case 249:
								break;
							default:
								goto IL_1E6;
							}
							break;
						}
					}
					else if (num != 263 && num != 267)
					{
						goto IL_1E6;
					}
				}
				else if (num <= 422)
				{
					if (num <= 380)
					{
						if (num != 328)
						{
							switch (num)
							{
							case 379:
							case 380:
								break;
							default:
								goto IL_1E6;
							}
						}
					}
					else
					{
						switch (num)
						{
						case 396:
						case 397:
						case 398:
						case 400:
							break;
						case 399:
							goto IL_1E6;
						default:
							if (num != 422)
							{
								goto IL_1E6;
							}
							break;
						}
					}
				}
				else if (num <= 488)
				{
					switch (num)
					{
					case 437:
					case 438:
					case 439:
					case 440:
						break;
					default:
						if (num != 488)
						{
							goto IL_1E6;
						}
						break;
					}
				}
				else if (num != 493 && num != 507 && num != 517)
				{
					goto IL_1E6;
				}
				return;
				IL_1E6:
				if (this.townNPC || this.type == 453)
				{
					Rectangle rectangle = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.townRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.townRangeY), NPC.townRangeX * 2, NPC.townRangeY * 2);
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && rectangle.Intersects(new Rectangle((int)Main.player[i].position.X, (int)Main.player[i].position.Y, Main.player[i].width, Main.player[i].height)))
						{
							Main.player[i].townNPCs += this.npcSlots;
						}
					}
					if (this.type != 453)
					{
						return;
					}
				}
				bool flag = false;
				Rectangle rectangle2 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.activeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.activeRangeY), NPC.activeRangeX * 2, NPC.activeRangeY * 2);
				Rectangle rectangle3 = new Rectangle((int)((double)(this.position.X + (float)(this.width / 2)) - (double)NPC.sWidth * 0.5 - (double)this.width), (int)((double)(this.position.Y + (float)(this.height / 2)) - (double)NPC.sHeight * 0.5 - (double)this.height), NPC.sWidth + this.width * 2, NPC.sHeight + this.height * 2);
				for (int j = 0; j < 255; j++)
				{
					if (Main.player[j].active)
					{
						if (rectangle2.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							flag = true;
							if (this.type != 25 && this.type != 30 && this.type != 33 && this.releaseOwner == 255 && this.lifeMax > 0)
							{
								if (Main.slimeRain && Main.slimeRainNPC[this.type])
								{
									Main.player[j].activeNPCs += this.npcSlots * Main.slimeRainNPCSlots;
								}
								else
								{
									Main.player[j].activeNPCs += this.npcSlots;
								}
							}
						}
						if (rectangle3.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							this.timeLeft = NPC.activeTime;
						}
						if (this.boss)
						{
							flag = true;
						}
						int num2 = this.type;
						if (num2 <= 39)
						{
							if (num2 <= 10)
							{
								if (num2 != 7 && num2 != 10)
								{
									goto IL_5E1;
								}
							}
							else if (num2 != 13)
							{
								switch (num2)
								{
								case 35:
								case 36:
								case 39:
									break;
								case 37:
								case 38:
									goto IL_5E1;
								default:
									goto IL_5E1;
								}
							}
						}
						else if (num2 <= 131)
						{
							if (num2 != 87)
							{
								switch (num2)
								{
								case 127:
								case 128:
								case 129:
								case 130:
								case 131:
									break;
								default:
									goto IL_5E1;
								}
							}
						}
						else
						{
							switch (num2)
							{
							case 392:
							case 393:
							case 394:
								break;
							default:
								if (num2 == 399)
								{
									if (this.timeLeft == NPC.activeTime)
									{
										this.timeLeft = NPC.activeTime;
									}
									flag = true;
									goto IL_5E1;
								}
								switch (num2)
								{
								case 491:
								case 492:
									break;
								default:
									goto IL_5E1;
								}
								break;
							}
						}
						flag = true;
					}
					IL_5E1:;
				}
				this.timeLeft--;
				if (this.timeLeft <= 0)
				{
					flag = false;
				}
				if (!flag && Main.netMode != 1)
				{
					NPC.noSpawnCycle = true;
					this.active = false;
					if (Main.netMode == 2)
					{
						this.netSkip = -1;
						this.life = 0;
						NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
					}
					if (this.aiStyle == 6)
					{
						for (int k = (int)this.ai[0]; k > 0; k = (int)Main.npc[k].ai[0])
						{
							if (Main.npc[k].active)
							{
								Main.npc[k].active = false;
								if (Main.netMode == 2)
								{
									Main.npc[k].life = 0;
									Main.npc[k].netSkip = -1;
									NetMessage.SendData(23, -1, -1, "", k, 0f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
			}
		}
		public void checkDead()
		{
			if (!this.active)
			{
				return;
			}
			if (this.realLife >= 0 && this.realLife != this.whoAmI)
			{
				return;
			}
			if (this.life <= 0)
			{
				if (this.type == 397 || this.type == 396)
				{
					if (this.ai[0] != -2f)
					{
						this.ai[0] = -2f;
						this.life = this.lifeMax;
						this.netUpdate = true;
						this.dontTakeDamage = true;
						if (Main.netMode != 1)
						{
							int num = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 400, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num].ai[3] = this.ai[3];
							Main.npc[num].netUpdate = true;
						}
					}
					return;
				}
				if (this.type == 398 && this.ai[0] != 2f)
				{
					this.ai[0] = 2f;
					this.life = this.lifeMax;
					this.netUpdate = true;
					this.dontTakeDamage = true;
					return;
				}
				if ((this.type == 517 || this.type == 422 || this.type == 507 || this.type == 493) && this.ai[2] != 1f)
				{
					this.ai[2] = 1f;
					this.ai[1] = 0f;
					this.life = this.lifeMax;
					this.dontTakeDamage = true;
					this.netUpdate = true;
					return;
				}
				NPC.noSpawnCycle = true;
				if (this.townNPC && this.type != 37 && this.type != 453)
				{
					string name = this.name;
					if (this.displayName != "")
					{
						name = this.displayName;
					}
					if (Main.netMode == 0)
					{
						if (this.type == 369)
						{
							Main.NewText(name + Lang.misc[36], 255, 25, 25, false);
						}
						else
						{
							Main.NewText(name + Lang.misc[19], 255, 25, 25, false);
						}
					}
					else if (Main.netMode == 2)
					{
						if (this.type == 369)
						{
							NetMessage.SendData(25, -1, -1, name + Lang.misc[36], 255, 255f, 25f, 25f, 0, 0, 0);
						}
						else
						{
							NetMessage.SendData(25, -1, -1, name + Lang.misc[19], 255, 255f, 25f, 25f, 0, 0, 0);
						}
					}
				}
				if (Main.netMode != 1 && !Main.dayTime && this.type == 54 && !NPC.AnyNPCs(35))
				{
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && !Main.player[i].dead && Main.player[i].killClothier)
						{
							NPC.SpawnSkeletron();
							break;
						}
					}
				}
				if (this.townNPC && Main.netMode != 1 && this.homeless && WorldGen.spawnNPC == this.type)
				{
					WorldGen.spawnNPC = 0;
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					bool flag = true;
					for (int j = 0; j < 200; j++)
					{
						if (j != this.whoAmI && Main.npc[j].active && (Main.npc[j].type == 13 || Main.npc[j].type == 14 || Main.npc[j].type == 15))
						{
							flag = false;
							break;
						}
					}
					if (flag)
					{
						this.boss = true;
						this.NPCLoot();
					}
					else
					{
						this.NPCLoot();
					}
				}
				else if (this.type == 134)
				{
					Vector2 position = this.position;
					Vector2 center = Main.player[this.target].Center;
					float num2 = 1E+08f;
					Vector2 position2 = this.position;
					for (int k = 0; k < 200; k++)
					{
						if (Main.npc[k].active && (Main.npc[k].type == 134 || Main.npc[k].type == 135 || Main.npc[k].type == 136))
						{
							float num3 = Math.Abs(Main.npc[k].Center.X - center.X) + Math.Abs(Main.npc[k].Center.Y - center.Y);
							if (num3 < num2)
							{
								num2 = num3;
								position2 = Main.npc[k].position;
							}
						}
					}
					this.position = position2;
					this.NPCLoot();
					this.position = position;
				}
				else
				{
					this.NPCLoot();
				}
				this.active = false;
				if (Main.snowMoon)
				{
					string text = "";
					int[] array = new int[]
					{
						0,
						25,
						15,
						10,
						30,
						100,
						160,
						180,
						200,
						250,
						300,
						375,
						450,
						525,
						675,
						850,
						1025,
						1325,
						1550,
						2000,
						0
					};
					int num4 = array[NPC.waveCount];
					switch (NPC.waveCount)
					{
					case 1:
						text = "Wave 2: Zombie Elf and Elf Archer";
						break;
					case 2:
						text = "Wave 3: Zombie Elf, Elf Archer, Gingerbread Man, and Nutcracker";
						break;
					case 3:
						text = "Wave 4: Everscream, Zombie Elf, Elf Archer, and Gingerbread Man";
						break;
					case 4:
						text = "Wave 5: Everscream, Zombie Elf, Elf Archer, and Nutcracker";
						break;
					case 5:
						text = "Wave 6: Everscream, Elf Archer, Nutcracker, and Elf Copter";
						break;
					case 6:
						text = "Wave 7: Santa-NK1, Gingerbread Man, Elf Archer, and Zombie Elf";
						break;
					case 7:
						text = "Wave 8: Santa-NK1, Elf Copter, Elf Archer, Nutcracker, and Krampus";
						break;
					case 8:
						text = "Wave 9: Santa-NK1, Everscream, Nutcracker, Elf Copter, and Gingerbread Man";
						break;
					case 9:
						text = "Wave 10: Santa-NK1, Everscream, Krampus, Zombie Elf, and Elf Helicopter";
						break;
					case 10:
						text = "Wave 11: Ice Queen, Flocko, Zombie Elf, and Gingerbread Man";
						break;
					case 11:
						text = "Wave 12: Ice Queen, Everscream, Gingerbread Man, Yeti, and Zombie Elf";
						break;
					case 12:
						text = "Wave 13: Ice Queen, Santa-NK1, Gingerbread Man, Flocko, Yeti, and Elf Helicopter";
						break;
					case 13:
						text = "Wave 14: Ice Queen, Santa-NK1, Everscream, Yeti, and Krampus";
						break;
					case 14:
						text = "Wave 15: Ice Queen, Santa-NK1, Everscream, Yeti, and Elf Copter";
						break;
					case 15:
						text = "Wave 16: Ice Queen, Santa-NK1, Everscream, Yeti and Flocko";
						break;
					case 16:
						text = "Wave 17: Ice Queen, Santa-NK1, Everscream, Yeti, Krampus, Elf Copter";
						break;
					case 17:
						text = "Wave 18: Ice Queen, Santa-NK1, Everscream, Yeti, Nutcracker, Krampus";
						break;
					case 18:
						text = "Wave 19: Ice Queen, Santa-NK1, Everscream, Yeti";
						break;
					case 19:
						text = "Final Wave: Ice Queen, Santa-NK1, and Everscream";
						break;
					}
					float num5 = 0f;
					switch (this.type)
					{
					case 338:
					case 339:
					case 340:
						num5 = 1f;
						break;
					case 341:
						num5 = 20f;
						break;
					case 342:
						num5 = 2f;
						break;
					case 343:
						num5 = 18f;
						break;
					case 344:
						num5 = 50f;
						break;
					case 345:
						num5 = 150f;
						break;
					case 346:
						num5 = 100f;
						break;
					case 347:
						num5 = 8f;
						break;
					case 348:
					case 349:
						num5 = 4f;
						break;
					case 350:
						num5 = 3f;
						break;
					}
					if (Main.expertMode)
					{
						num5 *= 2f;
					}
					float num6 = NPC.waveKills;
					NPC.waveKills += num5;
					if (NPC.waveKills >= (float)num4 && num4 != 0)
					{
						NPC.waveKills = 0f;
						NPC.waveCount++;
						num4 = array[NPC.waveCount];
						if (text != "")
						{
							if (Main.netMode == 0)
							{
								Main.NewText(text, 175, 75, 255, false);
							}
							else if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, text, 255, 175f, 75f, 255f, 0, 0, 0);
							}
							if (NPC.waveCount == 15)
							{
								AchievementsHelper.NotifyProgressionEvent(14);
							}
						}
					}
					if (NPC.waveKills != num6 && num5 != 0f)
					{
						if (Main.netMode != 1)
						{
							Main.ReportInvasionProgress((int)NPC.waveKills, num4, 1, NPC.waveCount);
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, 1f, (float)NPC.waveCount, 0, 0, 0);
						}
					}
				}
				if (Main.pumpkinMoon)
				{
					string text2 = "";
					int[] array2 = new int[]
					{
						0,
						25,
						40,
						50,
						80,
						100,
						160,
						180,
						200,
						250,
						300,
						375,
						450,
						525,
						675,
						0
					};
					int num7 = array2[NPC.waveCount];
					switch (NPC.waveCount)
					{
					case 1:
						text2 = "Wave 2: " + Main.npcName[305] + " and " + Main.npcName[326];
						break;
					case 2:
						text2 = string.Concat(new string[]
						{
							"Wave 3: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", and ",
							Main.npcName[329]
						});
						break;
					case 3:
						text2 = string.Concat(new string[]
						{
							"Wave 4: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", and ",
							Main.npcName[325]
						});
						break;
					case 4:
						text2 = string.Concat(new string[]
						{
							"Wave 5: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[325]
						});
						break;
					case 5:
						text2 = string.Concat(new string[]
						{
							"Wave 6: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[325]
						});
						break;
					case 6:
						text2 = string.Concat(new string[]
						{
							"Wave 7: ",
							Main.npcName[305],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[327]
						});
						break;
					case 7:
						text2 = string.Concat(new string[]
						{
							"Wave 8: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[327]
						});
						break;
					case 8:
						text2 = string.Concat(new string[]
						{
							"Wave 9: ",
							Main.npcName[305],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
						break;
					case 9:
						text2 = string.Concat(new string[]
						{
							"Wave 10: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
						break;
					case 10:
						text2 = string.Concat(new string[]
						{
							"Wave 11: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
						break;
					case 11:
						text2 = string.Concat(new string[]
						{
							"Wave 12: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
						break;
					case 12:
						text2 = string.Concat(new string[]
						{
							"Wave 13: ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
						break;
					case 13:
						text2 = string.Concat(new string[]
						{
							"Wave 14: ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
						break;
					case 14:
						text2 = "Final Wave: " + Main.npcName[325] + ", and " + Main.npcName[327];
						break;
					}
					float num8 = 0f;
					switch (this.type)
					{
					case 305:
					case 306:
					case 307:
					case 308:
					case 309:
					case 310:
					case 311:
					case 312:
					case 313:
					case 314:
						num8 = 1f;
						break;
					case 315:
						num8 = 25f;
						break;
					case 325:
						num8 = 75f;
						break;
					case 326:
						num8 = 2f;
						break;
					case 327:
						num8 = 150f;
						break;
					case 329:
						num8 = 4f;
						break;
					case 330:
						num8 = 8f;
						break;
					}
					if (Main.expertMode)
					{
						num8 *= 2f;
					}
					float num9 = NPC.waveKills;
					NPC.waveKills += num8;
					if (NPC.waveKills >= (float)num7 && num7 != 0)
					{
						NPC.waveKills = 0f;
						NPC.waveCount++;
						num7 = array2[NPC.waveCount];
						if (text2 != "")
						{
							if (Main.netMode == 0)
							{
								Main.NewText(text2, 175, 75, 255, false);
							}
							else if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, text2, 255, 175f, 75f, 255f, 0, 0, 0);
							}
							if (NPC.waveCount == 15)
							{
								AchievementsHelper.NotifyProgressionEvent(15);
							}
						}
					}
					if (NPC.waveKills != num9 && num8 != 0f)
					{
						if (Main.netMode != 1)
						{
							Main.ReportInvasionProgress((int)NPC.waveKills, num7, 2, NPC.waveCount);
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, 2f, (float)NPC.waveCount, 0, 0, 0);
						}
					}
				}
				int num10 = 0;
				int num11 = this.type;
				if (num11 > 145)
				{
					if (num11 <= 395)
					{
						switch (num11)
						{
						case 212:
						case 213:
						case 214:
						case 215:
						case 216:
							break;
						default:
							switch (num11)
							{
							case 381:
							case 382:
							case 383:
							case 385:
							case 386:
							case 388:
							case 389:
							case 390:
							case 391:
							case 395:
								num10 = 4;
								goto IL_122B;
							case 384:
							case 387:
							case 392:
							case 393:
							case 394:
								goto IL_122B;
							default:
								goto IL_122B;
							}
						}
					}
					else
					{
						if (num11 == 471)
						{
							goto IL_1219;
						}
						if (num11 != 491)
						{
							goto IL_122B;
						}
					}
					num10 = 3;
					goto IL_122B;
				}
				switch (num11)
				{
				case 26:
				case 27:
				case 28:
				case 29:
					break;
				default:
					if (num11 != 111)
					{
						switch (num11)
						{
						case 143:
						case 144:
						case 145:
							num10 = 2;
							goto IL_122B;
						default:
							goto IL_122B;
						}
					}
					break;
				}
				IL_1219:
				num10 = 1;
				IL_122B:
				if (num10 != 0 && num10 == Main.invasionType)
				{
					int num12 = 1;
					int num13 = this.type;
					if (num13 <= 395)
					{
						if (num13 != 216)
						{
							if (num13 == 395)
							{
								num12 = 10;
							}
						}
						else
						{
							num12 = 5;
						}
					}
					else if (num13 != 471)
					{
						if (num13 == 491)
						{
							num12 = 10;
						}
					}
					else
					{
						num12 = 10;
					}
					Main.invasionSize -= num12;
					if (Main.invasionSize < 0)
					{
						Main.invasionSize = 0;
					}
					if (Main.netMode != 1)
					{
						Main.ReportInvasionProgress(Main.invasionSizeStart - Main.invasionSize, Main.invasionSizeStart, num10 + 2, 0);
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, (float)Main.invasionProgressIcon, 0f, 0, 0, 0);
					}
				}
			}
		}
		public static void ResetKillCount()
		{
			for (int i = 0; i < 540; i++)
			{
				NPC.killCount[i] = 0;
			}
		}
		public bool AnyInteractions()
		{
			if (Main.netMode == 0)
			{
				if (this.playerInteraction[Main.myPlayer])
				{
					return true;
				}
			}
			else
			{
				for (int i = 0; i < 255; i++)
				{
					if (this.playerInteraction[i])
					{
						return true;
					}
				}
			}
			return false;
		}
		public void NPCLoot()
		{
			if (Main.netMode == 1 || this.type >= 540)
			{
				return;
			}
			bool flag = NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3;
			int num = this.type;
			switch (num)
			{
			case 13:
			case 14:
			case 15:
				if (this.boss)
				{
					AchievementsHelper.NotifyNPCKilled(this);
				}
				break;
			default:
				switch (num)
				{
				case 125:
				case 126:
				{
					int num2 = (this.type == 126) ? 125 : 126;
					if (!NPC.AnyNPCs(num2))
					{
						AchievementsHelper.NotifyNPCKilled(this);
						AchievementsHelper.CheckMechaMayhem(this.type);
						goto IL_C1;
					}
					goto IL_C1;
				}
				case 127:
					break;
				default:
					if (num != 134)
					{
						AchievementsHelper.NotifyNPCKilled(this);
						goto IL_C1;
					}
					break;
				}
				AchievementsHelper.CheckMechaMayhem(this.type);
				AchievementsHelper.NotifyNPCKilled(this);
				break;
			}
			IL_C1:
			int num3 = Item.NPCtoBanner(this.BannerID());
			if (num3 > 0 && !NPCID.Sets.ExcludedFromDeathTally[this.type] && this.AnyInteractions())
			{
				NPC.killCount[num3]++;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(83, -1, -1, "", num3, 0f, 0f, 0f, 0, 0, 0);
				}
				int num4 = 50;
				if (NPC.killCount[num3] % num4 == 0 && num3 > 0)
				{
					int l = Item.BannerToNPC(num3);
					NPC nPC = new NPC();
					nPC.netDefaults(l);
					int num5 = this.lastInteraction;
					if (!Main.player[num5].active || Main.player[num5].dead)
					{
						num5 = this.FindClosestPlayer();
					}
					string text = string.Concat(new object[]
					{
						"The ",
						NPC.killCount[num3],
						"th ",
						Lang.npcName(l, false),
						" has been defeated!"
					});
					if (num5 >= 0 && num5 < 255)
					{
						text = string.Concat(new object[]
						{
							Main.player[num5].name,
							" has defeated the ",
							NPC.killCount[num3],
							"th ",
							Lang.npcName(l, false),
							"!"
						});
					}
					if (Main.netMode == 0)
					{
						Main.NewText(text, 250, 250, 0, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, text, 255, 250f, 250f, 0f, 0, 0, 0);
					}
					int num6 = 1615 + num3 - 1;
					if (num3 >= 249)
					{
						num6 = 3593 + num3 - 249;
					}
					else if (num3 >= 186)
					{
						num6 = 3390 + num3 - 186;
					}
					else if (num3 >= 88)
					{
						num6 = 2897 + num3 - 88;
					}
					Vector2 position = this.position;
					if (num5 >= 0 && num5 < 255)
					{
						position = Main.player[num5].position;
					}
					DropLoot(position, this.width, this.height, num6, 1, false, 0, false, false);
				}
			}
			if (this.type == 23 && Main.hardMode)
			{
				return;
			}
			if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(3) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3532, 1, false, 0, false, false);
			}
			num = this.type;
			if (num <= 122)
			{
				if (num <= 80)
				{
					if (num != 75 && num != 80)
					{
						goto IL_482;
					}
				}
				else
				{
					switch (num)
					{
					case 84:
					case 86:
						break;
					case 85:
						goto IL_482;
					default:
						switch (num)
						{
						case 120:
						case 122:
							break;
						case 121:
							goto IL_482;
						default:
							goto IL_482;
						}
						break;
					}
				}
			}
			else if (num <= 171)
			{
				switch (num)
				{
				case 137:
				case 138:
					break;
				default:
					if (num != 171)
					{
						goto IL_482;
					}
					break;
				}
			}
			else if (num != 244 && num != 475)
			{
				goto IL_482;
			}
			int maxValue = Main.expertMode ? 150 : 200;
			if (Main.rand.Next(maxValue) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3260, 1, false, 0, false, false);
			}
			IL_482:
			if (Main.slimeRain && Main.slimeRainNPC[this.type] && !NPC.AnyNPCs(50))
			{
				int num7 = 150;
				if (NPC.downedSlimeKing)
				{
					num7 /= 2;
				}
				Main.slimeRainKillCount++;
				if (Main.slimeRainKillCount >= num7)
				{
					int plr = this.FindClosestPlayer();
					NPC.SpawnOnPlayer(plr, 50);
					Main.slimeRainKillCount = -num7 / 2;
				}
			}
			if (!Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneDungeon)
			{
				bool flag2 = false;
				if (Main.expertMode && Main.rand.Next(5) == 0)
				{
					flag2 = true;
				}
				else if (Main.rand.Next(5) == 0)
				{
					flag2 = true;
				}
				if (this.boss)
				{
					flag2 = false;
				}
				switch (this.type)
				{
				case 13:
				case 14:
				case 15:
					flag2 = false;
					break;
				}
				if (Main.hardMode && this.lifeMax > 1 && this.damage > 0 && !this.friendly && (double)this.position.Y > Main.rockLayer * 16.0 && flag2 && this.type != 121 && this.value > 0f)
				{
					if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt || Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
					{
						DropLoot(this.position, this.width, this.height, 521, 1, false, 0, false, false);
					}
					if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
					{
						DropLoot(this.position, this.width, this.height, 520, 1, false, 0, false, false);
					}
				}
			}
			if (this.type == 1 && this.ai[1] > 0f)
			{
				int num8 = (int)this.ai[1];
				if (num8 > 0 && num8 < Main.maxItemTypes)
				{
					int num9 = 1;
					if (num8 == 8)
					{
						num9 = Main.rand.Next(5, 11);
					}
					else if (num8 == 166)
					{
						num9 = Main.rand.Next(2, 7);
					}
					else if (num8 == 965)
					{
						num9 = Main.rand.Next(20, 46);
					}
					else if ((num8 >= 11 && num8 <= 14) || (num8 >= 699 && num8 <= 702))
					{
						num9 = Main.rand.Next(3, 9);
						if (Main.rand.Next(2) == 0)
						{
							num9 += 5;
						}
					}
					else if (num8 == 71)
					{
						num9 = Main.rand.Next(50, 100);
					}
					else if (num8 == 72)
					{
						num9 = Main.rand.Next(20, 100);
					}
					else if (num8 == 73)
					{
						num9 = Main.rand.Next(1, 3);
					}
					DropLoot(this.position, this.width, this.height, num8, num9, false, 0, false, false);
				}
			}
			if (this.type == 22 && this.displayName == "Andrew")
			{
				DropLoot(this.position, this.width, this.height, 867, 1, false, 0, false, false);
			}
			if (this.type == 353 && Main.rand.Next(8) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3352, 1, false, 0, false, false);
			}
			if (this.type == 441 && Main.rand.Next(8) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3351, 1, false, 0, false, false);
			}
			if (this.type == 227 && Main.rand.Next(10) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3350, 1, false, 0, false, false);
			}
			if (this.type == 208 && Main.rand.Next(4) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3548, Main.rand.Next(30, 61), false, 0, false, false);
			}
			if (this.type == 207 && Main.rand.Next(8) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3349, 1, false, 0, false, false);
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (!NPC.downedMechBoss1 && Main.rand.Next(2500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 556, 1, false, 0, false, false);
				}
				else if (!NPC.downedMechBoss2 && Main.rand.Next(2500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 544, 1, false, 0, false, false);
				}
				else if (!NPC.downedMechBoss3 && Main.rand.Next(2500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 557, 1, false, 0, false, false);
				}
			}
			if (Main.halloween && this.value > 0f && this.value < 500f && this.damage < 40 && this.defense < 20)
			{
				if (Main.rand.Next(2000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1825, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1827, 1, false, 0, false, false);
				}
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneJungle)
				{
					DropLoot(this.position, this.width, this.height, 1533, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt)
				{
					DropLoot(this.position, this.width, this.height, 1534, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
				{
					DropLoot(this.position, this.width, this.height, 1535, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
				{
					DropLoot(this.position, this.width, this.height, 1536, 1, false, 0, false, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneSnow)
				{
					DropLoot(this.position, this.width, this.height, 1537, 1, false, 0, false, false);
				}
			}
			if (this.type == 68)
			{
				DropLoot(this.position, this.width, this.height, 1169, 1, false, 0, false, false);
			}
			if (Main.snowMoon)
			{
				int num10 = NPC.waveCount;
				if (Main.expertMode)
				{
					num10 += 7;
				}
				int num11 = (int)((double)(30 - num10) / 2.5);
				if (Main.expertMode)
				{
					num11 -= 2;
				}
				if (num11 < 1)
				{
					num11 = 1;
				}
				if (this.type == 344)
				{
					NPC.downedChristmasTree = true;
				}
				if (this.type == 345)
				{
					NPC.downedChristmasIceQueen = true;
				}
				if (this.type == 346)
				{
					NPC.downedChristmasSantank = true;
				}
				if ((this.type == 344 || this.type == 345 || this.type == 346) && Main.rand.Next(num11) == 0 && num10 >= 15)
				{
					int num12 = 4;
					if (num10 == 16)
					{
						num12 = 4;
					}
					if (num10 == 17)
					{
						num12 = 3;
					}
					if (num10 == 18)
					{
						num12 = 3;
					}
					if (num10 == 19)
					{
						num12 = 2;
					}
					if (num10 >= 20)
					{
						num12 = 2;
					}
					if (Main.expertMode && Main.rand.Next(3) == 0)
					{
						num12--;
					}
					if (Main.rand.Next(num12) == 0)
					{
						if (this.type == 344)
						{
							DropLoot(this.position, this.width, this.height, 1962, 1, false, 0, false, false);
						}
						if (this.type == 345)
						{
							DropLoot(this.position, this.width, this.height, 1960, 1, false, 0, false, false);
						}
						if (this.type == 346)
						{
							DropLoot(this.position, this.width, this.height, 1961, 1, false, 0, false, false);
						}
					}
				}
				if (Main.rand.Next(num11) == 0)
				{
					if (this.type == 344)
					{
						int num13 = Main.rand.Next(3);
						if (Main.rand.Next(15) == 0)
						{
							DropLoot(this.position, this.width, this.height, 1871, 1, false, -1, false, false);
						}
						else
						{
							if (num13 == 0)
							{
								DropLoot(this.position, this.width, this.height, 1916, 1, false, 0, false, false);
							}
							if (num13 == 1)
							{
								DropLoot(this.position, this.width, this.height, 1928, 1, false, -1, false, false);
							}
							if (num13 == 2)
							{
								DropLoot(this.position, this.width, this.height, 1930, 1, false, -1, false, false);
							}
						}
					}
					if (this.type == 346)
					{
						int num14 = Main.rand.Next(2);
						if (num14 == 0)
						{
							DropLoot(this.position, this.width, this.height, 1910, 1, false, -1, false, false);
						}
						if (num14 == 1)
						{
							DropLoot(this.position, this.width, this.height, 1929, 1, false, -1, false, false);
						}
					}
					if (this.type == 345)
					{
						if (NPC.waveCount >= 15 && Main.rand.Next(30) == 0)
						{
							DropLoot(this.position, this.width, this.height, 1914, 1, false, 0, false, false);
						}
						else if (Main.rand.Next(15) == 0)
						{
							DropLoot(this.position, this.width, this.height, 1959, 1, false, 0, false, false);
						}
						else
						{
							int num15 = Main.rand.Next(3);
							if (num15 == 0)
							{
								DropLoot(this.position, this.width, this.height, 1931, 1, false, -1, false, false);
							}
							if (num15 == 1)
							{
								DropLoot(this.position, this.width, this.height, 1946, 1, false, -1, false, false);
							}
							if (num15 == 2)
							{
								DropLoot(this.position, this.width, this.height, 1947, 1, false, -1, false, false);
							}
						}
					}
				}
			}
			if (this.type == 341)
			{
				int num16 = Main.rand.Next(5, 11);
				for (int i = 0; i < num16; i++)
				{
					DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
				}
				if (Main.xMas)
				{
					DropLoot(this.position, this.width, this.height, 1869, 1, false, 0, false, false);
				}
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(5) == 0)
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(200) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1943 + Main.rand.Next(3), 1, false, 0, false, false);
			}
			if (this.type == 342 && Main.rand.Next(3) != 0)
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (Main.pumpkinMoon)
			{
				if (this.type == 325)
				{
					NPC.downedHalloweenTree = true;
				}
				if (this.type == 327)
				{
					NPC.downedHalloweenKing = true;
				}
				int num17 = NPC.waveCount;
				if (Main.expertMode)
				{
					num17 += 6;
				}
				int num18 = (int)((double)(17 - num17) / 1.25);
				if (Main.expertMode)
				{
					num18--;
				}
				if (num18 < 1)
				{
					num18 = 1;
				}
				if (num17 >= 15)
				{
					if (this.type == 325)
					{
						DropLoot(this.position, this.width, this.height, 1855, 1, false, 0, false, false);
					}
					if (this.type == 327)
					{
						DropLoot(this.position, this.width, this.height, 1856, 1, false, 0, false, false);
					}
				}
				if (Main.rand.Next(num18) == 0)
				{
					if (this.type == 315 && Main.rand.Next(20) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1857, 1, false, 0, false, false);
					}
					if (this.type >= 305 && this.type <= 314 && Main.rand.Next(10) == 0)
					{
						DropLoot(this.position, this.width, this.height, Main.rand.Next(1788, 1791), 1, false, 0, false, false);
					}
					if (this.type == 325)
					{
						int num19 = Main.rand.Next(5);
						if (num19 == 0)
						{
							DropLoot(this.position, this.width, this.height, 1829, 1, false, 0, false, false);
						}
						if (num19 == 1)
						{
							DropLoot(this.position, this.width, this.height, 1831, 1, false, 0, false, false);
						}
						if (num19 == 2)
						{
							DropLoot(this.position, this.width, this.height, 1835, 1, false, -1, false, false);
						}
						if (num19 == 2)
						{
							DropLoot(this.position, this.width, this.height, 1836, Main.rand.Next(30, 61), false, 0, false, false);
						}
						if (num19 == 3)
						{
							DropLoot(this.position, this.width, this.height, 1837, 1, false, 0, false, false);
						}
						if (num19 == 4)
						{
							DropLoot(this.position, this.width, this.height, 1845, 1, false, -1, false, false);
						}
					}
					if (this.type == 327)
					{
						int num20 = Main.rand.Next(7);
						if (num20 == 0)
						{
							DropLoot(this.position, this.width, this.height, 1782, 1, false, -1, false, false);
						}
						if (num20 == 0)
						{
							DropLoot(this.position, this.width, this.height, 1783, Main.rand.Next(50, 101), false, 0, false, false);
						}
						if (num20 == 1)
						{
							DropLoot(this.position, this.width, this.height, 1784, 1, false, -1, false, false);
						}
						if (num20 == 1)
						{
							DropLoot(this.position, this.width, this.height, 1785, Main.rand.Next(25, 51), false, 0, false, false);
						}
						if (num20 == 2)
						{
							DropLoot(this.position, this.width, this.height, 1811, 1, false, 0, false, false);
						}
						if (num20 == 3)
						{
							DropLoot(this.position, this.width, this.height, 1826, 1, false, -1, false, false);
						}
						if (num20 == 4)
						{
							DropLoot(this.position, this.width, this.height, 1801, 1, false, -1, false, false);
						}
						if (num20 == 5)
						{
							DropLoot(this.position, this.width, this.height, 1802, 1, false, -1, false, false);
						}
						if (num20 == 6)
						{
							DropLoot(this.position, this.width, this.height, 1798, 1, false, 0, false, false);
						}
					}
				}
			}
			if (this.type == 325)
			{
				DropLoot(this.position, this.width, this.height, 1729, Main.rand.Next(30, 51), false, 0, false, false);
			}
			if (this.type == 326)
			{
				DropLoot(this.position, this.width, this.height, 1729, Main.rand.Next(1, 5), false, 0, false, false);
			}
			if (this.type >= 305 && this.type <= 314 && Main.rand.Next(4) == 0)
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 326 && Main.rand.Next(6) == 0)
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 329 && Main.rand.Next(4) == 0)
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 330 && Main.rand.Next(4) == 0)
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 315)
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (Main.halloween && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.type != 23 && this.value > 0f && Main.rand.Next(80) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1774, 1, false, 0, false, false);
			}
			if (Main.xMas && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.value > 0f && Main.rand.Next(13) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1869, 1, false, 0, false, false);
			}
			if (this.lifeMax > 5 && this.value > 0f && !this.friendly && Main.hardMode && this.position.Y / 16f > (float)(Main.maxTilesY - 200) && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 2701, Main.rand.Next(20, 51), false, 0, false, false);
			}
			if (this.type == 325 || this.type == 327 || this.type == 344 || this.type == 345 || this.type == 346)
			{
				int num21 = Main.rand.Next(6) + 6;
				for (int j = 0; j < num21; j++)
				{
					DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 156 && Main.rand.Next(75) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1518, 1, false, 0, false, false);
			}
			if (this.type == 243 && Main.rand.Next(3) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1519, 1, false, 0, false, false);
			}
			if (this.type >= 269 && this.type <= 280 && Main.rand.Next(450) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1517, 1, false, 0, false, false);
			}
			if ((this.type == 158 || this.type == 159) && Main.rand.Next(40) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1520, 1, false, 0, false, false);
			}
			if (this.type == 176 && Main.rand.Next(150) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1521, 1, false, 0, false, false);
			}
			if (this.type == 48 && Main.rand.Next(200) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1516, 1, false, 0, false, false);
			}
			if (this.type == 205 && Main.rand.Next(2) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1611, 1, false, 0, false, false);
			}
			if (this.type == 483 || this.type == 482)
			{
				DropLoot(this.position, this.width, this.height, 3086, Main.rand.Next(5, 11), false, -1, false, false);
			}
			if (!Main.hardMode && Main.rand.Next(100) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && Main.rand.Next(4) == 0 && this.position.Y / 16f > (float)(Main.maxTilesY - 350) && NPC.downedBoss3)
			{
				DropLoot(this.position, this.width, this.height, 3282, 1, false, -1, false, false);
			}
			if (Main.hardMode && Main.player[this.target].ZoneSnow && Main.rand.Next(80) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && this.value > 0f)
			{
				DropLoot(this.position, this.width, this.height, 3289, 1, false, -1, false, false);
			}
			else if (Main.hardMode && Main.rand.Next(200) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && this.value > 0f)
			{
				if (Main.player[this.target].ZoneJungle && NPC.downedMechBossAny)
				{
					DropLoot(this.position, this.width, this.height, 3286, 1, false, -1, false, false);
				}
				else if (Main.player[this.target].ZoneDungeon && NPC.downedPlantBoss)
				{
					DropLoot(this.position, this.width, this.height, 3291, 1, false, -1, false, false);
				}
				else if ((double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && !Main.player[this.target].ZoneDungeon && Main.rand.Next(2) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3290, 1, false, -1, false, false);
				}
			}
			int num22 = 1;
			if (Main.expertMode && Main.rand.Next(2) == 0)
			{
				num22 = 2;
			}
			for (int k = 0; k < num22; k++)
			{
				if (this.type == 461 && Main.rand.Next(50) == 0)
				{
					DropLoot(this.position, this.width, this.height, 497, 1, false, -1, false, false);
				}
				if ((this.type == 159 || this.type == 158) && Main.rand.Next(35) == 0)
				{
					DropLoot(this.position, this.width, this.height, 900, 1, false, -1, false, false);
				}
				if (this.type == 251 && Main.rand.Next(15) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1311, 1, false, -1, false, false);
				}
				if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3)
				{
					if (this.type == 477)
					{
						if (Main.rand.Next(20) == 0 && NPC.downedPlantBoss)
						{
							DropLoot(this.position, this.width, this.height, 2770, 1, false, -1, false, false);
							k++;
						}
						if (Main.rand.Next(4) == 0)
						{
							DropLoot(this.position, this.width, this.height, 1570, 1, false, -1, false, false);
							k++;
						}
						else if (Main.rand.Next(3) == 0 && NPC.downedPlantBoss)
						{
							DropLoot(this.position, this.width, this.height, 3292, 1, false, -1, false, false);
							k++;
						}
					}
					if (this.type == 253 && Main.rand.Next(40) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1327, 1, false, -1, false, false);
					}
				}
				if (NPC.downedPlantBoss)
				{
					if (this.type == 460 && Main.rand.Next(40) == 0)
					{
						DropLoot(this.position, this.width, this.height, 3098, 1, false, -1, false, false);
					}
					if (this.type == 468 && Main.rand.Next(40) == 0)
					{
						DropLoot(this.position, this.width, this.height, 3105, 1, false, -1, false, false);
					}
					if (this.type == 466 && Main.rand.Next(40) == 0)
					{
						DropLoot(this.position, this.width, this.height, 3106, 1, false, -1, false, false);
					}
					if (this.type == 467 && Main.rand.Next(40) == 0)
					{
						DropLoot(this.position, this.width, this.height, 3249, 1, false, -1, false, false);
					}
					if (this.type == 463 && Main.rand.Next(25) == 0)
					{
						DropLoot(this.position, this.width, this.height, 3107, 1, false, -1, false, false);
						DropLoot(this.position, this.width, this.height, 3108, Main.rand.Next(100, 201), false, -1, false, false);
					}
				}
			}
			if (Main.bloodMoon && Main.hardMode && Main.rand.Next(1000) == 0 && this.value > 0f)
			{
				DropLoot(this.position, this.width, this.height, 1314, 1, false, -1, false, false);
			}
			if (this.type == 77 && Main.rand.Next(150) == 0)
			{
				DropLoot(this.position, this.width, this.height, 723, 1, false, -1, false, false);
			}
			if (Main.rand.Next(100) == 0 || (Main.expertMode && Main.rand.Next(100) == 0))
			{
				int num23 = -1;
				int num24 = -1;
				num = this.type;
				if (num <= 109)
				{
					if (num > 42)
					{
						switch (num)
						{
						case 75:
							if (Main.rand.Next(2) == 0)
							{
								num23 = 889;
							}
							else
							{
								num23 = 890;
							}
							if (Main.rand.Next(100) != 0)
							{
								goto IL_2B09;
							}
							if (num23 == 889)
							{
								num24 = 890;
								goto IL_2B09;
							}
							num24 = 889;
							goto IL_2B09;
						case 76:
						case 85:
						case 86:
						case 87:
						case 88:
						case 89:
						case 90:
						case 91:
						case 92:
							goto IL_2B09;
						case 77:
							goto IL_2A1F;
						case 78:
						case 82:
							num23 = 889;
							goto IL_2B09;
						case 79:
							if (Main.rand.Next(2) == 0)
							{
								num23 = 888;
							}
							else
							{
								num23 = 890;
							}
							if (Main.rand.Next(100) != 0)
							{
								goto IL_2B09;
							}
							if (num23 == 888)
							{
								num24 = 890;
								goto IL_2B09;
							}
							num24 = 888;
							goto IL_2B09;
						case 80:
						case 93:
							break;
						case 81:
							num23 = 888;
							goto IL_2B09;
						case 83:
						case 84:
							goto IL_2A5B;
						case 94:
							goto IL_2A67;
						default:
							switch (num)
							{
							case 102:
							case 104:
								goto IL_2A13;
							case 103:
								num23 = 890;
								goto IL_2B09;
							default:
								if (num != 109)
								{
									goto IL_2B09;
								}
								break;
							}
							break;
						}
						num23 = 893;
						goto IL_2B09;
					}
					if (num == 34)
					{
						goto IL_2A5B;
					}
					if (num != 42)
					{
						goto IL_2B09;
					}
					goto IL_2A2B;
				}
				else if (num <= 179)
				{
					if (num == 141 || num == 176)
					{
						goto IL_2A2B;
					}
					if (num != 179)
					{
						goto IL_2B09;
					}
					goto IL_2A5B;
				}
				else
				{
					if (num == 182)
					{
						goto IL_2A67;
					}
					switch (num)
					{
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
						goto IL_2A2B;
					default:
						switch (num)
						{
						case 269:
						case 270:
						case 271:
						case 272:
							break;
						case 273:
						case 274:
						case 275:
						case 276:
							goto IL_2A1F;
						default:
							goto IL_2B09;
						}
						break;
					}
				}
				IL_2A13:
				num23 = 885;
				goto IL_2B09;
				IL_2A1F:
				num23 = 886;
				goto IL_2B09;
				IL_2A2B:
				num23 = 887;
				goto IL_2B09;
				IL_2A5B:
				num23 = 891;
				goto IL_2B09;
				IL_2A67:
				num23 = 892;
				IL_2B09:
				if (num23 != -1)
				{
					DropLoot(this.position, this.width, this.height, num23, 1, false, -1, false, false);
				}
				if (num24 != -1)
				{
					DropLoot(this.position, this.width, this.height, num24, 1, false, -1, false, false);
				}
			}
			int num25 = 1;
			if (Main.expertMode && Main.rand.Next(2) == 0)
			{
				num25 = 2;
			}
			for (int m = 0; m < num25; m++)
			{
				if (this.type == 290)
				{
					if (Main.rand.Next(15) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1513, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(10) == 0)
					{
						DropLoot(this.position, this.width, this.height, 938, 1, false, -1, false, false);
					}
				}
				if (this.type == 287 && Main.rand.Next(6) == 0)
				{
					if (Main.rand.Next(2) == 0)
					{
						DropLoot(this.position, this.width, this.height, 963, 1, false, -1, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 977, 1, false, -1, false, false);
					}
				}
				if (this.type == 291)
				{
					if (Main.rand.Next(12) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1300, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(12) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1254, 1, false, -1, false, false);
					}
				}
				if (this.type == 292)
				{
					if (Main.rand.Next(12) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1514, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(12) == 0)
					{
						DropLoot(this.position, this.width, this.height, 679, 1, false, -1, false, false);
					}
				}
				if (this.type == 293 && Main.rand.Next(18) == 0)
				{
					DropLoot(this.position, this.width, this.height, 759, 1, false, -1, false, false);
				}
				if ((this.type == 281 || this.type == 282) && Main.rand.Next(20) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1446, 1, false, -1, false, false);
				}
				if ((this.type == 283 || this.type == 284) && Main.rand.Next(20) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1444, 1, false, -1, false, false);
				}
				if ((this.type == 285 || this.type == 286) && Main.rand.Next(20) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1445, 1, false, -1, false, false);
				}
				if (this.type >= 269 && this.type <= 280)
				{
					if (Main.rand.Next(400) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1183, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(300) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1266, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(200) == 0)
					{
						DropLoot(this.position, this.width, this.height, 671, 1, false, -1, false, false);
					}
				}
			}
			if (this.lifeMax > 100 && this.type != 288 && this.value > 0f && this.target >= 0 && Main.hardMode && NPC.downedPlantBoss && Main.player[this.target].ZoneDungeon)
			{
				int maxValue2 = 13;
				if (Main.expertMode)
				{
					maxValue2 = 9;
				}
				if (Main.rand.Next(maxValue2) == 0 && Main.wallDungeon[(int)Main.tile[(int)base.Center.X / 16, (int)base.Center.Y / 16].wall])
				{
					NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 288, 0, 0f, 0f, 0f, 0f, 255);
				}
			}
			if (this.type == 288)
			{
				DropLoot(this.position, this.width, this.height, 1508, Main.rand.Next(1, 3), false, -1, false, false);
			}
			if (this.type == 156 && Main.rand.Next(30) == 0)
			{
				DropLoot(this.position, this.width, this.height, 683, 1, false, -1, false, false);
			}
			if ((this.type == 195 || this.type == 196) && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				DropLoot(this.position, this.width, this.height, 3102, 1, false, -1, false, false);
			}
			if (this.type == 245)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2110, 1, false, -1, false, false);
					}
					int num26 = Main.rand.Next(8);
					if (num26 == 0)
					{
						DropLoot(this.position, this.width, this.height, 1258, 1, false, -1, false, false);
						DropLoot(this.position, this.width, this.height, 1261, Main.rand.Next(60, 100), false, 0, false, false);
					}
					else if (num26 == 1)
					{
						DropLoot(this.position, this.width, this.height, 1122, 1, false, -1, false, false);
					}
					else if (num26 == 2)
					{
						DropLoot(this.position, this.width, this.height, 899, 1, false, -1, false, false);
					}
					else if (num26 == 3)
					{
						DropLoot(this.position, this.width, this.height, 1248, 1, false, -1, false, false);
					}
					else if (num26 == 4)
					{
						DropLoot(this.position, this.width, this.height, 1294, 1, false, -1, false, false);
					}
					else if (num26 == 5)
					{
						DropLoot(this.position, this.width, this.height, 1295, 1, false, -1, false, false);
					}
					else if (num26 == 6)
					{
						DropLoot(this.position, this.width, this.height, 1296, 1, false, -1, false, false);
					}
					else if (num26 == 7)
					{
						DropLoot(this.position, this.width, this.height, 1297, 1, false, -1, false, false);
					}
					DropLoot(this.position, this.width, this.height, 2218, Main.rand.Next(4, 9), false, -1, false, false);
				}
				NPC.downedGolemBoss = true;
			}
			if (this.type == 471 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				if (Main.rand.Next(3) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3052, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3053, 1, false, -1, false, false);
				}
				else
				{
					DropLoot(this.position, this.width, this.height, 3054, 1, false, -1, false, false);
				}
			}
			if (this.type == 268)
			{
				DropLoot(this.position, this.width, this.height, 1332, Main.rand.Next(2, 6), false, 0, false, false);
			}
			if (this.type == 370)
			{
				NPC.downedFishron = true;
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2588, 1, false, -1, false, false);
					}
					if (Main.rand.Next(15) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2609, 1, false, -1, false, false);
					}
					int num27 = Main.rand.Next(5);
					if (num27 == 0)
					{
						DropLoot(this.position, this.width, this.height, 2611, 1, false, -1, false, false);
					}
					else if (num27 == 1)
					{
						DropLoot(this.position, this.width, this.height, 2624, 1, false, -1, false, false);
					}
					else if (num27 == 2)
					{
						DropLoot(this.position, this.width, this.height, 2622, 1, false, -1, false, false);
					}
					else if (num27 == 3)
					{
						DropLoot(this.position, this.width, this.height, 2621, 1, false, -1, false, false);
					}
					else if (num27 == 4)
					{
						DropLoot(this.position, this.width, this.height, 2623, 1, false, -1, false, false);
					}
				}
			}
			if (this.type == 109 && !NPC.downedClown)
			{
				NPC.downedClown = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 153 && Main.rand.Next(17) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1328, 1, false, -1, false, false);
			}
			if (this.type == 120 && Main.rand.Next(500) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1326, 1, false, -1, false, false);
			}
			if (this.type == 49 && Main.rand.Next(250) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1325, 1, false, -1, false, false);
			}
			if (this.type == 185 && Main.rand.Next(150) == 0)
			{
				DropLoot(this.position, this.width, this.height, 951, 1, false, -1, false, false);
			}
			if (this.type == 44 && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1320, 1, false, -1, false, false);
			}
			if (this.type == 44 && Main.rand.Next(20) == 0)
			{
				DropLoot(this.position, this.width, this.height, 88, 1, false, -1, false, false);
			}
			if (this.type == 110 && Main.rand.Next(80) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1321, 1, false, -1, false, false);
			}
			if (this.type == 60 && Main.rand.Next(150) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1322, 1, false, -1, false, false);
			}
			if (this.type == 151 && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1322, 1, false, -1, false, false);
			}
			if (this.type == 24 && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1323, 1, false, -1, false, false);
			}
			if (this.type == 109 && Main.rand.Next(30) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1324, Main.rand.Next(1, 5), false, -1, false, false);
			}
			if (this.type == 163 || this.type == 238)
			{
				if (Main.rand.Next(40) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1308, 1, false, -1, false, false);
				}
				if (Main.expertMode)
				{
					if (Main.rand.Next(3) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2607, Main.rand.Next(2, 4), false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 2607, 1, false, 0, false, false);
					}
				}
				else if (Main.rand.Next(4) != 0)
				{
					if (Main.rand.Next(3) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2607, Main.rand.Next(1, 3), false, 0, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 2607, 1, false, 0, false, false);
					}
				}
			}
			if (Main.hardMode && (this.type == 197 || this.type == 206 || this.type == 169 || this.type == 154) && Main.rand.Next(180) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1306, 1, false, -1, false, false);
			}
			if (this.type == 244)
			{
				DropLoot(this.position, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				if (Main.rand.Next(2) == 0)
				{
					DropLoot(this.position, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					DropLoot(this.position, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					DropLoot(this.position, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false, false);
				}
				DropLoot(this.position, this.width, this.height, 662, Main.rand.Next(30, 60), false, 0, false, false);
			}
			if (this.type == 250 && Main.rand.Next(15) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1244, 1, false, -1, false, false);
			}
			if (this.type == 172)
			{
				DropLoot(this.position, this.width, this.height, 754, 1, false, -1, false, false);
				DropLoot(this.position, this.width, this.height, 755, 1, false, -1, false, false);
			}
			if (this.type == 110 && Main.rand.Next(200) == 0)
			{
				DropLoot(this.position, this.width, this.height, 682, 1, false, -1, false, false);
			}
			if (this.type == 154 && Main.rand.Next(100) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1253, 1, false, -1, false, false);
			}
			if ((this.type == 169 || this.type == 206) && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 726, 1, false, -1, false, false);
			}
			if (this.type == 243)
			{
				DropLoot(this.position, this.width, this.height, 2161, 1, false, -1, false, false);
			}
			if (this.type == 480 && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3269, 1, false, -1, false, false);
			}
			if (this.type == 198 || this.type == 199 || this.type == 226)
			{
				if (Main.rand.Next(1000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1172, 1, false, -1, false, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1293, 1, false, -1, false, false);
				}
				if (Main.rand.Next(7) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2766, Main.rand.Next(1, 3), false, -1, false, false);
				}
			}
			if (this.type == 78 || this.type == 79 || this.type == 80)
			{
				if (Main.rand.Next(75) == 0)
				{
					DropLoot(this.position, this.width, this.height, 870, 1, false, -1, false, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					DropLoot(this.position, this.width, this.height, 871, 1, false, -1, false, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					DropLoot(this.position, this.width, this.height, 872, 1, false, -1, false, false);
				}
			}
			if (this.type == 473)
			{
				int num28 = Main.rand.Next(5);
				if (num28 == 0)
				{
					DropLoot(this.position, this.width, this.height, 3008, 1, false, -1, false, false);
				}
				else if (num28 == 1)
				{
					DropLoot(this.position, this.width, this.height, 3014, 1, false, -1, false, false);
				}
				else if (num28 == 2)
				{
					DropLoot(this.position, this.width, this.height, 3012, 1, false, -1, false, false);
				}
				else if (num28 == 3)
				{
					DropLoot(this.position, this.width, this.height, 3015, 1, false, -1, false, false);
				}
				else if (num28 == 4)
				{
					DropLoot(this.position, this.width, this.height, 3023, 1, false, -1, false, false);
				}
			}
			else if (this.type == 474)
			{
				int num29 = Main.rand.Next(5);
				if (num29 == 0)
				{
					DropLoot(this.position, this.width, this.height, 3006, 1, false, -1, false, false);
				}
				else if (num29 == 1)
				{
					DropLoot(this.position, this.width, this.height, 3007, 1, false, -1, false, false);
				}
				else if (num29 == 2)
				{
					DropLoot(this.position, this.width, this.height, 3013, 1, false, -1, false, false);
				}
				else if (num29 == 3)
				{
					DropLoot(this.position, this.width, this.height, 3016, 1, false, -1, false, false);
				}
				else if (num29 == 4)
				{
					DropLoot(this.position, this.width, this.height, 3020, 1, false, -1, false, false);
				}
			}
			else if (this.type == 475)
			{
				int num30 = Main.rand.Next(4);
				if (num30 == 0)
				{
					DropLoot(this.position, this.width, this.height, 3029, 1, false, -1, false, false);
				}
				else if (num30 == 1)
				{
					DropLoot(this.position, this.width, this.height, 3030, 1, false, -1, false, false);
				}
				else if (num30 == 2)
				{
					DropLoot(this.position, this.width, this.height, 3051, 1, false, -1, false, false);
				}
				else if (num30 == 3)
				{
					DropLoot(this.position, this.width, this.height, 3022, 1, false, -1, false, false);
				}
			}
			else
			{
				int arg_47D3_0 = this.type;
			}
			if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				DropLoot(this.position, this.width, this.height, 499, Main.rand.Next(5, 11), false, -1, false, false);
				DropLoot(this.position, this.width, this.height, 500, Main.rand.Next(5, 16), false, -1, false, false);
			}
			if (this.type == 85 && this.value > 0f)
			{
				if (this.ai[3] == 4f)
				{
					if (Main.rand.Next(20) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1312, 1, false, -1, false, false);
					}
					else
					{
						int num31 = Main.rand.Next(3);
						if (num31 == 0)
						{
							DropLoot(this.position, this.width, this.height, 676, 1, false, -1, false, false);
						}
						else if (num31 == 1)
						{
							DropLoot(this.position, this.width, this.height, 725, 1, false, -1, false, false);
						}
						else if (num31 == 2)
						{
							DropLoot(this.position, this.width, this.height, 1264, 1, false, -1, false, false);
						}
					}
				}
				else
				{
					int num32 = Main.rand.Next(6);
					if (num32 == 0)
					{
						DropLoot(this.position, this.width, this.height, 437, 1, false, -1, false, false);
					}
					else if (num32 == 1)
					{
						DropLoot(this.position, this.width, this.height, 517, 1, false, -1, false, false);
					}
					else if (num32 == 2)
					{
						DropLoot(this.position, this.width, this.height, 535, 1, false, -1, false, false);
					}
					else if (num32 == 3)
					{
						DropLoot(this.position, this.width, this.height, 536, 1, false, -1, false, false);
					}
					else if (num32 == 4)
					{
						DropLoot(this.position, this.width, this.height, 532, 1, false, -1, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 554, 1, false, -1, false, false);
					}
				}
			}
			if (this.type == 87)
			{
				if (Main.expertMode)
				{
					DropLoot(this.position, this.width, this.height, 575, Main.rand.Next(5, 11) * 2, false, 0, false, false);
				}
				else
				{
					DropLoot(this.position, this.width, this.height, 575, Main.rand.Next(5, 11), false, 0, false, false);
				}
			}
			if (this.type >= 212 && this.type <= 215)
			{
				if (Main.rand.Next(8000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 905, 1, false, -1, false, false);
				}
				if (Main.rand.Next(4000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 855, 1, false, -1, false, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 854, 1, false, -1, false, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					DropLoot(this.position, this.width, this.height, 672, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1277, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1278, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1279, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1280, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1704, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1705, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1710, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1716, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1720, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2379, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2389, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2405, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2843, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2663, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2238, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2133, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2137, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2143, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2147, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2151, 1, false, 0, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2155, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3263, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3264, 1, false, 0, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3265, 1, false, 0, false, false);
				}
			}
			else if (this.type == 216)
			{
				if (Main.rand.Next(2000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 905, 1, false, -1, false, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					DropLoot(this.position, this.width, this.height, 855, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 854, 1, false, -1, false, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					DropLoot(this.position, this.width, this.height, 672, 1, false, -1, false, false);
				}
			}
			else if (this.type == 491)
			{
				if (Main.rand.Next(400) == 0)
				{
					DropLoot(this.position, this.width, this.height, 905, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					DropLoot(this.position, this.width, this.height, 855, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					DropLoot(this.position, this.width, this.height, 854, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2584, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(50) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3033, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(10) == 0)
				{
					DropLoot(this.position, this.width, this.height, 672, 1, false, -1, false, false);
				}
			}
			if ((this.type == 161 || this.type == 431) && Main.rand.Next(50) == 0)
			{
				int num33 = Main.rand.Next(3);
				DropLoot(this.position, this.width, this.height, 803 + num33, 1, false, 0, false, false);
			}
			if (this.type == 217)
			{
				DropLoot(this.position, this.width, this.height, 1115, 1, false, -1, false, false);
			}
			if (this.type == 218)
			{
				DropLoot(this.position, this.width, this.height, 1116, 1, false, -1, false, false);
			}
			if (this.type == 219)
			{
				DropLoot(this.position, this.width, this.height, 1117, 1, false, -1, false, false);
			}
			if (this.type == 220)
			{
				DropLoot(this.position, this.width, this.height, 1118, 1, false, -1, false, false);
			}
			if (this.type == 221)
			{
				DropLoot(this.position, this.width, this.height, 1119, 1, false, -1, false, false);
			}
			if (this.type == 167 && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 879, 1, false, -1, false, false);
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				DropLoot(this.position, this.width, this.height, 593, Main.rand.Next(5, 11), false, 0, false, false);
			}
			if (this.type == 79)
			{
				if (Main.rand.Next(10) == 0)
				{
					DropLoot(this.position, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			else if (this.type == 80 && Main.rand.Next(10) == 0)
			{
				DropLoot(this.position, this.width, this.height, 528, 1, false, 0, false, false);
			}
			if (this.type == 525)
			{
				if (Main.rand.Next(3) == 0)
				{
					DropLoot(this.position, this.width, this.height, 522, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					DropLoot(this.position, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			if (this.type == 526)
			{
				if (Main.rand.Next(3) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1332, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					DropLoot(this.position, this.width, this.height, 527, 1, false, 0, false, false);
				}
			}
			if (this.type == 527 && Main.rand.Next(15) == 0)
			{
				DropLoot(this.position, this.width, this.height, 528, 1, false, 0, false, false);
			}
			if (this.type == 532 && Main.rand.Next(3) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3380, 1, false, 0, false, false);
			}
			if (this.type == 528)
			{
				if (Main.rand.Next(25) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2802, 1, false, 0, false, false);
				}
			}
			else if (this.type == 529 && Main.rand.Next(25) == 0)
			{
				DropLoot(this.position, this.width, this.height, 2801, 1, false, 0, false, false);
			}
			if ((this.type == 49 || this.type == 51 || this.type == 150 || this.type == 93) && Main.rand.Next(100) == 0)
			{
				DropLoot(this.position, this.width, this.height, 18, 1, false, -1, false, false);
			}
			if ((this.type == 16 || this.type == 185 || this.type == 167 || this.type == 197) && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 393, 1, false, -1, false, false);
			}
			if (this.type == 58 && Main.rand.Next(75) == 0)
			{
				DropLoot(this.position, this.width, this.height, 393, 1, false, -1, false, false);
			}
			if (this.type >= 494 && this.type <= 506)
			{
				if (Main.rand.Next(80) == 0)
				{
					DropLoot(this.position, this.width, this.height, 18, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(80) == 0)
				{
					DropLoot(this.position, this.width, this.height, 393, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(25) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3285, 1, false, -1, false, false);
				}
			}
			if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324 || (this.type >= 449 && this.type <= 452))
			{
				if (Main.rand.Next(100) == 0)
				{
					DropLoot(this.position, this.width, this.height, 954, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					DropLoot(this.position, this.width, this.height, 955, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1166, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(500) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1274, 1, false, -1, false, false);
				}
			}
			else if (this.type == 6)
			{
				if (Main.rand.Next(175) == 0)
				{
					int num34 = Main.rand.Next(3);
					if (num34 == 0)
					{
						DropLoot(this.position, this.width, this.height, 956, 1, false, -1, false, false);
					}
					else if (num34 == 1)
					{
						DropLoot(this.position, this.width, this.height, 957, 1, false, -1, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 958, 1, false, -1, false, false);
					}
				}
			}
			else if (this.type == 42 || this.type == 43 || (this.type >= 231 && this.type <= 235))
			{
				if (Main.rand.Next(100) == 0)
				{
					int num35 = Main.rand.Next(3);
					if (num35 == 0)
					{
						DropLoot(this.position, this.width, this.height, 960, 1, false, -1, false, false);
					}
					else if (num35 == 1)
					{
						DropLoot(this.position, this.width, this.height, 961, 1, false, -1, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 962, 1, false, -1, false, false);
					}
				}
			}
			else if (this.type == 31 || this.type == 32 || this.type == 294 || this.type == 295 || this.type == 296)
			{
				if (Main.rand.Next(450) == 0)
				{
					DropLoot(this.position, this.width, this.height, 959, 1, false, -1, false, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1307, 1, false, -1, false, false);
				}
			}
			if ((this.type == 174 || this.type == 179 || this.type == 182 || this.type == 183) && Main.rand.Next(200) == 0)
			{
				DropLoot(this.position, this.width, this.height, 996, 1, false, 0, false, false);
			}
			if (this.type == 101 || this.type == 98)
			{
				DropLoot(this.position, this.width, this.height, 522, Main.rand.Next(2, 6), false, 0, false, false);
			}
			if (this.type == 86)
			{
				DropLoot(this.position, this.width, this.height, 526, 1, false, 0, false, false);
				if (Main.rand.Next(100) == 0)
				{
					DropLoot(this.position, this.width, this.height, 856, 1, false, 0, false, false);
				}
			}
			if (this.type == 186 || this.type == 432)
			{
				DropLoot(this.position, this.width, this.height, 40, Main.rand.Next(1, 10), false, 0, false, false);
			}
			if (this.type == 225)
			{
				if (Main.rand.Next(45) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1243, 1, false, 0, false, false);
				}
				else
				{
					DropLoot(this.position, this.width, this.height, 23, Main.rand.Next(2, 7), false, 0, false, false);
				}
			}
			if (this.type == 537)
			{
				int num36 = Main.rand.Next(1, 3);
				if (Main.expertMode)
				{
					if (this.netID == -7)
					{
						num36++;
					}
					if (this.netID == -8 || this.netID == -9)
					{
						num36 += Main.rand.Next(2);
					}
				}
				DropLoot(this.position, this.width, this.height, 23, num36, false, 0, false, false);
				int num37 = 8000;
				if (Main.expertMode)
				{
					num37 = (int)((double)num37 * 0.7);
				}
				if (Main.rand.Next(num37) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			if (this.type >= 333 && this.type <= 336 && Main.rand.Next(20) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1906, 1, false, 0, false, false);
			}
			if (this.netID == -4)
			{
				DropLoot(this.position, this.width, this.height, 3111, Main.rand.Next(25, 51), false, 0, false, false);
				int num38 = 100;
				if (Main.expertMode)
				{
					num38 = (int)((double)num38 * 0.7);
				}
				if (Main.rand.Next(num38) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			else if (this.type == 1 || this.type == 16 || this.type == 138 || this.type == 141 || this.type == 147 || this.type == 184 || this.type == 187 || this.type == 204 || this.type == 302 || (this.type >= 333 && this.type <= 336) || this.type == 535)
			{
				int num39 = Main.rand.Next(1, 3);
				if (Main.expertMode)
				{
					if (this.netID == -7)
					{
						num39++;
					}
					if (this.netID == -8 || this.netID == -9)
					{
						num39 += Main.rand.Next(2);
					}
				}

				Vector2 position = this.position;
				int width = this.width;
				int height = this.height;
				int ID = 23;
				bool broadcast = false;
				int prefix = 0;
				bool nodelay = false;
				bool reverseLookup = false;
				if (!ServerApi.Hooks.InvokeNpcLootDrop(ref position, ref width, ref height, ref ID, ref num39, ref broadcast, ref prefix, type, whoAmI, ref nodelay, ref reverseLookup))
				{
					int num40 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, num39, false, 0, false, false);
					if (this.netID <= 1 && this.netID != -1 && this.netID != -2 && this.netID != -5 && this.netID != -6)
					{
						Main.item[num40].color = this.color;
						NetMessage.SendData(88, -1, -1, "", num40, 1f, 0f, 0f, 0, 0, 0);
					}
				}
				int num41 = 10000;
				if (Main.expertMode)
				{
					num41 = (int)((double)num41 * 0.7);
				}
				if (Main.rand.Next(num41) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1309, 1, false, -1, false, false);
				}
			}
			if (this.type == 75)
			{
				DropLoot(this.position, this.width, this.height, 501, Main.rand.Next(1, 4), false, 0, false, false);
			}
			if (this.type == 81 || this.type == 183)
			{
				DropLoot(this.position, this.width, this.height, 23, Main.rand.Next(2, 5), false, 0, false, false);
			}
			if (this.type == 122)
			{
				DropLoot(this.position, this.width, this.height, 23, Main.rand.Next(5, 11), false, 0, false, false);
			}
			if (this.type == 71)
			{
				DropLoot(this.position, this.width, this.height, 327, 1, false, 0, false, false);
			}
			if (this.type == 2 || this.type == 317 || this.type == 318 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 133)
			{
				if (Main.rand.Next(3) == 0)
				{
					DropLoot(this.position, this.width, this.height, 38, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					DropLoot(this.position, this.width, this.height, 236, 1, false, 0, false, false);
				}
			}
			if (this.type == 104 && Main.rand.Next(60) == 0)
			{
				DropLoot(this.position, this.width, this.height, 485, 1, false, -1, false, false);
			}
			if (this.type == 58)
			{
				if (Main.rand.Next(250) == 0)
				{
					DropLoot(this.position, this.width, this.height, 263, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(30) == 0)
				{
					DropLoot(this.position, this.width, this.height, 118, 1, false, 0, false, false);
				}
			}
			if (this.type == 102 && Main.rand.Next(250) == 0)
			{
				DropLoot(this.position, this.width, this.height, 263, 1, false, 0, false, false);
			}
			if (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 319 || this.type == 320 || this.type == 321 || (this.type >= 430 && this.type <= 436))
			{
				if (Main.rand.Next(50) == 0)
				{
					DropLoot(this.position, this.width, this.height, 216, 1, false, -1, false, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1304, 1, false, -1, false, false);
				}
			}
			if ((this.type == 489 || this.type == 490) && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				if (Main.rand.Next(75) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3212, 1, false, -1, false, false);
				}
				if (Main.rand.Next(100) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3213, 1, false, -1, false, false);
				}
			}
			if (this.type == 223 && Main.rand.Next(20) == 0)
			{
				if (Main.rand.Next(2) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1135, 1, false, -1, false, false);
				}
				else
				{
					DropLoot(this.position, this.width, this.height, 1136, 1, false, -1, false, false);
				}
			}
			if (this.type == 66)
			{
				DropLoot(this.position, this.width, this.height, 267, 1, false, 0, false, false);
			}
			if ((this.type == 62 || this.type == 66) && Main.rand.Next(35) == 0)
			{
				DropLoot(this.position, this.width, this.height, 272, 1, false, -1, false, false);
			}
			if (this.value > 0f && Main.hardMode && (double)(this.position.Y / 16f) < Main.worldSurface + 10.0 && (base.Center.X / 16f < 380f || base.Center.X / 16f > (float)(Main.maxTilesX - 380)) && Main.rand.Next(100) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1315, 1, false, 0, false, false);
			}
			if (this.type == 52)
			{
				DropLoot(this.position, this.width, this.height, 251, 1, false, 0, false, false);
			}
			if (this.type == 53)
			{
				DropLoot(this.position, this.width, this.height, 239, 1, false, 0, false, false);
			}
			if (this.type == 536)
			{
				DropLoot(this.position, this.width, this.height, 3478, 1, false, 0, false, false);
				DropLoot(this.position, this.width, this.height, 3479, 1, false, 0, false, false);
			}
			if (this.type == 54)
			{
				DropLoot(this.position, this.width, this.height, 260, 1, false, 0, false, false);
			}
			if (this.type == 368)
			{
				DropLoot(this.position, this.width, this.height, 2222, 1, false, 0, false, false);
			}
			if ((this.type == 69 || this.type == 509 || this.type == 508) && Main.rand.Next(3) == 0)
			{
				DropLoot(this.position, this.width, this.height, 323, Main.rand.Next(1, 3), false, 0, false, false);
			}
			if (this.type == 73)
			{
				DropLoot(this.position, this.width, this.height, 362, Main.rand.Next(1, 3), false, 0, false, false);
			}
			if ((this.type == 483 || this.type == 482) && Main.rand.Next(30) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3109, 1, false, 0, false, false);
			}
			if ((this.type == 6 || this.type == 94) && Main.rand.Next(3) == 0)
			{
				DropLoot(this.position, this.width, this.height, 68, 1, false, 0, false, false);
			}
			if ((this.type == 181 || this.type == 173 || this.type == 239 || this.type == 182 || this.type == 240) && Main.rand.Next(3) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1330, 1, false, 0, false, false);
			}
			if (this.type == 7 || this.type == 8 || this.type == 9)
			{
				if (Main.rand.Next(3) == 0)
				{
					DropLoot(this.position, this.width, this.height, 68, Main.rand.Next(1, 3), false, 0, false, false);
				}
				DropLoot(this.position, this.width, this.height, 69, Main.rand.Next(3, 9), false, 0, false, false);
			}
			if ((this.type == 10 || this.type == 11 || this.type == 12 || this.type == 95 || this.type == 96 || this.type == 97) && (Main.rand.Next(50) == 0 || (Main.expertMode && Main.rand.Next(50) == 0)))
			{
				DropLoot(this.position, this.width, this.height, 215, 1, false, 0, false, false);
			}
			if (this.type == 47 && Main.rand.Next(75) == 0)
			{
				DropLoot(this.position, this.width, this.height, 243, 1, false, 0, false, false);
			}
			if (this.type == 4)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2112, 1, false, -1, false, false);
					}
					if (Main.rand.Next(40) == 0 || (Main.expertMode && Main.rand.Next(20) == 0))
					{
						DropLoot(this.position, this.width, this.height, 1299, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						DropLoot(this.position, this.width, this.height, 3097, 1, false, -1, false, false);
					}
					int num42 = 1;
					if (Main.expertMode)
					{
						num42 = 2;
					}
					for (int n = 0; n < num42; n++)
					{
						if (WorldGen.crimson)
						{
							int stack = Main.rand.Next(20) + 10;
							DropLoot(this.position, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(20) + 10;
							DropLoot(this.position, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(20) + 10;
							DropLoot(this.position, this.width, this.height, 880, stack, false, 0, false, false);
							stack = Main.rand.Next(3) + 1;
							DropLoot(this.position, this.width, this.height, 2171, stack, false, 0, false, false);
						}
						else
						{
							int stack2 = Main.rand.Next(30) + 20;
							DropLoot(this.position, this.width, this.height, 47, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							DropLoot(this.position, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							DropLoot(this.position, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(20) + 10;
							DropLoot(this.position, this.width, this.height, 56, stack2, false, 0, false, false);
							stack2 = Main.rand.Next(3) + 1;
							DropLoot(this.position, this.width, this.height, 59, stack2, false, 0, false, false);
						}
					}
				}
			}
			if (this.type == 266)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					int stack3 = Main.rand.Next(20, 46);
					DropLoot(this.position, this.width, this.height, 880, stack3, false, 0, false, false);
					stack3 = Main.rand.Next(20, 46);
					DropLoot(this.position, this.width, this.height, 880, stack3, false, 0, false, false);
					if (Main.expertMode)
					{
						stack3 = Main.rand.Next(30, 51);
						DropLoot(this.position, this.width, this.height, 880, stack3, false, 0, false, false);
						stack3 = Main.rand.Next(30, 51);
						DropLoot(this.position, this.width, this.height, 880, stack3, false, 0, false, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2104, 1, false, -1, false, false);
					}
					if (Main.rand.Next(20) == 0)
					{
						DropLoot(this.position, this.width, this.height, 3060, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						DropLoot(this.position, this.width, this.height, 3223, 1, false, 0, false, false);
					}
				}
			}
			if (this.type == 267 && NPC.AnyNPCs(266))
			{
				int num43 = Main.rand.Next(2, 6);
				if (Main.rand.Next(3) != 0)
				{
					if (Main.expertMode)
					{
						num43 += Main.rand.Next(2, 6);
					}
					DropLoot(this.position, this.width, this.height, 1329, num43, false, 0, false, false);
				}
				if (Main.rand.Next(3) != 0)
				{
					num43 = Main.rand.Next(5, 13);
					if (Main.expertMode)
					{
						num43 += Main.rand.Next(6, 14);
					}
					DropLoot(this.position, this.width, this.height, 880, num43, false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				int num44 = Main.rand.Next(1, 3);
				if (Main.rand.Next(2) == 0)
				{
					if (Main.expertMode)
					{
						num44++;
					}
					DropLoot(this.position, this.width, this.height, 86, num44, false, 0, false, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					num44 = Main.rand.Next(2, 6);
					DropLoot(this.position, this.width, this.height, 56, num44, false, 0, false, false);
				}
				if (this.boss)
				{
					if (Main.expertMode)
					{
						this.DropBossBags();
					}
					else
					{
						num44 = Main.rand.Next(10, 30);
						DropLoot(this.position, this.width, this.height, 56, num44, false, 0, false, false);
						num44 = Main.rand.Next(10, 31);
						DropLoot(this.position, this.width, this.height, 56, num44, false, 0, false, false);
						if (Main.expertMode)
						{
							num44 = Main.rand.Next(10, 30);
							DropLoot(this.position, this.width, this.height, 56, num44, false, 0, false, false);
							num44 = Main.rand.Next(10, 31);
							DropLoot(this.position, this.width, this.height, 56, num44, false, 0, false, false);
						}
						if (Main.expertMode)
						{
							DropLoot(this.position, this.width, this.height, 3224, 1, false, 0, false, false);
						}
						if (Main.rand.Next(20) == 0)
						{
							DropLoot(this.position, this.width, this.height, 994, 1, false, 0, false, false);
						}
						if (Main.rand.Next(7) == 0)
						{
							DropLoot(this.position, this.width, this.height, 2111, 1, false, -1, false, false);
						}
					}
				}
				if (Main.rand.Next(4) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type == 222)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2108, 1, false, -1, false, false);
					}
					int num45 = Main.rand.Next(3);
					if (num45 == 0)
					{
						num45 = 1121;
					}
					else if (num45 == 1)
					{
						num45 = 1123;
					}
					else if (num45 == 2)
					{
						num45 = 2888;
					}
					DropLoot(this.position, this.width, this.height, num45, 1, false, -1, false, false);
					if (Main.expertMode)
					{
						int num46 = Main.rand.Next(3);
						if (num46 == 0)
						{
							num46 = 1121;
						}
						else if (num46 == 1)
						{
							num46 = 1123;
						}
						else if (num46 == 2)
						{
							num46 = 2888;
						}
						while (num46 == num45)
						{
							num46 = Main.rand.Next(3);
							if (num46 == 0)
							{
								num46 = 1121;
							}
							else if (num46 == 1)
							{
								num46 = 1123;
							}
							else if (num46 == 2)
							{
								num46 = 2888;
							}
						}
						DropLoot(this.position, this.width, this.height, num46, 1, false, -1, false, false);
						DropLoot(this.position, this.width, this.height, 1132, 1, false, -1, false, false);
					}
					else if (Main.rand.Next(3) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1132, 1, false, -1, false, false);
					}
					if ((Main.expertMode && Main.rand.Next(15) == 0) || Main.rand.Next(15) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1170, 1, false, 0, false, false);
					}
					if ((Main.expertMode && Main.rand.Next(20) == 0) || Main.rand.Next(20) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2502, 1, false, 0, false, false);
					}
					if (Main.expertMode)
					{
						DropLoot(this.position, this.width, this.height, 1129, 1, false, 0, false, false);
						DropLoot(this.position, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false, false);
					}
					else if (Main.rand.Next(3) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1129, 1, false, 0, false, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						DropLoot(this.position, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false, false);
					}
					if (Main.rand.Next(4) != 0 || Main.expertMode)
					{
						DropLoot(this.position, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false, false);
						if (Main.expertMode)
						{
							DropLoot(this.position, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false, false);
						}
					}
					if (Main.expertMode)
					{
						DropLoot(this.position, this.width, this.height, 2431, Main.rand.Next(44, 67), false, 0, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 2431, Main.rand.Next(16, 27), false, 0, false, false);
					}
				}
				NPC.downedQueenBee = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 35)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else if (Main.rand.Next(7) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1281, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1273, 1, false, -1, false, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1313, 1, false, -1, false, false);
				}
			}
			if (this.type == 113)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2105, 1, false, -1, false, false);
					}
					DropLoot(this.position, this.width, this.height, 367, 1, false, -1, false, false);
					if (Main.expertMode)
					{
						int num47 = Main.rand.Next(4);
						if (num47 == 3)
						{
							num47 = 2998;
						}
						else
						{
							num47 = 489 + num47;
						}
						DropLoot(this.position, this.width, this.height, num47, 1, false, -1, false, false);
						int num48 = Main.rand.Next(3);
						if (num48 == 0)
						{
							DropLoot(this.position, this.width, this.height, 514, 1, false, -1, false, false);
						}
						else if (num48 == 1)
						{
							DropLoot(this.position, this.width, this.height, 426, 1, false, -1, false, false);
						}
						else if (num48 == 2)
						{
							DropLoot(this.position, this.width, this.height, 434, 1, false, -1, false, false);
						}
					}
					else if (Main.rand.Next(2) == 0)
					{
						int num49 = Main.rand.Next(4);
						if (num49 == 3)
						{
							num49 = 2998;
						}
						else
						{
							num49 = 489 + num49;
						}
						DropLoot(this.position, this.width, this.height, num49, 1, false, -1, false, false);
					}
					else
					{
						int num50 = Main.rand.Next(3);
						if (num50 == 0)
						{
							DropLoot(this.position, this.width, this.height, 514, 1, false, -1, false, false);
						}
						else if (num50 == 1)
						{
							DropLoot(this.position, this.width, this.height, 426, 1, false, -1, false, false);
						}
						else if (num50 == 2)
						{
							DropLoot(this.position, this.width, this.height, 434, 1, false, -1, false, false);
						}
					}
				}
				if (Main.netMode != 1)
				{
					int num51 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num52 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					int num53 = this.width / 2 / 16 + 1;
					for (int num54 = num51 - num53; num54 <= num51 + num53; num54++)
					{
						for (int num55 = num52 - num53; num55 <= num52 + num53; num55++)
						{
							if ((num54 == num51 - num53 || num54 == num51 + num53 || num55 == num52 - num53 || num55 == num52 + num53) && !Main.tile[num54, num55].active())
							{
								Main.tile[num54, num55].type = (ushort)(WorldGen.crimson ? 347 : 140);
								Main.tile[num54, num55].active(true);
							}
							Main.tile[num54, num55].lava(false);
							Main.tile[num54, num55].liquid = 0;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, num54, num55, 1);
							}
							else
							{
								WorldGen.SquareTileFrame(num54, num55, true);
							}
						}
					}
				}
			}
			if (this.type == 439)
			{
				NPC.downedAncientCultist = true;
				if (Main.rand.Next(7) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3372, 1, false, -1, false, false);
				}
				DropLoot(this.position, this.width, this.height, 3549, 1, false, -1, false, false);
				WorldGen.TriggerLunarApocalypse();
			}
			if (this.type == 398)
			{
				NPC.downedMoonlord = true;
				NPC.LunarApocalypseIsUp = false;
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 3373, 1, false, -1, false, false);
					}
					DropLoot(this.position, this.width, this.height, 3384, 1, false, -1, false, false);
					DropLoot(this.position, this.width, this.height, 3460, Main.rand.Next(70, 91), false, -1, false, false);
					int num56 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						3063,
						3389,
						3065,
						1553,
						3546,
						3541,
						3570,
						3571,
						3569
					});
					DropLoot(this.position, this.width, this.height, num56, 1, false, -1, false, false);
				}
			}
			num = this.type;
			if (num <= 493)
			{
				switch (num)
				{
				case 402:
				case 405:
				case 407:
				case 409:
				case 411:
					if ((this.type != 406 || Main.rand.Next(3) == 0) && NPC.ShieldStrengthTowerStardust > 0)
					{
						Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(493), 0f);
						goto IL_90BA;
					}
					goto IL_90BA;
				case 403:
				case 404:
				case 406:
				case 408:
				case 410:
				case 428:
					goto IL_90BA;
				case 412:
				case 413:
				case 414:
				case 415:
				case 416:
				case 417:
				case 418:
				case 419:
					break;
				case 420:
				case 421:
				case 423:
				case 424:
					if (NPC.ShieldStrengthTowerNebula > 0)
					{
						Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(507), 0f);
						goto IL_90BA;
					}
					goto IL_90BA;
				case 422:
				{
					int num57 = Main.rand.Next(25, 41) / 2;
					if (Main.expertMode)
					{
						num57 = (int)((float)num57 * 1.5f);
					}
					for (int num58 = 0; num58 < num57; num58++)
					{
						DropLoot(new Vector2((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height)), 2, 2, 3456, Main.rand.Next(1, 4), false, 0, false, false);
					}
					NPC.downedTowerVortex = true;
					NPC.TowerActiveVortex = false;
					WorldGen.UpdateLunarApocalypse();
					WorldGen.MessageLunarApocalypse();
					goto IL_90BA;
				}
				case 425:
				case 426:
				case 427:
				case 429:
					if (NPC.ShieldStrengthTowerVortex > 0)
					{
						Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(422), 0f);
						goto IL_90BA;
					}
					goto IL_90BA;
				default:
				{
					if (num != 493)
					{
						goto IL_90BA;
					}
					int num59 = Main.rand.Next(25, 41) / 2;
					if (Main.expertMode)
					{
						num59 = (int)((float)num59 * 1.5f);
					}
					for (int num60 = 0; num60 < num59; num60++)
					{
						DropLoot(new Vector2((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height)), 2, 2, 3459, Main.rand.Next(1, 4), false, 0, false, false);
					}
					NPC.downedTowerStardust = true;
					NPC.TowerActiveStardust = false;
					WorldGen.UpdateLunarApocalypse();
					WorldGen.MessageLunarApocalypse();
					goto IL_90BA;
				}
				}
			}
			else
			{
				if (num == 507)
				{
					int num61 = Main.rand.Next(25, 41) / 2;
					if (Main.expertMode)
					{
						num61 = (int)((float)num61 * 1.5f);
					}
					for (int num62 = 0; num62 < num61; num62++)
					{
						DropLoot(new Vector2((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height)), 2, 2, 3457, Main.rand.Next(1, 4), false, 0, false, false);
					}
					NPC.downedTowerNebula = true;
					NPC.TowerActiveNebula = false;
					WorldGen.UpdateLunarApocalypse();
					WorldGen.MessageLunarApocalypse();
					goto IL_90BA;
				}
				switch (num)
				{
				case 517:
				{
					int num63 = Main.rand.Next(25, 41) / 2;
					if (Main.expertMode)
					{
						num63 = (int)((float)num63 * 1.5f);
					}
					for (int num64 = 0; num64 < num63; num64++)
					{
						DropLoot(new Vector2((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height)), 2, 2, 3458, Main.rand.Next(1, 4), false, 0, false, false);
					}
					NPC.downedTowerSolar = true;
					NPC.TowerActiveSolar = false;
					WorldGen.UpdateLunarApocalypse();
					WorldGen.MessageLunarApocalypse();
					goto IL_90BA;
				}
				case 518:
					break;
				default:
					goto IL_90BA;
				}
			}
			if (NPC.ShieldStrengthTowerSolar > 0)
			{
				Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(517), 0f);
			}
			IL_90BA:
			num = this.type;
			switch (num)
			{
			case 381:
			case 382:
			case 383:
			case 385:
			case 386:
			case 389:
			case 390:
				break;
			case 384:
			case 387:
			case 388:
				goto IL_914D;
			default:
				if (num != 520)
				{
					goto IL_914D;
				}
				break;
			}
			if (Main.rand.Next(8) == 0)
			{
				DropLoot(this.position, this.width, this.height, 2860, Main.rand.Next(8, 21), false, 0, false, false);
			}
			IL_914D:
			num = this.type;
			if (num == 383 || num == 386 || num == 389)
			{
				if (Main.rand.Next(200) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2806, 1, false, 0, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2807, 1, false, 0, false, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2808, 1, false, 0, false, false);
				}
			}
			num = this.type;
			switch (num)
			{
			case 381:
			case 382:
			case 385:
				break;
			case 383:
			case 384:
				goto IL_9346;
			default:
				if (num != 390)
				{
					goto IL_9346;
				}
				break;
			}
			if (Main.rand.Next(200) == 0)
			{
				DropLoot(this.position, this.width, this.height, 2803, 1, false, 0, false, false);
			}
			if (Main.rand.Next(200) == 0)
			{
				DropLoot(this.position, this.width, this.height, 2804, 1, false, 0, false, false);
			}
			if (Main.rand.Next(200) == 0)
			{
				DropLoot(this.position, this.width, this.height, 2805, 1, false, 0, false, false);
			}
			IL_9346:
			if (this.type == 395)
			{
				DropLoot(this.position, this.width, this.height, Utils.SelectRandom<int>(Main.rand, new int[]
				{
					2797,
					2749,
					2795,
					2798,
					2796,
					2882,
					2880,
					2769,
					2800
				}), 1, false, 0, false, false);
			}
			if (this.type == 390 && Main.rand.Next(100) == 0)
			{
				DropLoot(this.position, this.width, this.height, 2771, 1, false, 0, false, false);
			}
			if ((this.type == 116 || this.type == 117 || this.type == 118 || this.type == 119) && (!Main.expertMode || Main.rand.Next(5) == 0))
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 139 && Main.rand.Next(2) == 0)
			{
				DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
			}
			if (this.type == 63 || this.type == 64 || this.type == 103)
			{
				if (Main.rand.Next(100) == 0)
				{
					DropLoot(this.position, this.width, this.height, 1303, 1, false, -1, false, false);
				}
				DropLoot(this.position, this.width, this.height, 282, Main.rand.Next(1, 5), false, 0, false, false);
			}
			if (this.type == 481 && Main.rand.Next(2) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3094, Main.rand.Next(40, 81), false, 0, false, false);
			}
			if (this.type == 481 && Main.rand.Next(20) == 0)
			{
				DropLoot(this.position, this.width, this.height, 3187 + Main.rand.Next(3), 1, false, 0, false, false);
			}
			if (this.type == 21 || this.type == 44 || this.type == 167 || this.type == 201 || this.type == 202 || this.type == 481 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324 || (this.type >= 449 && this.type <= 452))
			{
				if (Main.rand.Next(25) == 0)
				{
					DropLoot(this.position, this.width, this.height, 118, 1, false, 0, false, false);
				}
				else if (this.type == 44)
				{
					if (Main.rand.Next(20) == 0)
					{
						DropLoot(this.position, this.width, this.height, Main.rand.Next(410, 412), 1, false, 0, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 166, Main.rand.Next(1, 4), false, 0, false, false);
					}
				}
			}
			if (this.type == 45)
			{
				DropLoot(this.position, this.width, this.height, 238, 1, false, 0, false, false);
			}
			if (this.type == 50)
			{
				if (Main.slimeRain)
				{
					Main.StopSlimeRain(true);
					AchievementsHelper.NotifyProgressionEvent(16);
				}
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(4) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2430, 1, false, 0, false, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2493, 1, false, -1, false, false);
					}
					DropLoot(this.position, this.width, this.height, Main.rand.Next(256, 259), 1, false, 0, false, false);
					Main.rand.Next(2);
					if (Main.rand.Next(3) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2585, 1, false, 0, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 2610, 1, false, 0, false, false);
					}
					DropLoot(this.position, this.width, this.height, 998, 1, false, 0, false, false);
				}
				NPC.downedSlimeKing = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 23 && Main.rand.Next(50) == 0)
			{
				DropLoot(this.position, this.width, this.height, 116, 1, false, 0, false, false);
			}
			if (this.type == 24 && Main.rand.Next(250) == 0)
			{
				DropLoot(this.position, this.width, this.height, 244, 1, false, 0, false, false);
			}
			if (this.type == 31 || this.type == 32 || this.type == 34)
			{
				if (Main.rand.Next(250) == 0)
				{
					DropLoot(this.position, this.width, this.height, 932, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					DropLoot(this.position, this.width, this.height, 3095, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(65) == 0)
				{
					DropLoot(this.position, this.width, this.height, 327, 1, false, 0, false, false);
				}
				else if (!Main.expertMode)
				{
					DropLoot(this.position, this.width, this.height, 154, Main.rand.Next(1, 4), false, 0, false, false);
				}
				if (Main.expertMode)
				{
					DropLoot(this.position, this.width, this.height, 154, Main.rand.Next(2, 7), false, 0, false, false);
				}
			}
			if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 111)
			{
				if (Main.rand.Next(200) == 0)
				{
					DropLoot(this.position, this.width, this.height, 160, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					int stack4 = Main.rand.Next(1, 6);
					DropLoot(this.position, this.width, this.height, 161, stack4, false, 0, false, false);
				}
			}
			if (this.type == 175 && Main.rand.Next(100) == 0)
			{
				DropLoot(this.position, this.width, this.height, 1265, 1, false, -1, false, false);
			}
			if ((this.type == 42 || (this.type >= 231 && this.type <= 235)) && (Main.expertMode || Main.rand.Next(3) != 0))
			{
				DropLoot(this.position, this.width, this.height, 209, 1, false, 0, false, false);
			}
			if (this.type == 204 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				DropLoot(this.position, this.width, this.height, 209, 1, false, 0, false, false);
			}
			if (this.type == 43 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				DropLoot(this.position, this.width, this.height, 210, 1, false, 0, false, false);
			}
			if (this.type == 65)
			{
				if (Main.rand.Next(50) == 0)
				{
					DropLoot(this.position, this.width, this.height, 268, 1, false, 0, false, false);
				}
				else
				{
					DropLoot(this.position, this.width, this.height, 319, 1, false, 0, false, false);
				}
			}
			if (this.type == 48 && Main.rand.Next(2) == 0)
			{
				DropLoot(this.position, this.width, this.height, 320, 1, false, 0, false, false);
			}
			if (this.type == 125 || this.type == 126)
			{
				int num65 = 125;
				if (this.type == 125)
				{
					num65 = 126;
				}
				if (!NPC.AnyNPCs(num65))
				{
					if (Main.expertMode)
					{
						this.DropBossBags();
					}
					else
					{
						if (Main.rand.Next(7) == 0)
						{
							DropLoot(this.position, this.width, this.height, 2106, 1, false, -1, false, false);
						}
						DropLoot(this.position, this.width, this.height, 549, Main.rand.Next(25, 41), false, 0, false, false);
						DropLoot(this.position, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
					}
				}
				else
				{
					this.value = 0f;
					this.boss = false;
				}
			}
			else if (Main.expertMode)
			{
				if (this.type == 127 || this.type == 134)
				{
					this.DropBossBags();
				}
			}
			else if (this.type == 127)
			{
				if (Main.rand.Next(7) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2107, 1, false, -1, false, false);
				}
				DropLoot(this.position, this.width, this.height, 547, Main.rand.Next(25, 41), false, 0, false, false);
				DropLoot(this.position, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
			}
			else if (this.type == 134)
			{
				if (Main.rand.Next(7) == 0)
				{
					DropLoot(this.position, this.width, this.height, 2113, 1, false, -1, false, false);
				}
				DropLoot(this.position, this.width, this.height, 548, Main.rand.Next(25, 41), false, 0, false, false);
				DropLoot(this.position, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false, false);
			}
			if (this.type == 262)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else
				{
					if (Main.rand.Next(7) == 0)
					{
						DropLoot(this.position, this.width, this.height, 2109, 1, false, -1, false, false);
					}
					if (Main.expertMode)
					{
						DropLoot(this.position, this.width, this.height, 1141, Main.rand.Next(2, 4), false, -1, false, false);
					}
					else
					{
						DropLoot(this.position, this.width, this.height, 1141, 1, false, -1, false, false);
					}
					if (Main.rand.Next(20) == 0)
					{
						DropLoot(this.position, this.width, this.height, 1182, 1, false, -1, false, false);
					}
					if (Main.rand.Next(50) == 0 || (Main.expertMode && Main.rand.Next(50) == 0))
					{
						DropLoot(this.position, this.width, this.height, 1305, 1, false, -1, false, false);
					}
					if (Main.rand.Next(4) == 0 || Main.expertMode)
					{
						DropLoot(this.position, this.width, this.height, 1157, 1, false, -1, false, false);
					}
					if (Main.rand.Next(10) == 0)
					{
						DropLoot(this.position, this.width, this.height, 3021, 1, false, -1, false, false);
					}
					int num66 = 1;
					if (Main.expertMode)
					{
						num66 = 2;
					}
					int num67 = 0;
					for (int num68 = 0; num68 < num66; num68++)
					{
						int num69 = Main.rand.Next(7);
						if (!NPC.downedPlantBoss)
						{
							num69 = 0;
						}
						if (num68 == 0)
						{
							num67 = num69;
						}
						else
						{
							while (num67 == num69)
							{
								num69 = Main.rand.Next(7);
							}
						}
						if (num69 == 0)
						{
							DropLoot(this.position, this.width, this.height, 758, 1, false, -1, false, false);
							DropLoot(this.position, this.width, this.height, 771, Main.rand.Next(50, 150), false, 0, false, false);
						}
						else if (num69 == 1)
						{
							DropLoot(this.position, this.width, this.height, 1255, 1, false, -1, false, false);
						}
						else if (num69 == 2)
						{
							DropLoot(this.position, this.width, this.height, 788, 1, false, -1, false, false);
						}
						else if (num69 == 3)
						{
							DropLoot(this.position, this.width, this.height, 1178, 1, false, -1, false, false);
						}
						else if (num69 == 4)
						{
							DropLoot(this.position, this.width, this.height, 1259, 1, false, -1, false, false);
						}
						else if (num69 == 5)
						{
							DropLoot(this.position, this.width, this.height, 1155, 1, false, -1, false, false);
						}
						else if (num69 == 6)
						{
							DropLoot(this.position, this.width, this.height, 3018, 1, false, -1, false, false);
						}
					}
				}
				bool flag3 = NPC.downedPlantBoss;
				NPC.downedPlantBoss = true;
				if (!flag3)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Lang.misc[33], 50, 255, 130, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Lang.misc[33], 255, 50f, 255f, 130f, 0, 0, 0);
					}
				}
			}
			if ((this.boss || this.type == 125 || this.type == 126 || this.type == 491) && Main.rand.Next(10) == 0)
			{
				if (this.type == 4)
				{
					DropLoot(this.position, this.width, this.height, 1360, 1, false, 0, false, false);
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					DropLoot(this.position, this.width, this.height, 1361, 1, false, 0, false, false);
				}
				if (this.type == 266)
				{
					DropLoot(this.position, this.width, this.height, 1362, 1, false, 0, false, false);
				}
				if (this.type == 35)
				{
					DropLoot(this.position, this.width, this.height, 1363, 1, false, 0, false, false);
				}
				if (this.type == 222)
				{
					DropLoot(this.position, this.width, this.height, 1364, 1, false, 0, false, false);
				}
				if (this.type == 113)
				{
					DropLoot(this.position, this.width, this.height, 1365, 1, false, 0, false, false);
				}
				if (this.type == 134)
				{
					DropLoot(this.position, this.width, this.height, 1366, 1, false, 0, false, false);
				}
				if (this.type == 127)
				{
					DropLoot(this.position, this.width, this.height, 1367, 1, false, 0, false, false);
				}
				if (this.type == 125)
				{
					DropLoot(this.position, this.width, this.height, 1368, 1, false, 0, false, false);
				}
				if (this.type == 126)
				{
					DropLoot(this.position, this.width, this.height, 1369, 1, false, 0, false, false);
				}
				if (this.type == 262)
				{
					DropLoot(this.position, this.width, this.height, 1370, 1, false, 0, false, false);
				}
				if (this.type == 245)
				{
					DropLoot(this.position, this.width, this.height, 1371, 1, false, 0, false, false);
				}
				if (this.type == 50)
				{
					DropLoot(this.position, this.width, this.height, 2489, 1, false, 0, false, false);
				}
				if (this.type == 370)
				{
					DropLoot(this.position, this.width, this.height, 2589, 1, false, 0, false, false);
				}
				if (this.type == 439)
				{
					DropLoot(this.position, this.width, this.height, 3357, 1, false, 0, false, false);
				}
				if (this.type == 491)
				{
					DropLoot(this.position, this.width, this.height, 3359, 1, false, 0, false, false);
				}
				if (this.type == 395)
				{
					DropLoot(this.position, this.width, this.height, 3358, 1, false, 0, false, false);
				}
				if (this.type == 398)
				{
					DropLoot(this.position, this.width, this.height, 3595, 1, false, 0, false, false);
				}
			}
			if (this.boss)
			{
				if (this.type == 4)
				{
					NPC.downedBoss1 = true;
				}
				else if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					NPC.downedBoss2 = true;
					this.name = "Eater of Worlds";
				}
				else if (this.type == 266)
				{
					NPC.downedBoss2 = true;
					this.name = "Brain of Cthulu";
				}
				else if (this.type == 35)
				{
					NPC.downedBoss3 = true;
					this.name = "Skeletron";
				}
				else
				{
					this.name = this.displayName;
				}
				if (this.type == 127)
				{
					NPC.downedMechBoss3 = true;
					NPC.downedMechBossAny = true;
				}
				if (this.type == 134)
				{
					NPC.downedMechBoss1 = true;
					NPC.downedMechBossAny = true;
				}
				string name = this.name;
				if (this.displayName != "")
				{
					name = this.displayName;
				}
				int stack5 = Main.rand.Next(5, 16);
				int num70 = 28;
				if (this.type == 113)
				{
					num70 = 188;
				}
				else if (this.type == 222)
				{
					num70 = 1134;
				}
				else if (this.type > 113 && this.type < 222)
				{
					num70 = 499;
				}
				else if (this.type == 245 || this.type == 262)
				{
					num70 = 499;
				}
				else if (this.type == 370)
				{
					num70 = 499;
				}
				else if (this.type == 395)
				{
					num70 = 499;
				}
				else if (this.type == 439)
				{
					num70 = 499;
				}
				else if (this.type == 398)
				{
					num70 = 499;
				}
				DropLoot(this.position, this.width, this.height, num70, stack5, false, 0, false, false);
				int num71 = Main.rand.Next(5) + 5;
				for (int num72 = 0; num72 < num71; num72++)
				{
					DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
				}
				if (this.type == 125 || this.type == 126)
				{
					NPC.downedMechBoss2 = true;
					NPC.downedMechBossAny = true;
					if (Main.netMode == 0)
					{
						Main.NewText("The Twins " + Lang.misc[50], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, "The Twins " + Lang.misc[50], 255, 175f, 75f, 255f, 0, 0, 0);
					}
				}
				else if (this.type == 398)
				{
					if (Main.netMode == 0)
					{
						Main.NewText("Moon Lord " + Lang.misc[17], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, "Moon Lord " + Lang.misc[17], 255, 175f, 75f, 255f, 0, 0, 0);
					}
				}
				else if (Main.netMode == 0)
				{
					Main.NewText(name + " " + Lang.misc[17], 175, 75, 255, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, name + " " + Lang.misc[17], 255, 175f, 75f, 255f, 0, 0, 0);
				}
				if (this.type == 113 && Main.netMode != 1)
				{
					bool hardMode = Main.hardMode;
					WorldGen.StartHardmode();
					if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && !hardMode)
					{
						if (Main.netMode == 0)
						{
							Main.NewText(Lang.misc[32], 50, 255, 130, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
						}
					}
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (!flag && NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && Main.hardMode)
			{
				if (Main.netMode == 0)
				{
					Main.NewText(Lang.misc[32], 50, 255, 130, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
				}
			}
			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				int num73 = (int)Player.FindClosest(this.position, this.width, this.height);
				if (Main.rand.Next(2) == 0 && Main.player[num73].statMana < Main.player[num73].statManaMax2)
				{
					DropLoot(this.position, this.width, this.height, 184, 1, false, 0, false, false);
				}
				else if (Main.rand.Next(2) == 0 && Main.player[num73].statLife < Main.player[num73].statLifeMax2)
				{
					DropLoot(this.position, this.width, this.height, 58, 1, false, 0, false, false);
				}
			}
			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(2) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				int num74 = (int)Player.FindClosest(this.position, this.width, this.height);
				if (Main.player[num74].statMana < Main.player[num74].statManaMax2)
				{
					DropLoot(this.position, this.width, this.height, 184, 1, false, 0, false, false);
				}
			}
			float num75 = this.value;
			if (this.midas)
			{
				num75 *= 1f + (float)Main.rand.Next(10, 50) * 0.01f;
			}
			num75 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
			if (Main.rand.Next(5) == 0)
			{
				num75 *= 1f + (float)Main.rand.Next(5, 11) * 0.01f;
			}
			if (Main.rand.Next(10) == 0)
			{
				num75 *= 1f + (float)Main.rand.Next(10, 21) * 0.01f;
			}
			if (Main.rand.Next(15) == 0)
			{
				num75 *= 1f + (float)Main.rand.Next(15, 31) * 0.01f;
			}
			if (Main.rand.Next(20) == 0)
			{
				num75 *= 1f + (float)Main.rand.Next(20, 41) * 0.01f;
			}
			num75 += this.extraValue;
			while ((int)num75 > 0)
			{
				if (num75 > 1000000f)
				{
					int num76 = (int)(num75 / 1000000f);
					if (num76 > 50 && Main.rand.Next(5) == 0)
					{
						num76 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num76 /= Main.rand.Next(3) + 1;
					}
					num75 -= (float)(1000000 * num76);
					DropLoot(this.position, this.width, this.height, 74, num76, false, 0, false, false);
				}
				else if (num75 > 10000f)
				{
					int num77 = (int)(num75 / 10000f);
					if (num77 > 50 && Main.rand.Next(5) == 0)
					{
						num77 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num77 /= Main.rand.Next(3) + 1;
					}
					num75 -= (float)(10000 * num77);
					DropLoot(this.position, this.width, this.height, 73, num77, false, 0, false, false);
				}
				else if (num75 > 100f)
				{
					int num78 = (int)(num75 / 100f);
					if (num78 > 50 && Main.rand.Next(5) == 0)
					{
						num78 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num78 /= Main.rand.Next(3) + 1;
					}
					num75 -= (float)(100 * num78);
					DropLoot(this.position, this.width, this.height, 72, num78, false, 0, false, false);
				}
				else
				{
					int num79 = (int)num75;
					if (num79 > 50 && Main.rand.Next(5) == 0)
					{
						num79 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num79 /= Main.rand.Next(4) + 1;
					}
					if (num79 < 1)
					{
						num79 = 1;
					}
					num75 -= (float)num79;
					DropLoot(this.position, this.width, this.height, 71, num79, false, 0, false, false);
				}
			}
		}
		public static void CatchNPC(int i, int who = -1)
		{
			if (!Main.npc[i].active)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				Main.npc[i].active = false;
				NetMessage.SendData(70, -1, -1, "", i, (float)who, 0f, 0f, 0, 0, 0);
				return;
			}
			if (Main.npc[i].catchItem > 0)
			{
				int arg_61_0 = Main.npc[i].type;
				Item item = new Item();
				item.SetDefaults((int)Main.npc[i].catchItem, false);
				Item.NewItem((int)Main.player[who].Center.X, (int)Main.player[who].Center.Y, 0, 0, (int)Main.npc[i].catchItem, 1, false, 0, true, false);
				Main.npc[i].active = false;
				NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
			}
		}
		public void DropBossBags()
		{
			int num = -1;
			if (this.type == 50)
			{
				num = 3318;
			}
			if (this.type == 4)
			{
				num = 3319;
			}
			if (this.type >= 13 && this.type <= 15)
			{
				num = 3320;
			}
			if (this.type == 266)
			{
				num = 3321;
			}
			if (this.type == 222)
			{
				num = 3322;
			}
			if (this.type == 35)
			{
				num = 3323;
			}
			if (this.type == 113)
			{
				num = 3324;
			}
			if (this.type == 134)
			{
				num = 3325;
			}
			if (this.type == 125 || this.type == 126)
			{
				num = 3326;
			}
			if (this.type == 127)
			{
				num = 3327;
			}
			if (this.type == 262)
			{
				num = 3328;
			}
			if (this.type == 245)
			{
				num = 3329;
			}
			if (this.type == 370)
			{
				num = 3330;
			}
			if (this.type == 439)
			{
				num = 3331;
			}
			if (this.type == 398)
			{
				num = 3332;
			}
			if (num > 0)
			{
				if (Main.netMode == 2)
				{
					Vector2 position = this.position;
					int width = this.width;
					int height = this.height;
					int ID = num;
					int stack = 1;
					bool broadcast = false;
					int prefix = 0;
					bool nodelay = false;
					bool reverseLookup = false;

					if (!ServerApi.Hooks.InvokeDropBossBag(ref position, ref width, ref height, ref ID, ref stack, ref broadcast, ref prefix, type, whoAmI, ref nodelay, ref reverseLookup))
					{
						int num2 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num, 1, true, 0, false, false);
						Main.itemLockoutTime[num2] = 54000;
						for (int i = 0; i < 255; i++)
						{
							if (this.playerInteraction[i] && Main.player[i].active)
							{
								NetMessage.SendData(90, i, -1, "", num2, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						Main.item[num2].active = false;
					}
				}
				else if (Main.netMode == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num, 1, false, 0, false, false);
				}
				this.value = 0f;
			}
		}
		public void PlayerInteraction(int player)
		{
			if (this.playerInteraction[player])
			{
				return;
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				for (int i = 0; i < 200; i++)
				{
					if (i != this.whoAmI && Main.npc[i].active && (Main.npc[i].type == 13 || Main.npc[i].type == 14 || Main.npc[i].type == 15))
					{
						Main.npc[i].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 134 || this.type == 135 || this.type == 136)
			{
				for (int j = 0; j < 200; j++)
				{
					if (j != this.whoAmI && Main.npc[j].active && (Main.npc[j].type == 134 || Main.npc[j].type == 135 || Main.npc[j].type == 136))
					{
						Main.npc[j].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 35 || this.type == 36)
			{
				for (int k = 0; k < 200; k++)
				{
					if (k != this.whoAmI && Main.npc[k].active && (Main.npc[k].type == 35 || Main.npc[k].type == 36))
					{
						Main.npc[k].ApplyInteraction(player);
					}
				}
			}
			if (this.type == 113 || this.type == 114)
			{
				for (int l = 0; l < 200; l++)
				{
					if (l != this.whoAmI && Main.npc[l].active && (Main.npc[l].type == 113 || Main.npc[l].type == 114))
					{
						Main.npc[l].ApplyInteraction(player);
					}
				}
			}
			if (this.type >= 127 && this.type <= 131)
			{
				for (int m = 0; m < 200; m++)
				{
					if (m != this.whoAmI && Main.npc[m].active && Main.npc[m].type >= 127 && Main.npc[m].type <= 131)
					{
						Main.npc[m].ApplyInteraction(player);
					}
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				for (int n = 0; n < 200; n++)
				{
					if (n != this.whoAmI && Main.npc[n].active && Main.npc[n].type >= 245 && Main.npc[n].type <= 249)
					{
						Main.npc[n].ApplyInteraction(player);
					}
				}
			}
			if ((this.type == 396 || this.type == 397) && Main.npc[(int)this.ai[3]].active && Main.npc[(int)this.ai[3]].type == 398)
			{
				Main.npc[(int)this.ai[3]].ApplyInteraction(player);
			}
			if ((this.type == 393 || this.type == 394) && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 395)
			{
				Main.npc[(int)this.ai[0]].ApplyInteraction(player);
			}
			if (this.type == 492 && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 491)
			{
				Main.npc[(int)this.ai[0]].ApplyInteraction(player);
			}
			this.ApplyInteraction(player);
		}
		public void ApplyInteraction(int player)
		{
			this.playerInteraction[player] = true;
			if (player < 255)
			{
				this.lastInteraction = player;
			}
		}
		public static bool CanReleaseNPCs(int who)
		{
			float num = 0.7f;
			if (Main.netMode != 1)
			{
				num += 0.05f;
			}
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					num3++;
					if ((int)Main.npc[i].releaseOwner == who)
					{
						num2++;
					}
				}
			}
			int num4 = 0;
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active)
				{
					num4++;
				}
			}
			int num5 = (int)(200f * num / (float)num4);
			return (float)num3 < 200f * num && num2 < num5;
		}
		public static void ReleaseNPC(int x, int y, int Type, int Style, int who)
		{
			if (Main.netMode == 1)
			{
				NetMessage.SendData(71, -1, -1, "", x, (float)y, (float)Type, (float)Style, 0, 0, 0);
				return;
			}
			if (Main.npcCatchable[Type] && NPC.CanReleaseNPCs(who))
			{
				if (Type == 148)
				{
					int num = Type + Main.rand.Next(2);
					int num2 = NPC.NewNPC(x, y, num, 0, 0f, 0f, 0f, 0f, 255);
					Main.npc[num2].releaseOwner = (short)who;
					return;
				}
				int num3 = NPC.NewNPC(x, y, Type, 0, 0f, 0f, 0f, 0f, 255);
				if (Type == 356)
				{
					Main.npc[num3].ai[2] = (float)Style;
				}
				Main.npc[num3].releaseOwner = (short)who;
			}
		}
		public static void SlimeRainSpawns(int plr)
		{
			float num = 15f;
			Player player = Main.player[plr];
			if ((double)player.position.Y > Main.worldSurface * 16.0 + (double)(Main.maxScreenH / 2))
			{
				return;
			}
			if (player.activeNPCs > num)
			{
				return;
			}
			float num2 = player.activeNPCs / num;
			int num3 = 45 + (int)(450f * num2);
			if (Main.expertMode)
			{
				num3 = (int)((double)num3 * 0.85);
			}
			if (Main.rand.Next(num3) != 0)
			{
				return;
			}
			int num4 = (int)(player.Center.X - (float)Main.maxScreenW);
			int maxValue = num4 + Main.maxScreenW * 2;
			int minValue = (int)((double)player.Center.Y - (double)Main.maxScreenH * 1.5);
			int maxValue2 = (int)((double)player.Center.Y - (double)Main.maxScreenH * 0.75);
			int num5 = Main.rand.Next(num4, maxValue);
			int num6 = Main.rand.Next(minValue, maxValue2);
			num5 /= 16;
			num6 /= 16;
			if (num5 < 10 || num5 > Main.maxTilesX + 10)
			{
				return;
			}
			if ((double)num6 < Main.worldSurface * 0.3 || (double)num6 > Main.worldSurface)
			{
				return;
			}
			if (Collision.SolidTiles(num5 - 3, num5 + 3, num6 - 5, num6 + 2))
			{
				return;
			}
			if (Main.wallHouse[(int)Main.tile[num5, num6].wall])
			{
				return;
			}
			int num7 = NPC.NewNPC(num5 * 16 + 8, num6 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
			if (Main.rand.Next(200) == 0)
			{
				Main.npc[num7].netDefaults(-4);
				return;
			}
			if (Main.expertMode)
			{
				if (Main.rand.Next(7) == 0)
				{
					Main.npc[num7].netDefaults(-7);
					return;
				}
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[num7].netDefaults(-3);
					return;
				}
			}
			else
			{
				if (Main.rand.Next(10) == 0)
				{
					Main.npc[num7].netDefaults(-7);
					return;
				}
				if (Main.rand.Next(5) < 2)
				{
					Main.npc[num7].netDefaults(-3);
				}
			}
		}
		public static void SpawnNPC()
		{
			if (NPC.noSpawnCycle)
			{
				NPC.noSpawnCycle = false;
				return;
			}
			bool flag = false;
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					num4++;
				}
			}
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active && !Main.player[j].dead)
				{
					if (Main.slimeRain)
					{
						NPC.SlimeRainSpawns(j);
					}
					bool flag2 = false;
					bool flag3 = false;
					bool flag4 = false;
					bool flag5 = false;
					bool flag6 = false;
					bool flag7 = false;
					bool flag8 = false;
					bool flag9 = false;
					bool flag10 = false;
					bool flag11 = false;
					bool flag12 = NPC.downedPlantBoss && Main.hardMode;
					if (Main.player[j].active && Main.invasionType > 0 && Main.invasionDelay == 0 && Main.invasionSize > 0 && (double)Main.player[j].position.Y < Main.worldSurface * 16.0 + (double)NPC.sHeight)
					{
						int num5 = 3000;
						if ((double)Main.player[j].position.X > Main.invasionX * 16.0 - (double)num5 && (double)Main.player[j].position.X < Main.invasionX * 16.0 + (double)num5)
						{
							flag4 = true;
						}
						else if (Main.invasionX >= (double)(Main.maxTilesX / 2 - 5) && Main.invasionX <= (double)(Main.maxTilesX / 2 + 5))
						{
							int k = 0;
							while (k < 200)
							{
								if (Main.npc[k].townNPC && Math.Abs(Main.player[j].position.X - Main.npc[k].Center.X) < (float)num5)
								{
									if (Main.rand.Next(3) == 0)
									{
										flag4 = true;
										break;
									}
									break;
								}
								else
								{
									k++;
								}
							}
						}
					}
					if (Main.player[j].ZoneTowerSolar || Main.player[j].ZoneTowerNebula || Main.player[j].ZoneTowerVortex || Main.player[j].ZoneTowerStardust)
					{
						flag4 = true;
					}
					bool flag13 = false;
					NPC.spawnRate = NPC.defaultSpawnRate;
					NPC.maxSpawns = NPC.defaultMaxSpawns;
					if (Main.hardMode)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.9);
						NPC.maxSpawns = NPC.defaultMaxSpawns + 1;
					}
					if (Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					else if ((double)Main.player[j].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					else if ((double)Main.player[j].position.Y > Main.worldSurface * 16.0 + (double)NPC.sHeight)
					{
						if (Main.hardMode)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.45);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						else
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
						}
					}
					else if (!Main.dayTime)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.6);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
						if (Main.bloodMoon)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[j].position.Y < Main.worldSurface * 16.0)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
							NPC.maxSpawns *= 2;
						}
					}
					else if (Main.dayTime && Main.eclipse)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					if (Main.player[j].ZoneSnow && (double)(Main.player[j].position.Y / 16f) < Main.worldSurface)
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns + (float)NPC.maxSpawns * Main.cloudAlpha);
						NPC.spawnRate = (int)((float)NPC.spawnRate * (1f - Main.cloudAlpha + 1f) / 2f);
					}
					if (Main.player[j].ZoneDungeon)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
					}
					else if (Main.player[j].ZoneUndergroundDesert)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					else if (Main.player[j].ZoneJungle)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					else if (Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					else if (Main.player[j].ZoneMeteor)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.1f);
					}
					if (Main.player[j].ZoneHoly && (double)Main.player[j].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					if (Main.wof >= 0 && Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.3f);
						NPC.spawnRate *= 3;
					}
					if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.6f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.6)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.8f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.8)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
					}
					if ((double)(Main.player[j].position.Y / 16f) > (Main.worldSurface + Main.rockLayer) / 2.0 || Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
					{
						if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
						}
						else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
						}
					}
					if (Main.player[j].calmed)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 1.3f);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.7f);
					}
					if (Main.player[j].sunflower)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 1.2f);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.8f);
					}
					if (Main.player[j].enemySpawns)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					if (Main.player[j].ZoneWaterCandle || Main.player[j].inventory[Main.player[j].selectedItem].type == 148)
					{
						if (!Main.player[j].ZonePeaceCandle && Main.player[j].inventory[Main.player[j].selectedItem].type != 3117)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.75);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
						}
					}
					else if (Main.player[j].ZonePeaceCandle || Main.player[j].inventory[Main.player[j].selectedItem].type == 3117)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 1.3);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.7f);
					}
					if (Main.player[j].ZoneWaterCandle && (double)(Main.player[j].position.Y / 16f) < Main.worldSurface * 0.34999999403953552)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
					}
					if ((double)NPC.spawnRate < (double)NPC.defaultSpawnRate * 0.1)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.1);
					}
					if (NPC.maxSpawns > NPC.defaultMaxSpawns * 3)
					{
						NPC.maxSpawns = NPC.defaultMaxSpawns * 3;
					}
					if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[j].position.Y < Main.worldSurface * 16.0)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num4));
						NPC.spawnRate = 20;
					}
					if (flag4)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num4));
						NPC.spawnRate = 20;
					}
					if (Main.player[j].ZoneDungeon && !NPC.downedBoss3)
					{
						NPC.spawnRate = 10;
					}
					if (!flag4 && ((!Main.bloodMoon && !Main.pumpkinMoon && !Main.snowMoon) || Main.dayTime) && (!Main.eclipse || !Main.dayTime) && !Main.player[j].ZoneDungeon && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneMeteor)
					{
						if (Main.player[j].Center.Y / 16f > (float)(Main.maxTilesY - 200))
						{
							if (Main.player[j].townNPCs == 1f)
							{
								if (Main.rand.Next(2) == 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(10) == 0)
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
								else
								{
									NPC.spawnRate = (int)((double)((float)NPC.spawnRate) * 1.25);
								}
							}
							else if (Main.player[j].townNPCs == 2f)
							{
								if (Main.rand.Next(4) != 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(5) == 0)
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
								else
								{
									NPC.spawnRate = (int)((double)((float)NPC.spawnRate) * 1.5);
								}
							}
							else if (Main.player[j].townNPCs >= 3f)
							{
								if (Main.rand.Next(10) != 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(3) == 0)
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
								else
								{
									NPC.spawnRate = (int)((float)NPC.spawnRate * 2f);
								}
							}
						}
						else if (Main.player[j].townNPCs == 1f)
						{
							flag3 = true;
							if (Main.rand.Next(3) == 1)
							{
								flag10 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
							else
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 2f);
							}
						}
						else if (Main.player[j].townNPCs == 2f)
						{
							flag3 = true;
							if (Main.rand.Next(3) != 0)
							{
								flag10 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
							else
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 3f);
							}
						}
						else if (Main.player[j].townNPCs >= 3f)
						{
							flag3 = true;
							if (!Main.expertMode || Main.rand.Next(30) != 0)
							{
								flag10 = true;
							}
							NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
						}
					}
					int num6 = (int)(Main.player[j].position.X + (float)(Main.player[j].width / 2)) / 16;
					int num7 = (int)(Main.player[j].position.Y + (float)(Main.player[j].height / 2)) / 16;
					if (Main.wallHouse[(int)Main.tile[num6, num7].wall])
					{
						flag3 = true;
					}
					if (Main.tile[num6, num7].wall == 87)
					{
						flag2 = true;
					}
					bool flag14 = false;
					if (Main.player[j].active && !Main.player[j].dead && Main.player[j].activeNPCs < (float)NPC.maxSpawns && Main.rand.Next(NPC.spawnRate) == 0)
					{
						NPC.spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
						NPC.spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
						NPC.safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
						NPC.safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
						if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 || Main.player[j].inventory[Main.player[j].selectedItem].type == 1299 || Main.player[j].scope)
						{
							float num8 = 1.5f;
							if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 && Main.player[j].scope)
							{
								num8 = 1.25f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254)
							{
								num8 = 1.5f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1299)
							{
								num8 = 1.5f;
							}
							else if (Main.player[j].scope)
							{
								num8 = 2f;
							}
							NPC.spawnRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
							NPC.spawnRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
							NPC.safeRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
							NPC.safeRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
						}
						int num9 = (int)(Main.player[j].position.X / 16f) - NPC.spawnRangeX;
						int num10 = (int)(Main.player[j].position.X / 16f) + NPC.spawnRangeX;
						int num11 = (int)(Main.player[j].position.Y / 16f) - NPC.spawnRangeY;
						int num12 = (int)(Main.player[j].position.Y / 16f) + NPC.spawnRangeY;
						int num13 = (int)(Main.player[j].position.X / 16f) - NPC.safeRangeX;
						int num14 = (int)(Main.player[j].position.X / 16f) + NPC.safeRangeX;
						int num15 = (int)(Main.player[j].position.Y / 16f) - NPC.safeRangeY;
						int num16 = (int)(Main.player[j].position.Y / 16f) + NPC.safeRangeY;
						if (num9 < 0)
						{
							num9 = 0;
						}
						if (num10 > Main.maxTilesX)
						{
							num10 = Main.maxTilesX;
						}
						if (num11 < 0)
						{
							num11 = 0;
						}
						if (num12 > Main.maxTilesY)
						{
							num12 = Main.maxTilesY;
						}
						int l = 0;
						while (l < 50)
						{
							int num17 = Main.rand.Next(num9, num10);
							int num18 = Main.rand.Next(num11, num12);
							if (Main.tile[num17, num18].nactive() && Main.tileSolid[(int)Main.tile[num17, num18].type])
							{
								goto IL_14A6;
							}
							if (!Main.wallHouse[(int)Main.tile[num17, num18].wall])
							{
								if (!flag4 && (double)num18 < Main.worldSurface * 0.34999999403953552 && !flag10 && ((double)num17 < (double)Main.maxTilesX * 0.45 || (double)num17 > (double)Main.maxTilesX * 0.55 || Main.hardMode))
								{
									num3 = (int)Main.tile[num17, num18].type;
									num = num17;
									num2 = num18;
									flag13 = true;
									flag = true;
								}
								else if (!flag4 && (double)num18 < Main.worldSurface * 0.44999998807907104 && !flag10 && Main.hardMode && Main.rand.Next(10) == 0)
								{
									num3 = (int)Main.tile[num17, num18].type;
									num = num17;
									num2 = num18;
									flag13 = true;
									flag = true;
								}
								else
								{
									int m = num18;
									while (m < Main.maxTilesY)
									{
										if (Main.tile[num17, m].nactive() && Main.tileSolid[(int)Main.tile[num17, m].type])
										{
											if (num17 < num13 || num17 > num14 || m < num15 || m > num16)
											{
												num3 = (int)Main.tile[num17, m].type;
												num = num17;
												num2 = m;
												flag13 = true;
												break;
											}
											break;
										}
										else
										{
											m++;
										}
									}
								}
								if (!flag13)
								{
									goto IL_14A6;
								}
								int num19 = num - NPC.spawnSpaceX / 2;
								int num20 = num + NPC.spawnSpaceX / 2;
								int num21 = num2 - NPC.spawnSpaceY;
								int num22 = num2;
								if (num19 < 0)
								{
									flag13 = false;
								}
								if (num20 > Main.maxTilesX)
								{
									flag13 = false;
								}
								if (num21 < 0)
								{
									flag13 = false;
								}
								if (num22 > Main.maxTilesY)
								{
									flag13 = false;
								}
								if (flag13)
								{
									for (int n = num19; n < num20; n++)
									{
										for (int num23 = num21; num23 < num22; num23++)
										{
											if (Main.tile[n, num23].nactive() && Main.tileSolid[(int)Main.tile[n, num23].type])
											{
												flag13 = false;
												break;
											}
											if (Main.tile[n, num23].lava())
											{
												flag13 = false;
												break;
											}
										}
									}
								}
								if (num >= num13 && num <= num14)
								{
									flag14 = true;
									goto IL_14A6;
								}
								goto IL_14A6;
							}
							IL_14AC:
							l++;
							continue;
							IL_14A6:
							if (!flag13 && !flag13)
							{
								goto IL_14AC;
							}
							break;
						}
					}
					if (flag13)
					{
						Rectangle rectangle = new Rectangle(num * 16, num2 * 16, 16, 16);
						for (int num24 = 0; num24 < 255; num24++)
						{
							if (Main.player[num24].active)
							{
								Rectangle rectangle2 = new Rectangle((int)(Main.player[num24].position.X + (float)(Main.player[num24].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[num24].position.Y + (float)(Main.player[num24].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
								if (rectangle.Intersects(rectangle2))
								{
									flag13 = false;
								}
							}
						}
					}
					if (flag13)
					{
						if (Main.player[j].ZoneDungeon && (!Main.tileDungeon[(int)Main.tile[num, num2].type] || Main.tile[num, num2 - 1].wall == 0))
						{
							flag13 = false;
						}
						if (Main.tile[num, num2 - 1].liquid > 0 && Main.tile[num, num2 - 2].liquid > 0 && !Main.tile[num, num2 - 1].lava())
						{
							if (Main.tile[num, num2 - 1].honey())
							{
								flag6 = true;
							}
							else
							{
								flag5 = true;
							}
						}
						int num25 = (int)Main.player[j].Center.X / 16;
						int num26 = (int)(Main.player[j].Bottom.Y + 8f) / 16;
						if (Main.tile[num, num2].type == 367)
						{
							flag8 = true;
						}
						else if (Main.tile[num, num2].type == 368)
						{
							flag7 = true;
						}
						else if (Main.tile[num25, num26].type == 367)
						{
							flag8 = true;
						}
						else if (Main.tile[num25, num26].type == 368)
						{
							flag7 = true;
						}
						else
						{
							int num27 = Main.rand.Next(20, 31);
							int num28 = Main.rand.Next(1, 4);
							if (num - num27 < 0)
							{
								num27 = num;
							}
							if (num2 - num27 < 0)
							{
								num27 = num2;
							}
							if (num + num27 >= Main.maxTilesX)
							{
								num27 = Main.maxTilesX - num - 1;
							}
							if (num2 + num27 >= Main.maxTilesY)
							{
								num27 = Main.maxTilesY - num2 - 1;
							}
							for (int num29 = num - num27; num29 <= num + num27; num29 += num28)
							{
								int num30 = Main.rand.Next(1, 4);
								for (int num31 = num2 - num27; num31 <= num2 + num27; num31 += num30)
								{
									if (Main.tile[num29, num31].type == 367)
									{
										flag8 = true;
									}
									if (Main.tile[num29, num31].type == 368)
									{
										flag7 = true;
									}
								}
							}
							num27 = Main.rand.Next(30, 61);
							num28 = Main.rand.Next(3, 7);
							if (num25 - num27 < 0)
							{
								num27 = num25;
							}
							if (num26 - num27 < 0)
							{
								num27 = num26;
							}
							if (num25 + num27 >= Main.maxTilesX)
							{
								num27 = Main.maxTilesX - num25 - 2;
							}
							if (num26 + num27 >= Main.maxTilesY)
							{
								num27 = Main.maxTilesY - num26 - 2;
							}
							for (int num32 = num25 - num27; num32 <= num25 + num27; num32 += num28)
							{
								int num33 = Main.rand.Next(3, 7);
								for (int num34 = num26 - num27; num34 <= num26 + num27; num34 += num33)
								{
									if (Main.tile[num32, num34].type == 367)
									{
										flag8 = true;
									}
									if (Main.tile[num32, num34].type == 368)
									{
										flag7 = true;
									}
								}
							}
						}
					}
					if (flag6)
					{
						flag13 = false;
					}
					if (flag13)
					{
						if ((double)num2 > Main.rockLayer && num2 < Main.maxTilesY - 200 && !Main.player[j].ZoneDungeon && !flag4)
						{
							if (Main.rand.Next(3) == 0)
							{
								int num35 = Main.rand.Next(5, 15);
								if (num - num35 >= 0 && num + num35 < Main.maxTilesX)
								{
									for (int num36 = num - num35; num36 < num + num35; num36++)
									{
										for (int num37 = num2 - num35; num37 < num2 + num35; num37++)
										{
											if (Main.tile[num36, num37].wall == 62)
											{
												flag9 = true;
											}
										}
									}
								}
							}
							else
							{
								int num38 = (int)Main.player[j].position.X / 16;
								int num39 = (int)Main.player[j].position.Y / 16;
								if (Main.tile[num38, num39].wall == 62)
								{
									flag9 = true;
								}
							}
						}
						if ((double)num2 < Main.rockLayer && num2 > 200 && !Main.player[j].ZoneDungeon && !flag4)
						{
							if (Main.rand.Next(3) == 0)
							{
								int num40 = Main.rand.Next(5, 15);
								if (num - num40 >= 0 && num + num40 < Main.maxTilesX)
								{
									for (int num41 = num - num40; num41 < num + num40; num41++)
									{
										for (int num42 = num2 - num40; num42 < num2 + num40; num42++)
										{
											if (WallID.Sets.Conversion.Sandstone[(int)Main.tile[num41, num42].wall] || WallID.Sets.Conversion.HardenedSand[(int)Main.tile[num41, num42].wall])
											{
												flag11 = true;
											}
										}
									}
								}
							}
							else
							{
								int num43 = (int)Main.player[j].position.X / 16;
								int num44 = (int)Main.player[j].position.Y / 16;
								if (WallID.Sets.Conversion.Sandstone[(int)Main.tile[num43, num44].wall] || WallID.Sets.Conversion.HardenedSand[(int)Main.tile[num43, num44].wall])
								{
									flag11 = true;
								}
							}
						}
						int num45 = (int)Main.tile[num, num2].type;
						int num46 = 200;
						if (Main.player[j].ZoneTowerNebula)
						{
							bool flag15 = true;
							int num47 = 0;
							while (flag15)
							{
								num47 = Utils.SelectRandom<int>(Main.rand, new int[]
								{
									424,
									424,
									424,
									423,
									423,
									423,
									421,
									421,
									421,
									421,
									421,
									420
								});
								flag15 = false;
								if (num47 == 424 && NPC.CountNPCS(num47) >= 2)
								{
									flag15 = true;
								}
								if (num47 == 423 && NPC.CountNPCS(num47) >= 3)
								{
									flag15 = true;
								}
								if (num47 == 420 && NPC.CountNPCS(num47) >= 2)
								{
									flag15 = true;
								}
							}
							if (num47 != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num47, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerVortex)
						{
							bool flag16 = true;
							int num48 = 0;
							while (flag16)
							{
								num48 = Utils.SelectRandom<int>(Main.rand, new int[]
								{
									429,
									429,
									429,
									429,
									427,
									427,
									425,
									425,
									426
								});
								flag16 = false;
								if (num48 == 425 && NPC.CountNPCS(num48) >= 3)
								{
									flag16 = true;
								}
								if (num48 == 426 && NPC.CountNPCS(num48) >= 3)
								{
									flag16 = true;
								}
								if (num48 == 429 && NPC.CountNPCS(num48) >= 4)
								{
									flag16 = true;
								}
							}
							if (num48 != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num48, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerStardust)
						{
							int num49 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								411,
								411,
								411,
								409,
								409,
								407,
								402,
								405
							});
							if (num49 != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num49, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerSolar)
						{
							bool flag17 = true;
							int num50 = 0;
							while (flag17)
							{
								num50 = Utils.SelectRandom<int>(Main.rand, new int[]
								{
									518,
									419,
									418,
									412,
									417,
									416,
									415
								});
								flag17 = false;
								if (num50 == 415 && NPC.CountNPCS(num50) >= 2)
								{
									flag17 = true;
								}
								if (num50 == 416 && NPC.CountNPCS(num50) >= 1)
								{
									flag17 = true;
								}
								if (num50 == 518 && NPC.CountNPCS(num50) >= 2)
								{
									flag17 = true;
								}
								if (num50 == 412 && NPC.CountNPCS(num50) >= 1)
								{
									flag17 = true;
								}
							}
							if (num50 != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num50, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag)
						{
							int maxValue = 8;
							int maxValue2 = 30;
							bool flag18 = (float)Math.Abs(num - Main.maxTilesX / 2) / (float)(Main.maxTilesX / 2) > 0.33f;
							if (flag18)
							{
								bool flag19 = NPC.AnyDanger();
								if (flag19)
								{
									flag18 = false;
								}
							}
							if (Main.player[j].ZoneWaterCandle)
							{
								maxValue = 3;
								maxValue2 = 10;
							}
							if (flag4 && Main.invasionType == 4)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 388, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag18 && Main.hardMode && NPC.downedGolemBoss && ((!NPC.downedMartians && Main.rand.Next(maxValue) == 0) || Main.rand.Next(maxValue2) == 0) && !NPC.AnyNPCs(399))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 399, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag18 && Main.hardMode && NPC.downedGolemBoss && ((!NPC.downedMartians && Main.rand.Next(maxValue) == 0) || Main.rand.Next(maxValue2) == 0) && !NPC.AnyNPCs(399) && (Main.player[j].inventory[Main.player[j].selectedItem].type == 148 || Main.player[j].ZoneWaterCandle))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 399, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && !NPC.AnyNPCs(87) && !flag3 && Main.rand.Next(10) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 87, 1, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && !NPC.AnyNPCs(87) && !flag3 && Main.rand.Next(10) == 0 && (Main.player[j].inventory[Main.player[j].selectedItem].type == 148 || Main.player[j].ZoneWaterCandle))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 87, 1, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 48, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag4)
						{
							if (Main.invasionType == 1)
							{
								if (Main.hardMode && !NPC.AnyNPCs(471) && Main.rand.Next(30) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 471, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 29, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 26, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 111, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 27, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 28, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.invasionType == 2)
							{
								if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 145, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 143, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 144, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.invasionType == 3)
							{
								if (Main.invasionSize < Main.invasionSizeStart / 2 && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(491) && !Collision.SolidTiles(num - 20, num + 20, num2 - 40, num2 - 10))
								{
									NPC.NewNPC(num * 16 + 8, (num2 - 10) * 16, 491, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(30) == 0 && !NPC.AnyNPCs(216))
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 216, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(11) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 215, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 252, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 214, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 213, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 212, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.invasionType == 4)
							{
								int num51 = 0;
								int num52 = Main.rand.Next(7);
								if (Main.invasionSize <= 100 && Main.rand.Next(10) == 0 && !NPC.AnyNPCs(395))
								{
									num51 = 395;
								}
								else if (num52 >= 6)
								{
									if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(395))
									{
										num51 = 395;
									}
									else
									{
										int num53 = Main.rand.Next(2);
										if (num53 == 0)
										{
											num51 = 390;
										}
										if (num53 == 1)
										{
											num51 = 386;
										}
									}
								}
								else if (num52 >= 4)
								{
									int num54 = Main.rand.Next(5);
									if (num54 < 2)
									{
										num51 = 382;
									}
									else if (num54 < 4)
									{
										num51 = 381;
									}
									else
									{
										num51 = 388;
									}
								}
								else
								{
									int num55 = Main.rand.Next(4);
									if (num55 == 3)
									{
										if (!NPC.AnyNPCs(520))
										{
											num51 = 520;
										}
										else
										{
											num55 = Main.rand.Next(3);
										}
									}
									if (num55 == 0)
									{
										num51 = 385;
									}
									if (num55 == 1)
									{
										num51 = 389;
									}
									if (num55 == 2)
									{
										num51 = 383;
									}
								}
								if (num51 != 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num51, 1, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
						else if (Main.tile[num, num2].wall == 62 || flag9)
						{
							if (Main.tile[num, num2].wall == 62 && Main.rand.Next(8) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedStylist && !NPC.AnyNPCs(354))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 354, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 163, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 164, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((WallID.Sets.Conversion.HardenedSand[(int)Main.tile[num, num2].wall] || WallID.Sets.Conversion.Sandstone[(int)Main.tile[num, num2].wall] || flag11) && WorldGen.checkUnderground(num, num2))
						{
							if (Main.hardMode && Main.rand.Next(33) == 0 && !flag3)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 510, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(22) == 0 && !flag3)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 513, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(5) != 0)
							{
								List<int> list = new List<int>();
								if (Main.player[j].ZoneCorrupt)
								{
									list.Add(525);
									list.Add(525);
								}
								if (Main.player[j].ZoneCrimson)
								{
									list.Add(526);
									list.Add(526);
								}
								if (Main.player[j].ZoneHoly)
								{
									list.Add(527);
									list.Add(527);
								}
								if (list.Count == 0)
								{
									list.Add(524);
									list.Add(524);
								}
								if (Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
								{
									list.Add(533);
									list.Add(529);
								}
								else
								{
									list.Add(530);
									list.Add(528);
								}
								list.Add(532);
								int num56 = Utils.SelectRandom<int>(Main.rand, list.ToArray());
								NPC.NewNPC(num * 16 + 8, num2 * 16, num56, 0, 0f, 0f, 0f, 0f, 255);
								list.Clear();
							}
							else
							{
								int num57 = Utils.SelectRandom<int>(Main.rand, new int[]
								{
									69,
									508,
									508,
									508,
									509
								});
								NPC.NewNPC(num * 16 + 8, num2 * 16, num57, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneJungle && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 157, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneCrimson && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 242, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneCrimson && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 241, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag5 && (num < 250 || num > Main.maxTilesX - 250) && Main.tileSand[num45] && (double)num2 < Main.rockLayer)
						{
							bool flag20 = false;
							if (!NPC.savedAngler && !NPC.AnyNPCs(376))
							{
								int num58 = -1;
								for (int num59 = num2 - 1; num59 > num2 - 50; num59--)
								{
									if (Main.tile[num, num59].liquid == 0 && !WorldGen.SolidTile(num, num59) && !WorldGen.SolidTile(num, num59 + 1) && !WorldGen.SolidTile(num, num59 + 2))
									{
										num58 = num59 + 2;
										break;
									}
								}
								if (num58 > num2)
								{
									num58 = num2;
								}
								if (num58 > 0 && !flag14)
								{
									NPC.NewNPC(num * 16 + 8, num58 * 16, 376, 0, 0f, 0f, 0f, 0f, 255);
									flag20 = true;
								}
							}
							if (!flag20)
							{
								if (Main.rand.Next(60) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 220, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(25) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 221, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 65, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 67, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 64, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
						else if (!flag5 && !NPC.savedAngler && !NPC.AnyNPCs(376) && (num < 340 || num > Main.maxTilesX - 340) && Main.tileSand[num45] && (double)num2 < Main.worldSurface)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 376, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag5 && (((double)num2 > Main.rockLayer && Main.rand.Next(2) == 0) || num45 == 60))
						{
							if (Main.hardMode && Main.rand.Next(3) > 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 102, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 58, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag5 && (double)num2 > Main.worldSurface && Main.rand.Next(3) == 0)
						{
							if (Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 103, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 63, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag5 && Main.rand.Next(4) == 0)
						{
							if (Main.player[j].ZoneCorrupt)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 57, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 < Main.worldSurface && num2 > 50 && Main.rand.Next(3) != 0 && Main.dayTime)
							{
								int num60 = -1;
								for (int num61 = num2 - 1; num61 > num2 - 50; num61--)
								{
									if (Main.tile[num, num61].liquid == 0 && !WorldGen.SolidTile(num, num61) && !WorldGen.SolidTile(num, num61 + 1) && !WorldGen.SolidTile(num, num61 + 2))
									{
										num60 = num61 + 2;
										break;
									}
								}
								if (num60 > num2)
								{
									num60 = num2;
								}
								if (num60 > 0 && !flag14)
								{
									if (Main.rand.Next(2) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num60 * 16, 362, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num60 * 16, 364, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (NPC.downedGoblins && Main.rand.Next(20) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedGoblin && !NPC.AnyNPCs(105))
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 105, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.rand.Next(20) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedWizard && !NPC.AnyNPCs(106))
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 106, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag10)
						{
							if (flag5)
							{
								if ((double)num2 < Main.worldSurface && num2 > 50 && Main.rand.Next(3) != 0 && Main.dayTime)
								{
									int num62 = -1;
									for (int num63 = num2 - 1; num63 > num2 - 50; num63--)
									{
										if (Main.tile[num, num63].liquid == 0 && !WorldGen.SolidTile(num, num63) && !WorldGen.SolidTile(num, num63 + 1) && !WorldGen.SolidTile(num, num63 + 2))
										{
											num62 = num63 + 2;
											break;
										}
									}
									if (num62 > num2)
									{
										num62 = num2;
									}
									if (num62 > 0 && !flag14)
									{
										if (Main.rand.Next(2) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num62 * 16, 362, 0, 0f, 0f, 0f, 0f, 255);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num62 * 16, 364, 0, 0f, 0f, 0f, 0f, 255);
										}
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (num45 == 147 || num45 == 161)
							{
								if (Main.rand.Next(2) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 148, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 149, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (num45 == 60)
							{
								if (Main.rand.Next(NPC.goldCritterChance) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 445, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 361, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								if (num45 != 2 && num45 != 109 && (double)num2 <= Main.worldSurface)
								{
									return;
								}
								if (Main.raining)
								{
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 448, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 357, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 230, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (!Main.dayTime && Main.rand.Next(NPC.fireFlyFriendly) == 0 && (double)num2 <= Main.worldSurface)
								{
									int num64 = 355;
									if (num45 == 109)
									{
										num64 = 358;
									}
									NPC.NewNPC(num * 16 + 8, num2 * 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16 - 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16 + 16, num64, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.dayTime && Main.time < 18000.0 && Main.rand.Next(3) != 0 && (double)num2 <= Main.worldSurface)
								{
									int num65 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num65 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num65 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)num2 <= Main.worldSurface)
								{
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 444, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(4) == 0)
									{
										NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(4) == 0)
									{
										NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.rand.Next(2) == 0 && (double)num2 <= Main.worldSurface)
								{
									int num66 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num66 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num66 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num45 == 53)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(366, 368), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(NPC.goldCritterChance) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 443, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(NPC.goldCritterChance) == 0 && (double)num2 <= Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 539, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.halloween && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 303, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.xMas && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 337, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0 && (double)num2 <= Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, (int)Utils.SelectRandom<short>(Main.rand, new short[]
									{
										299,
										538
									}), 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 46, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
						else if (Main.player[j].ZoneDungeon)
						{
							int num67 = 0;
							if (Main.tile[num, num2].wall == 94 || Main.tile[num, num2].wall == 96 || Main.tile[num, num2].wall == 98)
							{
								num67 = 1;
							}
							if (Main.tile[num, num2].wall == 95 || Main.tile[num, num2].wall == 97 || Main.tile[num, num2].wall == 99)
							{
								num67 = 2;
							}
							if (Main.rand.Next(7) == 0)
							{
								num67 = Main.rand.Next(3);
							}
							if (!NPC.downedBoss3)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 68, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!NPC.savedMech && Main.rand.Next(5) == 0 && !flag5 && !NPC.AnyNPCs(123) && (double)num2 > Main.rockLayer)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 123, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && Main.rand.Next(30) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 287, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num67 == 0 && Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 293, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num67 == 1 && Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 291, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num67 == 2 && Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 292, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && !NPC.AnyNPCs(290) && num67 == 0 && Main.rand.Next(35) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 290, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && (num67 == 1 || num67 == 2) && Main.rand.Next(30) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 289, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && Main.rand.Next(20) == 0)
							{
								int num68 = 281;
								if (num67 == 0)
								{
									num68 += 2;
								}
								if (num67 == 2)
								{
									num68 += 4;
								}
								num68 += Main.rand.Next(2);
								if (!NPC.AnyNPCs(num68))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num68, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (flag12 && Main.rand.Next(3) != 0)
							{
								int num69 = 269;
								if (num67 == 0)
								{
									num69 += 4;
								}
								if (num67 == 2)
								{
									num69 += 8;
								}
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, num69 + Main.rand.Next(4), 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(37) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 71, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num67 == 1 && Main.rand.Next(4) == 0 && !NPC.NearSpikeBall(num, num2))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 70, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num67 == 2 && Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 72, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num67 == 0 && Main.rand.Next(9) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 34, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(7) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 32, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								int num70 = Main.rand.Next(5);
								if (num70 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 294, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num70 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 295, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num70 == 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 296, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 31, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Boned");
									}
									else if (Main.rand.Next(5) == 0)
									{
										Main.npc[num46].SetDefaults("Short Bones");
									}
								}
							}
						}
						else if (Main.player[j].ZoneMeteor)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 23, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num2 <= Main.worldSurface && !Main.dayTime && Main.snowMoon)
						{
							if (Main.rand.Next(30) == 0 && NPC.CountNPCS(341) < 4)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 341, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.waveCount >= 20)
							{
								int num71 = Main.rand.Next(3);
								if (num71 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num71 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 19)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 7)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 18)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 6)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 17)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 16)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 15)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 3)
							{
								if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 2)
							{
								if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num2 <= Main.worldSurface && !Main.dayTime && Main.pumpkinMoon)
						{
							if (NPC.waveCount >= 15)
							{
								if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(327) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0 && NPC.CountNPCS(315) < 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0 && NPC.CountNPCS(315) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(325))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 3)
							{
								if (Main.rand.Next(6) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 2)
							{
								if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num2 <= Main.worldSurface && Main.dayTime && Main.eclipse)
						{
							bool flag21 = false;
							if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3)
							{
								flag21 = true;
							}
							if (flag21 && Main.rand.Next(80) == 0 && !NPC.AnyNPCs(477))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 477, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(50) == 0 && !NPC.AnyNPCs(251))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 251, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(5) == 0 && !NPC.AnyNPCs(466))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 466, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(463))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 463, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(20) == 0 && NPC.CountNPCS(467) < 2)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 467, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(15) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 159, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag21 && Main.rand.Next(13) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 253, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(8) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 469, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(7) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 468, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(5) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 460, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 162, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 461, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 462, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 166, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && num3 == 70 && flag5)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 256, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num3 == 70 && (double)num2 <= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if ((!Main.hardMode && Main.rand.Next(6) == 0) || Main.rand.Next(12) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 360, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) == 0)
							{
								if (Main.rand.Next(4) == 0)
								{
									if (Main.hardMode && Main.rand.Next(3) != 0)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 260, 0, 0f, 0f, 0f, 0f, 255);
										Main.npc[num46].ai[0] = (float)num;
										Main.npc[num46].ai[1] = (float)num2;
										Main.npc[num46].netUpdate = true;
									}
									else
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 259, 0, 0f, 0f, 0f, 0f, 255);
										Main.npc[num46].ai[0] = (float)num;
										Main.npc[num46].ai[1] = (float)num2;
										Main.npc[num46].netUpdate = true;
									}
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 257, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 258, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 254, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 255, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num3 == 70 && Main.hardMode && (double)num2 >= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if (Main.hardMode && Main.rand.Next(5) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 374, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((!Main.hardMode && Main.rand.Next(4) == 0) || Main.rand.Next(8) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 360, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) == 0)
							{
								if (Main.hardMode && Main.rand.Next(3) != 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 260, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num46].ai[0] = (float)num;
									Main.npc[num46].ai[1] = (float)num2;
									Main.npc[num46].netUpdate = true;
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 259, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num46].ai[0] = (float)num;
									Main.npc[num46].ai[1] = (float)num2;
									Main.npc[num46].netUpdate = true;
								}
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 257, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 258, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneCorrupt && Main.rand.Next(65) == 0 && !flag3)
						{
							if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 98, 1, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 7, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && (double)num2 > Main.worldSurface && Main.rand.Next(75) == 0)
						{
							if (Main.rand.Next(2) == 0 && Main.player[j].ZoneCorrupt && !NPC.AnyNPCs(473))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 473, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0 && Main.player[j].ZoneCrimson && !NPC.AnyNPCs(474))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 474, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0 && Main.player[j].ZoneHoly && !NPC.AnyNPCs(475))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 475, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 85, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && Main.tile[num, num2 - 1].wall == 2 && Main.rand.Next(20) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 85, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && (double)num2 <= Main.worldSurface && !Main.dayTime && (Main.rand.Next(20) == 0 || (Main.rand.Next(5) == 0 && Main.moonPhase == 4)))
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 82, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.halloween && (double)num2 <= Main.worldSurface && !Main.dayTime && Main.rand.Next(10) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 304, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num45 == 60 && Main.rand.Next(500) == 0 && !Main.dayTime)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 52, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num45 == 60 && (double)num2 > Main.worldSurface && Main.rand.Next(60) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 219, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num2 > Main.worldSurface && num2 < Main.maxTilesY - 210 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneJungle && !Main.player[j].ZoneHoly && Main.rand.Next(8) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 448, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 357, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num2 > Main.worldSurface && num2 < Main.maxTilesY - 210 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneJungle && !Main.player[j].ZoneHoly && Main.rand.Next(13) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 447, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 300, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num2 > Main.worldSurface && (double)num2 < (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneHoly && Main.rand.Next(13) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 359, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num2 < Main.worldSurface && Main.player[j].ZoneJungle && Main.rand.Next(9) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 445, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 361, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num45 == 60 && Main.hardMode && Main.rand.Next(3) != 0)
						{
							if ((double)num2 < Main.worldSurface && !Main.dayTime && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 152, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 < Main.worldSurface && Main.dayTime && Main.rand.Next(4) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 177, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(100) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 205, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(5) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 236, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(4) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 176, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num46].SetDefaults("Tiny Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num46].SetDefaults("Little Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num46].SetDefaults("Big Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num46].SetDefaults("Giant Moss Hornet");
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 175, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num46].ai[0] = (float)num;
								Main.npc[num46].ai[1] = (float)num2;
								Main.npc[num46].netUpdate = true;
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 153, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num45 == 226 && flag2)
						{
							if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 226, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 198, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num45 == 60 && (double)num2 > (Main.worldSurface + Main.rockLayer) / 2.0)
						{
							if (Main.rand.Next(4) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 204, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 43, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num46].ai[0] = (float)num;
								Main.npc[num46].ai[1] = (float)num2;
								Main.npc[num46].netUpdate = true;
							}
							else
							{
								int num72 = Main.rand.Next(8);
								if (num72 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 231, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Fatty");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Fatty");
									}
								}
								else if (num72 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 232, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Honey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Honey");
									}
								}
								else if (num72 == 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 233, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Leafy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Leafy");
									}
								}
								else if (num72 == 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 234, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Spikey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Spikey");
									}
								}
								else if (num72 == 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 235, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Hornet Stingy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Hornet Stingy");
									}
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 42, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Little Stinger");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Big Stinger");
									}
								}
							}
						}
						else if (num45 == 60 && Main.rand.Next(4) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 51, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num45 == 60 && Main.rand.Next(8) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 56, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num46].ai[0] = (float)num;
							Main.npc[num46].ai[1] = (float)num2;
							Main.npc[num46].netUpdate = true;
						}
						else if (Main.hardMode && num45 == 53 && Main.rand.Next(3) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 78, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && (num45 == 112 || num45 == 234) && Main.rand.Next(2) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 79, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && num45 == 116 && Main.rand.Next(2) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 80, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && !flag5 && (double)num2 < Main.rockLayer && (num45 == 116 || num45 == 117 || num45 == 109 || num45 == 164))
						{
							if (!Main.dayTime && Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 122, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(10) == 0 || (Main.player[j].ZoneWaterCandle && Main.rand.Next(10) == 0))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 86, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 75, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (!flag3 && Main.hardMode && Main.rand.Next(50) == 0 && !flag5 && (double)num2 >= Main.rockLayer && (num45 == 116 || num45 == 117 || num45 == 109 || num45 == 164))
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 84, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num45 == 204 && Main.player[j].ZoneCrimson) || num45 == 199 || num45 == 200 || num45 == 203 || num45 == 234)
						{
							if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(5) == 0 && !flag3)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 182, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 268, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 183, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Little Crimslime");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Big Crimslime");
								}
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 179, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num2 > Main.worldSurface))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 174, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((Main.tile[num, num2].wall > 0 && Main.rand.Next(4) != 0) || Main.rand.Next(8) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 239, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 181, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 173, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Little Crimera");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Big Crimera");
								}
							}
						}
						else if ((num45 == 22 && Main.player[j].ZoneCorrupt) || num45 == 23 || num45 == 25 || num45 == 112 || num45 == 163)
						{
							if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 101, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num46].ai[0] = (float)num;
								Main.npc[num46].ai[1] = (float)num2;
								Main.npc[num46].netUpdate = true;
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								if (Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 121, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 81, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 83, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num2 > Main.rockLayer))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 94, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 6, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Little Eater");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num46].SetDefaults("Big Eater");
								}
							}
						}
						else if ((double)num2 <= Main.worldSurface)
						{
							bool flag22 = (float)Math.Abs(num - Main.maxTilesX / 2) / (float)(Main.maxTilesX / 2) > 0.33f;
							if (flag22)
							{
								bool flag23 = NPC.AnyDanger();
								if (flag23)
								{
									flag22 = false;
								}
							}
							if (Main.player[j].ZoneSnow && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(243) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 243, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.player[j].ZoneHoly && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(244) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 244, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.player[j].ZoneSnow && Main.hardMode && Main.cloudAlpha > 0f && NPC.CountNPCS(250) < 2 && Main.rand.Next(10) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 250, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag22 && Main.hardMode && NPC.downedGolemBoss && ((!NPC.downedMartians && Main.rand.Next(100) == 0) || Main.rand.Next(400) == 0) && !NPC.AnyNPCs(399))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 399, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.dayTime)
							{
								int num73 = Math.Abs(num - Main.spawnTileX);
								if (num73 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num45 == 2 || num45 == 109 || num45 == 147 || num45 == 161))
								{
									if (num45 == 147 || num45 == 161)
									{
										if (Main.rand.Next(2) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 148, 0, 0f, 0f, 0f, 0f, 255);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 149, 0, 0f, 0f, 0f, 0f, 255);
										}
									}
									else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)num2 <= Main.worldSurface)
									{
										if (Main.rand.Next(NPC.goldCritterChance) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 444, 0, 0f, 0f, 0f, 0f, 255);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
										if (Main.rand.Next(4) == 0)
										{
											NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
										if (Main.rand.Next(4) == 0)
										{
											NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
									}
									else if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 443, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(NPC.goldCritterChance) == 0 && (double)num2 <= Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 539, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 303, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.xMas && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 337, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(3) == 0 && (double)num2 <= Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, (int)Utils.SelectRandom<short>(Main.rand, new short[]
										{
											299,
											538
										}), 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 46, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num73 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && num45 == 53)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(366, 368), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num73 < Main.maxTilesX / 3 && Main.dayTime && Main.time < 18000.0 && (num45 == 2 || num45 == 109) && Main.rand.Next(4) == 0 && (double)num2 <= Main.worldSurface && NPC.CountNPCS(74) + NPC.CountNPCS(297) + NPC.CountNPCS(298) < 6)
								{
									int num74 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num74 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num74 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num73 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num45 == 2 || num45 == 109 || num45 == 147))
								{
									int num75 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num75 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num75 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num73 > Main.maxTilesX / 3 && num45 == 2 && Main.rand.Next(300) == 0 && !NPC.AnyNPCs(50))
								{
									NPC.SpawnOnPlayer(j, 50);
								}
								else if (num45 == 53 && Main.rand.Next(5) == 0 && !flag5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 69, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num45 == 53 && Main.rand.Next(3) == 0 && !flag5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 537, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (NPC.downedBoss1 && num45 == 53 && Main.rand.Next(5) == 0 && !flag5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 509, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num45 == 53 && !flag5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 61, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num73 > Main.maxTilesX / 3 && (Main.rand.Next(15) == 0 || (!NPC.downedGoblins && WorldGen.shadowOrbSmashed && Main.rand.Next(7) == 0)))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 73, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.raining && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 224, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.raining && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 225, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
									if (num45 == 60)
									{
										Main.npc[num46].SetDefaults("Jungle Slime");
									}
									else if (num45 == 161 || num45 == 147)
									{
										Main.npc[num46].SetDefaults("Ice Slime");
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										Main.npc[num46].SetDefaults(302, -1f);
									}
									else if (Main.xMas && Main.rand.Next(3) != 0)
									{
										Main.npc[num46].SetDefaults(Main.rand.Next(333, 337), -1f);
									}
									else if (Main.rand.Next(3) == 0 || (num73 < 200 && !Main.expertMode))
									{
										Main.npc[num46].SetDefaults("Green Slime");
									}
									else if (Main.rand.Next(10) == 0 && (num73 > 400 || Main.expertMode))
									{
										Main.npc[num46].SetDefaults("Purple Slime");
									}
								}
							}
							else if ((num3 == 2 || num3 == 109) && Main.rand.Next(NPC.fireFlyChance) == 0 && (double)num2 <= Main.worldSurface)
							{
								int num76 = 355;
								if (num45 == 109)
								{
									num76 = 358;
								}
								NPC.NewNPC(num * 16 + 8, num2 * 16, num76, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, num76, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, num76, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16 - 16, num76, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16 + 16, num76, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(10) == 0 && Main.halloween)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 301, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(6) == 0 || (Main.moonPhase == 4 && Main.rand.Next(2) == 0))
							{
								if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 133, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(317, 319), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 2, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num46].SetDefaults("Demon Eye 2");
									}
								}
								else
								{
									int num77 = Main.rand.Next(5);
									if (num77 == 0)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 190, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Cataract Eye 2");
										}
									}
									else if (num77 == 1)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 191, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Sleepy Eye 2");
										}
									}
									else if (num77 == 2)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 192, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Dialated Eye 2");
										}
									}
									else if (num77 == 3)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 193, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Green Eye 2");
										}
									}
									else if (num77 == 4)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 194, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num46].SetDefaults("Purple Eye 2");
										}
									}
								}
							}
							else if (Main.hardMode && Main.rand.Next(50) == 0 && Main.bloodMoon && !NPC.AnyNPCs(109))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 109, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 53, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 536, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.moonPhase == 0 && Main.hardMode && Main.rand.Next(3) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 104, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 140, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.bloodMoon && Main.rand.Next(5) < 2)
							{
								if (Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 489, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 490, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (num3 == 147 || num3 == 161 || num3 == 163 || num3 == 164 || num3 == 162)
							{
								if (Main.hardMode && Main.rand.Next(4) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 169, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 155, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.expertMode && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 431, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 161, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.raining && Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 223, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									if (Main.rand.Next(2) == 0)
									{
										Main.npc[num46].SetDefaults("Small Rain Zombie");
									}
									else
									{
										Main.npc[num46].SetDefaults("Big Rain Zombie");
									}
								}
							}
							else
							{
								int num78 = Main.rand.Next(7);
								if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(319, 322), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.xMas && Main.rand.Next(2) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(331, 333), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num78 == 0 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 430, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num78 == 2 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 432, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num78 == 3 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 433, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num78 == 4 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 434, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num78 == 5 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 435, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num78 == 6 && Main.expertMode && Main.rand.Next(3) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 436, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num78 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 3, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Zombie");
										}
									}
								}
								else if (num78 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 132, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Bald Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Bald Zombie");
										}
									}
								}
								else if (num78 == 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 186, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Pincushion Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Pincushion Zombie");
										}
									}
								}
								else if (num78 == 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 187, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Slimed Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Slimed Zombie");
										}
									}
								}
								else if (num78 == 4)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 188, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Swamp Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Swamp Zombie");
										}
									}
								}
								else if (num78 == 5)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 189, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Twiggy Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Twiggy Zombie");
										}
									}
								}
								else if (num78 == 6)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 200, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Small Female Zombie");
										}
										else
										{
											Main.npc[num46].SetDefaults("Big Female Zombie");
										}
									}
								}
							}
						}
						else if ((double)num2 <= Main.rockLayer)
						{
							if (!flag3 && Main.rand.Next(50) == 0 && !Main.player[j].ZoneSnow)
							{
								if (Main.hardMode)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 95, 1, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.player[j].ZoneSnow)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 10, 1, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 140, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 141, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num45 == 147 || num45 == 161 || Main.player[j].ZoneSnow)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 147, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(5) == 0)
								{
									Main.npc[num46].SetDefaults("Yellow Slime");
								}
								else if (Main.rand.Next(2) == 0)
								{
									Main.npc[num46].SetDefaults("Blue Slime");
								}
								else
								{
									Main.npc[num46].SetDefaults("Red Slime");
								}
							}
						}
						else if (num2 > Main.maxTilesY - 190)
						{
							if (Main.hardMode && !NPC.savedTaxCollector && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(534))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 534, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(40) == 0 && !NPC.AnyNPCs(39))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 39, 1, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(14) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 24, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(7) == 0)
							{
								if (Main.rand.Next(7) == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 66, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.hardMode && NPC.downedMechBossAny && Main.rand.Next(5) != 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 156, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 62, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 59, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && NPC.downedMechBossAny && Main.rand.Next(5) != 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 151, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 60, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.rand.Next(60) == 0)
						{
							if (Main.player[j].ZoneSnow)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 218, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 217, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((num45 == 116 || num45 == 117 || num45 == 164) && Main.hardMode && !flag3 && Main.rand.Next(8) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 120, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneCorrupt && Main.rand.Next(30) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 170, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneHoly && Main.rand.Next(30) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 171, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneCrimson && Main.rand.Next(30) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 180, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.player[j].ZoneSnow && Main.rand.Next(10) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 154, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (!flag3 && Main.rand.Next(100) == 0 && !Main.player[j].ZoneHoly)
						{
							if (Main.hardMode)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 95, 1, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.player[j].ZoneSnow)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 10, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneSnow && Main.rand.Next(20) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (!Main.hardMode && Main.rand.Next(10) == 0)
						{
							if (Main.player[j].ZoneSnow)
							{
								Main.npc[num46].SetDefaults(184, -1f);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 16, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (!Main.hardMode && Main.rand.Next(4) == 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
							if (Main.player[j].ZoneJungle)
							{
								Main.npc[num46].SetDefaults("Jungle Slime");
							}
							else if (Main.player[j].ZoneSnow)
							{
								Main.npc[num46].SetDefaults(184, -1f);
							}
							else
							{
								Main.npc[num46].SetDefaults("Black Slime");
							}
						}
						else if (Main.rand.Next(2) == 0)
						{
							if (Main.rand.Next(35) == 0 && NPC.CountNPCS(453) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 453, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((!Main.hardMode && Main.rand.Next(80) == 0) || Main.rand.Next(200) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 195, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(300) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 172, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && (Main.rand.Next(200) == 0 || (Main.rand.Next(50) == 0 && Main.player[j].armor[1].type >= 1282 && Main.player[j].armor[1].type <= 1287 && Main.player[j].armor[0].type != 238)))
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 45, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag8 && Main.rand.Next(5) != 0)
							{
								if (Main.rand.Next(6) != 0 && !NPC.AnyNPCs(480))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 480, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 481, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (flag7 && Main.rand.Next(5) != 0)
							{
								if (Main.rand.Next(6) != 0 && !NPC.AnyNPCs(483))
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 483, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 482, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.hardMode && Main.rand.Next(10) != 0)
							{
								if (Main.rand.Next(2) == 0)
								{
									if (Main.player[j].ZoneSnow)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 197, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.halloween && Main.rand.Next(5) == 0)
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 316, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 77, 0, 0f, 0f, 0f, 0f, 255);
										if ((double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(5) == 0)
										{
											Main.npc[num46].SetDefaults("Heavy Skeleton");
										}
									}
								}
								else if (Main.player[j].ZoneSnow)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 206, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 110, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(20) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 44, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num3 == 147 || num3 == 161 || num3 == 162)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 167, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.player[j].ZoneSnow)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, NPC.cavernMonsterType[Main.rand.Next(2), Main.rand.Next(3)], 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.halloween && Main.rand.Next(2) == 0)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(322, 325), 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.expertMode && Main.rand.Next(3) == 0)
							{
								int num79 = Main.rand.Next(4);
								if (num79 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 449, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 450, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num79 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 451, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 452, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								int num80 = Main.rand.Next(4);
								if (num80 == 0)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 21, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Big Skeleton");
										}
										else
										{
											Main.npc[num46].SetDefaults("Small Skeleton");
										}
									}
								}
								else if (num80 == 1)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 201, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Big Headache Skeleton");
										}
										else
										{
											Main.npc[num46].SetDefaults("Small Headache Skeleton");
										}
									}
								}
								else if (num80 == 2)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 202, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Big Misassembled Skeleton");
										}
										else
										{
											Main.npc[num46].SetDefaults("Small Misassembled Skeleton");
										}
									}
								}
								else if (num80 == 3)
								{
									num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 203, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num46].SetDefaults("Big Pantless Skeleton");
										}
										else
										{
											Main.npc[num46].SetDefaults("Small Pantless Skeleton");
										}
									}
								}
							}
						}
						else if (Main.hardMode && (Main.player[j].ZoneHoly & Main.rand.Next(2) == 0))
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 138, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.player[j].ZoneJungle)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 51, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.player[j].ZoneHoly)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 137, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.rand.Next(6) > 0)
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 93, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num3 == 147 || num3 == 161 || num3 == 162)
						{
							if (Main.hardMode)
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 169, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 150, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else
						{
							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 49, 0, 0f, 0f, 0f, 0f, 255);
						}
						if (Main.npc[num46].type == 1 && Main.rand.Next(180) == 0)
						{
							Main.npc[num46].SetDefaults("Pinky");
						}
						if (Main.netMode == 2 && num46 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num46, 0f, 0f, 0f, 0, 0, 0);
							return;
						}
						break;
					}
				}
			}
		}
		public static bool AnyDanger()
		{
			bool flag = false;
			if (NPC.MoonLordCountdown > 0)
			{
				flag = true;
			}
			if (Main.invasionType > 0)
			{
				flag = true;
			}
			if (!flag)
			{
				for (int i = 0; i < 200; i++)
				{
					if (Main.npc[i].active && (Main.npc[i].boss || NPCID.Sets.TechnicallyABoss[Main.npc[i].type]))
					{
						flag = true;
					}
				}
			}
			return flag;
		}
		public static bool AnyoneNearCultists()
		{
			int num = NPC.FindFirstNPC(437);
			if (num == -1)
			{
				return false;
			}
			Rectangle rectangle = Utils.CenteredRectangle(Main.npc[num].Center, new Vector2(2500f, 1500f));
			Rectangle r = new Rectangle(0, 0, 2500, 1500);
			Vector2 vector = r.Size() / 2f;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					r.X = (int)Main.player[i].Center.X - (int)vector.X;
					r.Y = (int)Main.player[i].Center.Y - (int)vector.Y;
					if (rectangle.Intersects(r))
					{
						return true;
					}
				}
			}
			return false;
		}
		public static void SpawnWOF(Vector2 pos)
		{
			if (pos.Y / 16f < (float)(Main.maxTilesY - 205))
			{
				return;
			}
			if (Main.wof >= 0)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				return;
			}
			Player.FindClosest(pos, 16, 16);
			int num = 1;
			if (pos.X / 16f > (float)(Main.maxTilesX / 2))
			{
				num = -1;
			}
			bool flag = false;
			int num2 = (int)pos.X;
			while (!flag)
			{
				flag = true;
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].position.X > (float)(num2 - 1200) && Main.player[i].position.X < (float)(num2 + 1200))
					{
						num2 -= num * 16;
						flag = false;
					}
				}
				if (num2 / 16 < 20 || num2 / 16 > Main.maxTilesX - 20)
				{
					flag = true;
				}
			}
			int num3 = (int)pos.Y;
			int num4 = num2 / 16;
			int num5 = num3 / 16;
			int num6 = 0;
			try
			{
				while (WorldGen.SolidTile(num4, num5 - num6) || Main.tile[num4, num5 - num6].liquid >= 100)
				{
					if (!WorldGen.SolidTile(num4, num5 + num6) && Main.tile[num4, num5 + num6].liquid < 100)
					{
						num5 += num6;
						goto IL_162;
					}
					num6++;
				}
				num5 -= num6;
			}
			catch
			{
			}
			IL_162:
			num3 = num5 * 16;
			int num7 = NPC.NewNPC(num2, num3, 113, 0, 0f, 0f, 0f, 0f, 255);
			if (Main.npc[num7].displayName == "")
			{
				Main.npc[num7].displayName = Main.npc[num7].name;
			}
			if (Main.netMode == 0)
			{
				Main.NewText(Main.npc[num7].displayName + " " + Lang.misc[16], 175, 75, 255, false);
				return;
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(25, -1, -1, Main.npc[num7].displayName + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
			}
		}
		public static void SpawnSkeletron()
		{
			bool flag = true;
			bool flag2 = false;
			Vector2 vector = Vector2.Zero;
			int num = 0;
			int num2 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == 35)
				{
					flag = false;
					break;
				}
			}
			for (int j = 0; j < 200; j++)
			{
				if (Main.npc[j].active)
				{
					if (Main.npc[j].type == 37)
					{
						flag2 = true;
						Main.npc[j].ai[3] = 1f;
						vector = Main.npc[j].position;
						num = Main.npc[j].width;
						num2 = Main.npc[j].height;
						if (Main.netMode == 2)
						{
							NetMessage.SendData(23, -1, -1, "", j, 0f, 0f, 0f, 0, 0, 0);
						}
					}
					else if (Main.npc[j].type == 54)
					{
						flag2 = true;
						vector = Main.npc[j].position;
						num = Main.npc[j].width;
						num2 = Main.npc[j].height;
					}
				}
			}
			if (flag && flag2)
			{
				int num3 = NPC.NewNPC((int)vector.X + num / 2, (int)vector.Y + num2 / 2, 35, 0, 0f, 0f, 0f, 0f, 255);
				Main.npc[num3].netUpdate = true;
				string str = "Skeletron";
				if (Main.netMode == 0)
				{
					Main.NewText(str + " " + Lang.misc[16], 175, 75, 255, false);
					return;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
				}
			}
		}
		public static void SpawnOnPlayer(int plr, int Type)
		{
			if (Main.netMode == 1)
			{
				return;
			}
			if (Type == 262 && NPC.AnyNPCs(262))
			{
				return;
			}
			if (Type == 245)
			{
				if (NPC.AnyNPCs(245))
				{
					return;
				}
				try
				{
					int num = (int)Main.player[plr].Center.X / 16;
					int num2 = (int)Main.player[plr].Center.Y / 16;
					int num3 = 0;
					int num4 = 0;
					for (int i = num - 20; i < num + 20; i++)
					{
						for (int j = num2 - 20; j < num2 + 20; j++)
						{
							if (Main.tile[i, j].active() && Main.tile[i, j].type == 237 && Main.tile[i, j].frameX == 18 && Main.tile[i, j].frameY == 0)
							{
								num3 = i;
								num4 = j;
							}
						}
					}
					if (num3 > 0 && num4 > 0)
					{
						int num5 = num4 - 15;
						int num6 = num4 - 15;
						for (int k = num4; k > num4 - 100; k--)
						{
							if (WorldGen.SolidTile(num3, k))
							{
								num5 = k;
								break;
							}
						}
						for (int l = num4; l < num4 + 100; l++)
						{
							if (WorldGen.SolidTile(num3, l))
							{
								num6 = l;
								break;
							}
						}
						num4 = (num5 + num5 + num6) / 3;
						int num7 = NPC.NewNPC(num3 * 16 + 8, num4 * 16, 245, 100, 0f, 0f, 0f, 0f, 255);
						Main.npc[num7].target = plr;
						string name = Main.npc[num7].name;
						if (Main.netMode == 0)
						{
							Main.NewText(name + " " + Lang.misc[16], 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, name + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
						}
					}
				}
				catch
				{
				}
				return;
			}
			else if (Type == 370)
			{
				Player player = Main.player[plr];
				if (!player.active || player.dead)
				{
					return;
				}
				int m = 0;
				while (m < 1000)
				{
					Projectile projectile = Main.projectile[m];
					if (projectile.active && projectile.bobber && projectile.owner == plr)
					{
						int num8 = NPC.NewNPC((int)projectile.Center.X, (int)projectile.Center.Y + 100, 370, 0, 0f, 0f, 0f, 0f, 255);
						string name2 = Main.npc[num8].name;
						if (Main.netMode == 0)
						{
							Main.NewText(name2 + " " + Lang.misc[16], 175, 75, 255, false);
							return;
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, name2 + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
							return;
						}
						break;
					}
					else
					{
						m++;
					}
				}
				return;
			}
			else
			{
				if (Type != 398)
				{
					bool flag = false;
					int num9 = 0;
					int num10 = 0;
					int num11 = (int)(Main.player[plr].position.X / 16f) - NPC.spawnRangeX * 2;
					int num12 = (int)(Main.player[plr].position.X / 16f) + NPC.spawnRangeX * 2;
					int num13 = (int)(Main.player[plr].position.Y / 16f) - NPC.spawnRangeY * 2;
					int num14 = (int)(Main.player[plr].position.Y / 16f) + NPC.spawnRangeY * 2;
					int num15 = (int)(Main.player[plr].position.X / 16f) - NPC.safeRangeX;
					int num16 = (int)(Main.player[plr].position.X / 16f) + NPC.safeRangeX;
					int num17 = (int)(Main.player[plr].position.Y / 16f) - NPC.safeRangeY;
					int num18 = (int)(Main.player[plr].position.Y / 16f) + NPC.safeRangeY;
					if (num11 < 0)
					{
						num11 = 0;
					}
					if (num12 > Main.maxTilesX)
					{
						num12 = Main.maxTilesX;
					}
					if (num13 < 0)
					{
						num13 = 0;
					}
					if (num14 > Main.maxTilesY)
					{
						num14 = Main.maxTilesY;
					}
					for (int n = 0; n < 1000; n++)
					{
						int num19 = 0;
						while (num19 < 100)
						{
							int num20 = Main.rand.Next(num11, num12);
							int num21 = Main.rand.Next(num13, num14);
							if (Main.tile[num20, num21].nactive() && Main.tileSolid[(int)Main.tile[num20, num21].type])
							{
								goto IL_7E8;
							}
							if ((!Main.wallHouse[(int)Main.tile[num20, num21].wall] || n >= 999) && (Type != 50 || n >= 500 || Main.tile[num21, num21].wall <= 0))
							{
								int num22 = num21;
								while (num22 < Main.maxTilesY)
								{
									if (Main.tile[num20, num22].nactive() && Main.tileSolid[(int)Main.tile[num20, num22].type])
									{
										if (num20 < num15 || num20 > num16 || num22 < num17 || num22 > num18 || n == 999)
										{
											ushort arg_66F_0 = Main.tile[num20, num22].type;
											num9 = num20;
											num10 = num22;
											flag = true;
											break;
										}
										break;
									}
									else
									{
										num22++;
									}
								}
								if (flag && Type == 50 && n < 900)
								{
									int num23 = 20;
									if (!Collision.CanHit(new Vector2((float)num9, (float)(num10 - 1)) * 16f, 16, 16, new Vector2((float)num9, (float)(num10 - 1 - num23)) * 16f, 16, 16) || !Collision.CanHit(new Vector2((float)num9, (float)(num10 - 1 - num23)) * 16f, 16, 16, Main.player[plr].Center, 0, 0))
									{
										num9 = 0;
										num10 = 0;
										flag = false;
									}
								}
								if (!flag || n >= 999)
								{
									goto IL_7E8;
								}
								int num24 = num9 - NPC.spawnSpaceX / 2;
								int num25 = num9 + NPC.spawnSpaceX / 2;
								int num26 = num10 - NPC.spawnSpaceY;
								int num27 = num10;
								if (num24 < 0)
								{
									flag = false;
								}
								if (num25 > Main.maxTilesX)
								{
									flag = false;
								}
								if (num26 < 0)
								{
									flag = false;
								}
								if (num27 > Main.maxTilesY)
								{
									flag = false;
								}
								if (flag)
								{
									for (int num28 = num24; num28 < num25; num28++)
									{
										for (int num29 = num26; num29 < num27; num29++)
										{
											if (Main.tile[num28, num29].nactive() && Main.tileSolid[(int)Main.tile[num28, num29].type])
											{
												flag = false;
												break;
											}
										}
									}
									goto IL_7E8;
								}
								goto IL_7E8;
							}
							IL_7F0:
							num19++;
							continue;
							IL_7E8:
							if (!flag && !flag)
							{
								goto IL_7F0;
							}
							break;
						}
						if (flag && n < 999)
						{
							Rectangle rectangle = new Rectangle(num9 * 16, num10 * 16, 16, 16);
							for (int num30 = 0; num30 < 255; num30++)
							{
								if (Main.player[num30].active)
								{
									Rectangle rectangle2 = new Rectangle((int)(Main.player[num30].position.X + (float)(Main.player[num30].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[num30].position.Y + (float)(Main.player[num30].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
									if (rectangle.Intersects(rectangle2))
									{
										flag = false;
									}
								}
							}
						}
						if (flag)
						{
							break;
						}
					}
					if (flag)
					{
						int num31 = NPC.NewNPC(num9 * 16 + 8, num10 * 16, Type, 1, 0f, 0f, 0f, 0f, 255);
						if (num31 == 200)
						{
							return;
						}
						Main.npc[num31].target = plr;
						Main.npc[num31].timeLeft *= 20;
						string name3 = Main.npc[num31].name;
						if (Main.npc[num31].displayName != "")
						{
							name3 = Main.npc[num31].displayName;
						}
						if (Main.netMode == 2 && num31 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num31, 0f, 0f, 0f, 0, 0, 0);
						}
						if (Type == 134 || Type == 127 || Type == 126 || Type == 125)
						{
							AchievementsHelper.CheckMechaMayhem(-1);
						}
						if (Type == 125)
						{
							if (Main.netMode == 0)
							{
								Main.NewText(Lang.misc[48], 175, 75, 255, false);
								return;
							}
							if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, Lang.misc[48], 255, 175f, 75f, 255f, 0, 0, 0);
								return;
							}
						}
						else if (Type != 82 && Type != 126 && Type != 50 && Type != 398)
						{
							if (Main.netMode == 0)
							{
								Main.NewText(name3 + " " + Lang.misc[16], 175, 75, 255, false);
								return;
							}
							if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, name3 + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
							}
						}
					}
					return;
				}
				if (NPC.AnyNPCs(Type))
				{
					return;
				}
				Player player2 = Main.player[plr];
				NPC.NewNPC((int)player2.Center.X, (int)player2.Center.Y - 150, Type, 0, 0f, 0f, 0f, 0f, 255);
				if (Main.netMode == 0)
				{
					Main.NewText("Moon Lord " + Lang.misc[16], 175, 75, 255, false);
					return;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, "Moon Lord " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
				}
				return;
			}
		}
		public static int NewNPC(int X, int Y, int Type, int Start = 0, float ai0 = 0f, float ai1 = 0f, float ai2 = 0f, float ai3 = 0f, int Target = 255)
		{
			int num = -1;
			if (Type == 222)
			{
				for (int i = 199; i >= 0; i--)
				{
					if (!Main.npc[i].active)
					{
						num = i;
						break;
					}
				}
			}
			else
			{
				for (int j = Start; j < 200; j++)
				{
					if (!Main.npc[j].active)
					{
						num = j;
						break;
					}
				}
			}
			if (num >= 0)
			{
				Main.npc[num] = new NPC();
				Main.npc[num].SetDefaults(Type, -1f);
				if (NPC.TypeToNum(Type) != -1 || Type == 453)
				{
					Main.npc[num].displayName = NPC.getNewNPCName(Type);
				}
				Main.npc[num].position.X = (float)(X - Main.npc[num].width / 2);
				Main.npc[num].position.Y = (float)(Y - Main.npc[num].height);
				Main.npc[num].active = true;
				Main.npc[num].timeLeft = (int)((double)NPC.activeTime * 1.25);
				Main.npc[num].wet = Collision.WetCollision(Main.npc[num].position, Main.npc[num].width, Main.npc[num].height);
				Main.npc[num].ai[0] = ai0;
				Main.npc[num].ai[1] = ai1;
				Main.npc[num].ai[2] = ai2;
				Main.npc[num].ai[3] = ai3;
				Main.npc[num].target = Target;

				if (ServerApi.Hooks.InvokeNpcSpawn(ref num))
				{
					return num;
				}

				if (Type == 50)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Main.npc[num].name + " " + Lang.misc[16], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Main.npc[num].name + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0, 0, 0);
					}
				}
				return num;
			}
			return 200;
		}
		public void TransformVisuals(int oldType, int newType)
		{
		}
		public void Teleport(Vector2 newPos, int Style = 0, int extraInfo = 0)
		{
			int extraInfo2 = 0;
			if (Style == 4)
			{
				extraInfo2 = this.lastPortalColorIndex;
			}
			Main.TeleportEffect(this.getRect(), Style, extraInfo2);
			this.position = newPos;
			if (Style == 4)
			{
				this.lastPortalColorIndex = extraInfo;
				extraInfo2 = this.lastPortalColorIndex;
			}
			Main.TeleportEffect(this.getRect(), Style, extraInfo2);
			this.teleportTime = 1f;
			this.teleportStyle = Style;
			if (Main.netMode == 2 && Style != 4)
			{
				NetMessage.SendData(65, -1, -1, "", 1, (float)this.whoAmI, newPos.X, newPos.Y, Style, 0, 0);
			}
		}
		public void Transform(int newType)
		{
			if (Main.netMode != 1)
			{
				bool flag = false;
				if (this.value == 0f)
				{
					flag = true;
				}
				int[] array = new int[5];
				int[] array2 = new int[5];
				for (int i = 0; i < 5; i++)
				{
					array[i] = this.buffType[i];
					array2[i] = this.buffTime[i];
				}
				int arg_52_0 = this.height;
				int oldType = this.type;
				int num = this.life;
				int num2 = this.lifeMax;
				Vector2 velocity = this.velocity;
				this.position.Y = this.position.Y + (float)this.height;
				int num3 = this.spriteDirection;
				this.SetDefaults(newType, -1f);
				this.spriteDirection = num3;
				this.TargetClosest(true);
				this.velocity = velocity;
				this.position.Y = this.position.Y - (float)this.height;
				if (flag)
				{
					this.value = 0f;
				}
				if (this.lifeMax == num2)
				{
					this.life = num;
				}
				if (newType == 107 || newType == 108)
				{
					this.homeTileX = (int)(this.position.X + (float)(this.width / 2)) / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height) / 16;
					this.homeless = true;
				}
				for (int j = 0; j < 5; j++)
				{
					this.buffType[j] = array[j];
					this.buffTime[j] = array2[j];
				}

				ServerApi.Hooks.InvokeNpcTransformation(this.whoAmI);

				if (Main.netMode == 2)
				{
					this.netUpdate = true;
					NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
				this.TransformVisuals(oldType, newType);
				if (NPC.TypeToNum(this.type) != -1)
				{
					Main.npc[this.whoAmI].displayName = NPC.getNewNPCName(this.type);
				}
				this.npcNameLookup = 0;
				if (this.townNPC)
				{
					this.homeless = true;
				}
			}
		}
		public int checkArmorPenetration(int armorPenetration)
		{
			if (armorPenetration <= 0)
			{
				return 0;
			}
			if (armorPenetration > this.defense && this.defense >= 0)
			{
				return this.defense / 2;
			}
			return armorPenetration / 2;
		}
		public double StrikeNPCNoInteraction(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
		{
			if (Main.netMode == 0)
			{
				NPC.ignorePlayerInteractions++;
			}
			return this.StrikeNPC(Damage, knockBack, hitDirection, crit, noEffect, fromNet);
		}
		public double StrikeNPC(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false, Player player = null)
		{

			bool handled = ServerApi.Hooks.InvokeNpcStrike(this, ref Damage, ref knockBack, ref hitDirection, ref crit, ref noEffect, ref fromNet, player);
			if (handled)
				return 0.0;

			bool flag = Main.netMode == 0;
			if (flag && NPC.ignorePlayerInteractions > 0)
			{
				NPC.ignorePlayerInteractions--;
				flag = false;
			}
			if (!this.active || this.life <= 0)
			{
				return 0.0;
			}
			double num = (double)Damage;
			int num2 = this.defense;
			if (this.ichor)
			{
				num2 -= 20;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			num = Main.CalculateDamage((int)num, num2);
			if (crit)
			{
				num *= 2.0;
			}
			if (this.takenDamageMultiplier > 1f)
			{
				num *= (double)this.takenDamageMultiplier;
			}
			if ((this.takenDamageMultiplier > 1f || Damage != 9999) && this.lifeMax > 1)
			{
				if (this.friendly)
				{
					Color color = crit ? CombatText.DamagedFriendlyCrit : CombatText.DamagedFriendly;
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color, string.Concat((int)num), crit, false);
				}
				else
				{
					Color color2 = crit ? CombatText.DamagedHostileCrit : CombatText.DamagedHostile;
					if (fromNet)
					{
						color2 = (crit ? CombatText.OthersDamagedHostileCrit : CombatText.OthersDamagedHostile);
					}
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color2, string.Concat((int)num), crit, false);
				}
			}
			if (num >= 1.0)
			{
				if (flag)
				{
					this.PlayerInteraction(Main.myPlayer);
				}
				this.justHit = true;
				if (this.townNPC)
				{
					bool flag2 = this.aiStyle == 7 && (this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 16f || this.ai[0] == 17f);
					if (flag2)
					{
						NPC nPC = Main.npc[(int)this.ai[2]];
						if (nPC.active)
						{
							nPC.ai[0] = 1f;
							nPC.ai[1] = (float)(300 + Main.rand.Next(300));
							nPC.ai[2] = 0f;
							nPC.localAI[3] = 0f;
							nPC.direction = hitDirection;
							nPC.netUpdate = true;
						}
					}
					this.ai[0] = 1f;
					this.ai[1] = (float)(300 + Main.rand.Next(300));
					this.ai[2] = 0f;
					this.localAI[3] = 0f;
					this.direction = hitDirection;
					this.netUpdate = true;
				}
				if (this.aiStyle == 8 && Main.netMode != 1)
				{
					if (this.type == 172)
					{
						this.ai[0] = 450f;
					}
					else if (this.type == 283 || this.type == 284)
					{
						if (Main.rand.Next(2) == 0)
						{
							this.ai[0] = 390f;
							this.netUpdate = true;
						}
					}
					else if (this.type == 533)
					{
						if (Main.rand.Next(3) != 0)
						{
							this.ai[0] = 181f;
							this.netUpdate = true;
						}
					}
					else
					{
						this.ai[0] = 400f;
					}
					this.TargetClosest(true);
				}
				if (this.aiStyle == 97 && Main.netMode != 1)
				{
					this.localAI[1] = 1f;
					this.TargetClosest(true);
				}
				if (this.type == 371)
				{
					num = 0.0;
					this.ai[0] = 1f;
					this.ai[1] = 4f;
					this.dontTakeDamage = true;
				}
				if (this.type == 184)
				{
					this.localAI[0] = 60f;
				}
				if (this.type == 535)
				{
					this.localAI[0] = 60f;
				}
				if (this.type == 185)
				{
					this.localAI[0] = 1f;
				}
				if (!this.immortal)
				{
					if (this.realLife >= 0)
					{
						Main.npc[this.realLife].life -= (int)num;
						this.life = Main.npc[this.realLife].life;
						this.lifeMax = Main.npc[this.realLife].lifeMax;
					}
					else
					{
						this.life -= (int)num;
					}
				}
				if (knockBack > 0f && this.knockBackResist > 0f)
				{
					float num3 = knockBack * this.knockBackResist;
					if (num3 > 8f)
					{
						float num4 = num3 - 8f;
						num4 *= 0.9f;
						num3 = 8f + num4;
					}
					if (num3 > 10f)
					{
						float num5 = num3 - 10f;
						num5 *= 0.8f;
						num3 = 10f + num5;
					}
					if (num3 > 12f)
					{
						float num6 = num3 - 12f;
						num6 *= 0.7f;
						num3 = 12f + num6;
					}
					if (num3 > 14f)
					{
						float num7 = num3 - 14f;
						num7 *= 0.6f;
						num3 = 14f + num7;
					}
					if (num3 > 16f)
					{
						num3 = 16f;
					}
					if (crit)
					{
						num3 *= 1.4f;
					}
					int num8 = (int)num * 10;
					if (Main.expertMode)
					{
						num8 = (int)num * 15;
					}
					if (num8 > this.lifeMax)
					{
						if (hitDirection < 0 && this.velocity.X > -num3)
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - num3;
							}
							this.velocity.X = this.velocity.X - num3;
							if (this.velocity.X < -num3)
							{
								this.velocity.X = -num3;
							}
						}
						else if (hitDirection > 0 && this.velocity.X < num3)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num3;
							}
							this.velocity.X = this.velocity.X + num3;
							if (this.velocity.X > num3)
							{
								this.velocity.X = num3;
							}
						}
						if (this.type == 185)
						{
							num3 *= 1.5f;
						}
						if (!this.noGravity)
						{
							num3 *= -0.75f;
						}
						else
						{
							num3 *= -0.5f;
						}
						if (this.velocity.Y > num3)
						{
							this.velocity.Y = this.velocity.Y + num3;
							if (this.velocity.Y < num3)
							{
								this.velocity.Y = num3;
							}
						}
					}
					else
					{
						if (!this.noGravity)
						{
							this.velocity.Y = -num3 * 0.75f * this.knockBackResist;
						}
						else
						{
							this.velocity.Y = -num3 * 0.5f * this.knockBackResist;
						}
						this.velocity.X = num3 * (float)hitDirection * this.knockBackResist;
					}
				}
				if ((this.type == 113 || this.type == 114) && this.life <= 0)
				{
					for (int i = 0; i < 200; i++)
					{
						if (Main.npc[i].active && (Main.npc[i].type == 113 || Main.npc[i].type == 114))
						{
							Main.npc[i].HitEffect(hitDirection, num);
						}
					}
				}
				else
				{
					this.HitEffect(hitDirection, num);
				}
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].checkDead();
				}
				else
				{
					this.checkDead();
				}
				return num;
			}
			return 0.0;
		}
		public void HitEffect(int hitDirection = 0, double dmg = 10.0)
		{
			if (!this.active)
			{
				return;
			}
			if (this.daybreak && this.life <= 0)
			{
				if (Main.netMode != 1)
				{
					for (int j = 0; j < 200; j++)
					{
						NPC nPC = Main.npc[j];
						if (nPC.active && !nPC.buffImmune[189] && base.Distance(nPC.Center) < 100f && !nPC.dontTakeDamage && nPC.lifeMax > 5 && !nPC.friendly && !nPC.townNPC)
						{
							nPC.AddBuff(189, 300, false);
						}
					}
				}
			}
			if (this.type == 398 && dmg == 1337.0)
			{
				MoonlordDeathDrama.ThrowPieces(base.Center, Main.rand.Next(100));
			}
			if (this.type == 488)
			{
				this.localAI[0] = (float)((int)dmg);
				if (this.localAI[0] < 20f)
				{
					this.localAI[0] = 20f;
				}
				if (this.localAI[0] > 120f)
				{
					this.localAI[0] = 120f;
				}
				this.localAI[1] = (float)hitDirection;
			}
			if (this.type == 522)
			{
			}
			else if (this.type == 426)
			{
				if (this.life > 0)
				{
				}
				else
				{
					if (Main.netMode != 1)
					{
						for (int num34 = 0; num34 < 3; num34++)
						{
							int num35 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 428, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num35].velocity = -Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (float)Main.rand.Next(3, 6) - Vector2.UnitY * 2f;
							Main.npc[num35].netUpdate = true;
						}
					}
				}
			}
			else if (this.type == 429)
			{
				if (this.life > 0)
				{
				}
				else
				{
					if (Main.netMode != 1)
					{
						Point point = base.Center.ToTileCoordinates();
						Point point2 = Main.player[this.target].Center.ToTileCoordinates();
						Vector2 vector = Main.player[this.target].Center - base.Center;
						int num42 = 20;
						int num43 = 3;
						int num44 = 7;
						int num45 = 2;
						int num46 = 0;
						bool flag = false;
						if (vector.Length() > 2000f)
						{
							flag = true;
						}
						while (!flag)
						{
							if (num46 >= 100)
							{
								break;
							}
							num46++;
							int num47 = Main.rand.Next(point2.X - num42, point2.X + num42 + 1);
							int num48 = Main.rand.Next(point2.Y - num42, point2.Y - Math.Abs(num47 - point2.X) + 1);
							if ((num48 < point2.Y - num44 || num48 > point2.Y + num44 || num47 < point2.X - num44 || num47 > point2.X + num44) && (num48 < point.Y - num43 || num48 > point.Y + num43 || num47 < point.X - num43 || num47 > point.X + num43) && !Main.tile[num47, num48].nactive())
							{
								bool flag2 = true;
								if (flag2 && Main.tile[num47, num48].lava())
								{
									flag2 = false;
								}
								if (flag2 && Collision.SolidTiles(num47 - num45, num47 + num45, num48 - num45, num48 + num45))
								{
									flag2 = false;
								}
								if (flag2 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
								{
									flag2 = false;
								}
								if (flag2)
								{
									Projectile.NewProjectile((float)(num47 * 16 + 8), (float)(num48 * 16 + 8), 0f, 0f, 578, 0, 1f, Main.myPlayer, 0f, 0f);
									break;
								}
							}
						}
					}
				}
			}
			else if (this.type == 406 || this.type == 405)
			{
				if (this.life > 0)
				{
				}
				else
				{
					if (this.type == 405)
					{
						int num67 = NPC.CountNPCS(406) + NPC.CountNPCS(405);
						int num68 = 4;
						if (num67 >= 4)
						{
							num68 = 3;
						}
						if (num67 >= 7)
						{
							num68 = 2;
						}
						if (num67 >= 10)
						{
							num68 = 1;
						}
						for (int num69 = 0; num69 < num68; num69++)
						{
							Vector2 velocity = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (3f + Main.rand.NextFloat() * 4f);
							int num70 = NPC.NewNPC((int)base.Center.X, (int)base.Bottom.Y, 406, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num70].velocity = velocity;
						}
					}
				}
			}
			else if (this.type == 491)
			{
				if (this.life <= 0)
				{
					if (Main.netMode != 1)
					{
						for (int num93 = 0; num93 < 4; num93++)
						{
							float num94 = (float)(num93 < 2).ToDirectionInt() * (0.3926991f + 0.7853982f * Main.rand.NextFloat());
							Vector2 vector5 = new Vector2(0f, -Main.rand.NextFloat() * 0.5f - 0.5f).RotatedBy((double)num94, default(Vector2)) * 6f;
							Projectile.NewProjectile(base.Center.X, base.Center.Y, vector5.X, vector5.Y, 594, 0, 0f, Main.myPlayer, 0f, 0f);
						}
					}
				}
			}
			if (this.type == 1 || this.type == 16 || this.type == 71 || this.type == 244 || this.type == 535)
			{
				if (this.life > 0)
				{
				}
				else
				{
					if (Main.netMode != 1 && this.type == 16)
					{
						int num216 = Main.rand.Next(2) + 2;
						for (int num217 = 0; num217 < num216; num217++)
						{
							int num218 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num218].SetDefaults("Baby Slime");
							Main.npc[num218].velocity.X = this.velocity.X * 2f;
							Main.npc[num218].velocity.Y = this.velocity.Y;
							NPC expr_8E02_cp_0 = Main.npc[num218];
							expr_8E02_cp_0.velocity.X = expr_8E02_cp_0.velocity.X + ((float)Main.rand.Next(-20, 20) * 0.1f + (float)(num217 * this.direction) * 0.3f);
							NPC expr_8E45_cp_0 = Main.npc[num218];
							expr_8E45_cp_0.velocity.Y = expr_8E45_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)num217);
							Main.npc[num218].ai[0] = (float)(-1000 * Main.rand.Next(3));
							if (Main.netMode == 2 && num218 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num218, 0f, 0f, 0f, 0, 0, 0);
							}
						}
					}
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				if (this.life > 0)
				{
				}
				else if (this.type == 246)
				{
					if (Main.netMode != 1)
					{
						NPC.NewNPC((int)base.Center.X, (int)this.position.Y + this.height, 249, this.whoAmI, 0f, 0f, 0f, 0f, 255);
					}
				}
			}
			if (this.type == 81 || this.type == 121)
			{
				if (this.life > 0)
				{
				}
				else
				{
					if (Main.netMode != 1)
					{
						if (this.type == 121)
						{
							int num291 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 81, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num291].SetDefaults("Slimer2");
							Main.npc[num291].velocity.X = this.velocity.X;
							Main.npc[num291].velocity.Y = this.velocity.Y;
							if (Main.netMode == 2 && num291 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num291, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						else if (this.scale >= 1f)
						{
							int num292 = Main.rand.Next(2) + 2;
							for (int num293 = 0; num293 < num292; num293++)
							{
								int num294 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num294].SetDefaults("Slimeling");
								Main.npc[num294].velocity.X = this.velocity.X * 3f;
								Main.npc[num294].velocity.Y = this.velocity.Y;
								NPC expr_B4A1_cp_0 = Main.npc[num294];
								expr_B4A1_cp_0.velocity.X = expr_B4A1_cp_0.velocity.X + ((float)Main.rand.Next(-10, 10) * 0.1f + (float)(num293 * this.direction) * 0.3f);
								NPC expr_B4E4_cp_0 = Main.npc[num294];
								expr_B4E4_cp_0.velocity.Y = expr_B4E4_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)num293);
								Main.npc[num294].ai[1] = (float)num293;
								if (Main.netMode == 2 && num294 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num294, 0f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
			}
			if (this.type != 63 && this.type != 64 && this.type != 103)
			{
				if (this.type == 59 || this.type == 60 || this.type == 151)
				{
					if (this.life > 0)
					{
						return;
					}
					if (!Main.expertMode || this.type != 59 || Main.netMode == 1)
					{
						return;
					}
					try
					{
						int num310 = (int)(base.Center.X / 16f);
						int num311 = (int)(base.Center.Y / 16f);
						if (!WorldGen.SolidTile(num310, num311) && Main.tile[num310, num311].liquid == 0)
						{
							Main.tile[num310, num311].liquid = (byte)Main.rand.Next(50, 150);
							Main.tile[num310, num311].lava(true);
							Main.tile[num310, num311].honey(false);
							WorldGen.SquareTileFrame(num310, num311, true);
						}
						return;
					}
					catch
					{
						return;
					}
				}
				if (this.type == 50)
				{
					if (this.life > 0)
					{
						return;
					}
					if (Main.netMode != 1)
					{
						int num314 = Main.rand.Next(4) + 4;
						for (int num315 = 0; num315 < num314; num315++)
						{
							int x = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
							int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
							int num316 = NPC.NewNPC(x, y, 1, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num316].SetDefaults(1, -1f);
							Main.npc[num316].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
							Main.npc[num316].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
							Main.npc[num316].ai[0] = (float)(-1000 * Main.rand.Next(3));
							Main.npc[num316].ai[1] = 0f;
							if (Main.netMode == 2 && num316 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num316, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						return;
					}
				}
				else if (this.type == 153)
				{
					return;
				}
				else if (this.type == 177)
				{
					return;
				}
				else if (this.type >= 494 && this.type <= 495)
				{
					return;
				}
				else if (this.type >= 496 && this.type <= 497)
				{
					return;
				}
				else if (this.type >= 498 && this.type <= 506)
				{
					return;
				}
				else if (this.type == 49 || this.type == 51 || this.type == 93 || this.type == 150 || this.type == 152 || this.type == 226)
				{
					if (this.life > 0)
					{
						return;
					}
					return;
				}
				else if (this.type == 46 || this.type == 55 || this.type == 67 || this.type == 74 || this.type == 102 || this.type == 224 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 300 || this.type == 303 || this.type == 337 || this.type == 538)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 46 || this.type == 303 || this.type == 337)
					{
						if (this.type == 303)
						{
							return;
						}
					}
					else
					{
						if (this.type == 67)
						{
							return;
						}
						if (this.type == 55 || this.type == 230)
						{
							return;
						}
						if (this.type == 74)
						{
							return;
						}
						if (this.type == 297)
						{
							return;
						}
						if (this.type == 298)
						{
							return;
						}
						if (this.type == 299)
						{
							return;
						}
						if (this.type == 538)
						{
							return;
						}
						if (this.type == 300)
						{
							return;
						}
						if (this.type == 102)
						{
							return;
						}
						if (this.type == 224)
						{
							return;
						}
					}
				}
				else if (this.type == 148 || this.type == 149 || this.type == 168 || this.type == 470)
				{
					return;
				}
				else if (this.type == 361)
				{
					return;
				}
				else if (this.type == 366 || this.type == 367)
				{
					return;
				}
				else if (this.type >= 362 && this.type <= 365)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 362 || this.type == 363)
					{
						return;
					}
					return;
				}
				else if (this.type == 348 || this.type == 349)
				{
					if (this.life > 0)
					{
						return;
					}
					return;
				}
				else if (this.type == 351)
				{
					if (this.life > 0)
					{
						return;
					}
					return;
				}
				else if (this.type == 350)
				{
					if (this.life > 0)
					{
						return;
					}
					return;
				}
				else if (this.type == 47 || this.type == 57 || this.type == 58 || this.type == 464 || this.type == 465)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 57)
					{
						return;
					}
					if (this.type == 58)
					{
						return;
					}
					if (this.type == 464)
					{
						return;
					}
					if (this.type == 465)
					{
						return;
					}
					return;
				}
				else if (this.type == 173 || this.type == 174 || this.type == 181 || this.type == 182 || this.type == 268)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 173)
					{
						return;
					}
					if (this.type == 174)
					{
						return;
					}
					if (this.type == 181)
					{
						return;
					}
					if (this.type == 182)
					{
						return;
					}
					if (this.type == 268)
					{
						return;
					}
				}
				else if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 190)
					{
						return;
					}
					if (this.type == 191)
					{
						return;
					}
					if (this.type == 192)
					{
						return;
					}
					if (this.type == 193)
					{
						return;
					}
					if (this.type == 194)
					{
						return;
					}
					if (this.type == 317)
					{
						return;
					}
					if (this.type == 318)
					{
						return;
					}
					return;
				}
				else if (this.type == 157)
				{
					return;
				}
				else if (this.type == 133)
				{
					if (this.life <= 0)
					{
						return;
					}
					if ((float)this.life < (float)this.lifeMax * 0.5f && this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						return;
					}
				}
				else if (this.type == 69 || this.type == 509 || this.type == 508)
				{
					return;
				}
				else if (this.type == 61)
				{
					return;
				}
				else if (this.type == 301)
				{
					return;
				}
				else if (this.type == 252)
				{
					return;
				}
				else if (this.type == 489)
				{
					return;
				}
				else if (this.type == 534)
				{
					return;
				}
				else if (this.type == 490)
				{
					return;
				}
				else if (this.type == 65)
				{
					return;
				}
				else if (this.type == 195 || this.type == 196)
				{
					return;
				}
				else if (this.type == 198 || this.type == 199)
				{
					return;
				}
				else if (this.type == 206)
				{
					if (this.life > 0)
					{
						return;
					}
					return;
				}
				else if (this.type == 342)
				{
					if (this.life > 0)
					{
						return;
					}
					return;
				}
				else if (this.type >= 338 && this.type <= 340)
				{
					return;
				}
				else if (this.type == 343)
				{
					return;
				}
				else if ((this.type >= 430 && this.type <= 436) || this.type == 3 || this.type == 52 || this.type == 53 || this.type == 536 || this.type == 104 || this.type == 109 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 319 || this.type == 320 || this.type == 321)
				{
					if (this.life > 0)
					{
						if (this.type == 187)
						{
							return;
						}
					}
					else
					{
						if (this.type == 104)
						{
							return;
						}
						if (this.type == 331)
						{
							return;
						}
						if (this.type == 332)
						{
							return;
						}
						if (this.type == 109)
						{
							return;
						}
						if (this.type == 161 || this.type == 431)
						{
							return;
						}
						if (this.type == 162)
						{
							return;
						}
						if (this.type == 188 || this.type == 434)
						{
							return;
						}
						if (this.type == 200 || this.type == 436)
						{
							return;
						}
						if (this.type == 319)
						{
							return;
						}
						if (this.type == 320)
						{
							return;
						}
						if (this.type == 321)
						{
							return;
						}
						if (this.type == 223)
						{
							return;
						}
						if ((this.type == 186 || this.type == 432) && Main.rand.Next(2) == 0)
						{
							return;
						}
					}
				}
				else if (this.type == 83 || this.type == 84 || this.type == 179)
				{
					return;
				}
				else if (this.type == 262 || this.type == 263 || this.type == 264)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 264)
					{
						return;
					}
				}
				else if (this.type == 265)
				{
					if (this.life < 0)
					{
						return;
					}
				}
				else if (this.type == 266)
				{
					return;
				}
				else if (this.type == 267)
				{
					return;
				}
				else if (this.type == 4 || this.type == 126 || this.type == 125)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 125 || this.type == 126)
					{
						return;
					}
				}
				else if (this.type == 5)
				{
					return;
				}
				else if (this.type == 113 || this.type == 114)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 114)
					{
						return;
					}
					if (Main.player[Main.myPlayer].position.Y / 16f > (float)(Main.maxTilesY - 250))
					{
						return;
					}
				}
				else if (this.type == 115 || this.type == 116)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 115 && Main.netMode != 1)
					{
						NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 116, 0, 0f, 0f, 0f, 0f, 255);
						
						return;
					}
					return;
				}
				else if (this.type >= 117 && this.type <= 119)
				{
					return;
				}
				else if (this.type == 217 || this.type == 218 || this.type == 219)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type == 219)
					{
						return;
					}
				}
				else if (this.type == 222)
				{
					return;
				}
				else if (this.type == 6 || this.type == 94 || this.type == 166)
				{
					return;
				}
				else if (this.type == 101)
				{
					return;
				}
				else if (this.type == 7 || this.type == 8 || this.type == 9)
				{
					return;
				}
				else if (this.type == 98 || this.type == 99 || this.type == 100)
				{
					return;
				}
				else if (this.type == 10 || this.type == 11 || this.type == 12)
				{
					return;
				}
				else if (this.type == 95 || this.type == 96 || this.type == 97)
				{
					return;
				}
				else if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					return;
				}
				else if (this.type == 17)
				{
					return;
				}
				else if (this.type == 441)
				{
					return;
				}
				else if (this.type == 86)
				{
					return;
				}
				else if (this.type == 155)
				{
					return;
				}
				else if (this.type == 329)
				{
					return;
				}
				else if (this.type == 163 || this.type == 238)
				{
					return;
				}
				else if (this.type == 164 || this.type == 165)
				{
					return;
				}
				else if (this.type == 239 || this.type == 240)
				{
					return;
				}
				else if (this.type == 236 || this.type == 237)
				{
					return;
				}
				else if (this.type == 241)
				{
					return;
				}
				else if (this.type == 242)
				{
					return;
				}
				else if (this.type >= 105 && this.type <= 108)
				{
					return;
				}
				else if (this.type == 123 || this.type == 124)
				{
					return;
				}
				else if (this.type == 22)
				{
					return;
				}
				else if (this.type == 368)
				{
					return;
				}
				else if (this.type == 369 || this.type == 376)
				{
					return;
				}
				else if (this.type == 227)
				{
					return;
				}
				else if (this.type == 228)
				{
					return;
				}
				else if (this.type == 229)
				{
					return;
				}
				else if (this.type == 142)
				{
					return;
				}
				else if (this.type == 178)
				{
					return;
				}
				else if (this.type == 353 || this.type == 354)
				{
					return;
				}
				else if (this.type == 37 || this.type == 54)
				{
					return;
				}
				else if (this.type == 441)
				{
					return;
				}
				else if (this.type == 160)
				{
					return;
				}
				else if (this.type == 18)
				{
					return;
				}
				else if (this.type == 19)
				{
					return;
				}
				else if (this.type == 38)
				{
					return;
				}
				else if (this.type == 20)
				{
					return;
				}
				else if (this.type == 207)
				{
					return;
				}
				else if (this.type == 208)
				{
					return;
				}
				else if (this.type == 209)
				{
					return;
				}
				else if (this.type >= 212 && this.type <= 216)
				{
					return;
				}
				else if (this.type == 220 || this.type == 221)
				{
					return;
				}
				else if (this.type == 21 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 32 || this.type == 44 || this.type == 45 || this.type == 77 || this.type == 110 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || this.type == 291 || this.type == 292 || this.type == 293 || (this.type >= 322 && this.type <= 324) || this.type == 481 || (this.type >= 449 && this.type <= 452))
				{
					return;
				}
				else if (this.type == 453)
				{
					return;
				}
				else if ((this.type >= 269 && this.type <= 276) || (this.type >= 281 && this.type <= 286))
				{
					return;
				}
				else if (this.type >= 277 && this.type <= 280)
				{
					return;
				}
				else if (this.type == 341)
				{
					return;
				}
				else if (this.type == 85)
				{
					return;
				}
				else if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
				{
					return;
				}
				else if (this.type == 169)
				{
					return;
				}
				else if (this.type == 170 || this.type == 180)
				{
					return;
				}
				else if (this.type == 171)
				{
					return;
				}
				else if (this.type == 290)
				{
					if (this.life <= 0)
					{
						return;
					}
				}
				else if (this.type >= 87 && this.type <= 92)
				{
					return;
				}
				else if (this.type == 78 || this.type == 79 || this.type == 80)
				{
					return;
				}
				else if (this.type == 82 || this.type == 158 || this.type == 159 || this.type == 250 || this.type == 253)
				{
					return;
				}
				else if (this.type == 316 || this.type == 330)
				{
					return;
				}
				else if (this.type == 315)
				{
					return;
				}
				else if (this.type == 254 || this.type == 255 || this.type == 256 || this.type == 257 || this.type == 258 || this.type == 259 || this.type == 260 || this.type == 261)
				{
					if (this.life > 0)
					{
						return;
					}
					if (this.type != 261)
					{
						return;
					}
				}
				else if (this.type == 140)
				{
					if (this.life <= 0)
					{
						return;
					}
				}
				else if (this.type == 39 || this.type == 40 || this.type == 41)
				{
					return;
				}
				else if (this.type == 34)
				{
					return;
				}
				else if (this.type == 289)
				{
					return;
				}
				else if (this.type == 35 || this.type == 36)
				{
					return;
				}
				else if (this.type == 139)
				{
					if (this.life <= 0)
					{
						return;
					}
				}
				else if (this.type == 467)
				{
					if (this.life <= 0)
					{
						return;
					}
				}
				else if (this.type >= 134 && this.type <= 136)
				{
					if (this.type == 135 && this.life > 0 && Main.netMode != 1 && this.ai[2] == 0f && Main.rand.Next(25) == 0)
					{
						this.ai[2] = 1f;
						int num614 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 139, 0, 0f, 0f, 0f, 0f, 255);
						if (Main.netMode == 2 && num614 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num614, 0f, 0f, 0f, 0, 0, 0);
						}
						this.netUpdate = true;
					}
					if (this.life <= 0)
					{
						if (Main.rand.Next(2) == 0)
						{
							return;
						}
					}
				}
				else if (this.type == 347)
				{
					if (this.life <= 0)
					{
						return;
					}
				}
				else if (this.type == 346)
				{
					if (this.life <= 0)
					{
						return;
					}
				}
				else if (this.type == 127)
				{
					if (this.life <= 0)
					{
						return;
					}
				}
				else if (this.type >= 128 && this.type <= 131)
				{
					if (this.life <= 0)
					{
						return;
					}
				}
				else if (this.type == 23)
				{
					return;
				}
				else if (this.type == 24)
				{
					return;
				}
				else
				{
					if (this.type == 25)
					{
						return;
					}
					if (this.type == 33)
					{
						return;
					}
					if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 73 || this.type == 111)
					{
						if (this.life > 0)
						{
							return;
						}
						return;
					}
					else if (this.type == 471)
					{
						return;
					}
					else if (this.type == 472)
					{
						return;
					}
					else if (this.type == 480)
					{
						return;
					}
					else if (this.type == 185)
					{
						return;
					}
					else
					{
						if (this.type == 30)
						{
							return;
						}
						if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
						{
							return;
						}
						else if (this.type == 43 || this.type == 56)
						{
							return;
						}
						else if (this.type == 175)
						{
							return;
						}
						else if (this.type == 48)
						{
							return;
						}
						else if (this.type == 62 || this.type == 66)
						{
							return;
						}
						else if (this.type == 156)
						{
							if (this.life > 0)
							{
								return;
							}
						}
					}
				}
				return;
			}
			Color newColor = new Color(50, 120, 255, 100);
			if (this.type == 64)
			{
				newColor = new Color(225, 70, 140, 100);
			}
			if (this.type == 103)
			{
				newColor = new Color(70, 225, 140, 100);
			}
			if (this.life > 0)
			{
				return;
			}
		}
		public static int CountNPCS(int Type)
		{
			int num = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					num++;
				}
			}
			return num;
		}
		public static bool AnyNPCs(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return true;
				}
			}
			return false;
		}
		public static int FindFirstNPC(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return i;
				}
			}
			return -1;
		}
		public static bool NearSpikeBall(int x, int y)
		{
			Rectangle rectangle = new Rectangle(x * 16 - 300, y * 16 - 300, 600, 600);
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].aiStyle == 20)
				{
					Rectangle rectangle2 = new Rectangle((int)Main.npc[i].ai[1], (int)Main.npc[i].ai[2], 20, 20);
					if (rectangle.Intersects(rectangle2))
					{
						return true;
					}
				}
			}
			return false;
		}
		public int HasBuff(int type)
		{
			if (this.buffImmune[type])
			{
				return -1;
			}
			for (int i = 0; i < 5; i++)
			{
				if (this.buffTime[i] >= 1 && this.buffType[i] == type)
				{
					return i;
				}
			}
			return -1;
		}
		public void AddBuff(int type, int time, bool quiet = false)
		{
			if (this.buffImmune[type])
			{
				return;
			}
			if (!quiet)
			{
				if (Main.netMode == 1)
				{
					NetMessage.SendData(53, -1, -1, "", this.whoAmI, (float)type, (float)time, 0f, 0, 0, 0);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			int num = -1;
			for (int i = 0; i < 5; i++)
			{
				if (this.buffType[i] == type)
				{
					if (this.buffTime[i] < time)
					{
						this.buffTime[i] = time;
					}
					return;
				}
			}
			while (num == -1)
			{
				int num2 = -1;
				for (int j = 0; j < 5; j++)
				{
					if (!Main.debuff[this.buffType[j]])
					{
						num2 = j;
						break;
					}
				}
				if (num2 == -1)
				{
					return;
				}
				for (int k = num2; k < 5; k++)
				{
					if (this.buffType[k] == 0)
					{
						num = k;
						break;
					}
				}
				if (num == -1)
				{
					this.DelBuff(num2);
				}
			}
			this.buffType[num] = type;
			this.buffTime[num] = time;
		}
		public void DelBuff(int b)
		{
			this.buffTime[b] = 0;
			this.buffType[b] = 0;
			for (int i = 0; i < 4; i++)
			{
				if (this.buffTime[i] == 0 || this.buffType[i] == 0)
				{
					for (int j = i + 1; j < 5; j++)
					{
						this.buffTime[j - 1] = this.buffTime[j];
						this.buffType[j - 1] = this.buffType[j];
						this.buffTime[j] = 0;
						this.buffType[j] = 0;
					}
				}
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
			}
		}
		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}
		public bool CanBeChasedBy(object attacker = null, bool ignoreDontTakeDamage = false)
		{
			return this.active && this.chaseable && this.lifeMax > 5 && (!this.dontTakeDamage || ignoreDontTakeDamage) && !this.friendly && !this.immortal;
		}
		public void moneyPing(Vector2 pos)
		{
		}
		public void UpdateNPC(int i)
		{
			this.whoAmI = i;
			if (this.active)
			{
				if (this.type == 368)
				{
					NPC.travelNPC = true;
				}
				if (this.teleportTime > 0f)
				{
					if (this.teleportStyle == 4)
					{
						this.teleportTime -= 0.02f;
					}
					this.teleportTime -= 0.005f;
				}
				if (Main.netMode == 1 && (this.townNPC || this.type == 453) && this.type != 37 && this.npcNameLookup == 0)
				{
					this.npcNameLookup = 1;
					int number = -1;
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j] == this)
						{
							number = j;
							break;
						}
					}
					NetMessage.SendData(56, -1, -1, "", number, 0f, 0f, 0f, 0, 0, 0);
				}
				if (this.displayName == "" && Main.netMode != 1)
				{
					this.displayName = this.name;
				}
				if (Main.netMode == 1)
				{
					bool flag = false;
					int num15 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num16 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					try
					{
						if (num15 >= 4 && num15 <= Main.maxTilesX - 4 && num16 >= 4 && num16 <= Main.maxTilesY - 4)
						{
							if (Main.tile[num15, num16] == null)
							{
								flag = true;
							}
							else if (Main.tile[num15 - 3, num16] == null)
							{
								flag = true;
							}
							else if (Main.tile[num15 + 3, num16] == null)
							{
								flag = true;
							}
							else if (Main.tile[num15, num16 - 3] == null)
							{
								flag = true;
							}
							else if (Main.tile[num15, num16 + 3] == null)
							{
								flag = true;
							}
						}
					}
					catch
					{
						flag = true;
					}
					if (flag)
					{
						return;
					}
				}
				this.lifeRegen = 0;
				this.soulDrain = false;
				this.poisoned = false;
				this.venom = false;
				this.shadowFlame = false;
				this.onFire = false;
				this.midas = false;
				this.ichor = false;
				this.onFrostBurn = false;
				this.onFire2 = false;
				this.confused = false;
				this.loveStruck = false;
				this.dryadWard = false;
				this.stinky = false;
				this.dripping = false;
				this.drippingSlime = false;
				this.daybreak = false;
				this.javelined = false;
				this.celled = false;
				this.dryadBane = false;
				for (int k = 0; k < 5; k++)
				{
					if (this.buffType[k] > 0 && this.buffTime[k] > 0)
					{
						this.buffTime[k]--;
						if (this.buffType[k] == 20)
						{
							this.poisoned = true;
						}
						if (this.buffType[k] == 70)
						{
							this.venom = true;
						}
						if (this.buffType[k] == 24)
						{
							this.onFire = true;
						}
						if (this.buffType[k] == 72)
						{
							this.midas = true;
						}
						if (this.buffType[k] == 69)
						{
							this.ichor = true;
						}
						if (this.buffType[k] == 31)
						{
							this.confused = true;
						}
						if (this.buffType[k] == 39)
						{
							this.onFire2 = true;
						}
						if (this.buffType[k] == 44)
						{
							this.onFrostBurn = true;
						}
						if (this.buffType[k] == 103)
						{
							this.dripping = true;
						}
						if (this.buffType[k] == 137)
						{
							this.drippingSlime = true;
						}
						if (this.buffType[k] == 119)
						{
							this.loveStruck = true;
						}
						if (this.buffType[k] == 120)
						{
							this.stinky = true;
						}
						if (this.buffType[k] == 151)
						{
							this.soulDrain = true;
						}
						if (this.buffType[k] == 153)
						{
							this.shadowFlame = true;
						}
						if (this.buffType[k] == 165)
						{
							this.dryadWard = true;
						}
						if (this.buffType[k] == 169)
						{
							this.javelined = true;
						}
						if (this.buffType[k] == 183)
						{
							this.celled = true;
						}
						if (this.buffType[k] == 186)
						{
							this.dryadBane = true;
						}
						if (this.buffType[k] == 189)
						{
							this.daybreak = true;
						}
					}
				}
				if (this.soulDrain)
				{
					int num17 = 1100;
					for (int l = 0; l < 255; l++)
					{
						if (Main.player[l].active && !Main.player[l].dead && (base.Center - Main.player[l].position).Length() < (float)num17 && Main.player[l].inventory[Main.player[l].selectedItem].type == 3006 && Main.player[l].itemAnimation > 0)
						{
							if (l == Main.myPlayer)
							{
								Main.player[l].soulDrain++;
							}
						}
					}
				}
				if (Main.netMode != 1)
				{
					for (int m = 0; m < 5; m++)
					{
						if (this.buffType[m] > 0 && this.buffTime[m] <= 0)
						{
							this.DelBuff(m);
							if (Main.netMode == 2)
							{
								NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
							}
						}
					}
				}
				if (!this.dontTakeDamage)
				{
					int num19 = -1;
					if (this.poisoned)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 4;
					}
					if (this.onFire)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 8;
					}
					if (this.onFrostBurn)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 16;
						if (num19 < 2)
						{
							num19 = 2;
						}
					}
					if (this.onFire2)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
					}
					if (this.venom)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
						if (num19 < 2)
						{
							num19 = 2;
						}
					}
					if (this.shadowFlame)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 30;
						if (num19 < 5)
						{
							num19 = 5;
						}
					}
					if (this.javelined)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num20 = 0;
						int num21 = 1;
						for (int n = 0; n < 1000; n++)
						{
							if (Main.projectile[n].active && Main.projectile[n].type == 598 && Main.projectile[n].ai[0] == 1f && Main.projectile[n].ai[1] == (float)this.whoAmI)
							{
								num20++;
							}
						}
						this.lifeRegen -= num20 * 2 * 3;
						if (num19 < num20 * 3 / num21)
						{
							num19 = num20 * 3 / num21;
						}
					}
					if (this.daybreak)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num22 = 0;
						int num23 = 4;
						for (int num24 = 0; num24 < 1000; num24++)
						{
							if (Main.projectile[num24].active && Main.projectile[num24].type == 636 && Main.projectile[num24].ai[0] == 1f && Main.projectile[num24].ai[1] == (float)this.whoAmI)
							{
								num22++;
							}
						}
						if (num22 == 0)
						{
							num22 = 1;
						}
						this.lifeRegen -= num22 * 2 * 100;
						if (num19 < num22 * 100 / num23)
						{
							num19 = num22 * 100 / num23;
						}
					}
					if (this.celled)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num25 = 0;
						for (int num26 = 0; num26 < 1000; num26++)
						{
							if (Main.projectile[num26].active && Main.projectile[num26].type == 614 && Main.projectile[num26].ai[0] == 1f && Main.projectile[num26].ai[1] == (float)this.whoAmI)
							{
								num25++;
							}
						}
						this.lifeRegen -= num25 * 2 * 20;
						if (num19 < num25 * 20)
						{
							num19 = num25 * 20 / 2;
						}
					}
					if (this.dryadBane)
					{
						int num27 = 4;
						float num28 = 1f;
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						if (NPC.downedBoss1)
						{
							num28 += 0.1f;
						}
						if (NPC.downedBoss2)
						{
							num28 += 0.1f;
						}
						if (NPC.downedBoss3)
						{
							num28 += 0.1f;
						}
						if (NPC.downedQueenBee)
						{
							num28 += 0.1f;
						}
						if (Main.hardMode)
						{
							num28 += 0.4f;
						}
						if (NPC.downedMechBoss1)
						{
							num28 += 0.15f;
						}
						if (NPC.downedMechBoss2)
						{
							num28 += 0.15f;
						}
						if (NPC.downedMechBoss3)
						{
							num28 += 0.15f;
						}
						if (NPC.downedPlantBoss)
						{
							num28 += 0.15f;
						}
						if (NPC.downedGolemBoss)
						{
							num28 += 0.15f;
						}
						if (NPC.downedAncientCultist)
						{
							num28 += 0.15f;
						}
						if (Main.expertMode)
						{
							num28 *= Main.expertNPCDamage;
						}
						num27 = (int)((float)num27 * num28);
						this.lifeRegen -= 2 * num27;
						if (num19 < num27)
						{
							num19 = num27 / 3;
						}
					}
					if (this.soulDrain && this.realLife == -1)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 50;
						if (num19 < 5)
						{
							num19 = 5;
						}
					}
					if (this.lifeRegen <= -240 && num19 < 2)
					{
						num19 = 2;
					}
					this.lifeRegenCount += this.lifeRegen;
					while (this.lifeRegenCount >= 120)
					{
						this.lifeRegenCount -= 120;
						if (!this.immortal)
						{
							if (this.life < this.lifeMax)
							{
								this.life++;
							}
							if (this.life > this.lifeMax)
							{
								this.life = this.lifeMax;
							}
						}
					}
					if (num19 > 0)
					{
						while (this.lifeRegenCount <= -120 * num19)
						{
							this.lifeRegenCount += 120 * num19;
							int whoAmI = this.whoAmI;
							if (this.realLife >= 0)
							{
								whoAmI = this.realLife;
							}
							if (!Main.npc[whoAmI].immortal)
							{
								Main.npc[whoAmI].life -= num19;
							}
							CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, string.Concat(num19), false, true);
							if (Main.npc[whoAmI].life <= 0 && !Main.npc[whoAmI].immortal)
							{
								Main.npc[whoAmI].life = 1;
								if (Main.netMode != 1)
								{
									Main.npc[whoAmI].StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(28, -1, -1, "", whoAmI, 9999f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
					else
					{
						while (this.lifeRegenCount <= -120)
						{
							this.lifeRegenCount += 120;
							int whoAmI2 = this.whoAmI;
							if (this.realLife >= 0)
							{
								whoAmI2 = this.realLife;
							}
							if (!Main.npc[whoAmI2].immortal)
							{
								Main.npc[whoAmI2].life--;
							}
							CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, string.Concat(1), false, true);
							if (Main.npc[whoAmI2].life <= 0 && !Main.npc[whoAmI2].immortal)
							{
								Main.npc[whoAmI2].life = 1;
								if (Main.netMode != 1)
								{
									Main.npc[whoAmI2].StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(28, -1, -1, "", whoAmI2, 9999f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
				}
				if (Main.netMode != 1 && Main.bloodMoon)
				{
					bool flag2 = false;
					if (this.value == 0f)
					{
						flag2 = true;
					}
					if (this.type == 46 || this.type == 303 || this.type == 337 || this.type == 443)
					{
						if (WorldGen.crimson)
						{
							this.Transform(464);
						}
						else
						{
							this.Transform(47);
						}
					}
					else if (this.type == 55 || this.type == 230)
					{
						if (WorldGen.crimson)
						{
							this.Transform(465);
						}
						else
						{
							this.Transform(57);
						}
					}
					else if (this.type == 148 || this.type == 149)
					{
						if (WorldGen.crimson)
						{
							this.Transform(470);
						}
						else
						{
							this.Transform(168);
						}
					}
					if (flag2)
					{
						this.value = 0f;
					}
				}
				float num29 = 10f;
				NPC.gravity = 0.3f;
				if (this.type == 258)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				else if (this.type == 425 && this.ai[2] == 1f)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 2f)
					{
						this.velocity.Y = 2f;
					}
				}
				else if (this.type == 427 && this.ai[2] == 1f)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 4f)
					{
						this.velocity.Y = 4f;
					}
				}
				else if (this.type == 426)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				float num30 = (float)(Main.maxTilesX / 4200);
				num30 *= num30;
				float num31 = (float)((double)(this.position.Y / 16f - (60f + 10f * num30)) / (Main.worldSurface / 6.0));
				if ((double)num31 < 0.25)
				{
					num31 = 0.25f;
				}
				if (num31 > 1f)
				{
					num31 = 1f;
				}
				NPC.gravity *= num31;
				if (this.wet)
				{
					if (this.honeyWet)
					{
						NPC.gravity = 0.1f;
						num29 = 4f;
					}
					else
					{
						NPC.gravity = 0.2f;
						num29 = 7f;
					}
				}
				if (this.soundDelay > 0)
				{
					this.soundDelay--;
				}
				if (this.life <= 0)
				{
					this.active = false;
				}
				this.oldTarget = this.target;
				this.oldDirection = this.direction;
				this.oldDirectionY = this.directionY;
				float num32 = 1f + Math.Abs(this.velocity.X) / 3f;
				if (this.gfxOffY > 0f)
				{
					this.gfxOffY -= num32 * this.stepSpeed;
					if (this.gfxOffY < 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				else if (this.gfxOffY < 0f)
				{
					this.gfxOffY += num32 * this.stepSpeed;
					if (this.gfxOffY > 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				if (this.gfxOffY > 16f)
				{
					this.gfxOffY = 16f;
				}
				if (this.gfxOffY < -16f)
				{
					this.gfxOffY = -16f;
				}
				this.TryPortalJumping();
				this.AI();
				for (int num36 = 0; num36 < 256; num36++)
				{
					if (this.immune[num36] > 0)
					{
						this.immune[num36]--;
					}
				}
				if (!this.noGravity && !this.noTileCollide)
				{
					int num37 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num38 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (WorldGen.InWorld(num37, num38, 0) && Main.tile[num37, num38] == null)
					{
						NPC.gravity = 0f;
						this.velocity.X = 0f;
						this.velocity.Y = 0f;
					}
				}
				if (!this.noGravity)
				{
					this.velocity.Y = this.velocity.Y + NPC.gravity;
					if (this.velocity.Y > num29)
					{
						this.velocity.Y = num29;
					}
				}
				if ((double)this.velocity.X < 0.005 && (double)this.velocity.X > -0.005)
				{
					this.velocity.X = 0f;
				}
				if ((Main.netMode != 1 && this.type != 37 && (this.friendly || this.type == 46 || this.type == 55 || this.type == 74 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 303 || this.type == 355 || this.type == 356 || this.type == 358 || this.type == 359 || this.type == 360 || this.type == 361 || this.type == 362 || this.type == 363 || this.type == 364 || this.type == 365 || this.type == 366 || this.type == 367 || this.type == 377 || this.type == 357 || this.type == 374 || (this.type >= 442 && this.type <= 448 && this.type != 447))) || this.type == 538 || this.type == 539 || this.type == 337 || (this.type >= 484 && this.type <= 487))
				{
					if (this.townNPC)
					{
						this.CheckDrowning();
					}
					if (this.life < this.lifeMax)
					{
						this.friendlyRegen++;
						if (this.dryadWard)
						{
							this.friendlyRegen += 10;
						}
						if (this.friendlyRegen > 180)
						{
							this.friendlyRegen = 0;
							this.life++;
							this.netUpdate = true;
						}
					}
					if (this.immune[255] == 0)
					{
						Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
						for (int num39 = 0; num39 < 200; num39++)
						{
							if (Main.npc[num39].active && !Main.npc[num39].friendly && Main.npc[num39].damage > 0)
							{
								Rectangle rectangle2 = new Rectangle((int)Main.npc[num39].position.X, (int)Main.npc[num39].position.Y, Main.npc[num39].width, Main.npc[num39].height);
								if (rectangle.Intersects(rectangle2) && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num39].netID)))
								{
									int num40 = Main.npc[num39].damage;
									int num41 = 6;
									int num42 = 1;
									if (Main.npc[num39].position.X + (float)(Main.npc[num39].width / 2) > this.position.X + (float)(this.width / 2))
									{
										num42 = -1;
									}
									double num43 = Main.npc[i].StrikeNPCNoInteraction(num40, (float)num41, num42, false, false, false);
									if (Main.netMode != 0)
									{
										NetMessage.SendData(28, -1, -1, "", i, (float)num40, (float)num41, (float)num42, 0, 0, 0);
									}
									this.netUpdate = true;
									this.immune[255] = 30;
									if (this.dryadWard)
									{
										num40 = (int)num43 / 3;
										num41 = 6;
										num42 *= -1;
										Main.npc[num39].StrikeNPCNoInteraction(num40, (float)num41, num42, false, false, false);
										if (Main.netMode != 0)
										{
											NetMessage.SendData(28, -1, -1, "", num39, (float)num40, (float)num41, (float)num42, 0, 0, 0);
										}
										Main.npc[num39].netUpdate = true;
										Main.npc[num39].immune[255] = 30;
									}
								}
							}
						}
					}
				}
				if (!this.noTileCollide)
				{
					float arg_2062_0 = this.velocity.Y;
					Vector4 vector2 = Collision.WalkDownSlope(this.position, this.velocity, this.width, this.height, NPC.gravity);
					this.position.X = vector2.X;
					this.position.Y = vector2.Y;
					this.velocity.X = vector2.Z;
					this.velocity.Y = vector2.W;
					bool flag3 = Collision.LavaCollision(this.position, this.width, this.height);
					if (flag3)
					{
						this.lavaWet = true;
						if (!this.lavaImmune && !this.dontTakeDamage && Main.netMode != 1 && this.immune[255] == 0)
						{
							this.AddBuff(24, 420, false);
							this.immune[255] = 30;
							this.StrikeNPCNoInteraction(50, 0f, 0, false, false, false);
							if (Main.netMode == 2 && Main.netMode != 0)
							{
								NetMessage.SendData(28, -1, -1, "", this.whoAmI, 50f, 0f, 0f, 0, 0, 0);
							}
						}
					}
					bool flag4;
					if (this.type == 72 || this.aiStyle == 21 || this.aiStyle == 67 || this.type == 376)
					{
						flag4 = false;
						this.wetCount = 0;
						flag3 = false;
					}
					else
					{
						flag4 = Collision.WetCollision(this.position, this.width, this.height);
						if (Collision.honey)
						{
							this.honeyWet = true;
						}
					}
					if (flag4)
					{
						if (this.onFire && !this.lavaWet && Main.netMode != 1)
						{
							for (int num44 = 0; num44 < 5; num44++)
							{
								if (this.buffType[num44] == 24)
								{
									this.DelBuff(num44);
								}
							}
						}
						if (!this.wet && this.wetCount == 0)
						{
							this.wetCount = 10;
						}
						this.wet = true;
					}
					else if (this.wet)
					{
						this.velocity.X = this.velocity.X * 0.5f;
						this.wet = false;
						if (this.wetCount == 0)
						{
							this.wetCount = 10;
						}
					}
					if (!this.wet)
					{
						this.lavaWet = false;
						this.honeyWet = false;
					}
					if (this.wetCount > 0)
					{
						this.wetCount -= 1;
					}
					bool flag5 = false;
					if (this.type == 2 || this.type == -43 || this.type == 317 || this.type == 318 || this.type == 133)
					{
						flag5 = true;
					}
					if (this.aiStyle == 10)
					{
						flag5 = true;
					}
					if (this.aiStyle == 40)
					{
						flag5 = true;
					}
					if (this.type == 467)
					{
						flag5 = true;
					}
					if (this.type == 477)
					{
						flag5 = true;
					}
					if (this.aiStyle == 14)
					{
						flag5 = true;
					}
					if (this.type == 173)
					{
						flag5 = true;
					}
					if (this.type == 469 && this.ai[2] == 1f)
					{
						flag5 = true;
					}
					if (this.aiStyle == 3 && this.directionY == 1)
					{
						flag5 = true;
					}
					if (this.type == 210 || this.type == 211)
					{
						flag5 = true;
					}
					if (this.type == 50 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
					{
						flag5 = true;
					}
					if (this.type == 247 || this.type == 248)
					{
						flag5 = true;
					}
					if (this.type == 245 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
					{
						flag5 = true;
					}
					if (this.type == 418)
					{
						flag5 = true;
					}
					if (this.aiStyle == 87 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
					{
						flag5 = true;
					}
					this.oldVelocity = this.velocity;
					this.collideX = false;
					this.collideY = false;
					int num57 = 16;
					if (this.aiStyle == 7)
					{
						bool flag6 = false;
						if (!Main.dayTime || Main.invasionType > 0 || Main.eclipse)
						{
							flag6 = true;
						}
						else
						{
							int num58 = (int)(this.position.Y + (float)this.height) / 16;
							if (this.homeTileY - num58 > num57)
							{
								flag5 = true;
							}
						}
						if (flag6 && (this.position.Y + (float)this.height - 8f) / 16f < (float)(this.homeTileY - 1))
						{
							flag5 = true;
						}
					}
					if (Main.netMode != 1)
					{
						if (this.type == 230 && this.wet)
						{
							int direction = this.direction;
							Vector2 velocity = this.velocity;
							this.Transform(55);
							this.direction = direction;
							this.velocity = velocity;
							this.wet = true;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = 0f;
							}
						}
						else if (this.type == 55 && !this.wet && Main.raining)
						{
							int direction2 = this.direction;
							Vector2 velocity2 = this.velocity;
							this.Transform(230);
							this.direction = direction2;
							this.velocity = velocity2;
							this.homeTileX = (int)(this.position.X / 16f) + 10 * this.direction;
						}
					}
					Vector2 position = this.position;
					int width = this.width;
					int num59 = this.height;
					if (this.type == 243)
					{
						num59 = 90;
					}
					if (this.type == 290)
					{
						num59 = 40;
					}
					if (this.type == 351)
					{
						num59 = 40;
					}
					if (this.type == 482)
					{
						num59 = 40;
					}
					if (this.type == 351 || this.type == 343 || this.type == 348 || this.type == 349)
					{
						num59 = 40;
					}
					if (this.type == 391)
					{
						for (int num60 = 0; num60 < 200; num60++)
						{
							if (Main.npc[num60].active && Main.npc[num60].type == 390 && Main.npc[num60].ai[0] == (float)this.whoAmI)
							{
								num59 = 62;
								break;
							}
						}
					}
					if (this.type == 415)
					{
						for (int num61 = 0; num61 < 200; num61++)
						{
							if (Main.npc[num61].active && Main.npc[num61].type == 416 && Main.npc[num61].ai[0] == (float)this.whoAmI)
							{
								num59 = 62;
								break;
							}
						}
					}
					if (num59 != this.height)
					{
						position.Y += (float)(this.height - num59);
					}
					if (this.wet)
					{
						if (this.honeyWet)
						{
							Vector2 velocity3 = this.velocity;
							this.velocity = Collision.TileCollision(position, this.velocity, width, num59, flag5, flag5, 1);
							if (Collision.up)
							{
								this.velocity.Y = 0.01f;
							}
							Vector2 value = this.velocity * 0.25f;
							if (this.velocity.X != velocity3.X)
							{
								value.X = this.velocity.X;
								this.collideX = true;
							}
							if (this.velocity.Y != velocity3.Y)
							{
								value.Y = this.velocity.Y;
								this.collideY = true;
							}
							this.oldPosition = this.position;
							this.oldDirection = this.direction;
							this.position += value;
						}
						else
						{
							Vector2 velocity4 = this.velocity;
							this.velocity = Collision.TileCollision(position, this.velocity, width, num59, flag5, flag5, 1);
							if (Collision.up)
							{
								this.velocity.Y = 0.01f;
							}
							Vector2 value2 = this.velocity * 0.5f;
							if (this.velocity.X != velocity4.X)
							{
								value2.X = this.velocity.X;
								this.collideX = true;
							}
							if (this.velocity.Y != velocity4.Y)
							{
								value2.Y = this.velocity.Y;
								this.collideY = true;
							}
							this.oldPosition = this.position;
							this.oldDirection = this.direction;
							this.position += value2;
						}
					}
					else
					{
						if (this.type == 72)
						{
							Vector2 position2 = new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
							int num62 = 12;
							int num63 = 12;
							position2.X -= (float)(num62 / 2);
							position2.Y -= (float)(num63 / 2);
							this.velocity = Collision.noSlopeCollision(position2, this.velocity, num62, num63, true, true);
						}
						else if (this.type == 405 || this.type == 406)
						{
							this.velocity = Collision.TileCollision(position, this.velocity, width, num59, flag5, flag5, 1);
							if (this.velocity != this.oldVelocity)
							{
								if (this.velocity.X != 0f && this.velocity.X != this.oldVelocity.X)
								{
									this.velocity.X = -this.oldVelocity.X * 0.8f;
								}
								if (this.velocity.Y != 0f && this.velocity.Y != this.oldVelocity.Y)
								{
									this.velocity.Y = -this.oldVelocity.Y * 0.8f;
								}
							}
						}
						else if (this.type == 417)
						{
							this.velocity = Collision.TileCollision(position, this.velocity, width, num59, flag5, flag5, 1);
							if (this.ai[0] == 6f && this.velocity != this.oldVelocity)
							{
								this.ai[2] -= 1f;
								this.ai[3] = 1f;
								if (this.ai[2] > 0f)
								{
									if (this.velocity.X != 0f && this.velocity.X != this.oldVelocity.X)
									{
										this.velocity.X = -this.oldVelocity.X * 0.9f;
										this.direction *= -1;
									}
									if (this.velocity.Y != 0f && this.velocity.Y != this.oldVelocity.Y)
									{
										this.velocity.Y = -this.oldVelocity.Y * 0.9f;
									}
								}
							}
						}
						else
						{
							this.velocity = Collision.TileCollision(position, this.velocity, width, num59, flag5, flag5, 1);
						}
						if (Collision.up)
						{
							this.velocity.Y = 0.01f;
						}
						if (this.oldVelocity.X != this.velocity.X)
						{
							this.collideX = true;
						}
						if (this.oldVelocity.Y != this.velocity.Y)
						{
							this.collideY = true;
						}
						this.oldPosition = this.position;
						this.oldDirection = this.direction;
						this.position += this.velocity;
					}
					if (this.aiStyle == 67)
					{
						Vector4 vector3 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, false);
						if (this.position.X != vector3.X || this.position.Y != vector3.Y)
						{
							if (this.ai[2] == 0f && this.velocity.Y > 0f && ((this.direction < 0 && this.rotation == 1.57f && this.spriteDirection == 1) || (this.direction > 0 && this.rotation == 4.71f && this.spriteDirection == -1)))
							{
								this.direction *= -this.direction;
							}
							this.ai[2] = 2f;
							this.directionY = 1;
							this.rotation = 0f;
						}
						this.position.X = vector3.X;
						this.position.Y = vector3.Y;
						this.velocity.X = vector3.Z;
						this.velocity.Y = vector3.W;
					}
					else if (this.type != 72 && this.type != 247 && this.type != 248)
					{
						if (flag5)
						{
							this.stairFall = true;
						}
						if (this.aiStyle == 7)
						{
							int num64 = (int)base.Center.X / 16;
							int num65 = (int)this.position.Y / 16;
							if (WorldGen.InWorld(num64, num65, 0))
							{
								bool flag7 = false;
								if (Main.tile[num64, num65] != null && Main.tile[num64, num65].active() && Main.tileSolid[(int)Main.tile[num64, num65].type])
								{
									flag7 = true;
								}
								if (!Main.dayTime || Main.eclipse)
								{
									flag7 = true;
								}
								else
								{
									int num66 = (int)(this.position.Y + (float)this.height) / 16;
									if (this.homeTileY - num66 > num57)
									{
										flag7 = true;
									}
								}
								if (flag7)
								{
									if ((this.position.Y + (float)this.height - 8f) / 16f < (float)this.homeTileY)
									{
										this.stairFall = true;
									}
									else
									{
										this.stairFall = false;
									}
								}
							}
						}
						Vector4 vector4 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, this.stairFall);
						if (Collision.stairFall)
						{
							this.stairFall = true;
						}
						else if (!flag5)
						{
							this.stairFall = false;
						}
						if (Collision.stair && Math.Abs(vector4.Y - this.position.Y) > 8f)
						{
							this.gfxOffY -= vector4.Y - this.position.Y;
							this.stepSpeed = 2f;
						}
						this.position.X = vector4.X;
						this.position.Y = vector4.Y;
						this.velocity.X = vector4.Z;
						this.velocity.Y = vector4.W;
					}
				}
				else
				{
					this.oldPosition = this.position;
					this.oldDirection = this.direction;
					this.position += this.velocity;
				}
				if (Main.netMode != 1 && !this.noTileCollide && this.lifeMax > 1 && Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 2) && (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 303 || this.type == 361 || this.type == 362 || this.type == 364 || this.type == 366 || this.type == 367 || (this.type >= 442 && this.type <= 448)))
				{
					this.ai[0] = 1f;
					this.ai[1] = 400f;
					this.ai[2] = 0f;
				}
				this.FindFrame();
				if (this.type == 439 || this.type == 440)
				{
					if (this.localAI[3] <= 0f)
					{
						this.localAI[3] = 2f;
						for (int num67 = this.oldPos.Length - 1; num67 > 0; num67--)
						{
							this.oldPos[num67] = this.oldPos[num67 - 1];
						}
						this.oldPos[0] = this.position;
					}
					this.localAI[3] -= 1f;
				}
				if (this.type == 370 || this.type == 372 || this.type == 373 || this.type == 396 || this.type == 400 || this.type == 401)
				{
					for (int num68 = this.oldPos.Length - 1; num68 > 0; num68--)
					{
						this.oldPos[num68] = this.oldPos[num68 - 1];
					}
					this.oldPos[0] = this.position;
				}
				if (this.aiStyle == 87)
				{
					if ((int)this.ai[0] == 4 || this.ai[0] == 5f || this.ai[0] == 6f)
					{
						for (int num69 = this.oldPos.Length - 1; num69 > 0; num69--)
						{
							this.oldPos[num69] = this.oldPos[num69 - 1];
							this.oldRot[num69] = this.oldRot[num69 - 1];
						}
						this.oldPos[0] = this.position;
						this.oldRot[0] = this.rotation;
					}
					else
					{
						for (int num70 = this.oldPos.Length - 1; num70 >= 0; num70--)
						{
							this.oldPos[num70] = this.position;
							this.oldRot[num70] = this.rotation;
						}
					}
				}
				if (this.type == 4 || this.type == 471 || this.type == 477 || this.type == 479)
				{
					for (int num71 = this.oldPos.Length - 1; num71 > 0; num71--)
					{
						this.oldPos[num71] = this.oldPos[num71 - 1];
						this.oldRot[num71] = this.oldRot[num71 - 1];
					}
					this.oldPos[0] = this.position;
					this.oldRot[0] = this.rotation;
				}
				if (this.type == 120 || this.type == 137 || this.type == 138)
				{
					for (int num72 = this.oldPos.Length - 1; num72 > 0; num72--)
					{
						this.oldPos[num72] = this.oldPos[num72 - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 94)
				{
					for (int num73 = this.oldPos.Length - 1; num73 > 0; num73--)
					{
						this.oldPos[num73] = this.oldPos[num73 - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 125 || this.type == 126 || this.type == 127 || this.type == 128 || this.type == 129 || this.type == 130 || this.type == 131 || this.type == 139 || this.type == 140 || this.type == 407 || this.type == 420 || this.type == 425 || this.type == 427 || this.type == 426 || this.type == 509 || this.type == 516)
				{
					for (int num74 = this.oldPos.Length - 1; num74 > 0; num74--)
					{
						this.oldPos[num74] = this.oldPos[num74 - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 402 || this.type == 417 || this.type == 419 || this.type == 418 || this.type == 519 || this.type == 521 || this.type == 522)
				{
					for (int num75 = this.oldPos.Length - 1; num75 > 0; num75--)
					{
						this.oldPos[num75] = this.oldPos[num75 - 1];
						this.oldRot[num75] = this.oldRot[num75 - 1];
					}
					this.oldPos[0] = this.position;
					this.oldRot[0] = this.rotation;
				}
				if (!this.active)
				{
					this.netUpdate = true;
				}
				if (Main.netMode == 2)
				{
					if (Main.npcStreamSpeed > 0 && !this.townNPC && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 1f)
					{
						this.netStream += 1;
						if ((int)this.netStream > Main.npcStreamSpeed)
						{
							for (int num76 = 0; num76 < 255; num76++)
							{
								if (Main.player[num76].active)
								{
									float num77 = Math.Abs(base.Center.X - Main.player[num76].Center.X) + Math.Abs(base.Center.Y - Main.player[num76].Center.Y);
									if (num77 < 250f)
									{
										byte[] expr_4143_cp_0 = this.streamPlayer;
										int expr_4143_cp_1 = num76;
										expr_4143_cp_0[expr_4143_cp_1] -= 8;
									}
									else if (num77 < 500f)
									{
										byte[] expr_4169_cp_0 = this.streamPlayer;
										int expr_4169_cp_1 = num76;
										expr_4169_cp_0[expr_4169_cp_1] -= 4;
									}
									else if (num77 < 1000f)
									{
										byte[] expr_418F_cp_0 = this.streamPlayer;
										int expr_418F_cp_1 = num76;
										expr_418F_cp_0[expr_418F_cp_1] -= 2;
									}
									else if (num77 < 1500f)
									{
										byte[] expr_41B5_cp_0 = this.streamPlayer;
										int expr_41B5_cp_1 = num76;
										expr_41B5_cp_0[expr_41B5_cp_1] -= 1;
									}
									if (this.streamPlayer[num76] <= 0)
									{
										this.streamPlayer[num76] = 8;
										NetMessage.SendData(23, num76, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
					if (this.townNPC)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate2)
					{
						this.netUpdate = true;
					}
					if (!this.active)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate)
					{
						if (this.boss)
						{
							this.oldPosition = this.position;
							if (this.netSpam <= 15)
							{
								this.netSpam += 5;
								NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
								this.netUpdate2 = false;
							}
							else
							{
								this.netUpdate2 = true;
							}
						}
						else if (this.netSpam <= 90)
						{
							this.netSpam += 30;
							NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
							this.netUpdate2 = false;
						}
						else
						{
							this.netUpdate2 = true;
						}
					}
					if (this.netSpam > 0)
					{
						this.netSpam--;
					}
					if (this.active && this.townNPC && NPC.TypeToNum(this.type) != -1)
					{
						if (this.homeless != this.oldHomeless || this.homeTileX != this.oldHomeTileX || this.homeTileY != this.oldHomeTileY)
						{
							int num78 = 0;
							if (this.homeless)
							{
								num78 = 1;
							}
							NetMessage.SendData(60, -1, -1, "", i, (float)Main.npc[i].homeTileX, (float)Main.npc[i].homeTileY, (float)num78, 0, 0, 0);
						}
						this.oldHomeless = this.homeless;
						this.oldHomeTileX = this.homeTileX;
						this.oldHomeTileY = this.homeTileY;
					}
				}
				this.CheckActive();
				this.netUpdate = false;
				this.justHit = false;
			}
		}
		public static void setFireFlyChance()
		{
			if (Main.rand == null)
			{
				Main.rand = new Random((int)DateTime.Now.Ticks);
			}
			if (WorldGen.genRand.Next(9) == 0)
			{
				NPC.fireFlyChance = Main.rand.Next(5, 10);
				NPC.fireFlyFriendly = Main.rand.Next(1, 4);
				NPC.fireFlyMultiple = Main.rand.Next(3, 8);
			}
			else if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.fireFlyChance = 999999;
				NPC.fireFlyFriendly = 999999;
				NPC.fireFlyMultiple = 999999;
			}
			else
			{
				NPC.fireFlyChance = Main.rand.Next(10, 60);
				NPC.fireFlyFriendly = Main.rand.Next(2, 15);
				NPC.fireFlyMultiple = Main.rand.Next(6, 30);
			}
			NPC.butterflyChance = Main.rand.Next(1, 25);
			if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.butterflyChance = 999999;
			}
		}
		public Color GetAlpha(Color newColor)
		{
			float num = (float)(255 - this.alpha) / 255f;
			int num2 = (int)((float)newColor.R * num);
			int num3 = (int)((float)newColor.G * num);
			int num4 = (int)((float)newColor.B * num);
			int num5 = (int)newColor.A - this.alpha;
			if (this.type == 402)
			{
				return new Color(255, 255, 255, 255);
			}
			if (this.type == 484)
			{
				return new Color(250, 250, 250, 200);
			}
			if ((this.type >= 454 && this.type <= 459) || this.type == 521)
			{
				newColor = Color.Lerp(newColor, Color.White, 0.4f);
				newColor.A = 150;
				newColor *= (float)num5 / 255f;
				return newColor;
			}
			if (this.type == 440)
			{
				byte b = 180;
				if (Main.expertMode)
				{
					b = 210;
				}
				b = (byte)((float)b * num);
				return new Color((int)b, (int)b, (int)b, (int)b);
			}
			if (this.type == 516)
			{
				return new Color(this.alpha, this.alpha, this.alpha, this.alpha);
			}
			if (this.type == 522)
			{
				return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
			}
			if (this.type == 523)
			{
				return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
			}
			if (this.type == 395 || this.type == 519)
			{
				newColor = Color.Lerp(newColor, Color.White, 0.4f);
				return newColor;
			}
			if (this.type == 370 && this.ai[0] != -1f && this.ai[0] < 9f)
			{
				float num6 = MathHelper.Lerp(num, 1f, 0.25f);
				if (num6 > 1f)
				{
					num6 = 1f;
				}
				num4 = (int)((float)newColor.B * num6);
			}
			if (this.type == 30)
			{
				return new Color(250, 250, 250, 100);
			}
			if (this.type == 25 || this.type == 30 || this.type == 59 || this.type == 60)
			{
				return new Color(200, 200, 200, 0);
			}
			if (this.type == 360)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
				if (num2 < 75)
				{
					num2 = 75;
				}
				if (num3 < 175)
				{
					num3 = 175;
				}
				if (num4 < 255)
				{
					num4 = 255;
				}
				return new Color(num2, num3, num4, 255);
			}
			if (this.type == 352)
			{
				return new Color(255, 255, 255, 200);
			}
			if (this.type == 72)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
			}
			else
			{
				if (this.type == 288)
				{
					return new Color(200, 200, 200, 0);
				}
				if (this.type == 289)
				{
					return new Color(250, 250, 250, 50);
				}
				if (this.type >= 254 && this.type <= 261)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else if (this.type == 374)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else if (this.type == 64 || this.type == 63 || this.type == 75 || this.type == 103 || this.type == 400)
				{
					num2 = (int)((double)newColor.R * 1.5);
					num3 = (int)((double)newColor.G * 1.5);
					num4 = (int)((double)newColor.B * 1.5);
					if (num2 > 255)
					{
						num2 = 255;
					}
					if (num3 > 255)
					{
						num3 = 255;
					}
					if (num4 > 255)
					{
						num4 = 255;
					}
				}
			}
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num5 > 255)
			{
				num5 = 255;
			}
			return new Color(num2, num3, num4, num5);
		}
		public Color GetColor(Color newColor)
		{
			int num = (int)(this.color.R - (255 - newColor.R));
			int num2 = (int)(this.color.G - (255 - newColor.G));
			int num3 = (int)(this.color.B - (255 - newColor.B));
			int num4 = (int)(this.color.A - (255 - newColor.A));
			if (num < 0)
			{
				num = 0;
			}
			if (num > 255)
			{
				num = 255;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num2 > 255)
			{
				num2 = 255;
			}
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num3 > 255)
			{
				num3 = 255;
			}
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num4 > 255)
			{
				num4 = 255;
			}
			return new Color(num, num2, num3, num4);
		}
		public string GetChat()
		{
			Recipe.FindRecipes();
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			bool flag4 = false;
			bool flag5 = false;
			bool flag6 = false;
			bool flag7 = false;
			bool flag8 = false;
			bool flag9 = false;
			bool flag10 = false;
			bool flag11 = false;
			bool flag12 = false;
			bool flag13 = false;
			bool flag14 = false;
			bool flag15 = false;
			bool flag16 = false;
			bool flag17 = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					if (Main.npc[i].type == 17)
					{
						flag = true;
					}
					else if (Main.npc[i].type == 18)
					{
						flag2 = true;
					}
					else if (Main.npc[i].type == 19)
					{
						flag3 = true;
					}
					else if (Main.npc[i].type == 20)
					{
						flag4 = true;
					}
					else if (Main.npc[i].type == 37)
					{
						flag5 = true;
					}
					else if (Main.npc[i].type == 38)
					{
						flag6 = true;
					}
					else if (Main.npc[i].type == 124)
					{
						flag7 = true;
					}
					else if (Main.npc[i].type == 107)
					{
						flag8 = true;
					}
					else if (Main.npc[i].type == 54)
					{
						flag9 = true;
					}
					else if (Main.npc[i].type == 160)
					{
						flag10 = true;
					}
					else if (Main.npc[i].type == 178)
					{
						flag11 = true;
					}
					else if (Main.npc[i].type == 229)
					{
						flag12 = true;
					}
					else if (Main.npc[i].type == 209)
					{
						flag13 = true;
					}
					else if (Main.npc[i].type == 208)
					{
						flag14 = true;
					}
					else if (Main.npc[i].type == 353)
					{
						flag15 = true;
					}
					else if (Main.npc[i].type == 22)
					{
						flag16 = true;
					}
					else if (Main.npc[i].type == 2)
					{
						flag17 = true;
					}
				}
			}
			string result = "";
			if (this.type == 17)
			{
				if (!NPC.downedBoss1 && Main.rand.Next(3) == 0)
				{
					if (Main.player[Main.myPlayer].statLifeMax < 200)
					{
						result = Lang.dialog(1, false);
					}
					else if (Main.player[Main.myPlayer].statDefense <= 10)
					{
						result = Lang.dialog(2, false);
					}
					else
					{
						result = Lang.dialog(3, false);
					}
				}
				else if (Main.dayTime)
				{
					if (Main.time < 16200.0)
					{
						int num = Main.rand.Next(3);
						if (num == 0)
						{
							result = Lang.dialog(4, false);
						}
						else if (num == 1)
						{
							result = Lang.dialog(5, false);
						}
						else
						{
							result = Lang.dialog(6, false);
						}
					}
					else if (Main.time > 37800.0)
					{
						int num2 = Main.rand.Next(3);
						if (num2 == 0)
						{
							result = Lang.dialog(7, false);
						}
						else if (num2 == 1)
						{
							result = Lang.dialog(8, false);
						}
						else
						{
							result = Lang.dialog(9, false);
						}
					}
					else
					{
						int num3 = Main.rand.Next(3);
						if (num3 == 0)
						{
							result = Lang.dialog(10, false);
						}
						else if (num3 == 1)
						{
							result = Lang.dialog(11, false);
						}
						else
						{
							result = Lang.dialog(12, false);
						}
					}
				}
				else if (Main.bloodMoon)
				{
					if (flag2 && flag7 && Main.rand.Next(3) == 0)
					{
						result = Lang.dialog(13, false);
					}
					else
					{
						int num4 = Main.rand.Next(4);
						if (num4 == 0)
						{
							result = Lang.dialog(14, false);
						}
						else if (num4 == 1)
						{
							result = Lang.dialog(15, false);
						}
						else if (num4 == 2)
						{
							result = Lang.dialog(16, false);
						}
						else
						{
							result = Lang.dialog(17, false);
						}
					}
				}
				else if (Main.time < 9720.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(18, false);
					}
					else
					{
						result = Lang.dialog(19, false);
					}
				}
				else if (Main.time > 22680.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(20, false);
					}
					else
					{
						result = Lang.dialog(21, false);
					}
				}
				else
				{
					int num5 = Main.rand.Next(3);
					if (num5 == 0)
					{
						result = Lang.dialog(22, false);
					}
					else if (num5 == 1)
					{
						result = Lang.dialog(23, false);
					}
					else
					{
						result = Lang.dialog(24, false);
					}
				}
			}
			else if (this.type == 18)
			{
				if (Main.bloodMoon)
				{
					if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
					{
						int num6 = Main.rand.Next(3);
						if (num6 == 0)
						{
							result = Lang.dialog(25, false);
						}
						else if (num6 == 1)
						{
							result = Lang.dialog(26, false);
						}
						else
						{
							result = Lang.dialog(27, false);
						}
					}
					else
					{
						int num7 = Main.rand.Next(4);
						if (num7 == 0)
						{
							result = Lang.dialog(28, false);
						}
						else if (num7 == 1)
						{
							result = Lang.dialog(29, false);
						}
						else if (num7 == 2)
						{
							result = Lang.dialog(30, false);
						}
						else
						{
							result = Lang.dialog(31, false);
						}
					}
				}
				else if (Main.rand.Next(3) == 0 && !NPC.downedBoss3)
				{
					result = Lang.dialog(32, false);
				}
				else if (flag6 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(33, false);
				}
				else if (flag3 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(34, false);
				}
				else if (flag17 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(35, false);
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.33)
				{
					int num8 = Main.rand.Next(5);
					if (num8 == 0)
					{
						result = Lang.dialog(36, false);
					}
					else if (num8 == 1)
					{
						result = Lang.dialog(37, false);
					}
					else if (num8 == 2)
					{
						result = Lang.dialog(38, false);
					}
					else if (num8 == 3)
					{
						result = Lang.dialog(39, false);
					}
					else
					{
						result = Lang.dialog(40, false);
					}
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
				{
					int num9 = Main.rand.Next(7);
					if (num9 == 0)
					{
						result = Lang.dialog(41, false);
					}
					else if (num9 == 1)
					{
						result = Lang.dialog(42, false);
					}
					else if (num9 == 2)
					{
						result = Lang.dialog(43, false);
					}
					else if (num9 == 3)
					{
						result = Lang.dialog(44, false);
					}
					else if (num9 == 4)
					{
						result = Lang.dialog(45, false);
					}
					else if (num9 == 5)
					{
						result = Lang.dialog(46, false);
					}
					else
					{
						result = Lang.dialog(47, false);
					}
				}
				else
				{
					int num10 = Main.rand.Next(4);
					if (num10 == 0)
					{
						result = Lang.dialog(48, false);
					}
					else if (num10 == 1)
					{
						result = Lang.dialog(49, false);
					}
					else if (num10 == 2)
					{
						result = Lang.dialog(50, false);
					}
					else
					{
						result = Lang.dialog(51, false);
					}
				}
			}
			else if (this.type == 19)
			{
				if (NPC.downedBoss3 && !Main.hardMode)
				{
					result = Lang.dialog(58, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(59, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(60, false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(61, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(62, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(63, false);
				}
				else if (Main.bloodMoon)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(64, false);
					}
					else
					{
						result = Lang.dialog(65, false);
					}
				}
				else
				{
					int num11 = Main.rand.Next(3);
					if (num11 == 0)
					{
						result = Lang.dialog(66, false);
					}
					else if (num11 == 1)
					{
						result = Lang.dialog(67, false);
					}
					else
					{
						result = Lang.dialog(68, false);
					}
				}
			}
			else if (this.type == 20)
			{
				if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					if (WorldGen.crimson)
					{
						result = Lang.dialog(332, false);
					}
					else
					{
						result = Lang.dialog(69, false);
					}
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(70, false);
				}
				else if (flag && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(71, false);
				}
				else if (flag5 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(72, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(238, false);
				}
				else if (Main.bloodMoon)
				{
					int num12 = Main.rand.Next(4);
					if (num12 == 0)
					{
						result = Lang.dialog(73, false);
					}
					else if (num12 == 1)
					{
						result = Lang.dialog(74, false);
					}
					else if (num12 == 2)
					{
						result = Lang.dialog(75, false);
					}
					else
					{
						result = Lang.dialog(76, false);
					}
				}
				else
				{
					int num13 = Main.rand.Next(5);
					if (num13 == 0)
					{
						if (WorldGen.crimson)
						{
							result = Lang.dialog(333, false);
						}
						else
						{
							result = Lang.dialog(77, false);
						}
					}
					else if (num13 == 1)
					{
						result = Lang.dialog(78, false);
					}
					else if (num13 == 2)
					{
						result = Lang.dialog(79, false);
					}
					else if (num13 == 3)
					{
						result = Lang.dialog(80, false);
					}
					else
					{
						result = Lang.dialog(81, false);
					}
				}
			}
			else if (this.type == 37)
			{
				if (Main.dayTime)
				{
					int num14 = Main.rand.Next(3);
					if (num14 == 0)
					{
						result = Lang.dialog(82, false);
					}
					else if (num14 == 1)
					{
						result = Lang.dialog(83, false);
					}
					else
					{
						result = Lang.dialog(84, false);
					}
				}
				else if (Main.player[Main.myPlayer].statLifeMax < 300 || Main.player[Main.myPlayer].statDefense < 10)
				{
					int num15 = Main.rand.Next(4);
					if (num15 == 0)
					{
						result = Lang.dialog(85, false);
					}
					else if (num15 == 1)
					{
						result = Lang.dialog(86, false);
					}
					else if (num15 == 2)
					{
						result = Lang.dialog(87, false);
					}
					else
					{
						result = Lang.dialog(88, false);
					}
				}
				else
				{
					int num16 = Main.rand.Next(4);
					if (num16 == 0)
					{
						result = Lang.dialog(89, false);
					}
					else if (num16 == 1)
					{
						result = Lang.dialog(90, false);
					}
					else if (num16 == 2)
					{
						result = Lang.dialog(91, false);
					}
					else
					{
						result = Lang.dialog(92, false);
					}
				}
			}
			else if (this.type == 38)
			{
				if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(93, false);
				}
				if (Main.bloodMoon)
				{
					int num17 = Main.rand.Next(3);
					if (num17 == 0)
					{
						result = Lang.dialog(94, false);
					}
					else if (num17 == 1)
					{
						result = Lang.dialog(95, false);
					}
					else
					{
						result = Lang.dialog(96, false);
					}
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(97, false);
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(98, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(99, false);
				}
				else if (flag4 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(100, false);
				}
				else if (!Main.dayTime)
				{
					int num18 = Main.rand.Next(4);
					if (num18 == 0)
					{
						result = Lang.dialog(101, false);
					}
					else if (num18 == 1)
					{
						result = Lang.dialog(102, false);
					}
					else if (num18 == 2)
					{
						result = Lang.dialog(103, false);
					}
					else
					{
						result = Lang.dialog(104, false);
					}
				}
				else
				{
					int num19 = Main.rand.Next(5);
					if (num19 == 0)
					{
						result = Lang.dialog(105, false);
					}
					else if (num19 == 1)
					{
						result = Lang.dialog(106, false);
					}
					else if (num19 == 2)
					{
						result = Lang.dialog(107, false);
					}
					else if (num19 == 3)
					{
						result = Lang.dialog(108, false);
					}
					else
					{
						result = Lang.dialog(109, false);
					}
				}
			}
			else if (this.type == 54)
			{
				if (!flag7 && Main.rand.Next(2) == 0)
				{
					result = Lang.dialog(110, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(237, false);
				}
				else if (Main.bloodMoon)
				{
					result = Lang.dialog(111, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(112, false);
				}
				else if (Main.player[Main.myPlayer].head == 24)
				{
					result = Lang.dialog(113, false);
				}
				else
				{
					int num20 = Main.rand.Next(6);
					if (num20 == 0)
					{
						result = Lang.dialog(114, false);
					}
					else if (num20 == 1)
					{
						result = Lang.dialog(115, false);
					}
					else if (num20 == 2)
					{
						result = Lang.dialog(116, false);
					}
					else if (num20 == 3)
					{
						result = Lang.dialog(117, false);
					}
					else if (num20 == 4)
					{
						result = Lang.dialog(118, false);
					}
					else
					{
						result = Lang.dialog(119, false);
					}
				}
			}
			else if (this.type == 105)
			{
				result = Lang.dialog(120, false);
			}
			else if (this.type == 107)
			{
				if (this.homeless)
				{
					int num21 = Main.rand.Next(5);
					if (num21 == 0)
					{
						result = Lang.dialog(121, false);
					}
					else if (num21 == 1)
					{
						result = Lang.dialog(122, false);
					}
					else if (num21 == 2)
					{
						result = Lang.dialog(123, false);
					}
					else if (num21 == 3)
					{
						result = Lang.dialog(124, false);
					}
					else
					{
						result = Lang.dialog(125, false);
					}
				}
				else if (flag7 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(126, false);
				}
				else if (flag15 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(309, false);
				}
				else if (!Main.dayTime)
				{
					int num22 = Main.rand.Next(5);
					if (num22 == 0)
					{
						result = Lang.dialog(127, false);
					}
					else if (num22 == 1)
					{
						result = Lang.dialog(128, false);
					}
					else if (num22 == 2)
					{
						result = Lang.dialog(129, false);
					}
					else if (num22 == 3)
					{
						result = Lang.dialog(130, false);
					}
					else
					{
						result = Lang.dialog(131, false);
					}
				}
				else
				{
					int num23 = Main.rand.Next(5);
					if (num23 == 0)
					{
						result = Lang.dialog(132, false);
					}
					else if (num23 == 1)
					{
						result = Lang.dialog(133, false);
					}
					else if (num23 == 2)
					{
						result = Lang.dialog(134, false);
					}
					else if (num23 == 3)
					{
						result = Lang.dialog(135, false);
					}
					else
					{
						result = Lang.dialog(136, false);
					}
				}
			}
			else if (this.type == 106)
			{
				result = Lang.dialog(137, false);
			}
			else if (this.type == 108)
			{
				if (this.homeless)
				{
					int num24 = Main.rand.Next(3);
					if (num24 == 0)
					{
						result = Lang.dialog(138, false);
					}
					else if (num24 == 1 && !Main.player[Main.myPlayer].Male)
					{
						result = Lang.dialog(139, false);
					}
					else if (num24 == 1)
					{
						result = Lang.dialog(140, false);
					}
					else if (num24 == 2)
					{
						result = Lang.dialog(141, false);
					}
				}
				else if (Main.player[Main.myPlayer].Male && flag17 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(142, false);
				}
				else if (Main.player[Main.myPlayer].Male && flag6 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(143, false);
				}
				else if (Main.player[Main.myPlayer].Male && flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(144, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(145, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag7 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(146, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(147, false);
				}
				else if (!Main.dayTime)
				{
					int num25 = Main.rand.Next(3);
					if (num25 == 0)
					{
						result = Lang.dialog(148, false);
					}
					else if (num25 == 1)
					{
						result = Lang.dialog(149, false);
					}
					else if (num25 == 2)
					{
						result = Lang.dialog(150, false);
					}
				}
				else
				{
					int num26 = Main.rand.Next(5);
					if (num26 == 0)
					{
						result = Lang.dialog(151, false);
					}
					else if (num26 == 1)
					{
						result = Lang.dialog(152, false);
					}
					else if (num26 == 2)
					{
						result = Lang.dialog(153, false);
					}
					else if (num26 == 3)
					{
						result = Lang.dialog(154, false);
					}
					else
					{
						result = Lang.dialog(155, false);
					}
				}
			}
			else if (this.type == 123)
			{
				result = Lang.dialog(156, false);
			}
			else if (this.type == 124)
			{
				if (this.homeless)
				{
					int num27 = Main.rand.Next(4);
					if (num27 == 0)
					{
						result = Lang.dialog(157, false);
					}
					else if (num27 == 1)
					{
						result = Lang.dialog(158, false);
					}
					else if (num27 == 2)
					{
						result = Lang.dialog(159, false);
					}
					else
					{
						result = Lang.dialog(160, false);
					}
				}
				else if (Main.bloodMoon)
				{
					int num28 = Main.rand.Next(4);
					if (num28 == 0)
					{
						result = Lang.dialog(161, false);
					}
					else if (num28 == 1)
					{
						result = Lang.dialog(162, false);
					}
					else if (num28 == 2)
					{
						result = Lang.dialog(163, false);
					}
					else
					{
						result = Lang.dialog(164, false);
					}
				}
				else if (flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(165, false);
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(166, false);
				}
				else
				{
					int num29 = Main.rand.Next(3);
					if (num29 == 0)
					{
						result = Lang.dialog(167, false);
					}
					else if (num29 == 1)
					{
						result = Lang.dialog(168, false);
					}
					else
					{
						result = Lang.dialog(169, false);
					}
				}
			}
			else if (this.type == 22)
			{
				if (Main.bloodMoon)
				{
					int num30 = Main.rand.Next(3);
					if (num30 == 0)
					{
						result = Lang.dialog(170, false);
					}
					else if (num30 == 1)
					{
						result = Lang.dialog(171, false);
					}
					else
					{
						result = Lang.dialog(172, false);
					}
				}
				else if (!Main.dayTime)
				{
					result = Lang.dialog(173, false);
				}
				else
				{
					int num31 = Main.rand.Next(3);
					if (num31 == 0)
					{
						result = Lang.dialog(174, false);
					}
					else if (num31 == 1)
					{
						result = Lang.dialog(175, false);
					}
					else
					{
						result = Lang.dialog(176, false);
					}
				}
			}
			else if (this.type == 142)
			{
				int num32 = Main.rand.Next(3);
				if (num32 == 0)
				{
					result = Lang.dialog(224, false);
				}
				else if (num32 == 1)
				{
					result = Lang.dialog(225, false);
				}
				else if (num32 == 2)
				{
					result = Lang.dialog(226, false);
				}
			}
			else if (this.type == 160)
			{
				int num33 = Main.rand.Next(6);
				if (flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(232, false);
				}
				else if (flag9 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(236, false);
				}
				else if (num33 == 0)
				{
					result = Lang.dialog(231, false);
				}
				else if (num33 == 1)
				{
					result = Lang.dialog(233, false);
				}
				else if (num33 == 2)
				{
					result = Lang.dialog(234, false);
				}
				else if (num33 == 3)
				{
					result = Lang.dialog(235, false);
				}
				else if (num33 == 4)
				{
					result = Lang.dialog(240, false);
				}
				else if (num33 == 5)
				{
					result = Lang.dialog(241, false);
				}
			}
			else if (this.type == 178)
			{
				int num34 = Main.rand.Next(5);
				if (Main.bloodMoon && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(245, false);
				}
				else if (flag13 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(246, false);
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(247, false);
				}
				else if (num34 == 0)
				{
					result = Lang.dialog(242, false);
				}
				else if (num34 == 1)
				{
					result = Lang.dialog(243, false);
				}
				else if (num34 == 2)
				{
					result = Lang.dialog(244, false);
				}
				else if (num34 == 3)
				{
					result = Lang.dialog(248, false);
				}
				else if (num34 == 4)
				{
					result = Lang.dialog(249, false);
				}
			}
			else if (this.type == 207)
			{
				int num35 = Main.rand.Next(3);
				if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(260, false);
				}
				else if (num35 == 0)
				{
					result = Lang.dialog(257, false);
				}
				else if (num35 == 1)
				{
					result = Lang.dialog(258, false);
				}
				else if (num35 == 2)
				{
					result = Lang.dialog(259, false);
				}
			}
			else if (this.type == 208)
			{
				int num36 = Main.rand.Next(7);
				if (Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(268, false);
				}
				else if (flag15 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(310, false);
				}
				else if (num36 == 0)
				{
					result = Lang.dialog(265, false);
				}
				else if (num36 == 1)
				{
					result = Lang.dialog(266, false);
				}
				else if (num36 == 2)
				{
					result = Lang.dialog(267, false);
				}
				else if (num36 == 3)
				{
					result = Lang.dialog(269, false);
				}
				else if (num36 == 4)
				{
					result = Lang.dialog(270, false);
				}
				else if (num36 == 5)
				{
					result = Lang.dialog(271, false);
				}
				else if (num36 == 6)
				{
					result = Lang.dialog(272, false);
				}
			}
			else if (this.type == 209)
			{
				int num37 = Main.rand.Next(5);
				if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(284, false);
				}
				else if (flag11 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(283, false);
				}
				else if (num37 == 0)
				{
					result = Lang.dialog(280, false);
				}
				else if (num37 == 1)
				{
					result = Lang.dialog(281, false);
				}
				else if (num37 == 2)
				{
					result = Lang.dialog(282, false);
				}
				else if (num37 == 3)
				{
					result = Lang.dialog(285, false);
				}
				else if (num37 == 4)
				{
					result = Lang.dialog(286, false);
				}
			}
			else if (this.type == 227)
			{
				int num38 = Main.rand.Next(5);
				if (Main.hardMode && Main.rand.Next(7) == 0)
				{
					result = Lang.dialog(250, false);
				}
				else if (flag14 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(251, false);
				}
				else if (num38 == 0)
				{
					result = Lang.dialog(252, false);
				}
				else if (num38 == 1)
				{
					result = Lang.dialog(253, false);
				}
				else if (num38 == 2)
				{
					result = Lang.dialog(254, false);
				}
				else if (num38 == 3)
				{
					result = Lang.dialog(255, false);
				}
				else if (num38 == 4)
				{
					result = Lang.dialog(256, false);
				}
			}
			else if (this.type == 228)
			{
				int num39 = Main.rand.Next(3);
				if (flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(263, false);
				}
				else if (num39 == 0)
				{
					result = Lang.dialog(261, false);
				}
				else if (num39 == 1)
				{
					result = Lang.dialog(262, false);
				}
				else if (num39 == 2)
				{
					result = Lang.dialog(264, false);
				}
			}
			else if (this.type == 229)
			{
				int num40 = Main.rand.Next(6);
				if (!Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(276, false);
				}
				else if (num40 == 0)
				{
					result = Lang.dialog(273, false);
				}
				else if (num40 == 1)
				{
					result = Lang.dialog(274, false);
				}
				else if (num40 == 2)
				{
					result = Lang.dialog(275, false);
				}
				else if (num40 == 3)
				{
					result = Lang.dialog(277, false);
				}
				else if (num40 == 4)
				{
					result = Lang.dialog(278, false);
				}
				else if (num40 == 5)
				{
					result = Lang.dialog(279, false);
				}
			}
			else if (this.type == 354)
			{
				result = Lang.dialog(Main.rand.Next(315, 319), false);
			}
			else if (this.type == 353)
			{
				if (Main.bloodMoon)
				{
					int num41 = Main.rand.Next(3);
					if (num41 == 0)
					{
						result = Lang.dialog(304, false);
					}
					else if (num41 == 1)
					{
						result = Lang.dialog(305, false);
					}
					else if (num41 == 2)
					{
						result = Lang.dialog(306, false);
					}
				}
				else if (Main.dayTime && Main.time < 16200.0 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(311, false);
				}
				else if (Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
				{
					int num42 = Main.rand.Next(2);
					if (num42 == 0)
					{
						result = Lang.dialog(293, false);
					}
					else if (num42 == 1)
					{
						result = Lang.dialog(300, false);
					}
				}
				else if (!Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
				{
					int num43 = Main.rand.Next(3);
					if (num43 == 0)
					{
						result = Lang.dialog(291, false);
					}
					else if (num43 == 1)
					{
						result = Lang.dialog(292, false);
					}
					else if (num43 == 2)
					{
						result = Lang.dialog(312, false);
					}
				}
				else if (flag14 && flag7 && flag2 && flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(307, false);
				}
				else if (flag14 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(302, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(303, false);
				}
				else if (flag13 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(308, false);
				}
				else if (Main.moonPhase < 3)
				{
					int num44 = Main.rand.Next(5);
					if (num44 == 0)
					{
						result = Lang.dialog(287, false);
					}
					else if (num44 == 1)
					{
						result = Lang.dialog(288, false);
					}
					else if (num44 == 2)
					{
						result = Lang.dialog(289, false);
					}
					else if (num44 == 3)
					{
						result = Lang.dialog(290, false);
					}
					else if (num44 == 4)
					{
						result = Lang.dialog(294, false);
					}
				}
				else if (Main.moonPhase < 6)
				{
					int num45 = Main.rand.Next(4);
					if (num45 == 0)
					{
						result = Lang.dialog(295, false);
					}
					else if (num45 == 1)
					{
						result = Lang.dialog(296, false);
					}
					else if (num45 == 2)
					{
						result = Lang.dialog(297, false);
					}
					else if (num45 == 3)
					{
						result = Lang.dialog(298, false);
					}
				}
				else
				{
					int num46 = Main.rand.Next(4);
					if (num46 == 0)
					{
						result = Lang.dialog(299, false);
					}
					else if (num46 == 1)
					{
						result = Lang.dialog(301, false);
					}
					else if (num46 == 2)
					{
						result = Lang.dialog(313, false);
					}
					else if (num46 == 3)
					{
						result = Lang.dialog(314, false);
					}
				}
			}
			else if (this.type == 368)
			{
				if (flag16 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(319, false);
				}
				else if (flag && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(320, false);
				}
				else if (flag9 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(321, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(322, 331), false);
				}
			}
			else if (this.type == 376)
			{
				result = Lang.dialog(Main.rand.Next(353, 356), false);
			}
			else if (this.type == 369)
			{
				if (Main.bloodMoon)
				{
					if (!Main.anglerQuestFinished)
					{
						result = Lang.dialog(Main.rand.Next(348, 350), false);
					}
					else
					{
						result = Lang.dialog(Main.rand.Next(350, 353), false);
					}
				}
				else if (!Main.anglerQuestFinished)
				{
					result = Lang.dialog(Main.rand.Next(334, 338), false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(347, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(338, 347), false);
				}
			}
			else if (this.type == 453)
			{
				result = Lang.dialog(Main.rand.Next(356, 364), false);
			}
			else if (this.type == 441)
			{
				if (Main.rand.Next(6) == 0 && flag4)
				{
					result = Lang.dialog(371, false);
				}
				if (Main.rand.Next(6) == 0 && flag3)
				{
					result = Lang.dialog(372, false);
				}
				if (Main.rand.Next(6) == 0 && flag6)
				{
					result = Lang.dialog(373, false);
				}
				if (Main.rand.Next(6) == 0 && flag)
				{
					result = Lang.dialog(374, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(364, 370), false);
				}
			}
			return result;
		}
		public object Clone()
		{
			return base.MemberwiseClone();
		}
		public void CheckDrowning()
		{
			bool flag = Collision.DrownCollision(this.position, this.width, this.height, 1f);
			if (Main.netMode != 1)
			{
				if (flag)
				{
					if (++this.breathCounter >= 7)
					{
						this.breathCounter = 0;
						this.breath--;
						if (this.breath <= 0)
						{
							this.friendlyRegen = 0;
							this.breath = 0;
							this.life -= 2;
							if (this.life % 24 < 2)
							{
								this.netUpdate = true;
							}
							if (this.life <= 0)
							{
								this.life = 1;
								this.StrikeNPCNoInteraction(2, 0f, 0, false, false, false);
								if (Main.netMode != 0)
								{
									NetMessage.SendData(28, -1, -1, "", this.whoAmI, 2f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
				else
				{
					this.breath += 3;
					if (this.breath > 200)
					{
						this.breath = 200;
					}
					this.breathCounter = 0;
				}
			}
		}
		public void TryPortalJumping()
		{
			if (!this.townNPC || Main.netMode == 1)
			{
				return;
			}
			PortalHelper.TryGoingThroughPortals(this);
		}
		public override string ToString()
		{
			return string.Concat(new object[]
			{
				"name:",
				this.name,
				", active:",
				this.active,
				", whoAmI:",
				this.whoAmI
			});
		}

		private void DropLoot(Vector2 position, int w, int h, int itemId, int stack = 1, bool broadcast = false, int prefix = 0, bool nodelay = false, bool reverseLookup = false)
		{
			if (!ServerApi.Hooks.InvokeNpcLootDrop(ref position, ref w, ref h, ref itemId, ref stack, ref broadcast, ref prefix, type, whoAmI, ref nodelay, ref reverseLookup))
			{
				Item.NewItem((int)position.X, (int)position.Y, w, h, itemId, stack, broadcast, prefix, nodelay, reverseLookup);
			}
		}

        #region 1.3.1
		public static bool[] npcsFoundForCheckActive = new bool[540];
		public bool SpawnedFromStatue;

		public static void ClearFoundActiveNPCs()
		{
			for (int i = 0; i < NPC.npcsFoundForCheckActive.Length; i++)
			{
				NPC.npcsFoundForCheckActive[i] = false;
			}
		}

		public static void UpdateFoundActiveNPCs()
		{
			for (int i = 0; i < 200; i++)
			{
				NPC nPC = Main.npc[i];
				if (nPC.active && nPC.type >= 0 && nPC.type < 540)
				{
					NPC.npcsFoundForCheckActive[nPC.type] = true;
				}
			}
		}

        #endregion


    }
}